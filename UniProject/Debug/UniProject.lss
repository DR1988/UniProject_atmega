
UniProject.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000026  00800200  00001a14  00001aa8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001a14  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000066  00800226  00800226  00001ace  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001ace  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001b2c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000208  00000000  00000000  00001b6c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001bae  00000000  00000000  00001d74  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000fea  00000000  00000000  00003922  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000103b  00000000  00000000  0000490c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000006fc  00000000  00000000  00005948  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000aef  00000000  00000000  00006044  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000f33  00000000  00000000  00006b33  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001c8  00000000  00000000  00007a66  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	77 c0       	rjmp	.+238    	; 0xf0 <__ctors_end>
       2:	00 00       	nop
       4:	95 c0       	rjmp	.+298    	; 0x130 <__bad_interrupt>
       6:	00 00       	nop
       8:	93 c0       	rjmp	.+294    	; 0x130 <__bad_interrupt>
       a:	00 00       	nop
       c:	91 c0       	rjmp	.+290    	; 0x130 <__bad_interrupt>
       e:	00 00       	nop
      10:	d0 c4       	rjmp	.+2464   	; 0x9b2 <__vector_4>
      12:	00 00       	nop
      14:	8d c0       	rjmp	.+282    	; 0x130 <__bad_interrupt>
      16:	00 00       	nop
      18:	8b c0       	rjmp	.+278    	; 0x130 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	89 c0       	rjmp	.+274    	; 0x130 <__bad_interrupt>
      1e:	00 00       	nop
      20:	87 c0       	rjmp	.+270    	; 0x130 <__bad_interrupt>
      22:	00 00       	nop
      24:	98 c4       	rjmp	.+2352   	; 0x956 <__vector_9>
      26:	00 00       	nop
      28:	83 c0       	rjmp	.+262    	; 0x130 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	81 c0       	rjmp	.+258    	; 0x130 <__bad_interrupt>
      2e:	00 00       	nop
      30:	7f c0       	rjmp	.+254    	; 0x130 <__bad_interrupt>
      32:	00 00       	nop
      34:	7d c0       	rjmp	.+250    	; 0x130 <__bad_interrupt>
      36:	00 00       	nop
      38:	7b c0       	rjmp	.+246    	; 0x130 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	79 c0       	rjmp	.+242    	; 0x130 <__bad_interrupt>
      3e:	00 00       	nop
      40:	77 c0       	rjmp	.+238    	; 0x130 <__bad_interrupt>
      42:	00 00       	nop
      44:	75 c0       	rjmp	.+234    	; 0x130 <__bad_interrupt>
      46:	00 00       	nop
      48:	73 c0       	rjmp	.+230    	; 0x130 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	71 c0       	rjmp	.+226    	; 0x130 <__bad_interrupt>
      4e:	00 00       	nop
      50:	69 c2       	rjmp	.+1234   	; 0x524 <__vector_20>
      52:	00 00       	nop
      54:	6d c0       	rjmp	.+218    	; 0x130 <__bad_interrupt>
      56:	00 00       	nop
      58:	6b c0       	rjmp	.+214    	; 0x130 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	72 c5       	rjmp	.+2788   	; 0xb42 <__vector_23>
      5e:	00 00       	nop
      60:	67 c0       	rjmp	.+206    	; 0x130 <__bad_interrupt>
      62:	00 00       	nop
      64:	62 c6       	rjmp	.+3268   	; 0xd2a <__vector_25>
      66:	00 00       	nop
      68:	63 c0       	rjmp	.+198    	; 0x130 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	61 c0       	rjmp	.+194    	; 0x130 <__bad_interrupt>
      6e:	00 00       	nop
      70:	5f c0       	rjmp	.+190    	; 0x130 <__bad_interrupt>
      72:	00 00       	nop
      74:	5d c0       	rjmp	.+186    	; 0x130 <__bad_interrupt>
      76:	00 00       	nop
      78:	5b c0       	rjmp	.+182    	; 0x130 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	59 c0       	rjmp	.+178    	; 0x130 <__bad_interrupt>
      7e:	00 00       	nop
      80:	57 c0       	rjmp	.+174    	; 0x130 <__bad_interrupt>
      82:	00 00       	nop
      84:	55 c0       	rjmp	.+170    	; 0x130 <__bad_interrupt>
      86:	00 00       	nop
      88:	53 c0       	rjmp	.+166    	; 0x130 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	ea c1       	rjmp	.+980    	; 0x462 <__vector_35>
      8e:	00 00       	nop
      90:	4f c0       	rjmp	.+158    	; 0x130 <__bad_interrupt>
      92:	00 00       	nop
      94:	4d c0       	rjmp	.+154    	; 0x130 <__bad_interrupt>
      96:	00 00       	nop
      98:	4b c0       	rjmp	.+150    	; 0x130 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	49 c0       	rjmp	.+146    	; 0x130 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	47 c0       	rjmp	.+142    	; 0x130 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	45 c0       	rjmp	.+138    	; 0x130 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	43 c0       	rjmp	.+134    	; 0x130 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	41 c0       	rjmp	.+130    	; 0x130 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	3f c0       	rjmp	.+126    	; 0x130 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	3d c0       	rjmp	.+122    	; 0x130 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	3b c0       	rjmp	.+118    	; 0x130 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	39 c0       	rjmp	.+114    	; 0x130 <__bad_interrupt>
      be:	00 00       	nop
      c0:	37 c0       	rjmp	.+110    	; 0x130 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	35 c0       	rjmp	.+106    	; 0x130 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	f4 c4       	rjmp	.+2536   	; 0xab2 <__vector_50>
      ca:	00 00       	nop
      cc:	31 c0       	rjmp	.+98     	; 0x130 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	2f c0       	rjmp	.+94     	; 0x130 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	2d c0       	rjmp	.+90     	; 0x130 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	2b c0       	rjmp	.+86     	; 0x130 <__bad_interrupt>
      da:	00 00       	nop
      dc:	29 c0       	rjmp	.+82     	; 0x130 <__bad_interrupt>
      de:	00 00       	nop
      e0:	27 c0       	rjmp	.+78     	; 0x130 <__bad_interrupt>
	...

000000e4 <__trampolines_end>:
      e4:	63 64       	ori	r22, 0x43	; 67
      e6:	69 6e       	ori	r22, 0xE9	; 233
      e8:	6f 70       	andi	r22, 0x0F	; 15
      ea:	73 75       	andi	r23, 0x53	; 83
      ec:	78 58       	subi	r23, 0x88	; 136
      ee:	5b 00       	.word	0x005b	; ????

000000f0 <__ctors_end>:
      f0:	11 24       	eor	r1, r1
      f2:	1f be       	out	0x3f, r1	; 63
      f4:	cf ef       	ldi	r28, 0xFF	; 255
      f6:	d1 e2       	ldi	r29, 0x21	; 33
      f8:	de bf       	out	0x3e, r29	; 62
      fa:	cd bf       	out	0x3d, r28	; 61
      fc:	00 e0       	ldi	r16, 0x00	; 0
      fe:	0c bf       	out	0x3c, r16	; 60

00000100 <__do_copy_data>:
     100:	12 e0       	ldi	r17, 0x02	; 2
     102:	a0 e0       	ldi	r26, 0x00	; 0
     104:	b2 e0       	ldi	r27, 0x02	; 2
     106:	e4 e1       	ldi	r30, 0x14	; 20
     108:	fa e1       	ldi	r31, 0x1A	; 26
     10a:	00 e0       	ldi	r16, 0x00	; 0
     10c:	0b bf       	out	0x3b, r16	; 59
     10e:	02 c0       	rjmp	.+4      	; 0x114 <__do_copy_data+0x14>
     110:	07 90       	elpm	r0, Z+
     112:	0d 92       	st	X+, r0
     114:	a6 32       	cpi	r26, 0x26	; 38
     116:	b1 07       	cpc	r27, r17
     118:	d9 f7       	brne	.-10     	; 0x110 <__do_copy_data+0x10>

0000011a <__do_clear_bss>:
     11a:	22 e0       	ldi	r18, 0x02	; 2
     11c:	a6 e2       	ldi	r26, 0x26	; 38
     11e:	b2 e0       	ldi	r27, 0x02	; 2
     120:	01 c0       	rjmp	.+2      	; 0x124 <.do_clear_bss_start>

00000122 <.do_clear_bss_loop>:
     122:	1d 92       	st	X+, r1

00000124 <.do_clear_bss_start>:
     124:	ac 38       	cpi	r26, 0x8C	; 140
     126:	b2 07       	cpc	r27, r18
     128:	e1 f7       	brne	.-8      	; 0x122 <.do_clear_bss_loop>
     12a:	e6 d3       	rcall	.+1996   	; 0x8f8 <main>
     12c:	0c 94 08 0d 	jmp	0x1a10	; 0x1a10 <_exit>

00000130 <__bad_interrupt>:
     130:	67 cf       	rjmp	.-306    	; 0x0 <__vectors>

00000132 <InitializeUART0>:

#ifndef TIMER5_H_
#define TIMER5_H_

void TCNT5_startingValue(unsigned int value) {
	TCNT5 = value;
     132:	8f 92       	push	r8
     134:	9f 92       	push	r9
     136:	af 92       	push	r10
     138:	bf 92       	push	r11
     13a:	ef 92       	push	r14
     13c:	cf 93       	push	r28
     13e:	df 93       	push	r29
     140:	4b 01       	movw	r8, r22
     142:	5c 01       	movw	r10, r24
     144:	d4 2f       	mov	r29, r20
     146:	c2 2f       	mov	r28, r18
     148:	60 e4       	ldi	r22, 0x40	; 64
     14a:	72 e4       	ldi	r23, 0x42	; 66
     14c:	8f e0       	ldi	r24, 0x0F	; 15
     14e:	90 e0       	ldi	r25, 0x00	; 0
     150:	a5 01       	movw	r20, r10
     152:	94 01       	movw	r18, r8
     154:	0e 94 76 09 	call	0x12ec	; 0x12ec <__udivmodsi4>
     158:	ca 01       	movw	r24, r20
     15a:	b9 01       	movw	r22, r18
     15c:	74 d7       	rcall	.+3816   	; 0x1046 <__floatunsisf>
     15e:	0e 94 d9 08 	call	0x11b2	; 0x11b2 <lrint>
     162:	61 50       	subi	r22, 0x01	; 1
     164:	71 09       	sbc	r23, r1
     166:	d1 30       	cpi	r29, 0x01	; 1
     168:	19 f4       	brne	.+6      	; 0x170 <InitializeUART0+0x3e>
     16a:	82 e0       	ldi	r24, 0x02	; 2
     16c:	80 93 c0 00 	sts	0x00C0, r24	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7000c0>
     170:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
     174:	60 93 c4 00 	sts	0x00C4, r22	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
     178:	88 e9       	ldi	r24, 0x98	; 152
     17a:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7000c1>
     17e:	82 e0       	ldi	r24, 0x02	; 2
     180:	e8 12       	cpse	r14, r24
     182:	03 c0       	rjmp	.+6      	; 0x18a <InitializeUART0+0x58>
     184:	88 e0       	ldi	r24, 0x08	; 8
     186:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7000c2>
     18a:	c6 30       	cpi	r28, 0x06	; 6
     18c:	31 f4       	brne	.+12     	; 0x19a <InitializeUART0+0x68>
     18e:	e2 ec       	ldi	r30, 0xC2	; 194
     190:	f0 e0       	ldi	r31, 0x00	; 0
     192:	80 81       	ld	r24, Z
     194:	82 60       	ori	r24, 0x02	; 2
     196:	80 83       	st	Z, r24
     198:	0f c0       	rjmp	.+30     	; 0x1b8 <InitializeUART0+0x86>
     19a:	c7 30       	cpi	r28, 0x07	; 7
     19c:	31 f4       	brne	.+12     	; 0x1aa <InitializeUART0+0x78>
     19e:	e2 ec       	ldi	r30, 0xC2	; 194
     1a0:	f0 e0       	ldi	r31, 0x00	; 0
     1a2:	80 81       	ld	r24, Z
     1a4:	84 60       	ori	r24, 0x04	; 4
     1a6:	80 83       	st	Z, r24
     1a8:	07 c0       	rjmp	.+14     	; 0x1b8 <InitializeUART0+0x86>
     1aa:	c9 30       	cpi	r28, 0x09	; 9
     1ac:	29 f4       	brne	.+10     	; 0x1b8 <InitializeUART0+0x86>
     1ae:	e2 ec       	ldi	r30, 0xC2	; 194
     1b0:	f0 e0       	ldi	r31, 0x00	; 0
     1b2:	80 81       	ld	r24, Z
     1b4:	8e 60       	ori	r24, 0x0E	; 14
     1b6:	80 83       	st	Z, r24
     1b8:	df 91       	pop	r29
     1ba:	cf 91       	pop	r28
     1bc:	ef 90       	pop	r14
     1be:	bf 90       	pop	r11
     1c0:	af 90       	pop	r10
     1c2:	9f 90       	pop	r9
     1c4:	8f 90       	pop	r8
     1c6:	08 95       	ret

000001c8 <setPwm>:
     1c8:	cf 92       	push	r12
     1ca:	df 92       	push	r13
     1cc:	ef 92       	push	r14
     1ce:	ff 92       	push	r15
     1d0:	6b 01       	movw	r12, r22
     1d2:	7c 01       	movw	r14, r24
     1d4:	20 e0       	ldi	r18, 0x00	; 0
     1d6:	30 e0       	ldi	r19, 0x00	; 0
     1d8:	48 ec       	ldi	r20, 0xC8	; 200
     1da:	52 e4       	ldi	r21, 0x42	; 66
     1dc:	04 d7       	rcall	.+3592   	; 0xfe6 <__cmpsf2>
     1de:	18 16       	cp	r1, r24
     1e0:	bc f0       	brlt	.+46     	; 0x210 <setPwm+0x48>
     1e2:	60 91 a6 00 	lds	r22, 0x00A6	; 0x8000a6 <__TEXT_REGION_LENGTH__+0x7000a6>
     1e6:	70 91 a7 00 	lds	r23, 0x00A7	; 0x8000a7 <__TEXT_REGION_LENGTH__+0x7000a7>
     1ea:	80 e0       	ldi	r24, 0x00	; 0
     1ec:	90 e0       	ldi	r25, 0x00	; 0
     1ee:	2b d7       	rcall	.+3670   	; 0x1046 <__floatunsisf>
     1f0:	2a e0       	ldi	r18, 0x0A	; 10
     1f2:	37 ed       	ldi	r19, 0xD7	; 215
     1f4:	43 e2       	ldi	r20, 0x23	; 35
     1f6:	5c e3       	ldi	r21, 0x3C	; 60
     1f8:	0e 94 13 09 	call	0x1226	; 0x1226 <__mulsf3>
     1fc:	a7 01       	movw	r20, r14
     1fe:	96 01       	movw	r18, r12
     200:	0e 94 13 09 	call	0x1226	; 0x1226 <__mulsf3>
     204:	f4 d6       	rcall	.+3560   	; 0xfee <__fixunssfsi>
     206:	70 93 a9 00 	sts	0x00A9, r23	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7000a9>
     20a:	60 93 a8 00 	sts	0x00A8, r22	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7000a8>
     20e:	1a c0       	rjmp	.+52     	; 0x244 <setPwm+0x7c>
     210:	20 e0       	ldi	r18, 0x00	; 0
     212:	30 e0       	ldi	r19, 0x00	; 0
     214:	a9 01       	movw	r20, r18
     216:	c7 01       	movw	r24, r14
     218:	b6 01       	movw	r22, r12
     21a:	e5 d6       	rcall	.+3530   	; 0xfe6 <__cmpsf2>
     21c:	18 16       	cp	r1, r24
     21e:	2c f0       	brlt	.+10     	; 0x22a <setPwm+0x62>
     220:	10 92 a9 00 	sts	0x00A9, r1	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7000a9>
     224:	10 92 a8 00 	sts	0x00A8, r1	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7000a8>
     228:	0d c0       	rjmp	.+26     	; 0x244 <setPwm+0x7c>
     22a:	20 e0       	ldi	r18, 0x00	; 0
     22c:	30 e0       	ldi	r19, 0x00	; 0
     22e:	48 ec       	ldi	r20, 0xC8	; 200
     230:	52 e4       	ldi	r21, 0x42	; 66
     232:	c7 01       	movw	r24, r14
     234:	b6 01       	movw	r22, r12
     236:	b9 d7       	rcall	.+3954   	; 0x11aa <__gesf2>
     238:	18 16       	cp	r1, r24
     23a:	24 f4       	brge	.+8      	; 0x244 <setPwm+0x7c>
     23c:	10 92 a9 00 	sts	0x00A9, r1	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7000a9>
     240:	10 92 a8 00 	sts	0x00A8, r1	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7000a8>
     244:	ff 90       	pop	r15
     246:	ef 90       	pop	r14
     248:	df 90       	pop	r13
     24a:	cf 90       	pop	r12
     24c:	08 95       	ret

0000024e <InitializePWM_4C>:
     24e:	8f 92       	push	r8
     250:	9f 92       	push	r9
     252:	af 92       	push	r10
     254:	bf 92       	push	r11
     256:	cf 92       	push	r12
     258:	df 92       	push	r13
     25a:	ef 92       	push	r14
     25c:	ff 92       	push	r15
     25e:	0f 93       	push	r16
     260:	1f 93       	push	r17
     262:	4b 01       	movw	r8, r22
     264:	5c 01       	movw	r10, r24
     266:	69 01       	movw	r12, r18
     268:	7a 01       	movw	r14, r20
     26a:	e1 ea       	ldi	r30, 0xA1	; 161
     26c:	f0 e0       	ldi	r31, 0x00	; 0
     26e:	10 82       	st	Z, r1
     270:	a1 e0       	ldi	r26, 0x01	; 1
     272:	b1 e0       	ldi	r27, 0x01	; 1
     274:	8c 91       	ld	r24, X
     276:	88 60       	ori	r24, 0x08	; 8
     278:	8c 93       	st	X, r24
     27a:	a0 ea       	ldi	r26, 0xA0	; 160
     27c:	b0 e0       	ldi	r27, 0x00	; 0
     27e:	8c 91       	ld	r24, X
     280:	82 68       	ori	r24, 0x82	; 130
     282:	8c 93       	st	X, r24
     284:	80 81       	ld	r24, Z
     286:	88 61       	ori	r24, 0x18	; 24
     288:	80 83       	st	Z, r24
     28a:	60 e0       	ldi	r22, 0x00	; 0
     28c:	74 e2       	ldi	r23, 0x24	; 36
     28e:	84 ef       	ldi	r24, 0xF4	; 244
     290:	90 e0       	ldi	r25, 0x00	; 0
     292:	a5 01       	movw	r20, r10
     294:	94 01       	movw	r18, r8
     296:	0e 94 76 09 	call	0x12ec	; 0x12ec <__udivmodsi4>
     29a:	89 01       	movw	r16, r18
     29c:	9a 01       	movw	r18, r20
     29e:	01 15       	cp	r16, r1
     2a0:	11 05       	cpc	r17, r1
     2a2:	61 e0       	ldi	r22, 0x01	; 1
     2a4:	26 07       	cpc	r18, r22
     2a6:	31 05       	cpc	r19, r1
     2a8:	38 f1       	brcs	.+78     	; 0x2f8 <InitializePWM_4C+0xaa>
     2aa:	d9 01       	movw	r26, r18
     2ac:	c8 01       	movw	r24, r16
     2ae:	41 e0       	ldi	r20, 0x01	; 1
     2b0:	50 e0       	ldi	r21, 0x00	; 0
     2b2:	b6 95       	lsr	r27
     2b4:	a7 95       	ror	r26
     2b6:	97 95       	ror	r25
     2b8:	87 95       	ror	r24
     2ba:	4f 5f       	subi	r20, 0xFF	; 255
     2bc:	5f 4f       	sbci	r21, 0xFF	; 255
     2be:	00 97       	sbiw	r24, 0x00	; 0
     2c0:	61 e0       	ldi	r22, 0x01	; 1
     2c2:	a6 07       	cpc	r26, r22
     2c4:	b1 05       	cpc	r27, r1
     2c6:	a8 f7       	brcc	.-22     	; 0x2b2 <InitializePWM_4C+0x64>
     2c8:	46 30       	cpi	r20, 0x06	; 6
     2ca:	51 05       	cpc	r21, r1
     2cc:	14 f0       	brlt	.+4      	; 0x2d2 <InitializePWM_4C+0x84>
     2ce:	45 e0       	ldi	r20, 0x05	; 5
     2d0:	50 e0       	ldi	r21, 0x00	; 0
     2d2:	43 30       	cpi	r20, 0x03	; 3
     2d4:	51 05       	cpc	r21, r1
     2d6:	81 f1       	breq	.+96     	; 0x338 <InitializePWM_4C+0xea>
     2d8:	3c f4       	brge	.+14     	; 0x2e8 <InitializePWM_4C+0x9a>
     2da:	41 30       	cpi	r20, 0x01	; 1
     2dc:	51 05       	cpc	r21, r1
     2de:	61 f0       	breq	.+24     	; 0x2f8 <InitializePWM_4C+0xaa>
     2e0:	42 30       	cpi	r20, 0x02	; 2
     2e2:	51 05       	cpc	r21, r1
     2e4:	a9 f0       	breq	.+42     	; 0x310 <InitializePWM_4C+0xc2>
     2e6:	60 c0       	rjmp	.+192    	; 0x3a8 <InitializePWM_4C+0x15a>
     2e8:	44 30       	cpi	r20, 0x04	; 4
     2ea:	51 05       	cpc	r21, r1
     2ec:	c9 f1       	breq	.+114    	; 0x360 <InitializePWM_4C+0x112>
     2ee:	45 30       	cpi	r20, 0x05	; 5
     2f0:	51 05       	cpc	r21, r1
     2f2:	09 f4       	brne	.+2      	; 0x2f6 <InitializePWM_4C+0xa8>
     2f4:	45 c0       	rjmp	.+138    	; 0x380 <InitializePWM_4C+0x132>
     2f6:	58 c0       	rjmp	.+176    	; 0x3a8 <InitializePWM_4C+0x15a>
     2f8:	e1 ea       	ldi	r30, 0xA1	; 161
     2fa:	f0 e0       	ldi	r31, 0x00	; 0
     2fc:	80 81       	ld	r24, Z
     2fe:	81 60       	ori	r24, 0x01	; 1
     300:	80 83       	st	Z, r24
     302:	01 50       	subi	r16, 0x01	; 1
     304:	11 09       	sbc	r17, r1
     306:	10 93 a7 00 	sts	0x00A7, r17	; 0x8000a7 <__TEXT_REGION_LENGTH__+0x7000a7>
     30a:	00 93 a6 00 	sts	0x00A6, r16	; 0x8000a6 <__TEXT_REGION_LENGTH__+0x7000a6>
     30e:	4c c0       	rjmp	.+152    	; 0x3a8 <InitializePWM_4C+0x15a>
     310:	e1 ea       	ldi	r30, 0xA1	; 161
     312:	f0 e0       	ldi	r31, 0x00	; 0
     314:	80 81       	ld	r24, Z
     316:	82 60       	ori	r24, 0x02	; 2
     318:	80 83       	st	Z, r24
     31a:	68 94       	set
     31c:	12 f8       	bld	r1, 2
     31e:	36 95       	lsr	r19
     320:	27 95       	ror	r18
     322:	17 95       	ror	r17
     324:	07 95       	ror	r16
     326:	16 94       	lsr	r1
     328:	d1 f7       	brne	.-12     	; 0x31e <InitializePWM_4C+0xd0>
     32a:	01 50       	subi	r16, 0x01	; 1
     32c:	11 09       	sbc	r17, r1
     32e:	10 93 a7 00 	sts	0x00A7, r17	; 0x8000a7 <__TEXT_REGION_LENGTH__+0x7000a7>
     332:	00 93 a6 00 	sts	0x00A6, r16	; 0x8000a6 <__TEXT_REGION_LENGTH__+0x7000a6>
     336:	38 c0       	rjmp	.+112    	; 0x3a8 <InitializePWM_4C+0x15a>
     338:	e1 ea       	ldi	r30, 0xA1	; 161
     33a:	f0 e0       	ldi	r31, 0x00	; 0
     33c:	80 81       	ld	r24, Z
     33e:	83 60       	ori	r24, 0x03	; 3
     340:	80 83       	st	Z, r24
     342:	68 94       	set
     344:	15 f8       	bld	r1, 5
     346:	36 95       	lsr	r19
     348:	27 95       	ror	r18
     34a:	17 95       	ror	r17
     34c:	07 95       	ror	r16
     34e:	16 94       	lsr	r1
     350:	d1 f7       	brne	.-12     	; 0x346 <InitializePWM_4C+0xf8>
     352:	01 50       	subi	r16, 0x01	; 1
     354:	11 09       	sbc	r17, r1
     356:	10 93 a7 00 	sts	0x00A7, r17	; 0x8000a7 <__TEXT_REGION_LENGTH__+0x7000a7>
     35a:	00 93 a6 00 	sts	0x00A6, r16	; 0x8000a6 <__TEXT_REGION_LENGTH__+0x7000a6>
     35e:	24 c0       	rjmp	.+72     	; 0x3a8 <InitializePWM_4C+0x15a>
     360:	e1 ea       	ldi	r30, 0xA1	; 161
     362:	f0 e0       	ldi	r31, 0x00	; 0
     364:	80 81       	ld	r24, Z
     366:	84 60       	ori	r24, 0x04	; 4
     368:	80 83       	st	Z, r24
     36a:	01 2f       	mov	r16, r17
     36c:	12 2f       	mov	r17, r18
     36e:	23 2f       	mov	r18, r19
     370:	33 27       	eor	r19, r19
     372:	01 50       	subi	r16, 0x01	; 1
     374:	11 09       	sbc	r17, r1
     376:	10 93 a7 00 	sts	0x00A7, r17	; 0x8000a7 <__TEXT_REGION_LENGTH__+0x7000a7>
     37a:	00 93 a6 00 	sts	0x00A6, r16	; 0x8000a6 <__TEXT_REGION_LENGTH__+0x7000a6>
     37e:	14 c0       	rjmp	.+40     	; 0x3a8 <InitializePWM_4C+0x15a>
     380:	e1 ea       	ldi	r30, 0xA1	; 161
     382:	f0 e0       	ldi	r31, 0x00	; 0
     384:	80 81       	ld	r24, Z
     386:	85 60       	ori	r24, 0x05	; 5
     388:	80 83       	st	Z, r24
     38a:	0f 2e       	mov	r0, r31
     38c:	fa e0       	ldi	r31, 0x0A	; 10
     38e:	36 95       	lsr	r19
     390:	27 95       	ror	r18
     392:	17 95       	ror	r17
     394:	07 95       	ror	r16
     396:	fa 95       	dec	r31
     398:	d1 f7       	brne	.-12     	; 0x38e <InitializePWM_4C+0x140>
     39a:	f0 2d       	mov	r31, r0
     39c:	0f 5f       	subi	r16, 0xFF	; 255
     39e:	1f 4f       	sbci	r17, 0xFF	; 255
     3a0:	10 93 a7 00 	sts	0x00A7, r17	; 0x8000a7 <__TEXT_REGION_LENGTH__+0x7000a7>
     3a4:	00 93 a6 00 	sts	0x00A6, r16	; 0x8000a6 <__TEXT_REGION_LENGTH__+0x7000a6>
     3a8:	80 91 a6 00 	lds	r24, 0x00A6	; 0x8000a6 <__TEXT_REGION_LENGTH__+0x7000a6>
     3ac:	90 91 a7 00 	lds	r25, 0x00A7	; 0x8000a7 <__TEXT_REGION_LENGTH__+0x7000a7>
     3b0:	89 2b       	or	r24, r25
     3b2:	29 f4       	brne	.+10     	; 0x3be <InitializePWM_4C+0x170>
     3b4:	10 92 a9 00 	sts	0x00A9, r1	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7000a9>
     3b8:	10 92 a8 00 	sts	0x00A8, r1	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7000a8>
     3bc:	03 c0       	rjmp	.+6      	; 0x3c4 <InitializePWM_4C+0x176>
     3be:	c7 01       	movw	r24, r14
     3c0:	b6 01       	movw	r22, r12
     3c2:	02 df       	rcall	.-508    	; 0x1c8 <setPwm>
     3c4:	1f 91       	pop	r17
     3c6:	0f 91       	pop	r16
     3c8:	ff 90       	pop	r15
     3ca:	ef 90       	pop	r14
     3cc:	df 90       	pop	r13
     3ce:	cf 90       	pop	r12
     3d0:	bf 90       	pop	r11
     3d2:	af 90       	pop	r10
     3d4:	9f 90       	pop	r9
     3d6:	8f 90       	pop	r8
     3d8:	08 95       	ret

000003da <StopServo_0>:
     3da:	e1 e0       	ldi	r30, 0x01	; 1
     3dc:	f1 e0       	ldi	r31, 0x01	; 1
     3de:	80 81       	ld	r24, Z
     3e0:	8f 7b       	andi	r24, 0xBF	; 191
     3e2:	80 83       	st	Z, r24
     3e4:	08 95       	ret

000003e6 <_launchServo_0>:
     3e6:	e1 e0       	ldi	r30, 0x01	; 1
     3e8:	f1 e0       	ldi	r31, 0x01	; 1
     3ea:	80 81       	ld	r24, Z
     3ec:	80 64       	ori	r24, 0x40	; 64
     3ee:	80 83       	st	Z, r24
     3f0:	08 95       	ret

000003f2 <_setToOpenPosition_0>:
     3f2:	8a e1       	ldi	r24, 0x1A	; 26
     3f4:	80 93 b4 00 	sts	0x00B4, r24	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7000b4>
     3f8:	f6 df       	rcall	.-20     	; 0x3e6 <_launchServo_0>
     3fa:	ed c4       	rjmp	.+2522   	; 0xdd6 <launch_timer_3>
     3fc:	08 95       	ret

000003fe <checkServo_0_ForMoving>:
     3fe:	00 00       	nop
     400:	83 b1       	in	r24, 0x03	; 3
     402:	88 1f       	adc	r24, r24
     404:	88 27       	eor	r24, r24
     406:	88 1f       	adc	r24, r24
     408:	08 95       	ret

0000040a <closeValve_0>:
     40a:	84 e1       	ldi	r24, 0x14	; 20
     40c:	80 93 b4 00 	sts	0x00B4, r24	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7000b4>
     410:	10 92 0f 02 	sts	0x020F, r1	; 0x80020f <is_Servo_0_Open>
     414:	e8 cf       	rjmp	.-48     	; 0x3e6 <_launchServo_0>
     416:	08 95       	ret

00000418 <openValve_0>:
     418:	88 e2       	ldi	r24, 0x28	; 40
     41a:	80 93 b4 00 	sts	0x00B4, r24	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7000b4>
     41e:	81 e0       	ldi	r24, 0x01	; 1
     420:	80 93 0f 02 	sts	0x020F, r24	; 0x80020f <is_Servo_0_Open>
     424:	e0 cf       	rjmp	.-64     	; 0x3e6 <_launchServo_0>
     426:	08 95       	ret

00000428 <button_interruption_3_init>:
     428:	e8 e6       	ldi	r30, 0x68	; 104
     42a:	f0 e0       	ldi	r31, 0x00	; 0
     42c:	80 81       	ld	r24, Z
     42e:	81 60       	ori	r24, 0x01	; 1
     430:	80 83       	st	Z, r24
     432:	eb e6       	ldi	r30, 0x6B	; 107
     434:	f0 e0       	ldi	r31, 0x00	; 0
     436:	80 81       	ld	r24, Z
     438:	80 68       	ori	r24, 0x80	; 128
     43a:	80 83       	st	Z, r24
     43c:	08 95       	ret

0000043e <InitializeServo_0>:
     43e:	27 98       	cbi	0x04, 7	; 4
     440:	e1 e0       	ldi	r30, 0x01	; 1
     442:	f1 e0       	ldi	r31, 0x01	; 1
     444:	80 81       	ld	r24, Z
     446:	8f 7b       	andi	r24, 0xBF	; 191
     448:	80 83       	st	Z, r24
     44a:	e0 eb       	ldi	r30, 0xB0	; 176
     44c:	f0 e0       	ldi	r31, 0x00	; 0
     44e:	80 81       	ld	r24, Z
     450:	83 62       	ori	r24, 0x23	; 35
     452:	80 83       	st	Z, r24
     454:	e1 eb       	ldi	r30, 0xB1	; 177
     456:	f0 e0       	ldi	r31, 0x00	; 0
     458:	80 81       	ld	r24, Z
     45a:	87 60       	ori	r24, 0x07	; 7
     45c:	80 83       	st	Z, r24
     45e:	c9 cf       	rjmp	.-110    	; 0x3f2 <_setToOpenPosition_0>
     460:	08 95       	ret

00000462 <__vector_35>:
     462:	1f 92       	push	r1
     464:	0f 92       	push	r0
     466:	0f b6       	in	r0, 0x3f	; 63
     468:	0f 92       	push	r0
     46a:	11 24       	eor	r1, r1
     46c:	0b b6       	in	r0, 0x3b	; 59
     46e:	0f 92       	push	r0
     470:	2f 93       	push	r18
     472:	3f 93       	push	r19
     474:	4f 93       	push	r20
     476:	5f 93       	push	r21
     478:	6f 93       	push	r22
     47a:	7f 93       	push	r23
     47c:	8f 93       	push	r24
     47e:	9f 93       	push	r25
     480:	af 93       	push	r26
     482:	bf 93       	push	r27
     484:	ef 93       	push	r30
     486:	ff 93       	push	r31
     488:	c7 df       	rcall	.-114    	; 0x418 <openValve_0>
     48a:	b6 d4       	rcall	.+2412   	; 0xdf8 <stop_timer_3>
     48c:	cd df       	rcall	.-102    	; 0x428 <button_interruption_3_init>
     48e:	ff 91       	pop	r31
     490:	ef 91       	pop	r30
     492:	bf 91       	pop	r27
     494:	af 91       	pop	r26
     496:	9f 91       	pop	r25
     498:	8f 91       	pop	r24
     49a:	7f 91       	pop	r23
     49c:	6f 91       	pop	r22
     49e:	5f 91       	pop	r21
     4a0:	4f 91       	pop	r20
     4a2:	3f 91       	pop	r19
     4a4:	2f 91       	pop	r18
     4a6:	0f 90       	pop	r0
     4a8:	0b be       	out	0x3b, r0	; 59
     4aa:	0f 90       	pop	r0
     4ac:	0f be       	out	0x3f, r0	; 63
     4ae:	0f 90       	pop	r0
     4b0:	1f 90       	pop	r1
     4b2:	18 95       	reti

000004b4 <StopServo_1>:
     4b4:	24 98       	cbi	0x04, 4	; 4
     4b6:	08 95       	ret

000004b8 <_launchServo_1>:
     4b8:	24 9a       	sbi	0x04, 4	; 4
     4ba:	08 95       	ret

000004bc <_setToOpenPosition_1>:
     4bc:	8c e1       	ldi	r24, 0x1C	; 28
     4be:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7000b3>
     4c2:	fa df       	rcall	.-12     	; 0x4b8 <_launchServo_1>
     4c4:	6c c4       	rjmp	.+2264   	; 0xd9e <launch_timer_1>
     4c6:	08 95       	ret

000004c8 <checkServo_1_ForMoving>:
     4c8:	00 00       	nop
     4ca:	83 b1       	in	r24, 0x03	; 3
     4cc:	86 fb       	bst	r24, 6
     4ce:	88 27       	eor	r24, r24
     4d0:	80 f9       	bld	r24, 0
     4d2:	08 95       	ret

000004d4 <closeValve_1>:
     4d4:	84 e1       	ldi	r24, 0x14	; 20
     4d6:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7000b3>
     4da:	10 92 0e 02 	sts	0x020E, r1	; 0x80020e <is_Servo_1_Open>
     4de:	ec cf       	rjmp	.-40     	; 0x4b8 <_launchServo_1>
     4e0:	08 95       	ret

000004e2 <openValve_1>:
     4e2:	8d e2       	ldi	r24, 0x2D	; 45
     4e4:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7000b3>
     4e8:	81 e0       	ldi	r24, 0x01	; 1
     4ea:	80 93 0e 02 	sts	0x020E, r24	; 0x80020e <is_Servo_1_Open>
     4ee:	e4 cf       	rjmp	.-56     	; 0x4b8 <_launchServo_1>
     4f0:	08 95       	ret

000004f2 <button_interruption_1_init>:
     4f2:	e8 e6       	ldi	r30, 0x68	; 104
     4f4:	f0 e0       	ldi	r31, 0x00	; 0
     4f6:	80 81       	ld	r24, Z
     4f8:	81 60       	ori	r24, 0x01	; 1
     4fa:	80 83       	st	Z, r24
     4fc:	eb e6       	ldi	r30, 0x6B	; 107
     4fe:	f0 e0       	ldi	r31, 0x00	; 0
     500:	80 81       	ld	r24, Z
     502:	80 64       	ori	r24, 0x40	; 64
     504:	80 83       	st	Z, r24
     506:	08 95       	ret

00000508 <InitializeServo_1>:
     508:	26 98       	cbi	0x04, 6	; 4
     50a:	24 98       	cbi	0x04, 4	; 4
     50c:	e0 eb       	ldi	r30, 0xB0	; 176
     50e:	f0 e0       	ldi	r31, 0x00	; 0
     510:	80 81       	ld	r24, Z
     512:	83 68       	ori	r24, 0x83	; 131
     514:	80 83       	st	Z, r24
     516:	e1 eb       	ldi	r30, 0xB1	; 177
     518:	f0 e0       	ldi	r31, 0x00	; 0
     51a:	80 81       	ld	r24, Z
     51c:	87 60       	ori	r24, 0x07	; 7
     51e:	80 83       	st	Z, r24
     520:	cd cf       	rjmp	.-102    	; 0x4bc <_setToOpenPosition_1>
     522:	08 95       	ret

00000524 <__vector_20>:
     524:	1f 92       	push	r1
     526:	0f 92       	push	r0
     528:	0f b6       	in	r0, 0x3f	; 63
     52a:	0f 92       	push	r0
     52c:	11 24       	eor	r1, r1
     52e:	0b b6       	in	r0, 0x3b	; 59
     530:	0f 92       	push	r0
     532:	2f 93       	push	r18
     534:	3f 93       	push	r19
     536:	4f 93       	push	r20
     538:	5f 93       	push	r21
     53a:	6f 93       	push	r22
     53c:	7f 93       	push	r23
     53e:	8f 93       	push	r24
     540:	9f 93       	push	r25
     542:	af 93       	push	r26
     544:	bf 93       	push	r27
     546:	ef 93       	push	r30
     548:	ff 93       	push	r31
     54a:	cb df       	rcall	.-106    	; 0x4e2 <openValve_1>
     54c:	39 d4       	rcall	.+2162   	; 0xdc0 <stop_timer_1>
     54e:	d1 df       	rcall	.-94     	; 0x4f2 <button_interruption_1_init>
     550:	ff 91       	pop	r31
     552:	ef 91       	pop	r30
     554:	bf 91       	pop	r27
     556:	af 91       	pop	r26
     558:	9f 91       	pop	r25
     55a:	8f 91       	pop	r24
     55c:	7f 91       	pop	r23
     55e:	6f 91       	pop	r22
     560:	5f 91       	pop	r21
     562:	4f 91       	pop	r20
     564:	3f 91       	pop	r19
     566:	2f 91       	pop	r18
     568:	0f 90       	pop	r0
     56a:	0b be       	out	0x3b, r0	; 59
     56c:	0f 90       	pop	r0
     56e:	0f be       	out	0x3f, r0	; 63
     570:	0f 90       	pop	r0
     572:	1f 90       	pop	r1
     574:	18 95       	reti

00000576 <initializeTimerCounter_5>:
}

void initializeTimerCounter_5()
{
	TIMSK5 |= (1 << TOIE5);
     576:	e3 e7       	ldi	r30, 0x73	; 115
     578:	f0 e0       	ldi	r31, 0x00	; 0
     57a:	80 81       	ld	r24, Z
     57c:	81 60       	ori	r24, 0x01	; 1
     57e:	80 83       	st	Z, r24
	TCCR5B = (1 << CS50); // doesnt increase countsec value - should change CS50 to CS51 or smth else 
     580:	81 e0       	ldi	r24, 0x01	; 1
     582:	80 93 21 01 	sts	0x0121, r24	; 0x800121 <__TEXT_REGION_LENGTH__+0x700121>

#ifndef TIMER5_H_
#define TIMER5_H_

void TCNT5_startingValue(unsigned int value) {
	TCNT5 = value;
     586:	8f ef       	ldi	r24, 0xFF	; 255
     588:	95 e0       	ldi	r25, 0x05	; 5
     58a:	90 93 25 01 	sts	0x0125, r25	; 0x800125 <__TEXT_REGION_LENGTH__+0x700125>
     58e:	80 93 24 01 	sts	0x0124, r24	; 0x800124 <__TEXT_REGION_LENGTH__+0x700124>
     592:	08 95       	ret

00000594 <decodeCommands>:
volatile struct RPM RPM_1 = {.currentRPM = 0, .setRPM = 0, .counter = 0, .interruptionCounter = 10};

char sendinComands = 0;

void decodeCommands(volatile unsigned char commands[])
{
     594:	2f 92       	push	r2
     596:	3f 92       	push	r3
     598:	4f 92       	push	r4
     59a:	5f 92       	push	r5
     59c:	6f 92       	push	r6
     59e:	7f 92       	push	r7
     5a0:	8f 92       	push	r8
     5a2:	9f 92       	push	r9
     5a4:	af 92       	push	r10
     5a6:	bf 92       	push	r11
     5a8:	cf 92       	push	r12
     5aa:	df 92       	push	r13
     5ac:	ef 92       	push	r14
     5ae:	ff 92       	push	r15
     5b0:	0f 93       	push	r16
     5b2:	1f 93       	push	r17
     5b4:	cf 93       	push	r28
     5b6:	df 93       	push	r29
     5b8:	cd b7       	in	r28, 0x3d	; 61
     5ba:	de b7       	in	r29, 0x3e	; 62
     5bc:	2c 97       	sbiw	r28, 0x0c	; 12
     5be:	0f b6       	in	r0, 0x3f	; 63
     5c0:	f8 94       	cli
     5c2:	de bf       	out	0x3e, r29	; 62
     5c4:	0f be       	out	0x3f, r0	; 63
     5c6:	cd bf       	out	0x3d, r28	; 61
	unsigned int i = 0;
	unsigned int j = 0;
	unsigned char tempBuf[10];
	unsigned int extractedValue;
	while(commands[i] != '\n') {
     5c8:	dc 01       	movw	r26, r24
     5ca:	2c 91       	ld	r18, X
     5cc:	2a 30       	cpi	r18, 0x0A	; 10
     5ce:	09 f4       	brne	.+2      	; 0x5d2 <decodeCommands+0x3e>
     5d0:	7a c1       	rjmp	.+756    	; 0x8c6 <decodeCommands+0x332>
     5d2:	7c 01       	movw	r14, r24
     5d4:	fc 01       	movw	r30, r24
     5d6:	81 2c       	mov	r8, r1
     5d8:	91 2c       	mov	r9, r1
     5da:	00 e0       	ldi	r16, 0x00	; 0
     5dc:	10 e0       	ldi	r17, 0x00	; 0
		// stop command from control program
		if (commands[i] == 'S'){
			RPM_1.setRPM = 0;
     5de:	0f 2e       	mov	r0, r31
     5e0:	f0 e0       	ldi	r31, 0x00	; 0
     5e2:	6f 2e       	mov	r6, r31
     5e4:	f2 e0       	ldi	r31, 0x02	; 2
     5e6:	7f 2e       	mov	r7, r31
     5e8:	f0 2d       	mov	r31, r0
			while(commands[i] != '|'){
				tempBuf[j] = commands[i];
				i++;
				j++;
			}
			sscanf(tempBuf, "%d", &extractedValue);
     5ea:	2e 01       	movw	r4, r28
     5ec:	bb e0       	ldi	r27, 0x0B	; 11
     5ee:	4b 0e       	add	r4, r27
     5f0:	51 1c       	adc	r5, r1
     5f2:	0f 2e       	mov	r0, r31
     5f4:	f3 e2       	ldi	r31, 0x23	; 35
     5f6:	2f 2e       	mov	r2, r31
     5f8:	f2 e0       	ldi	r31, 0x02	; 2
     5fa:	3f 2e       	mov	r3, r31
     5fc:	f0 2d       	mov	r31, r0
     5fe:	ce 01       	movw	r24, r28
     600:	01 96       	adiw	r24, 0x01	; 1
     602:	5c 01       	movw	r10, r24
	unsigned int j = 0;
	unsigned char tempBuf[10];
	unsigned int extractedValue;
	while(commands[i] != '\n') {
		// stop command from control program
		if (commands[i] == 'S'){
     604:	80 81       	ld	r24, Z
     606:	83 35       	cpi	r24, 0x53	; 83
     608:	29 f4       	brne	.+10     	; 0x614 <decodeCommands+0x80>
			RPM_1.setRPM = 0;
     60a:	d3 01       	movw	r26, r6
     60c:	13 96       	adiw	r26, 0x03	; 3
     60e:	1c 92       	st	X, r1
     610:	1e 92       	st	-X, r1
     612:	12 97       	sbiw	r26, 0x02	; 2
		}
		if(commands[i] == 'R' && commands[i + 1] == '8') {
     614:	80 81       	ld	r24, Z
     616:	82 35       	cpi	r24, 0x52	; 82
     618:	e9 f5       	brne	.+122    	; 0x694 <decodeCommands+0x100>
     61a:	f8 01       	movw	r30, r16
     61c:	31 96       	adiw	r30, 0x01	; 1
     61e:	ee 0d       	add	r30, r14
     620:	ff 1d       	adc	r31, r15
     622:	80 81       	ld	r24, Z
     624:	88 33       	cpi	r24, 0x38	; 56
     626:	b1 f5       	brne	.+108    	; 0x694 <decodeCommands+0x100>
			i = i + 2;
     628:	68 01       	movw	r12, r16
     62a:	b2 e0       	ldi	r27, 0x02	; 2
     62c:	cb 0e       	add	r12, r27
     62e:	d1 1c       	adc	r13, r1
			while(commands[i] != '|'){
     630:	c7 01       	movw	r24, r14
     632:	8c 0d       	add	r24, r12
     634:	9d 1d       	adc	r25, r13
     636:	fc 01       	movw	r30, r24
     638:	20 81       	ld	r18, Z
     63a:	2c 37       	cpi	r18, 0x7C	; 124
     63c:	b1 f0       	breq	.+44     	; 0x66a <decodeCommands+0xd6>
     63e:	d5 01       	movw	r26, r10
     640:	a8 0d       	add	r26, r8
     642:	b9 1d       	adc	r27, r9
     644:	0d 5f       	subi	r16, 0xFD	; 253
     646:	1f 4f       	sbci	r17, 0xFF	; 255
     648:	08 1b       	sub	r16, r24
     64a:	19 0b       	sbc	r17, r25
				tempBuf[j] = commands[i];
     64c:	80 81       	ld	r24, Z
     64e:	8d 93       	st	X+, r24
				i++;
     650:	8f ef       	ldi	r24, 0xFF	; 255
     652:	c8 1a       	sub	r12, r24
     654:	d8 0a       	sbc	r13, r24
     656:	4d 01       	movw	r8, r26
     658:	8a 18       	sub	r8, r10
     65a:	9b 08       	sbc	r9, r11
     65c:	e0 0f       	add	r30, r16
     65e:	f1 1f       	adc	r31, r17
     660:	ee 0d       	add	r30, r14
     662:	ff 1d       	adc	r31, r15
		if (commands[i] == 'S'){
			RPM_1.setRPM = 0;
		}
		if(commands[i] == 'R' && commands[i + 1] == '8') {
			i = i + 2;
			while(commands[i] != '|'){
     664:	80 81       	ld	r24, Z
     666:	8c 37       	cpi	r24, 0x7C	; 124
     668:	89 f7       	brne	.-30     	; 0x64c <decodeCommands+0xb8>
				tempBuf[j] = commands[i];
				i++;
				j++;
			}
			sscanf(tempBuf, "%d", &extractedValue);
     66a:	5f 92       	push	r5
     66c:	4f 92       	push	r4
     66e:	3f 92       	push	r3
     670:	2f 92       	push	r2
     672:	bf 92       	push	r11
     674:	af 92       	push	r10
     676:	75 d6       	rcall	.+3306   	; 0x1362 <sscanf>
			//send_int_Uart(extractedValue);
			RPM_1.setRPM = extractedValue;
     678:	8b 85       	ldd	r24, Y+11	; 0x0b
     67a:	9c 85       	ldd	r25, Y+12	; 0x0c
     67c:	d3 01       	movw	r26, r6
     67e:	13 96       	adiw	r26, 0x03	; 3
     680:	9c 93       	st	X, r25
     682:	8e 93       	st	-X, r24
     684:	12 97       	sbiw	r26, 0x02	; 2
     686:	0f 90       	pop	r0
     688:	0f 90       	pop	r0
     68a:	0f 90       	pop	r0
     68c:	0f 90       	pop	r0
     68e:	0f 90       	pop	r0
     690:	0f 90       	pop	r0
     692:	86 01       	movw	r16, r12
			//send_int_Uart();
			//TransmitString(commands);
			//extractValue(*commands++);
		}
		if(commands[i] == 'V' && commands[i + 1] == '0') {
     694:	f7 01       	movw	r30, r14
     696:	e0 0f       	add	r30, r16
     698:	f1 1f       	adc	r31, r17
     69a:	80 81       	ld	r24, Z
     69c:	86 35       	cpi	r24, 0x56	; 86
     69e:	f1 f4       	brne	.+60     	; 0x6dc <decodeCommands+0x148>
     6a0:	f8 01       	movw	r30, r16
     6a2:	31 96       	adiw	r30, 0x01	; 1
     6a4:	ee 0d       	add	r30, r14
     6a6:	ff 1d       	adc	r31, r15
     6a8:	80 81       	ld	r24, Z
     6aa:	80 33       	cpi	r24, 0x30	; 48
     6ac:	b9 f4       	brne	.+46     	; 0x6dc <decodeCommands+0x148>
			i = i + 2;
     6ae:	0e 5f       	subi	r16, 0xFE	; 254
     6b0:	1f 4f       	sbci	r17, 0xFF	; 255
			if(commands[i] == 'Y')
     6b2:	67 01       	movw	r12, r14
     6b4:	c0 0e       	add	r12, r16
     6b6:	d1 1e       	adc	r13, r17
     6b8:	f6 01       	movw	r30, r12
     6ba:	80 81       	ld	r24, Z
     6bc:	89 35       	cpi	r24, 0x59	; 89
     6be:	29 f4       	brne	.+10     	; 0x6ca <decodeCommands+0x136>
			{
				VALVES.openV1();
     6c0:	a4 e7       	ldi	r26, 0x74	; 116
     6c2:	b2 e0       	ldi	r27, 0x02	; 2
     6c4:	ed 91       	ld	r30, X+
     6c6:	fc 91       	ld	r31, X
     6c8:	19 95       	eicall
			}
			if(commands[i] == 'N'){
     6ca:	f6 01       	movw	r30, r12
     6cc:	80 81       	ld	r24, Z
     6ce:	8e 34       	cpi	r24, 0x4E	; 78
     6d0:	29 f4       	brne	.+10     	; 0x6dc <decodeCommands+0x148>
				VALVES.closeV1();
     6d2:	e0 91 80 02 	lds	r30, 0x0280	; 0x800280 <VALVES+0xc>
     6d6:	f0 91 81 02 	lds	r31, 0x0281	; 0x800281 <VALVES+0xd>
     6da:	19 95       	eicall
			}
		}
		if(commands[i] == 'V' && commands[i + 1] == '1') {
     6dc:	f7 01       	movw	r30, r14
     6de:	e0 0f       	add	r30, r16
     6e0:	f1 1f       	adc	r31, r17
     6e2:	80 81       	ld	r24, Z
     6e4:	86 35       	cpi	r24, 0x56	; 86
     6e6:	f1 f4       	brne	.+60     	; 0x724 <decodeCommands+0x190>
     6e8:	f8 01       	movw	r30, r16
     6ea:	31 96       	adiw	r30, 0x01	; 1
     6ec:	ee 0d       	add	r30, r14
     6ee:	ff 1d       	adc	r31, r15
     6f0:	80 81       	ld	r24, Z
     6f2:	81 33       	cpi	r24, 0x31	; 49
     6f4:	b9 f4       	brne	.+46     	; 0x724 <decodeCommands+0x190>
			i = i + 2;
     6f6:	0e 5f       	subi	r16, 0xFE	; 254
     6f8:	1f 4f       	sbci	r17, 0xFF	; 255
			if(commands[i] == 'Y')
     6fa:	67 01       	movw	r12, r14
     6fc:	c0 0e       	add	r12, r16
     6fe:	d1 1e       	adc	r13, r17
     700:	d6 01       	movw	r26, r12
     702:	8c 91       	ld	r24, X
     704:	89 35       	cpi	r24, 0x59	; 89
     706:	29 f4       	brne	.+10     	; 0x712 <decodeCommands+0x17e>
			{
				VALVES.openV2();
     708:	e0 91 76 02 	lds	r30, 0x0276	; 0x800276 <VALVES+0x2>
     70c:	f0 91 77 02 	lds	r31, 0x0277	; 0x800277 <VALVES+0x3>
     710:	19 95       	eicall
			}
			if(commands[i] == 'N'){
     712:	f6 01       	movw	r30, r12
     714:	80 81       	ld	r24, Z
     716:	8e 34       	cpi	r24, 0x4E	; 78
     718:	29 f4       	brne	.+10     	; 0x724 <decodeCommands+0x190>
				VALVES.closeV2();
     71a:	e0 91 82 02 	lds	r30, 0x0282	; 0x800282 <VALVES+0xe>
     71e:	f0 91 83 02 	lds	r31, 0x0283	; 0x800283 <VALVES+0xf>
     722:	19 95       	eicall
			}
		}
		if(commands[i] == 'V' && commands[i + 1] == '2') {
     724:	f7 01       	movw	r30, r14
     726:	e0 0f       	add	r30, r16
     728:	f1 1f       	adc	r31, r17
     72a:	80 81       	ld	r24, Z
     72c:	86 35       	cpi	r24, 0x56	; 86
     72e:	f1 f4       	brne	.+60     	; 0x76c <decodeCommands+0x1d8>
     730:	f8 01       	movw	r30, r16
     732:	31 96       	adiw	r30, 0x01	; 1
     734:	ee 0d       	add	r30, r14
     736:	ff 1d       	adc	r31, r15
     738:	80 81       	ld	r24, Z
     73a:	82 33       	cpi	r24, 0x32	; 50
     73c:	b9 f4       	brne	.+46     	; 0x76c <decodeCommands+0x1d8>
			i = i + 2;
     73e:	0e 5f       	subi	r16, 0xFE	; 254
     740:	1f 4f       	sbci	r17, 0xFF	; 255
			if(commands[i] == 'Y')
     742:	67 01       	movw	r12, r14
     744:	c0 0e       	add	r12, r16
     746:	d1 1e       	adc	r13, r17
     748:	d6 01       	movw	r26, r12
     74a:	8c 91       	ld	r24, X
     74c:	89 35       	cpi	r24, 0x59	; 89
     74e:	29 f4       	brne	.+10     	; 0x75a <decodeCommands+0x1c6>
			{
				VALVES.openV3();
     750:	e0 91 78 02 	lds	r30, 0x0278	; 0x800278 <VALVES+0x4>
     754:	f0 91 79 02 	lds	r31, 0x0279	; 0x800279 <VALVES+0x5>
     758:	19 95       	eicall
			}
			if(commands[i] == 'N'){
     75a:	f6 01       	movw	r30, r12
     75c:	80 81       	ld	r24, Z
     75e:	8e 34       	cpi	r24, 0x4E	; 78
     760:	29 f4       	brne	.+10     	; 0x76c <decodeCommands+0x1d8>
				VALVES.closeV3();
     762:	e0 91 84 02 	lds	r30, 0x0284	; 0x800284 <VALVES+0x10>
     766:	f0 91 85 02 	lds	r31, 0x0285	; 0x800285 <VALVES+0x11>
     76a:	19 95       	eicall
			}
		}
		if(commands[i] == 'V' && commands[i + 1] == '3') {
     76c:	f7 01       	movw	r30, r14
     76e:	e0 0f       	add	r30, r16
     770:	f1 1f       	adc	r31, r17
     772:	80 81       	ld	r24, Z
     774:	86 35       	cpi	r24, 0x56	; 86
     776:	f1 f4       	brne	.+60     	; 0x7b4 <decodeCommands+0x220>
     778:	f8 01       	movw	r30, r16
     77a:	31 96       	adiw	r30, 0x01	; 1
     77c:	ee 0d       	add	r30, r14
     77e:	ff 1d       	adc	r31, r15
     780:	80 81       	ld	r24, Z
     782:	83 33       	cpi	r24, 0x33	; 51
     784:	b9 f4       	brne	.+46     	; 0x7b4 <decodeCommands+0x220>
			i = i + 2;
     786:	0e 5f       	subi	r16, 0xFE	; 254
     788:	1f 4f       	sbci	r17, 0xFF	; 255
			if(commands[i] == 'Y')
     78a:	67 01       	movw	r12, r14
     78c:	c0 0e       	add	r12, r16
     78e:	d1 1e       	adc	r13, r17
     790:	d6 01       	movw	r26, r12
     792:	8c 91       	ld	r24, X
     794:	89 35       	cpi	r24, 0x59	; 89
     796:	29 f4       	brne	.+10     	; 0x7a2 <decodeCommands+0x20e>
			{
				VALVES.openV4();
     798:	e0 91 7a 02 	lds	r30, 0x027A	; 0x80027a <VALVES+0x6>
     79c:	f0 91 7b 02 	lds	r31, 0x027B	; 0x80027b <VALVES+0x7>
     7a0:	19 95       	eicall
			}
			if(commands[i] == 'N'){
     7a2:	f6 01       	movw	r30, r12
     7a4:	80 81       	ld	r24, Z
     7a6:	8e 34       	cpi	r24, 0x4E	; 78
     7a8:	29 f4       	brne	.+10     	; 0x7b4 <decodeCommands+0x220>
				VALVES.closeV4();
     7aa:	e0 91 86 02 	lds	r30, 0x0286	; 0x800286 <VALVES+0x12>
     7ae:	f0 91 87 02 	lds	r31, 0x0287	; 0x800287 <VALVES+0x13>
     7b2:	19 95       	eicall
			}
		}
		if(commands[i] == 'V' && commands[i + 1] == '4') {
     7b4:	f7 01       	movw	r30, r14
     7b6:	e0 0f       	add	r30, r16
     7b8:	f1 1f       	adc	r31, r17
     7ba:	80 81       	ld	r24, Z
     7bc:	86 35       	cpi	r24, 0x56	; 86
     7be:	f1 f4       	brne	.+60     	; 0x7fc <decodeCommands+0x268>
     7c0:	f8 01       	movw	r30, r16
     7c2:	31 96       	adiw	r30, 0x01	; 1
     7c4:	ee 0d       	add	r30, r14
     7c6:	ff 1d       	adc	r31, r15
     7c8:	80 81       	ld	r24, Z
     7ca:	84 33       	cpi	r24, 0x34	; 52
     7cc:	b9 f4       	brne	.+46     	; 0x7fc <decodeCommands+0x268>
			i = i + 2;
     7ce:	0e 5f       	subi	r16, 0xFE	; 254
     7d0:	1f 4f       	sbci	r17, 0xFF	; 255
			if(commands[i] == 'Y')
     7d2:	67 01       	movw	r12, r14
     7d4:	c0 0e       	add	r12, r16
     7d6:	d1 1e       	adc	r13, r17
     7d8:	d6 01       	movw	r26, r12
     7da:	8c 91       	ld	r24, X
     7dc:	89 35       	cpi	r24, 0x59	; 89
     7de:	29 f4       	brne	.+10     	; 0x7ea <decodeCommands+0x256>
			{
				VALVES.openV5();
     7e0:	e0 91 7c 02 	lds	r30, 0x027C	; 0x80027c <VALVES+0x8>
     7e4:	f0 91 7d 02 	lds	r31, 0x027D	; 0x80027d <VALVES+0x9>
     7e8:	19 95       	eicall
			}
			if(commands[i] == 'N'){
     7ea:	f6 01       	movw	r30, r12
     7ec:	80 81       	ld	r24, Z
     7ee:	8e 34       	cpi	r24, 0x4E	; 78
     7f0:	29 f4       	brne	.+10     	; 0x7fc <decodeCommands+0x268>
				VALVES.closeV5();
     7f2:	e0 91 88 02 	lds	r30, 0x0288	; 0x800288 <VALVES+0x14>
     7f6:	f0 91 89 02 	lds	r31, 0x0289	; 0x800289 <VALVES+0x15>
     7fa:	19 95       	eicall
			}
		}
		if(commands[i] == 'V' && commands[i + 1] == '5') {
     7fc:	f7 01       	movw	r30, r14
     7fe:	e0 0f       	add	r30, r16
     800:	f1 1f       	adc	r31, r17
     802:	80 81       	ld	r24, Z
     804:	86 35       	cpi	r24, 0x56	; 86
     806:	f1 f4       	brne	.+60     	; 0x844 <decodeCommands+0x2b0>
     808:	f8 01       	movw	r30, r16
     80a:	31 96       	adiw	r30, 0x01	; 1
     80c:	ee 0d       	add	r30, r14
     80e:	ff 1d       	adc	r31, r15
     810:	80 81       	ld	r24, Z
     812:	85 33       	cpi	r24, 0x35	; 53
     814:	b9 f4       	brne	.+46     	; 0x844 <decodeCommands+0x2b0>
			i = i + 2;
     816:	0e 5f       	subi	r16, 0xFE	; 254
     818:	1f 4f       	sbci	r17, 0xFF	; 255
			if(commands[i] == 'Y')
     81a:	67 01       	movw	r12, r14
     81c:	c0 0e       	add	r12, r16
     81e:	d1 1e       	adc	r13, r17
     820:	d6 01       	movw	r26, r12
     822:	8c 91       	ld	r24, X
     824:	89 35       	cpi	r24, 0x59	; 89
     826:	29 f4       	brne	.+10     	; 0x832 <decodeCommands+0x29e>
			{
				VALVES.openV6();
     828:	e0 91 7e 02 	lds	r30, 0x027E	; 0x80027e <VALVES+0xa>
     82c:	f0 91 7f 02 	lds	r31, 0x027F	; 0x80027f <VALVES+0xb>
     830:	19 95       	eicall
			}
			if(commands[i] == 'N'){
     832:	f6 01       	movw	r30, r12
     834:	80 81       	ld	r24, Z
     836:	8e 34       	cpi	r24, 0x4E	; 78
     838:	29 f4       	brne	.+10     	; 0x844 <decodeCommands+0x2b0>
				VALVES.closeV6();
     83a:	e0 91 8a 02 	lds	r30, 0x028A	; 0x80028a <VALVES+0x16>
     83e:	f0 91 8b 02 	lds	r31, 0x028B	; 0x80028b <VALVES+0x17>
     842:	19 95       	eicall
			}
		}
		if(commands[i] == 'V' && commands[i + 1] == '6') {
     844:	f7 01       	movw	r30, r14
     846:	e0 0f       	add	r30, r16
     848:	f1 1f       	adc	r31, r17
     84a:	80 81       	ld	r24, Z
     84c:	86 35       	cpi	r24, 0x56	; 86
     84e:	b1 f4       	brne	.+44     	; 0x87c <decodeCommands+0x2e8>
     850:	f8 01       	movw	r30, r16
     852:	31 96       	adiw	r30, 0x01	; 1
     854:	ee 0d       	add	r30, r14
     856:	ff 1d       	adc	r31, r15
     858:	80 81       	ld	r24, Z
     85a:	86 33       	cpi	r24, 0x36	; 54
     85c:	79 f4       	brne	.+30     	; 0x87c <decodeCommands+0x2e8>
			i = i + 2;
     85e:	0e 5f       	subi	r16, 0xFE	; 254
     860:	1f 4f       	sbci	r17, 0xFF	; 255
			if(commands[i] == 'Y')
     862:	67 01       	movw	r12, r14
     864:	c0 0e       	add	r12, r16
     866:	d1 1e       	adc	r13, r17
     868:	d6 01       	movw	r26, r12
     86a:	8c 91       	ld	r24, X
     86c:	89 35       	cpi	r24, 0x59	; 89
			{
				openValve_0();
     86e:	09 f4       	brne	.+2      	; 0x872 <decodeCommands+0x2de>
     870:	d3 dd       	rcall	.-1114   	; 0x418 <openValve_0>
			}
			if(commands[i] == 'N'){
     872:	f6 01       	movw	r30, r12
     874:	80 81       	ld	r24, Z
     876:	8e 34       	cpi	r24, 0x4E	; 78
				closeValve_0();
     878:	09 f4       	brne	.+2      	; 0x87c <decodeCommands+0x2e8>
     87a:	c7 dd       	rcall	.-1138   	; 0x40a <closeValve_0>
			}
		}
		if(commands[i] == 'V' && commands[i + 1] == '7') {
     87c:	f7 01       	movw	r30, r14
     87e:	e0 0f       	add	r30, r16
     880:	f1 1f       	adc	r31, r17
     882:	80 81       	ld	r24, Z
     884:	86 35       	cpi	r24, 0x56	; 86
     886:	b1 f4       	brne	.+44     	; 0x8b4 <decodeCommands+0x320>
     888:	f8 01       	movw	r30, r16
     88a:	31 96       	adiw	r30, 0x01	; 1
     88c:	ee 0d       	add	r30, r14
     88e:	ff 1d       	adc	r31, r15
     890:	80 81       	ld	r24, Z
     892:	87 33       	cpi	r24, 0x37	; 55
     894:	79 f4       	brne	.+30     	; 0x8b4 <decodeCommands+0x320>
			i = i + 2;
     896:	0e 5f       	subi	r16, 0xFE	; 254
     898:	1f 4f       	sbci	r17, 0xFF	; 255
			if(commands[i] == 'Y')
     89a:	67 01       	movw	r12, r14
     89c:	c0 0e       	add	r12, r16
     89e:	d1 1e       	adc	r13, r17
     8a0:	d6 01       	movw	r26, r12
     8a2:	8c 91       	ld	r24, X
     8a4:	89 35       	cpi	r24, 0x59	; 89
			{
				openValve_1();
     8a6:	09 f4       	brne	.+2      	; 0x8aa <decodeCommands+0x316>
     8a8:	1c de       	rcall	.-968    	; 0x4e2 <openValve_1>
			}
			if(commands[i] == 'N'){
     8aa:	f6 01       	movw	r30, r12
     8ac:	80 81       	ld	r24, Z
     8ae:	8e 34       	cpi	r24, 0x4E	; 78
				closeValve_1();
     8b0:	09 f4       	brne	.+2      	; 0x8b4 <decodeCommands+0x320>
     8b2:	10 de       	rcall	.-992    	; 0x4d4 <closeValve_1>
			}
		}
		i++;
     8b4:	0f 5f       	subi	r16, 0xFF	; 255
     8b6:	1f 4f       	sbci	r17, 0xFF	; 255
{
	unsigned int i = 0;
	unsigned int j = 0;
	unsigned char tempBuf[10];
	unsigned int extractedValue;
	while(commands[i] != '\n') {
     8b8:	f7 01       	movw	r30, r14
     8ba:	e0 0f       	add	r30, r16
     8bc:	f1 1f       	adc	r31, r17
     8be:	80 81       	ld	r24, Z
     8c0:	8a 30       	cpi	r24, 0x0A	; 10
     8c2:	09 f0       	breq	.+2      	; 0x8c6 <decodeCommands+0x332>
     8c4:	9f ce       	rjmp	.-706    	; 0x604 <decodeCommands+0x70>
				closeValve_1();
			}
		}
		i++;
	}
}
     8c6:	2c 96       	adiw	r28, 0x0c	; 12
     8c8:	0f b6       	in	r0, 0x3f	; 63
     8ca:	f8 94       	cli
     8cc:	de bf       	out	0x3e, r29	; 62
     8ce:	0f be       	out	0x3f, r0	; 63
     8d0:	cd bf       	out	0x3d, r28	; 61
     8d2:	df 91       	pop	r29
     8d4:	cf 91       	pop	r28
     8d6:	1f 91       	pop	r17
     8d8:	0f 91       	pop	r16
     8da:	ff 90       	pop	r15
     8dc:	ef 90       	pop	r14
     8de:	df 90       	pop	r13
     8e0:	cf 90       	pop	r12
     8e2:	bf 90       	pop	r11
     8e4:	af 90       	pop	r10
     8e6:	9f 90       	pop	r9
     8e8:	8f 90       	pop	r8
     8ea:	7f 90       	pop	r7
     8ec:	6f 90       	pop	r6
     8ee:	5f 90       	pop	r5
     8f0:	4f 90       	pop	r4
     8f2:	3f 90       	pop	r3
     8f4:	2f 90       	pop	r2
     8f6:	08 95       	ret

000008f8 <main>:

int main(void)
{
		
	DDRA |= (1 << PA1);
     8f8:	09 9a       	sbi	0x01, 1	; 1
	DDRF |= (1 << DDF2);
     8fa:	82 9a       	sbi	0x10, 2	; 16
	
	DDRH |= (1 << DDH4);
     8fc:	e1 e0       	ldi	r30, 0x01	; 1
     8fe:	f1 e0       	ldi	r31, 0x01	; 1
     900:	80 81       	ld	r24, Z
     902:	80 61       	ori	r24, 0x10	; 16
     904:	80 83       	st	Z, r24
  //TIMSK5 |= (1 << TOIE5);
  //TCCR5B = (1 << CS50);
  //TCNT5 = 1535;
	////
	
 	TIMSK0 |= (1 << TOIE0);
     906:	ee e6       	ldi	r30, 0x6E	; 110
     908:	f0 e0       	ldi	r31, 0x00	; 0
     90a:	80 81       	ld	r24, Z
     90c:	81 60       	ori	r24, 0x01	; 1
     90e:	80 83       	st	Z, r24
 	TCCR0B |= (1 << CS02) | (1 << CS00);
     910:	85 b5       	in	r24, 0x25	; 37
     912:	85 60       	ori	r24, 0x05	; 5
     914:	85 bd       	out	0x25, r24	; 37

	//TCNT0 = 130;
	////
	EICRA |= (0 << ISC31) | (1 << ISC30);
     916:	e9 e6       	ldi	r30, 0x69	; 105
     918:	f0 e0       	ldi	r31, 0x00	; 0
     91a:	80 81       	ld	r24, Z
     91c:	80 64       	ori	r24, 0x40	; 64
     91e:	80 83       	st	Z, r24
	EIMSK |= (1 << INT3);
     920:	eb 9a       	sbi	0x1d, 3	; 29

	sei();
     922:	78 94       	sei
	initializeTimerCounter_5();
     924:	28 de       	rcall	.-944    	; 0x576 <initializeTimerCounter_5>
	InitializeServo_0();
     926:	8b dd       	rcall	.-1258   	; 0x43e <InitializeServo_0>
	InitializeServo_1();
     928:	ef dd       	rcall	.-1058   	; 0x508 <InitializeServo_1>
     92a:	e1 2c       	mov	r14, r1
	InitializeUART0(500000, 0, 8, 0, 0);
     92c:	00 e0       	ldi	r16, 0x00	; 0
     92e:	28 e0       	ldi	r18, 0x08	; 8
     930:	40 e0       	ldi	r20, 0x00	; 0
     932:	60 e2       	ldi	r22, 0x20	; 32
     934:	71 ea       	ldi	r23, 0xA1	; 161
     936:	87 e0       	ldi	r24, 0x07	; 7
     938:	90 e0       	ldi	r25, 0x00	; 0
     93a:	fb db       	rcall	.-2058   	; 0x132 <InitializeUART0>
     93c:	e8 e0       	ldi	r30, 0x08	; 8
	InitializePWM_4C(PWM4C.pwmFrequency, PWM4C.pwmValue);
     93e:	f2 e0       	ldi	r31, 0x02	; 2
     940:	22 81       	ldd	r18, Z+2	; 0x02
     942:	33 81       	ldd	r19, Z+3	; 0x03
     944:	44 81       	ldd	r20, Z+4	; 0x04
     946:	55 81       	ldd	r21, Z+5	; 0x05
     948:	60 81       	ld	r22, Z
     94a:	71 81       	ldd	r23, Z+1	; 0x01
     94c:	80 e0       	ldi	r24, 0x00	; 0
     94e:	90 e0       	ldi	r25, 0x00	; 0
     950:	7e dc       	rcall	.-1796   	; 0x24e <InitializePWM_4C>
	
	//strlcpy();
	//DDRF |= (1 << DDF0);
	//PORTF |= (1 << PF0);
	
	initValves();
     952:	b1 d2       	rcall	.+1378   	; 0xeb6 <initValves>
     954:	ff cf       	rjmp	.-2      	; 0x954 <main+0x5c>

00000956 <__vector_9>:
     956:	1f 92       	push	r1

    }
}


ISR(PCINT0_vect){
     958:	0f 92       	push	r0
     95a:	0f b6       	in	r0, 0x3f	; 63
     95c:	0f 92       	push	r0
     95e:	11 24       	eor	r1, r1
     960:	0b b6       	in	r0, 0x3b	; 59
     962:	0f 92       	push	r0
     964:	2f 93       	push	r18
     966:	3f 93       	push	r19
     968:	4f 93       	push	r20
     96a:	5f 93       	push	r21
     96c:	6f 93       	push	r22
     96e:	7f 93       	push	r23
     970:	8f 93       	push	r24
     972:	9f 93       	push	r25
     974:	af 93       	push	r26
     976:	bf 93       	push	r27
     978:	ef 93       	push	r30
     97a:	ff 93       	push	r31
	if (checkServo_0_ForMoving()){
     97c:	40 dd       	rcall	.-1408   	; 0x3fe <checkServo_0_ForMoving>
     97e:	81 11       	cpse	r24, r1
     980:	01 c0       	rjmp	.+2      	; 0x984 <__vector_9+0x2e>
		//PORTA ^= (1<<PA1); // just for show that interruption works
	} else {
		StopServo_0();
     982:	2b dd       	rcall	.-1450   	; 0x3da <StopServo_0>
	}
	if(checkServo_1_ForMoving()){
     984:	a1 dd       	rcall	.-1214   	; 0x4c8 <checkServo_1_ForMoving>
     986:	81 11       	cpse	r24, r1
     988:	01 c0       	rjmp	.+2      	; 0x98c <__vector_9+0x36>
		//PORTA ^= (1<<PA1); // just for show that interruption works
	} else{
		StopServo_1();
     98a:	94 dd       	rcall	.-1240   	; 0x4b4 <StopServo_1>
     98c:	ff 91       	pop	r31
	}
}
     98e:	ef 91       	pop	r30
     990:	bf 91       	pop	r27
     992:	af 91       	pop	r26
     994:	9f 91       	pop	r25
     996:	8f 91       	pop	r24
     998:	7f 91       	pop	r23
     99a:	6f 91       	pop	r22
     99c:	5f 91       	pop	r21
     99e:	4f 91       	pop	r20
     9a0:	3f 91       	pop	r19
     9a2:	2f 91       	pop	r18
     9a4:	0f 90       	pop	r0
     9a6:	0b be       	out	0x3b, r0	; 59
     9a8:	0f 90       	pop	r0
     9aa:	0f be       	out	0x3f, r0	; 63
     9ac:	0f 90       	pop	r0
     9ae:	1f 90       	pop	r1
     9b0:	18 95       	reti

000009b2 <__vector_4>:
     9b2:	1f 92       	push	r1


ISR(INT3_vect)
{
     9b4:	0f 92       	push	r0
     9b6:	0f b6       	in	r0, 0x3f	; 63
     9b8:	0f 92       	push	r0
     9ba:	11 24       	eor	r1, r1
     9bc:	0b b6       	in	r0, 0x3b	; 59
     9be:	0f 92       	push	r0
     9c0:	cf 92       	push	r12
     9c2:	df 92       	push	r13
     9c4:	ef 92       	push	r14
     9c6:	ff 92       	push	r15
     9c8:	0f 93       	push	r16
     9ca:	1f 93       	push	r17
     9cc:	2f 93       	push	r18
     9ce:	3f 93       	push	r19
     9d0:	4f 93       	push	r20
     9d2:	5f 93       	push	r21
     9d4:	6f 93       	push	r22
     9d6:	7f 93       	push	r23
     9d8:	8f 93       	push	r24
     9da:	9f 93       	push	r25
     9dc:	af 93       	push	r26
     9de:	bf 93       	push	r27
     9e0:	cf 93       	push	r28
     9e2:	df 93       	push	r29
     9e4:	ef 93       	push	r30
     9e6:	ff 93       	push	r31
	//PORTH ^= (1 << PH4);
	RPM_1.counter++;
     9e8:	e0 e0       	ldi	r30, 0x00	; 0
     9ea:	f2 e0       	ldi	r31, 0x02	; 2
     9ec:	84 81       	ldd	r24, Z+4	; 0x04
     9ee:	95 81       	ldd	r25, Z+5	; 0x05
     9f0:	01 96       	adiw	r24, 0x01	; 1
     9f2:	95 83       	std	Z+5, r25	; 0x05
     9f4:	84 83       	std	Z+4, r24	; 0x04
	if(RPM_1.counter >= RPM_1.interruptionCounter) {
     9f6:	24 81       	ldd	r18, Z+4	; 0x04
     9f8:	35 81       	ldd	r19, Z+5	; 0x05
     9fa:	86 81       	ldd	r24, Z+6	; 0x06
     9fc:	97 81       	ldd	r25, Z+7	; 0x07
     9fe:	28 17       	cp	r18, r24
     a00:	39 07       	cpc	r19, r25
     a02:	e0 f1       	brcs	.+120    	; 0xa7c <__vector_4+0xca>
		//send_int_Uart(Timer5_1.counter);
		Timer5_1.totalTicks += Timer5_1.counter * 64000 + TCNT5;
     a04:	c9 e2       	ldi	r28, 0x29	; 41
     a06:	d2 e0       	ldi	r29, 0x02	; 2
     a08:	28 81       	ld	r18, Y
     a0a:	39 81       	ldd	r19, Y+1	; 0x01
     a0c:	4a 81       	ldd	r20, Y+2	; 0x02
     a0e:	5b 81       	ldd	r21, Y+3	; 0x03
     a10:	04 e2       	ldi	r16, 0x24	; 36
     a12:	11 e0       	ldi	r17, 0x01	; 1
     a14:	d8 01       	movw	r26, r16
     a16:	ed 91       	ld	r30, X+
     a18:	fc 91       	ld	r31, X
     a1a:	c8 88       	ldd	r12, Y+16	; 0x10
     a1c:	d9 88       	ldd	r13, Y+17	; 0x11
     a1e:	ea 88       	ldd	r14, Y+18	; 0x12
     a20:	fb 88       	ldd	r15, Y+19	; 0x13
     a22:	a0 e0       	ldi	r26, 0x00	; 0
     a24:	ba ef       	ldi	r27, 0xFA	; 250
     a26:	84 d4       	rcall	.+2312   	; 0x1330 <__muluhisi3>
     a28:	dc 01       	movw	r26, r24
     a2a:	cb 01       	movw	r24, r22
     a2c:	8e 0f       	add	r24, r30
     a2e:	9f 1f       	adc	r25, r31
     a30:	a1 1d       	adc	r26, r1
     a32:	b1 1d       	adc	r27, r1
     a34:	c8 0e       	add	r12, r24
     a36:	d9 1e       	adc	r13, r25
     a38:	ea 1e       	adc	r14, r26
     a3a:	fb 1e       	adc	r15, r27
     a3c:	c8 8a       	std	Y+16, r12	; 0x10
     a3e:	d9 8a       	std	Y+17, r13	; 0x11
     a40:	ea 8a       	std	Y+18, r14	; 0x12
     a42:	fb 8a       	std	Y+19, r15	; 0x13
		multiply by 60 - per minute
		division by 4 - number of poles on engine - 8 => real revolution = 4 magnetic field revolutions
										(so, hall sensors will be detect it 4 times per real(mechanical) revolution) 
		division by 4 - interruption works on rise and fall => 10 * 60 / 4 / 2 = 75
		\****************/
		RPM_1.currentRPM = F_CPU * 75 /* 10 */ / Timer5_1.totalTicks /* * 60 / 4 / 2 */ ;
     a44:	28 89       	ldd	r18, Y+16	; 0x10
     a46:	39 89       	ldd	r19, Y+17	; 0x11
     a48:	4a 89       	ldd	r20, Y+18	; 0x12
     a4a:	5b 89       	ldd	r21, Y+19	; 0x13
     a4c:	60 e0       	ldi	r22, 0x00	; 0
     a4e:	7c e8       	ldi	r23, 0x8C	; 140
     a50:	86 e8       	ldi	r24, 0x86	; 134
     a52:	97 e4       	ldi	r25, 0x47	; 71
     a54:	4b d4       	rcall	.+2198   	; 0x12ec <__udivmodsi4>
     a56:	e0 e0       	ldi	r30, 0x00	; 0
     a58:	f2 e0       	ldi	r31, 0x02	; 2
     a5a:	31 83       	std	Z+1, r19	; 0x01
     a5c:	20 83       	st	Z, r18
		RPM_1.counter = 0;
     a5e:	15 82       	std	Z+5, r1	; 0x05
     a60:	14 82       	std	Z+4, r1	; 0x04
		Timer5_1.counter = 0;
     a62:	18 82       	st	Y, r1
     a64:	19 82       	std	Y+1, r1	; 0x01
     a66:	1a 82       	std	Y+2, r1	; 0x02
     a68:	1b 82       	std	Y+3, r1	; 0x03
		Timer5_1.totalTicks = 0;
     a6a:	18 8a       	std	Y+16, r1	; 0x10
     a6c:	19 8a       	std	Y+17, r1	; 0x11
     a6e:	1a 8a       	std	Y+18, r1	; 0x12
     a70:	1b 8a       	std	Y+19, r1	; 0x13
		TCNT5 = 1535;
     a72:	8f ef       	ldi	r24, 0xFF	; 255
     a74:	95 e0       	ldi	r25, 0x05	; 5
     a76:	f8 01       	movw	r30, r16
     a78:	91 83       	std	Z+1, r25	; 0x01
     a7a:	80 83       	st	Z, r24
	}
	
}
     a7c:	ff 91       	pop	r31
     a7e:	ef 91       	pop	r30
     a80:	df 91       	pop	r29
     a82:	cf 91       	pop	r28
     a84:	bf 91       	pop	r27
     a86:	af 91       	pop	r26
     a88:	9f 91       	pop	r25
     a8a:	8f 91       	pop	r24
     a8c:	7f 91       	pop	r23
     a8e:	6f 91       	pop	r22
     a90:	5f 91       	pop	r21
     a92:	4f 91       	pop	r20
     a94:	3f 91       	pop	r19
     a96:	2f 91       	pop	r18
     a98:	1f 91       	pop	r17
     a9a:	0f 91       	pop	r16
     a9c:	ff 90       	pop	r15
     a9e:	ef 90       	pop	r14
     aa0:	df 90       	pop	r13
     aa2:	cf 90       	pop	r12
     aa4:	0f 90       	pop	r0
     aa6:	0b be       	out	0x3b, r0	; 59
     aa8:	0f 90       	pop	r0
     aaa:	0f be       	out	0x3f, r0	; 63
     aac:	0f 90       	pop	r0
     aae:	1f 90       	pop	r1
     ab0:	18 95       	reti

00000ab2 <__vector_50>:

ISR(TIMER5_OVF_vect)
{
     ab2:	1f 92       	push	r1
     ab4:	0f 92       	push	r0
     ab6:	0f b6       	in	r0, 0x3f	; 63
     ab8:	0f 92       	push	r0
     aba:	11 24       	eor	r1, r1
     abc:	0b b6       	in	r0, 0x3b	; 59
     abe:	0f 92       	push	r0
     ac0:	2f 93       	push	r18
     ac2:	3f 93       	push	r19
     ac4:	4f 93       	push	r20
     ac6:	5f 93       	push	r21
     ac8:	6f 93       	push	r22
     aca:	7f 93       	push	r23
     acc:	8f 93       	push	r24
     ace:	9f 93       	push	r25
     ad0:	af 93       	push	r26
     ad2:	bf 93       	push	r27
     ad4:	ef 93       	push	r30
     ad6:	ff 93       	push	r31
	PORTH ^= (1 << PH4);
     ad8:	e2 e0       	ldi	r30, 0x02	; 2
     ada:	f1 e0       	ldi	r31, 0x01	; 1
     adc:	90 81       	ld	r25, Z
     ade:	80 e1       	ldi	r24, 0x10	; 16
     ae0:	89 27       	eor	r24, r25
     ae2:	80 83       	st	Z, r24
	if(sendinComands == 1)
     ae4:	80 91 28 02 	lds	r24, 0x0228	; 0x800228 <sendinComands>
     ae8:	81 30       	cpi	r24, 0x01	; 1
     aea:	29 f4       	brne	.+10     	; 0xaf6 <__vector_50+0x44>
	{
		decodeCommands(UART0.data_in);
     aec:	8d e3       	ldi	r24, 0x3D	; 61
     aee:	92 e0       	ldi	r25, 0x02	; 2
     af0:	51 dd       	rcall	.-1374   	; 0x594 <decodeCommands>
		sendinComands = 0;
     af2:	10 92 28 02 	sts	0x0228, r1	; 0x800228 <sendinComands>
	}
	//TCNT5_startingValue(1535);
	TCNT5 = 1535;
     af6:	8f ef       	ldi	r24, 0xFF	; 255
     af8:	95 e0       	ldi	r25, 0x05	; 5
     afa:	90 93 25 01 	sts	0x0125, r25	; 0x800125 <__TEXT_REGION_LENGTH__+0x700125>
     afe:	80 93 24 01 	sts	0x0124, r24	; 0x800124 <__TEXT_REGION_LENGTH__+0x700124>
	Timer5_1.counter++;
     b02:	e9 e2       	ldi	r30, 0x29	; 41
     b04:	f2 e0       	ldi	r31, 0x02	; 2
     b06:	80 81       	ld	r24, Z
     b08:	91 81       	ldd	r25, Z+1	; 0x01
     b0a:	a2 81       	ldd	r26, Z+2	; 0x02
     b0c:	b3 81       	ldd	r27, Z+3	; 0x03
     b0e:	01 96       	adiw	r24, 0x01	; 1
     b10:	a1 1d       	adc	r26, r1
     b12:	b1 1d       	adc	r27, r1
     b14:	80 83       	st	Z, r24
     b16:	91 83       	std	Z+1, r25	; 0x01
     b18:	a2 83       	std	Z+2, r26	; 0x02
     b1a:	b3 83       	std	Z+3, r27	; 0x03
}
     b1c:	ff 91       	pop	r31
     b1e:	ef 91       	pop	r30
     b20:	bf 91       	pop	r27
     b22:	af 91       	pop	r26
     b24:	9f 91       	pop	r25
     b26:	8f 91       	pop	r24
     b28:	7f 91       	pop	r23
     b2a:	6f 91       	pop	r22
     b2c:	5f 91       	pop	r21
     b2e:	4f 91       	pop	r20
     b30:	3f 91       	pop	r19
     b32:	2f 91       	pop	r18
     b34:	0f 90       	pop	r0
     b36:	0b be       	out	0x3b, r0	; 59
     b38:	0f 90       	pop	r0
     b3a:	0f be       	out	0x3f, r0	; 63
     b3c:	0f 90       	pop	r0
     b3e:	1f 90       	pop	r1
     b40:	18 95       	reti

00000b42 <__vector_23>:


unsigned int countsec = 0;
ISR(TIMER0_OVF_vect){
     b42:	1f 92       	push	r1
     b44:	0f 92       	push	r0
     b46:	0f b6       	in	r0, 0x3f	; 63
     b48:	0f 92       	push	r0
     b4a:	11 24       	eor	r1, r1
     b4c:	0b b6       	in	r0, 0x3b	; 59
     b4e:	0f 92       	push	r0
     b50:	cf 92       	push	r12
     b52:	df 92       	push	r13
     b54:	ef 92       	push	r14
     b56:	ff 92       	push	r15
     b58:	0f 93       	push	r16
     b5a:	1f 93       	push	r17
     b5c:	2f 93       	push	r18
     b5e:	3f 93       	push	r19
     b60:	4f 93       	push	r20
     b62:	5f 93       	push	r21
     b64:	6f 93       	push	r22
     b66:	7f 93       	push	r23
     b68:	8f 93       	push	r24
     b6a:	9f 93       	push	r25
     b6c:	af 93       	push	r26
     b6e:	bf 93       	push	r27
     b70:	cf 93       	push	r28
     b72:	df 93       	push	r29
     b74:	ef 93       	push	r30
     b76:	ff 93       	push	r31
	//PORTH ^= (1 << PH4);
	
	TCNT0 = 131;
     b78:	83 e8       	ldi	r24, 0x83	; 131
     b7a:	86 bd       	out	0x26, r24	; 38

	if(++countsec >= 125){
     b7c:	80 91 26 02 	lds	r24, 0x0226	; 0x800226 <__data_end>
     b80:	90 91 27 02 	lds	r25, 0x0227	; 0x800227 <__data_end+0x1>
     b84:	01 96       	adiw	r24, 0x01	; 1
     b86:	8d 37       	cpi	r24, 0x7D	; 125
     b88:	91 05       	cpc	r25, r1
     b8a:	28 f4       	brcc	.+10     	; 0xb96 <__vector_23+0x54>
     b8c:	90 93 27 02 	sts	0x0227, r25	; 0x800227 <__data_end+0x1>
     b90:	80 93 26 02 	sts	0x0226, r24	; 0x800226 <__data_end>
     b94:	04 c0       	rjmp	.+8      	; 0xb9e <__vector_23+0x5c>
		//send_int_Uart(RPM_1.currentRPM);
		countsec=0;
     b96:	10 92 27 02 	sts	0x0227, r1	; 0x800227 <__data_end+0x1>
     b9a:	10 92 26 02 	sts	0x0226, r1	; 0x800226 <__data_end>
	}

	if(++Timer5_1.seconds >= 25){
     b9e:	e9 e2       	ldi	r30, 0x29	; 41
     ba0:	f2 e0       	ldi	r31, 0x02	; 2
     ba2:	84 85       	ldd	r24, Z+12	; 0x0c
     ba4:	95 85       	ldd	r25, Z+13	; 0x0d
     ba6:	a6 85       	ldd	r26, Z+14	; 0x0e
     ba8:	b7 85       	ldd	r27, Z+15	; 0x0f
     baa:	01 96       	adiw	r24, 0x01	; 1
     bac:	a1 1d       	adc	r26, r1
     bae:	b1 1d       	adc	r27, r1
     bb0:	84 87       	std	Z+12, r24	; 0x0c
     bb2:	95 87       	std	Z+13, r25	; 0x0d
     bb4:	a6 87       	std	Z+14, r26	; 0x0e
     bb6:	b7 87       	std	Z+15, r27	; 0x0f
     bb8:	49 97       	sbiw	r24, 0x19	; 25
     bba:	a1 05       	cpc	r26, r1
     bbc:	b1 05       	cpc	r27, r1
     bbe:	08 f4       	brcc	.+2      	; 0xbc2 <__vector_23+0x80>
     bc0:	99 c0       	rjmp	.+306    	; 0xcf4 <__vector_23+0x1b2>
		Timer5_1.seconds = 0;
     bc2:	10 92 35 02 	sts	0x0235, r1	; 0x800235 <Timer5_1+0xc>
     bc6:	10 92 36 02 	sts	0x0236, r1	; 0x800236 <Timer5_1+0xd>
     bca:	10 92 37 02 	sts	0x0237, r1	; 0x800237 <Timer5_1+0xe>
     bce:	10 92 38 02 	sts	0x0238, r1	; 0x800238 <Timer5_1+0xf>
		if(RPM_1.setRPM <= 10){
     bd2:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <RPM_1+0x2>
     bd6:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <RPM_1+0x3>
     bda:	0b 97       	sbiw	r24, 0x0b	; 11
     bdc:	4c f4       	brge	.+18     	; 0xbf0 <__vector_23+0xae>
			setPwm(0);
     bde:	60 e0       	ldi	r22, 0x00	; 0
     be0:	70 e0       	ldi	r23, 0x00	; 0
     be2:	cb 01       	movw	r24, r22
     be4:	f1 da       	rcall	.-2590   	; 0x1c8 <setPwm>
			RPM_1.currentRPM=0;
     be6:	10 92 01 02 	sts	0x0201, r1	; 0x800201 <RPM_1+0x1>
     bea:	10 92 00 02 	sts	0x0200, r1	; 0x800200 <RPM_1>
     bee:	82 c0       	rjmp	.+260    	; 0xcf4 <__vector_23+0x1b2>
		} else {
			
		//send_int_Uart(RPM_1.currentRPM);
		
			setPwm(PWM4C.pwmValue += (RPM_1.setRPM - RPM_1.currentRPM) * 0.001);
     bf0:	c0 e0       	ldi	r28, 0x00	; 0
     bf2:	d2 e0       	ldi	r29, 0x02	; 2
     bf4:	6a 81       	ldd	r22, Y+2	; 0x02
     bf6:	7b 81       	ldd	r23, Y+3	; 0x03
     bf8:	88 81       	ld	r24, Y
     bfa:	99 81       	ldd	r25, Y+1	; 0x01
     bfc:	08 e0       	ldi	r16, 0x08	; 8
     bfe:	12 e0       	ldi	r17, 0x02	; 2
     c00:	f8 01       	movw	r30, r16
     c02:	c2 80       	ldd	r12, Z+2	; 0x02
     c04:	d3 80       	ldd	r13, Z+3	; 0x03
     c06:	e4 80       	ldd	r14, Z+4	; 0x04
     c08:	f5 80       	ldd	r15, Z+5	; 0x05
     c0a:	68 1b       	sub	r22, r24
     c0c:	79 0b       	sbc	r23, r25
     c0e:	07 2e       	mov	r0, r23
     c10:	00 0c       	add	r0, r0
     c12:	88 0b       	sbc	r24, r24
     c14:	99 0b       	sbc	r25, r25
     c16:	19 d2       	rcall	.+1074   	; 0x104a <__floatsisf>
     c18:	2f e6       	ldi	r18, 0x6F	; 111
     c1a:	32 e1       	ldi	r19, 0x12	; 18
     c1c:	43 e8       	ldi	r20, 0x83	; 131
     c1e:	5a e3       	ldi	r21, 0x3A	; 58
     c20:	02 d3       	rcall	.+1540   	; 0x1226 <__mulsf3>
     c22:	a7 01       	movw	r20, r14
     c24:	96 01       	movw	r18, r12
     c26:	7b d1       	rcall	.+758    	; 0xf1e <__addsf3>
     c28:	f8 01       	movw	r30, r16
     c2a:	62 83       	std	Z+2, r22	; 0x02
     c2c:	73 83       	std	Z+3, r23	; 0x03
     c2e:	84 83       	std	Z+4, r24	; 0x04
     c30:	95 83       	std	Z+5, r25	; 0x05
     c32:	ca da       	rcall	.-2668   	; 0x1c8 <setPwm>
			
			if (RPM_1.currentRPM < RPM_1.setRPM)
     c34:	28 81       	ld	r18, Y
     c36:	39 81       	ldd	r19, Y+1	; 0x01
     c38:	8a 81       	ldd	r24, Y+2	; 0x02
     c3a:	9b 81       	ldd	r25, Y+3	; 0x03
     c3c:	28 17       	cp	r18, r24
     c3e:	39 07       	cpc	r19, r25
     c40:	5c f5       	brge	.+86     	; 0xc98 <__vector_23+0x156>
			{
				setPwm(PWM4C.pwmValue += (abs(RPM_1.setRPM - RPM_1.currentRPM)) * 0.0005);
     c42:	8a 81       	ldd	r24, Y+2	; 0x02
     c44:	9b 81       	ldd	r25, Y+3	; 0x03
     c46:	28 81       	ld	r18, Y
     c48:	39 81       	ldd	r19, Y+1	; 0x01
     c4a:	c0 90 0a 02 	lds	r12, 0x020A	; 0x80020a <PWM4C+0x2>
     c4e:	d0 90 0b 02 	lds	r13, 0x020B	; 0x80020b <PWM4C+0x3>
     c52:	e0 90 0c 02 	lds	r14, 0x020C	; 0x80020c <PWM4C+0x4>
     c56:	f0 90 0d 02 	lds	r15, 0x020D	; 0x80020d <PWM4C+0x5>
     c5a:	82 1b       	sub	r24, r18
     c5c:	93 0b       	sbc	r25, r19
     c5e:	bc 01       	movw	r22, r24
     c60:	22 f4       	brpl	.+8      	; 0xc6a <__vector_23+0x128>
     c62:	66 27       	eor	r22, r22
     c64:	77 27       	eor	r23, r23
     c66:	68 1b       	sub	r22, r24
     c68:	79 0b       	sbc	r23, r25
     c6a:	07 2e       	mov	r0, r23
     c6c:	00 0c       	add	r0, r0
     c6e:	88 0b       	sbc	r24, r24
     c70:	99 0b       	sbc	r25, r25
     c72:	eb d1       	rcall	.+982    	; 0x104a <__floatsisf>
     c74:	2f e6       	ldi	r18, 0x6F	; 111
     c76:	32 e1       	ldi	r19, 0x12	; 18
     c78:	43 e0       	ldi	r20, 0x03	; 3
     c7a:	5a e3       	ldi	r21, 0x3A	; 58
     c7c:	d4 d2       	rcall	.+1448   	; 0x1226 <__mulsf3>
     c7e:	a7 01       	movw	r20, r14
     c80:	96 01       	movw	r18, r12
     c82:	4d d1       	rcall	.+666    	; 0xf1e <__addsf3>
     c84:	60 93 0a 02 	sts	0x020A, r22	; 0x80020a <PWM4C+0x2>
     c88:	70 93 0b 02 	sts	0x020B, r23	; 0x80020b <PWM4C+0x3>
     c8c:	80 93 0c 02 	sts	0x020C, r24	; 0x80020c <PWM4C+0x4>
     c90:	90 93 0d 02 	sts	0x020D, r25	; 0x80020d <PWM4C+0x5>
     c94:	99 da       	rcall	.-2766   	; 0x1c8 <setPwm>
     c96:	2e c0       	rjmp	.+92     	; 0xcf4 <__vector_23+0x1b2>
			}
			else
			{
				setPwm(PWM4C.pwmValue -= (abs(RPM_1.setRPM - RPM_1.currentRPM)) * 0.0005);
     c98:	e0 e0       	ldi	r30, 0x00	; 0
     c9a:	f2 e0       	ldi	r31, 0x02	; 2
     c9c:	82 81       	ldd	r24, Z+2	; 0x02
     c9e:	93 81       	ldd	r25, Z+3	; 0x03
     ca0:	20 81       	ld	r18, Z
     ca2:	31 81       	ldd	r19, Z+1	; 0x01
     ca4:	c0 90 0a 02 	lds	r12, 0x020A	; 0x80020a <PWM4C+0x2>
     ca8:	d0 90 0b 02 	lds	r13, 0x020B	; 0x80020b <PWM4C+0x3>
     cac:	e0 90 0c 02 	lds	r14, 0x020C	; 0x80020c <PWM4C+0x4>
     cb0:	f0 90 0d 02 	lds	r15, 0x020D	; 0x80020d <PWM4C+0x5>
     cb4:	82 1b       	sub	r24, r18
     cb6:	93 0b       	sbc	r25, r19
     cb8:	bc 01       	movw	r22, r24
     cba:	22 f4       	brpl	.+8      	; 0xcc4 <__vector_23+0x182>
     cbc:	66 27       	eor	r22, r22
     cbe:	77 27       	eor	r23, r23
     cc0:	68 1b       	sub	r22, r24
     cc2:	79 0b       	sbc	r23, r25
     cc4:	07 2e       	mov	r0, r23
     cc6:	00 0c       	add	r0, r0
     cc8:	88 0b       	sbc	r24, r24
     cca:	99 0b       	sbc	r25, r25
     ccc:	be d1       	rcall	.+892    	; 0x104a <__floatsisf>
     cce:	2f e6       	ldi	r18, 0x6F	; 111
     cd0:	32 e1       	ldi	r19, 0x12	; 18
     cd2:	43 e0       	ldi	r20, 0x03	; 3
     cd4:	5a e3       	ldi	r21, 0x3A	; 58
     cd6:	a7 d2       	rcall	.+1358   	; 0x1226 <__mulsf3>
     cd8:	9b 01       	movw	r18, r22
     cda:	ac 01       	movw	r20, r24
     cdc:	c7 01       	movw	r24, r14
     cde:	b6 01       	movw	r22, r12
     ce0:	1d d1       	rcall	.+570    	; 0xf1c <__subsf3>
     ce2:	60 93 0a 02 	sts	0x020A, r22	; 0x80020a <PWM4C+0x2>
     ce6:	70 93 0b 02 	sts	0x020B, r23	; 0x80020b <PWM4C+0x3>
     cea:	80 93 0c 02 	sts	0x020C, r24	; 0x80020c <PWM4C+0x4>
     cee:	90 93 0d 02 	sts	0x020D, r25	; 0x80020d <PWM4C+0x5>
     cf2:	6a da       	rcall	.-2860   	; 0x1c8 <setPwm>
			}
		}
	}
}
     cf4:	ff 91       	pop	r31
     cf6:	ef 91       	pop	r30
     cf8:	df 91       	pop	r29
     cfa:	cf 91       	pop	r28
     cfc:	bf 91       	pop	r27
     cfe:	af 91       	pop	r26
     d00:	9f 91       	pop	r25
     d02:	8f 91       	pop	r24
     d04:	7f 91       	pop	r23
     d06:	6f 91       	pop	r22
     d08:	5f 91       	pop	r21
     d0a:	4f 91       	pop	r20
     d0c:	3f 91       	pop	r19
     d0e:	2f 91       	pop	r18
     d10:	1f 91       	pop	r17
     d12:	0f 91       	pop	r16
     d14:	ff 90       	pop	r15
     d16:	ef 90       	pop	r14
     d18:	df 90       	pop	r13
     d1a:	cf 90       	pop	r12
     d1c:	0f 90       	pop	r0
     d1e:	0b be       	out	0x3b, r0	; 59
     d20:	0f 90       	pop	r0
     d22:	0f be       	out	0x3f, r0	; 63
     d24:	0f 90       	pop	r0
     d26:	1f 90       	pop	r1
     d28:	18 95       	reti

00000d2a <__vector_25>:


ISR (USART0_RX_vect)
{
     d2a:	1f 92       	push	r1
     d2c:	0f 92       	push	r0
     d2e:	0f b6       	in	r0, 0x3f	; 63
     d30:	0f 92       	push	r0
     d32:	11 24       	eor	r1, r1
     d34:	0b b6       	in	r0, 0x3b	; 59
     d36:	0f 92       	push	r0
     d38:	8f 93       	push	r24
     d3a:	af 93       	push	r26
     d3c:	bf 93       	push	r27
     d3e:	ef 93       	push	r30
     d40:	ff 93       	push	r31
	//cli();
	//TIMSK0 &= ~(1 << TOIE0);
	UART0.data_in[UART0.dataCount] = UDR0;
     d42:	ad e3       	ldi	r26, 0x3D	; 61
     d44:	b2 e0       	ldi	r27, 0x02	; 2
     d46:	d5 96       	adiw	r26, 0x35	; 53
     d48:	ec 91       	ld	r30, X
     d4a:	d5 97       	sbiw	r26, 0x35	; 53
     d4c:	f0 e0       	ldi	r31, 0x00	; 0
     d4e:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
     d52:	e3 5c       	subi	r30, 0xC3	; 195
     d54:	fd 4f       	sbci	r31, 0xFD	; 253
     d56:	80 83       	st	Z, r24
	if(UART0.data_in[UART0.dataCount] == '\n') {
     d58:	d5 96       	adiw	r26, 0x35	; 53
     d5a:	ec 91       	ld	r30, X
     d5c:	f0 e0       	ldi	r31, 0x00	; 0
     d5e:	e3 5c       	subi	r30, 0xC3	; 195
     d60:	fd 4f       	sbci	r31, 0xFD	; 253
     d62:	80 81       	ld	r24, Z
     d64:	8a 30       	cpi	r24, 0x0A	; 10
     d66:	31 f4       	brne	.+12     	; 0xd74 <__vector_25+0x4a>
		UART0.dataCount = 0;
     d68:	10 92 72 02 	sts	0x0272, r1	; 0x800272 <UART0+0x35>
		sendinComands = 1;
     d6c:	81 e0       	ldi	r24, 0x01	; 1
     d6e:	80 93 28 02 	sts	0x0228, r24	; 0x800228 <sendinComands>
     d72:	09 c0       	rjmp	.+18     	; 0xd86 <__vector_25+0x5c>
		//sei();
		//TIMSK0 = (1 << TOIE0);
		//UART0.dataCount = 0;
		//UART0.sendingTrue=1;
	} else {
		if(++UART0.dataCount >= UART_data_in_length){
     d74:	ed e3       	ldi	r30, 0x3D	; 61
     d76:	f2 e0       	ldi	r31, 0x02	; 2
     d78:	85 a9       	ldd	r24, Z+53	; 0x35
     d7a:	8f 5f       	subi	r24, 0xFF	; 255
     d7c:	85 ab       	std	Z+53, r24	; 0x35
     d7e:	8d 32       	cpi	r24, 0x2D	; 45
     d80:	10 f0       	brcs	.+4      	; 0xd86 <__vector_25+0x5c>
			 UART0.dataCount = 0;
     d82:	10 92 72 02 	sts	0x0272, r1	; 0x800272 <UART0+0x35>
		} 
		//++UART0.dataCount;
	}
}
     d86:	ff 91       	pop	r31
     d88:	ef 91       	pop	r30
     d8a:	bf 91       	pop	r27
     d8c:	af 91       	pop	r26
     d8e:	8f 91       	pop	r24
     d90:	0f 90       	pop	r0
     d92:	0b be       	out	0x3b, r0	; 59
     d94:	0f 90       	pop	r0
     d96:	0f be       	out	0x3f, r0	; 63
     d98:	0f 90       	pop	r0
     d9a:	1f 90       	pop	r1
     d9c:	18 95       	reti

00000d9e <launch_timer_1>:

#include <avr/io.h>

static void reset_timer1_to_starting_value(){
	//TCNT1 = 0; // with such a prescaler and starting TCNT3 we get 0.5HZ
	TCNT1 = 34286; // with such a prescaler and starting TCNT3 we get 2HZ
     d9e:	8e ee       	ldi	r24, 0xEE	; 238
     da0:	95 e8       	ldi	r25, 0x85	; 133
     da2:	90 93 85 00 	sts	0x0085, r25	; 0x800085 <__TEXT_REGION_LENGTH__+0x700085>
     da6:	80 93 84 00 	sts	0x0084, r24	; 0x800084 <__TEXT_REGION_LENGTH__+0x700084>
	//TCNT1 = 17143; //with such a prescaler and starting TCNT3 we get 1HZ
}

void launch_timer_1(){
	reset_timer1_to_starting_value();
	TIMSK1 |= (1 << TOIE1);
     daa:	ef e6       	ldi	r30, 0x6F	; 111
     dac:	f0 e0       	ldi	r31, 0x00	; 0
     dae:	80 81       	ld	r24, Z
     db0:	81 60       	ori	r24, 0x01	; 1
     db2:	80 83       	st	Z, r24
	TCCR1B |= (1 << CS12);
     db4:	e1 e8       	ldi	r30, 0x81	; 129
     db6:	f0 e0       	ldi	r31, 0x00	; 0
     db8:	80 81       	ld	r24, Z
     dba:	84 60       	ori	r24, 0x04	; 4
     dbc:	80 83       	st	Z, r24
     dbe:	08 95       	ret

00000dc0 <stop_timer_1>:
}

void stop_timer_1(){
	TIMSK1 &= ~(1 << TOIE1);
     dc0:	ef e6       	ldi	r30, 0x6F	; 111
     dc2:	f0 e0       	ldi	r31, 0x00	; 0
     dc4:	80 81       	ld	r24, Z
     dc6:	8e 7f       	andi	r24, 0xFE	; 254
     dc8:	80 83       	st	Z, r24
	TCCR1B &= ~(1 << CS12);
     dca:	e1 e8       	ldi	r30, 0x81	; 129
     dcc:	f0 e0       	ldi	r31, 0x00	; 0
     dce:	80 81       	ld	r24, Z
     dd0:	8b 7f       	andi	r24, 0xFB	; 251
     dd2:	80 83       	st	Z, r24
     dd4:	08 95       	ret

00000dd6 <launch_timer_3>:
#include <avr/io.h>

static void reset_timer3_to_starting_value(){
	//TCNT3 = 0; // with such a prescaler and starting TCNT3 we get 0.5HZ
	//TCNT3 = 17143; //with such a prescaler and starting TCNT3 we get 1HZ
	TCNT3 = 34286; // with such a prescaler and starting TCNT3 we get 2HZ
     dd6:	8e ee       	ldi	r24, 0xEE	; 238
     dd8:	95 e8       	ldi	r25, 0x85	; 133
     dda:	90 93 95 00 	sts	0x0095, r25	; 0x800095 <__TEXT_REGION_LENGTH__+0x700095>
     dde:	80 93 94 00 	sts	0x0094, r24	; 0x800094 <__TEXT_REGION_LENGTH__+0x700094>
}

void launch_timer_3(){
	reset_timer3_to_starting_value();
	TIMSK3 |= (1 << TOIE3);
     de2:	e1 e7       	ldi	r30, 0x71	; 113
     de4:	f0 e0       	ldi	r31, 0x00	; 0
     de6:	80 81       	ld	r24, Z
     de8:	81 60       	ori	r24, 0x01	; 1
     dea:	80 83       	st	Z, r24
	TCCR3B |= (1 << CS32);
     dec:	e1 e9       	ldi	r30, 0x91	; 145
     dee:	f0 e0       	ldi	r31, 0x00	; 0
     df0:	80 81       	ld	r24, Z
     df2:	84 60       	ori	r24, 0x04	; 4
     df4:	80 83       	st	Z, r24
     df6:	08 95       	ret

00000df8 <stop_timer_3>:
}

void stop_timer_3(){
	TIMSK3 &= ~(1 << TOIE3);
     df8:	e1 e7       	ldi	r30, 0x71	; 113
     dfa:	f0 e0       	ldi	r31, 0x00	; 0
     dfc:	80 81       	ld	r24, Z
     dfe:	8e 7f       	andi	r24, 0xFE	; 254
     e00:	80 83       	st	Z, r24
	TCCR3B &= ~(1 << CS32);
     e02:	e1 e9       	ldi	r30, 0x91	; 145
     e04:	f0 e0       	ldi	r31, 0x00	; 0
     e06:	80 81       	ld	r24, Z
     e08:	8b 7f       	andi	r24, 0xFB	; 251
     e0a:	80 83       	st	Z, r24
     e0c:	08 95       	ret

00000e0e <openValve1>:
 *  Author: DR
 */ 
#include <avr/io.h>

static void openValve1(){
	DDRF |= (1 << DDF0);
     e0e:	80 9a       	sbi	0x10, 0	; 16
	PORTF |= (1 << PF0);
     e10:	88 9a       	sbi	0x11, 0	; 17
     e12:	08 95       	ret

00000e14 <openValve2>:
}

static void openValve2(){
	DDRF |= (1 << DDF1);
     e14:	81 9a       	sbi	0x10, 1	; 16
	PORTF |= (1 << PF1);
     e16:	89 9a       	sbi	0x11, 1	; 17
     e18:	08 95       	ret

00000e1a <openValve3>:
}

static void openValve3(){
	DDRF |= (1 << DDF5);
     e1a:	85 9a       	sbi	0x10, 5	; 16
	PORTF |= (1 << PF5);
     e1c:	8d 9a       	sbi	0x11, 5	; 17
     e1e:	08 95       	ret

00000e20 <openValve4>:
}

static void openValve4(){
	DDRK |= (1 << DDK0);
     e20:	e7 e0       	ldi	r30, 0x07	; 7
     e22:	f1 e0       	ldi	r31, 0x01	; 1
     e24:	80 81       	ld	r24, Z
     e26:	81 60       	ori	r24, 0x01	; 1
     e28:	80 83       	st	Z, r24
	PORTK |= (1 << PK0);
     e2a:	e8 e0       	ldi	r30, 0x08	; 8
     e2c:	f1 e0       	ldi	r31, 0x01	; 1
     e2e:	80 81       	ld	r24, Z
     e30:	81 60       	ori	r24, 0x01	; 1
     e32:	80 83       	st	Z, r24
     e34:	08 95       	ret

00000e36 <openValve5>:
}

static void openValve5(){
	DDRK |= (1 << DDK6);
     e36:	e7 e0       	ldi	r30, 0x07	; 7
     e38:	f1 e0       	ldi	r31, 0x01	; 1
     e3a:	80 81       	ld	r24, Z
     e3c:	80 64       	ori	r24, 0x40	; 64
     e3e:	80 83       	st	Z, r24
	PORTK |= (1 << PF6);
     e40:	e8 e0       	ldi	r30, 0x08	; 8
     e42:	f1 e0       	ldi	r31, 0x01	; 1
     e44:	80 81       	ld	r24, Z
     e46:	80 64       	ori	r24, 0x40	; 64
     e48:	80 83       	st	Z, r24
     e4a:	08 95       	ret

00000e4c <openValve6>:
}

static void openValve6(){
	DDRK |= (1 << DDK7);
     e4c:	e7 e0       	ldi	r30, 0x07	; 7
     e4e:	f1 e0       	ldi	r31, 0x01	; 1
     e50:	80 81       	ld	r24, Z
     e52:	80 68       	ori	r24, 0x80	; 128
     e54:	80 83       	st	Z, r24
	PORTK |= (1 << PK7);
     e56:	e8 e0       	ldi	r30, 0x08	; 8
     e58:	f1 e0       	ldi	r31, 0x01	; 1
     e5a:	80 81       	ld	r24, Z
     e5c:	80 68       	ori	r24, 0x80	; 128
     e5e:	80 83       	st	Z, r24
     e60:	08 95       	ret

00000e62 <closeValve1>:
}

static void closeValve1(){
	DDRF &= ~(1 << DDF0);
     e62:	80 98       	cbi	0x10, 0	; 16
	PORTF &= ~(1 << PF0);
     e64:	88 98       	cbi	0x11, 0	; 17
     e66:	08 95       	ret

00000e68 <closeValve2>:
}

static void closeValve2(){
	DDRF &= ~(1 << DDF1);
     e68:	81 98       	cbi	0x10, 1	; 16
	PORTF &= ~(1 << PF1);
     e6a:	89 98       	cbi	0x11, 1	; 17
     e6c:	08 95       	ret

00000e6e <closeValve3>:
}

static void closeValve3(){
	DDRF &= ~(1 << DDF5);
     e6e:	85 98       	cbi	0x10, 5	; 16
	PORTF &= ~(1 << PF5);
     e70:	8d 98       	cbi	0x11, 5	; 17
     e72:	08 95       	ret

00000e74 <closeValve4>:
}

static void closeValve4(){
	DDRK &= ~(1 << DDK0);
     e74:	e7 e0       	ldi	r30, 0x07	; 7
     e76:	f1 e0       	ldi	r31, 0x01	; 1
     e78:	80 81       	ld	r24, Z
     e7a:	8e 7f       	andi	r24, 0xFE	; 254
     e7c:	80 83       	st	Z, r24
	PORTK &= ~(1 << PK0);
     e7e:	e8 e0       	ldi	r30, 0x08	; 8
     e80:	f1 e0       	ldi	r31, 0x01	; 1
     e82:	80 81       	ld	r24, Z
     e84:	8e 7f       	andi	r24, 0xFE	; 254
     e86:	80 83       	st	Z, r24
     e88:	08 95       	ret

00000e8a <closeValve5>:
}

static void closeValve5(){
	DDRK &= ~(1 << DDK6);
     e8a:	e7 e0       	ldi	r30, 0x07	; 7
     e8c:	f1 e0       	ldi	r31, 0x01	; 1
     e8e:	80 81       	ld	r24, Z
     e90:	8f 7b       	andi	r24, 0xBF	; 191
     e92:	80 83       	st	Z, r24
	PORTK &= ~(1 << PF6);
     e94:	e8 e0       	ldi	r30, 0x08	; 8
     e96:	f1 e0       	ldi	r31, 0x01	; 1
     e98:	80 81       	ld	r24, Z
     e9a:	8f 7b       	andi	r24, 0xBF	; 191
     e9c:	80 83       	st	Z, r24
     e9e:	08 95       	ret

00000ea0 <closeValve6>:
}

static void closeValve6(){
	DDRK &= ~(1 << DDK7);
     ea0:	e7 e0       	ldi	r30, 0x07	; 7
     ea2:	f1 e0       	ldi	r31, 0x01	; 1
     ea4:	80 81       	ld	r24, Z
     ea6:	8f 77       	andi	r24, 0x7F	; 127
     ea8:	80 83       	st	Z, r24
	PORTK &= ~(1 << PK7);
     eaa:	e8 e0       	ldi	r30, 0x08	; 8
     eac:	f1 e0       	ldi	r31, 0x01	; 1
     eae:	80 81       	ld	r24, Z
     eb0:	8f 77       	andi	r24, 0x7F	; 127
     eb2:	80 83       	st	Z, r24
     eb4:	08 95       	ret

00000eb6 <initValves>:
	void (*closeV5)();
	void (*closeV6)();
} VALVES;

int initValves(void){
	VALVES.openV1 = openValve1;
     eb6:	e4 e7       	ldi	r30, 0x74	; 116
     eb8:	f2 e0       	ldi	r31, 0x02	; 2
     eba:	87 e0       	ldi	r24, 0x07	; 7
     ebc:	97 e0       	ldi	r25, 0x07	; 7
     ebe:	91 83       	std	Z+1, r25	; 0x01
     ec0:	80 83       	st	Z, r24
	VALVES.openV2 = openValve2;
     ec2:	8a e0       	ldi	r24, 0x0A	; 10
     ec4:	97 e0       	ldi	r25, 0x07	; 7
     ec6:	93 83       	std	Z+3, r25	; 0x03
     ec8:	82 83       	std	Z+2, r24	; 0x02
	VALVES.openV3 = openValve3;
     eca:	8d e0       	ldi	r24, 0x0D	; 13
     ecc:	97 e0       	ldi	r25, 0x07	; 7
     ece:	95 83       	std	Z+5, r25	; 0x05
     ed0:	84 83       	std	Z+4, r24	; 0x04
	VALVES.openV4 = openValve4;
     ed2:	80 e1       	ldi	r24, 0x10	; 16
     ed4:	97 e0       	ldi	r25, 0x07	; 7
     ed6:	97 83       	std	Z+7, r25	; 0x07
     ed8:	86 83       	std	Z+6, r24	; 0x06
	VALVES.openV5 = openValve5;
     eda:	8b e1       	ldi	r24, 0x1B	; 27
     edc:	97 e0       	ldi	r25, 0x07	; 7
     ede:	91 87       	std	Z+9, r25	; 0x09
     ee0:	80 87       	std	Z+8, r24	; 0x08
	VALVES.openV6 = openValve6;
     ee2:	86 e2       	ldi	r24, 0x26	; 38
     ee4:	97 e0       	ldi	r25, 0x07	; 7
     ee6:	93 87       	std	Z+11, r25	; 0x0b
     ee8:	82 87       	std	Z+10, r24	; 0x0a
	VALVES.closeV1 = closeValve1;
     eea:	81 e3       	ldi	r24, 0x31	; 49
     eec:	97 e0       	ldi	r25, 0x07	; 7
     eee:	95 87       	std	Z+13, r25	; 0x0d
     ef0:	84 87       	std	Z+12, r24	; 0x0c
	VALVES.closeV2 = closeValve2;
     ef2:	84 e3       	ldi	r24, 0x34	; 52
     ef4:	97 e0       	ldi	r25, 0x07	; 7
     ef6:	97 87       	std	Z+15, r25	; 0x0f
     ef8:	86 87       	std	Z+14, r24	; 0x0e
	VALVES.closeV3 = closeValve3;
     efa:	87 e3       	ldi	r24, 0x37	; 55
     efc:	97 e0       	ldi	r25, 0x07	; 7
     efe:	91 8b       	std	Z+17, r25	; 0x11
     f00:	80 8b       	std	Z+16, r24	; 0x10
	VALVES.closeV4 = closeValve4;
     f02:	8a e3       	ldi	r24, 0x3A	; 58
     f04:	97 e0       	ldi	r25, 0x07	; 7
     f06:	93 8b       	std	Z+19, r25	; 0x13
     f08:	82 8b       	std	Z+18, r24	; 0x12
	VALVES.closeV5 = closeValve5;
     f0a:	85 e4       	ldi	r24, 0x45	; 69
     f0c:	97 e0       	ldi	r25, 0x07	; 7
     f0e:	95 8b       	std	Z+21, r25	; 0x15
     f10:	84 8b       	std	Z+20, r24	; 0x14
	VALVES.closeV6 = closeValve6;
     f12:	80 e5       	ldi	r24, 0x50	; 80
     f14:	97 e0       	ldi	r25, 0x07	; 7
     f16:	97 8b       	std	Z+23, r25	; 0x17
     f18:	86 8b       	std	Z+22, r24	; 0x16
}
     f1a:	08 95       	ret

00000f1c <__subsf3>:
     f1c:	50 58       	subi	r21, 0x80	; 128

00000f1e <__addsf3>:
     f1e:	bb 27       	eor	r27, r27
     f20:	aa 27       	eor	r26, r26
     f22:	0e d0       	rcall	.+28     	; 0xf40 <__addsf3x>
     f24:	08 c1       	rjmp	.+528    	; 0x1136 <__fp_round>
     f26:	f9 d0       	rcall	.+498    	; 0x111a <__fp_pscA>
     f28:	30 f0       	brcs	.+12     	; 0xf36 <__addsf3+0x18>
     f2a:	fe d0       	rcall	.+508    	; 0x1128 <__fp_pscB>
     f2c:	20 f0       	brcs	.+8      	; 0xf36 <__addsf3+0x18>
     f2e:	31 f4       	brne	.+12     	; 0xf3c <__addsf3+0x1e>
     f30:	9f 3f       	cpi	r25, 0xFF	; 255
     f32:	11 f4       	brne	.+4      	; 0xf38 <__addsf3+0x1a>
     f34:	1e f4       	brtc	.+6      	; 0xf3c <__addsf3+0x1e>
     f36:	ee c0       	rjmp	.+476    	; 0x1114 <__fp_nan>
     f38:	0e f4       	brtc	.+2      	; 0xf3c <__addsf3+0x1e>
     f3a:	e0 95       	com	r30
     f3c:	e7 fb       	bst	r30, 7
     f3e:	e4 c0       	rjmp	.+456    	; 0x1108 <__fp_inf>

00000f40 <__addsf3x>:
     f40:	e9 2f       	mov	r30, r25
     f42:	0a d1       	rcall	.+532    	; 0x1158 <__fp_split3>
     f44:	80 f3       	brcs	.-32     	; 0xf26 <__addsf3+0x8>
     f46:	ba 17       	cp	r27, r26
     f48:	62 07       	cpc	r22, r18
     f4a:	73 07       	cpc	r23, r19
     f4c:	84 07       	cpc	r24, r20
     f4e:	95 07       	cpc	r25, r21
     f50:	18 f0       	brcs	.+6      	; 0xf58 <__addsf3x+0x18>
     f52:	71 f4       	brne	.+28     	; 0xf70 <__addsf3x+0x30>
     f54:	9e f5       	brtc	.+102    	; 0xfbc <__addsf3x+0x7c>
     f56:	22 c1       	rjmp	.+580    	; 0x119c <__fp_zero>
     f58:	0e f4       	brtc	.+2      	; 0xf5c <__addsf3x+0x1c>
     f5a:	e0 95       	com	r30
     f5c:	0b 2e       	mov	r0, r27
     f5e:	ba 2f       	mov	r27, r26
     f60:	a0 2d       	mov	r26, r0
     f62:	0b 01       	movw	r0, r22
     f64:	b9 01       	movw	r22, r18
     f66:	90 01       	movw	r18, r0
     f68:	0c 01       	movw	r0, r24
     f6a:	ca 01       	movw	r24, r20
     f6c:	a0 01       	movw	r20, r0
     f6e:	11 24       	eor	r1, r1
     f70:	ff 27       	eor	r31, r31
     f72:	59 1b       	sub	r21, r25
     f74:	99 f0       	breq	.+38     	; 0xf9c <__addsf3x+0x5c>
     f76:	59 3f       	cpi	r21, 0xF9	; 249
     f78:	50 f4       	brcc	.+20     	; 0xf8e <__addsf3x+0x4e>
     f7a:	50 3e       	cpi	r21, 0xE0	; 224
     f7c:	68 f1       	brcs	.+90     	; 0xfd8 <__addsf3x+0x98>
     f7e:	1a 16       	cp	r1, r26
     f80:	f0 40       	sbci	r31, 0x00	; 0
     f82:	a2 2f       	mov	r26, r18
     f84:	23 2f       	mov	r18, r19
     f86:	34 2f       	mov	r19, r20
     f88:	44 27       	eor	r20, r20
     f8a:	58 5f       	subi	r21, 0xF8	; 248
     f8c:	f3 cf       	rjmp	.-26     	; 0xf74 <__addsf3x+0x34>
     f8e:	46 95       	lsr	r20
     f90:	37 95       	ror	r19
     f92:	27 95       	ror	r18
     f94:	a7 95       	ror	r26
     f96:	f0 40       	sbci	r31, 0x00	; 0
     f98:	53 95       	inc	r21
     f9a:	c9 f7       	brne	.-14     	; 0xf8e <__addsf3x+0x4e>
     f9c:	7e f4       	brtc	.+30     	; 0xfbc <__addsf3x+0x7c>
     f9e:	1f 16       	cp	r1, r31
     fa0:	ba 0b       	sbc	r27, r26
     fa2:	62 0b       	sbc	r22, r18
     fa4:	73 0b       	sbc	r23, r19
     fa6:	84 0b       	sbc	r24, r20
     fa8:	ba f0       	brmi	.+46     	; 0xfd8 <__addsf3x+0x98>
     faa:	91 50       	subi	r25, 0x01	; 1
     fac:	a1 f0       	breq	.+40     	; 0xfd6 <__addsf3x+0x96>
     fae:	ff 0f       	add	r31, r31
     fb0:	bb 1f       	adc	r27, r27
     fb2:	66 1f       	adc	r22, r22
     fb4:	77 1f       	adc	r23, r23
     fb6:	88 1f       	adc	r24, r24
     fb8:	c2 f7       	brpl	.-16     	; 0xfaa <__addsf3x+0x6a>
     fba:	0e c0       	rjmp	.+28     	; 0xfd8 <__addsf3x+0x98>
     fbc:	ba 0f       	add	r27, r26
     fbe:	62 1f       	adc	r22, r18
     fc0:	73 1f       	adc	r23, r19
     fc2:	84 1f       	adc	r24, r20
     fc4:	48 f4       	brcc	.+18     	; 0xfd8 <__addsf3x+0x98>
     fc6:	87 95       	ror	r24
     fc8:	77 95       	ror	r23
     fca:	67 95       	ror	r22
     fcc:	b7 95       	ror	r27
     fce:	f7 95       	ror	r31
     fd0:	9e 3f       	cpi	r25, 0xFE	; 254
     fd2:	08 f0       	brcs	.+2      	; 0xfd6 <__addsf3x+0x96>
     fd4:	b3 cf       	rjmp	.-154    	; 0xf3c <__addsf3+0x1e>
     fd6:	93 95       	inc	r25
     fd8:	88 0f       	add	r24, r24
     fda:	08 f0       	brcs	.+2      	; 0xfde <__addsf3x+0x9e>
     fdc:	99 27       	eor	r25, r25
     fde:	ee 0f       	add	r30, r30
     fe0:	97 95       	ror	r25
     fe2:	87 95       	ror	r24
     fe4:	08 95       	ret

00000fe6 <__cmpsf2>:
     fe6:	6c d0       	rcall	.+216    	; 0x10c0 <__fp_cmp>
     fe8:	08 f4       	brcc	.+2      	; 0xfec <__cmpsf2+0x6>
     fea:	81 e0       	ldi	r24, 0x01	; 1
     fec:	08 95       	ret

00000fee <__fixunssfsi>:
     fee:	bc d0       	rcall	.+376    	; 0x1168 <__fp_splitA>
     ff0:	88 f0       	brcs	.+34     	; 0x1014 <__fixunssfsi+0x26>
     ff2:	9f 57       	subi	r25, 0x7F	; 127
     ff4:	90 f0       	brcs	.+36     	; 0x101a <__fixunssfsi+0x2c>
     ff6:	b9 2f       	mov	r27, r25
     ff8:	99 27       	eor	r25, r25
     ffa:	b7 51       	subi	r27, 0x17	; 23
     ffc:	a0 f0       	brcs	.+40     	; 0x1026 <__fixunssfsi+0x38>
     ffe:	d1 f0       	breq	.+52     	; 0x1034 <__fixunssfsi+0x46>
    1000:	66 0f       	add	r22, r22
    1002:	77 1f       	adc	r23, r23
    1004:	88 1f       	adc	r24, r24
    1006:	99 1f       	adc	r25, r25
    1008:	1a f0       	brmi	.+6      	; 0x1010 <__fixunssfsi+0x22>
    100a:	ba 95       	dec	r27
    100c:	c9 f7       	brne	.-14     	; 0x1000 <__fixunssfsi+0x12>
    100e:	12 c0       	rjmp	.+36     	; 0x1034 <__fixunssfsi+0x46>
    1010:	b1 30       	cpi	r27, 0x01	; 1
    1012:	81 f0       	breq	.+32     	; 0x1034 <__fixunssfsi+0x46>
    1014:	c3 d0       	rcall	.+390    	; 0x119c <__fp_zero>
    1016:	b1 e0       	ldi	r27, 0x01	; 1
    1018:	08 95       	ret
    101a:	c0 c0       	rjmp	.+384    	; 0x119c <__fp_zero>
    101c:	67 2f       	mov	r22, r23
    101e:	78 2f       	mov	r23, r24
    1020:	88 27       	eor	r24, r24
    1022:	b8 5f       	subi	r27, 0xF8	; 248
    1024:	39 f0       	breq	.+14     	; 0x1034 <__fixunssfsi+0x46>
    1026:	b9 3f       	cpi	r27, 0xF9	; 249
    1028:	cc f3       	brlt	.-14     	; 0x101c <__fixunssfsi+0x2e>
    102a:	86 95       	lsr	r24
    102c:	77 95       	ror	r23
    102e:	67 95       	ror	r22
    1030:	b3 95       	inc	r27
    1032:	d9 f7       	brne	.-10     	; 0x102a <__fixunssfsi+0x3c>
    1034:	3e f4       	brtc	.+14     	; 0x1044 <__fixunssfsi+0x56>
    1036:	90 95       	com	r25
    1038:	80 95       	com	r24
    103a:	70 95       	com	r23
    103c:	61 95       	neg	r22
    103e:	7f 4f       	sbci	r23, 0xFF	; 255
    1040:	8f 4f       	sbci	r24, 0xFF	; 255
    1042:	9f 4f       	sbci	r25, 0xFF	; 255
    1044:	08 95       	ret

00001046 <__floatunsisf>:
    1046:	e8 94       	clt
    1048:	09 c0       	rjmp	.+18     	; 0x105c <__floatsisf+0x12>

0000104a <__floatsisf>:
    104a:	97 fb       	bst	r25, 7
    104c:	3e f4       	brtc	.+14     	; 0x105c <__floatsisf+0x12>
    104e:	90 95       	com	r25
    1050:	80 95       	com	r24
    1052:	70 95       	com	r23
    1054:	61 95       	neg	r22
    1056:	7f 4f       	sbci	r23, 0xFF	; 255
    1058:	8f 4f       	sbci	r24, 0xFF	; 255
    105a:	9f 4f       	sbci	r25, 0xFF	; 255
    105c:	99 23       	and	r25, r25
    105e:	a9 f0       	breq	.+42     	; 0x108a <__floatsisf+0x40>
    1060:	f9 2f       	mov	r31, r25
    1062:	96 e9       	ldi	r25, 0x96	; 150
    1064:	bb 27       	eor	r27, r27
    1066:	93 95       	inc	r25
    1068:	f6 95       	lsr	r31
    106a:	87 95       	ror	r24
    106c:	77 95       	ror	r23
    106e:	67 95       	ror	r22
    1070:	b7 95       	ror	r27
    1072:	f1 11       	cpse	r31, r1
    1074:	f8 cf       	rjmp	.-16     	; 0x1066 <__floatsisf+0x1c>
    1076:	fa f4       	brpl	.+62     	; 0x10b6 <__floatsisf+0x6c>
    1078:	bb 0f       	add	r27, r27
    107a:	11 f4       	brne	.+4      	; 0x1080 <__floatsisf+0x36>
    107c:	60 ff       	sbrs	r22, 0
    107e:	1b c0       	rjmp	.+54     	; 0x10b6 <__floatsisf+0x6c>
    1080:	6f 5f       	subi	r22, 0xFF	; 255
    1082:	7f 4f       	sbci	r23, 0xFF	; 255
    1084:	8f 4f       	sbci	r24, 0xFF	; 255
    1086:	9f 4f       	sbci	r25, 0xFF	; 255
    1088:	16 c0       	rjmp	.+44     	; 0x10b6 <__floatsisf+0x6c>
    108a:	88 23       	and	r24, r24
    108c:	11 f0       	breq	.+4      	; 0x1092 <__floatsisf+0x48>
    108e:	96 e9       	ldi	r25, 0x96	; 150
    1090:	11 c0       	rjmp	.+34     	; 0x10b4 <__floatsisf+0x6a>
    1092:	77 23       	and	r23, r23
    1094:	21 f0       	breq	.+8      	; 0x109e <__floatsisf+0x54>
    1096:	9e e8       	ldi	r25, 0x8E	; 142
    1098:	87 2f       	mov	r24, r23
    109a:	76 2f       	mov	r23, r22
    109c:	05 c0       	rjmp	.+10     	; 0x10a8 <__floatsisf+0x5e>
    109e:	66 23       	and	r22, r22
    10a0:	71 f0       	breq	.+28     	; 0x10be <__floatsisf+0x74>
    10a2:	96 e8       	ldi	r25, 0x86	; 134
    10a4:	86 2f       	mov	r24, r22
    10a6:	70 e0       	ldi	r23, 0x00	; 0
    10a8:	60 e0       	ldi	r22, 0x00	; 0
    10aa:	2a f0       	brmi	.+10     	; 0x10b6 <__floatsisf+0x6c>
    10ac:	9a 95       	dec	r25
    10ae:	66 0f       	add	r22, r22
    10b0:	77 1f       	adc	r23, r23
    10b2:	88 1f       	adc	r24, r24
    10b4:	da f7       	brpl	.-10     	; 0x10ac <__floatsisf+0x62>
    10b6:	88 0f       	add	r24, r24
    10b8:	96 95       	lsr	r25
    10ba:	87 95       	ror	r24
    10bc:	97 f9       	bld	r25, 7
    10be:	08 95       	ret

000010c0 <__fp_cmp>:
    10c0:	99 0f       	add	r25, r25
    10c2:	00 08       	sbc	r0, r0
    10c4:	55 0f       	add	r21, r21
    10c6:	aa 0b       	sbc	r26, r26
    10c8:	e0 e8       	ldi	r30, 0x80	; 128
    10ca:	fe ef       	ldi	r31, 0xFE	; 254
    10cc:	16 16       	cp	r1, r22
    10ce:	17 06       	cpc	r1, r23
    10d0:	e8 07       	cpc	r30, r24
    10d2:	f9 07       	cpc	r31, r25
    10d4:	c0 f0       	brcs	.+48     	; 0x1106 <__fp_cmp+0x46>
    10d6:	12 16       	cp	r1, r18
    10d8:	13 06       	cpc	r1, r19
    10da:	e4 07       	cpc	r30, r20
    10dc:	f5 07       	cpc	r31, r21
    10de:	98 f0       	brcs	.+38     	; 0x1106 <__fp_cmp+0x46>
    10e0:	62 1b       	sub	r22, r18
    10e2:	73 0b       	sbc	r23, r19
    10e4:	84 0b       	sbc	r24, r20
    10e6:	95 0b       	sbc	r25, r21
    10e8:	39 f4       	brne	.+14     	; 0x10f8 <__fp_cmp+0x38>
    10ea:	0a 26       	eor	r0, r26
    10ec:	61 f0       	breq	.+24     	; 0x1106 <__fp_cmp+0x46>
    10ee:	23 2b       	or	r18, r19
    10f0:	24 2b       	or	r18, r20
    10f2:	25 2b       	or	r18, r21
    10f4:	21 f4       	brne	.+8      	; 0x10fe <__fp_cmp+0x3e>
    10f6:	08 95       	ret
    10f8:	0a 26       	eor	r0, r26
    10fa:	09 f4       	brne	.+2      	; 0x10fe <__fp_cmp+0x3e>
    10fc:	a1 40       	sbci	r26, 0x01	; 1
    10fe:	a6 95       	lsr	r26
    1100:	8f ef       	ldi	r24, 0xFF	; 255
    1102:	81 1d       	adc	r24, r1
    1104:	81 1d       	adc	r24, r1
    1106:	08 95       	ret

00001108 <__fp_inf>:
    1108:	97 f9       	bld	r25, 7
    110a:	9f 67       	ori	r25, 0x7F	; 127
    110c:	80 e8       	ldi	r24, 0x80	; 128
    110e:	70 e0       	ldi	r23, 0x00	; 0
    1110:	60 e0       	ldi	r22, 0x00	; 0
    1112:	08 95       	ret

00001114 <__fp_nan>:
    1114:	9f ef       	ldi	r25, 0xFF	; 255
    1116:	80 ec       	ldi	r24, 0xC0	; 192
    1118:	08 95       	ret

0000111a <__fp_pscA>:
    111a:	00 24       	eor	r0, r0
    111c:	0a 94       	dec	r0
    111e:	16 16       	cp	r1, r22
    1120:	17 06       	cpc	r1, r23
    1122:	18 06       	cpc	r1, r24
    1124:	09 06       	cpc	r0, r25
    1126:	08 95       	ret

00001128 <__fp_pscB>:
    1128:	00 24       	eor	r0, r0
    112a:	0a 94       	dec	r0
    112c:	12 16       	cp	r1, r18
    112e:	13 06       	cpc	r1, r19
    1130:	14 06       	cpc	r1, r20
    1132:	05 06       	cpc	r0, r21
    1134:	08 95       	ret

00001136 <__fp_round>:
    1136:	09 2e       	mov	r0, r25
    1138:	03 94       	inc	r0
    113a:	00 0c       	add	r0, r0
    113c:	11 f4       	brne	.+4      	; 0x1142 <__fp_round+0xc>
    113e:	88 23       	and	r24, r24
    1140:	52 f0       	brmi	.+20     	; 0x1156 <__fp_round+0x20>
    1142:	bb 0f       	add	r27, r27
    1144:	40 f4       	brcc	.+16     	; 0x1156 <__fp_round+0x20>
    1146:	bf 2b       	or	r27, r31
    1148:	11 f4       	brne	.+4      	; 0x114e <__fp_round+0x18>
    114a:	60 ff       	sbrs	r22, 0
    114c:	04 c0       	rjmp	.+8      	; 0x1156 <__fp_round+0x20>
    114e:	6f 5f       	subi	r22, 0xFF	; 255
    1150:	7f 4f       	sbci	r23, 0xFF	; 255
    1152:	8f 4f       	sbci	r24, 0xFF	; 255
    1154:	9f 4f       	sbci	r25, 0xFF	; 255
    1156:	08 95       	ret

00001158 <__fp_split3>:
    1158:	57 fd       	sbrc	r21, 7
    115a:	90 58       	subi	r25, 0x80	; 128
    115c:	44 0f       	add	r20, r20
    115e:	55 1f       	adc	r21, r21
    1160:	59 f0       	breq	.+22     	; 0x1178 <__fp_splitA+0x10>
    1162:	5f 3f       	cpi	r21, 0xFF	; 255
    1164:	71 f0       	breq	.+28     	; 0x1182 <__fp_splitA+0x1a>
    1166:	47 95       	ror	r20

00001168 <__fp_splitA>:
    1168:	88 0f       	add	r24, r24
    116a:	97 fb       	bst	r25, 7
    116c:	99 1f       	adc	r25, r25
    116e:	61 f0       	breq	.+24     	; 0x1188 <__fp_splitA+0x20>
    1170:	9f 3f       	cpi	r25, 0xFF	; 255
    1172:	79 f0       	breq	.+30     	; 0x1192 <__fp_splitA+0x2a>
    1174:	87 95       	ror	r24
    1176:	08 95       	ret
    1178:	12 16       	cp	r1, r18
    117a:	13 06       	cpc	r1, r19
    117c:	14 06       	cpc	r1, r20
    117e:	55 1f       	adc	r21, r21
    1180:	f2 cf       	rjmp	.-28     	; 0x1166 <__fp_split3+0xe>
    1182:	46 95       	lsr	r20
    1184:	f1 df       	rcall	.-30     	; 0x1168 <__fp_splitA>
    1186:	08 c0       	rjmp	.+16     	; 0x1198 <__fp_splitA+0x30>
    1188:	16 16       	cp	r1, r22
    118a:	17 06       	cpc	r1, r23
    118c:	18 06       	cpc	r1, r24
    118e:	99 1f       	adc	r25, r25
    1190:	f1 cf       	rjmp	.-30     	; 0x1174 <__fp_splitA+0xc>
    1192:	86 95       	lsr	r24
    1194:	71 05       	cpc	r23, r1
    1196:	61 05       	cpc	r22, r1
    1198:	08 94       	sec
    119a:	08 95       	ret

0000119c <__fp_zero>:
    119c:	e8 94       	clt

0000119e <__fp_szero>:
    119e:	bb 27       	eor	r27, r27
    11a0:	66 27       	eor	r22, r22
    11a2:	77 27       	eor	r23, r23
    11a4:	cb 01       	movw	r24, r22
    11a6:	97 f9       	bld	r25, 7
    11a8:	08 95       	ret

000011aa <__gesf2>:
    11aa:	8a df       	rcall	.-236    	; 0x10c0 <__fp_cmp>
    11ac:	08 f4       	brcc	.+2      	; 0x11b0 <__gesf2+0x6>
    11ae:	8f ef       	ldi	r24, 0xFF	; 255
    11b0:	08 95       	ret

000011b2 <lrint>:
    11b2:	da df       	rcall	.-76     	; 0x1168 <__fp_splitA>
    11b4:	a8 f1       	brcs	.+106    	; 0x1220 <lrint+0x6e>
    11b6:	9e 57       	subi	r25, 0x7E	; 126
    11b8:	a8 f1       	brcs	.+106    	; 0x1224 <lrint+0x72>
    11ba:	98 51       	subi	r25, 0x18	; 24
    11bc:	60 f0       	brcs	.+24     	; 0x11d6 <lrint+0x24>
    11be:	39 f1       	breq	.+78     	; 0x120e <lrint+0x5c>
    11c0:	98 30       	cpi	r25, 0x08	; 8
    11c2:	70 f5       	brcc	.+92     	; 0x1220 <lrint+0x6e>
    11c4:	09 2e       	mov	r0, r25
    11c6:	99 27       	eor	r25, r25
    11c8:	66 0f       	add	r22, r22
    11ca:	77 1f       	adc	r23, r23
    11cc:	88 1f       	adc	r24, r24
    11ce:	99 1f       	adc	r25, r25
    11d0:	0a 94       	dec	r0
    11d2:	d1 f7       	brne	.-12     	; 0x11c8 <lrint+0x16>
    11d4:	1c c0       	rjmp	.+56     	; 0x120e <lrint+0x5c>
    11d6:	bb 27       	eor	r27, r27
    11d8:	99 3f       	cpi	r25, 0xF9	; 249
    11da:	4c f4       	brge	.+18     	; 0x11ee <lrint+0x3c>
    11dc:	b1 11       	cpse	r27, r1
    11de:	b1 e0       	ldi	r27, 0x01	; 1
    11e0:	b6 2b       	or	r27, r22
    11e2:	67 2f       	mov	r22, r23
    11e4:	78 2f       	mov	r23, r24
    11e6:	88 27       	eor	r24, r24
    11e8:	98 5f       	subi	r25, 0xF8	; 248
    11ea:	b1 f7       	brne	.-20     	; 0x11d8 <lrint+0x26>
    11ec:	08 c0       	rjmp	.+16     	; 0x11fe <lrint+0x4c>
    11ee:	86 95       	lsr	r24
    11f0:	77 95       	ror	r23
    11f2:	67 95       	ror	r22
    11f4:	b7 95       	ror	r27
    11f6:	08 f4       	brcc	.+2      	; 0x11fa <lrint+0x48>
    11f8:	b1 60       	ori	r27, 0x01	; 1
    11fa:	93 95       	inc	r25
    11fc:	c1 f7       	brne	.-16     	; 0x11ee <lrint+0x3c>
    11fe:	bb 0f       	add	r27, r27
    1200:	30 f4       	brcc	.+12     	; 0x120e <lrint+0x5c>
    1202:	11 f4       	brne	.+4      	; 0x1208 <lrint+0x56>
    1204:	60 ff       	sbrs	r22, 0
    1206:	03 c0       	rjmp	.+6      	; 0x120e <lrint+0x5c>
    1208:	6f 5f       	subi	r22, 0xFF	; 255
    120a:	7f 4f       	sbci	r23, 0xFF	; 255
    120c:	8f 4f       	sbci	r24, 0xFF	; 255
    120e:	3e f4       	brtc	.+14     	; 0x121e <lrint+0x6c>
    1210:	90 95       	com	r25
    1212:	80 95       	com	r24
    1214:	70 95       	com	r23
    1216:	61 95       	neg	r22
    1218:	7f 4f       	sbci	r23, 0xFF	; 255
    121a:	8f 4f       	sbci	r24, 0xFF	; 255
    121c:	9f 4f       	sbci	r25, 0xFF	; 255
    121e:	08 95       	ret
    1220:	68 94       	set
    1222:	bd cf       	rjmp	.-134    	; 0x119e <__fp_szero>
    1224:	bb cf       	rjmp	.-138    	; 0x119c <__fp_zero>

00001226 <__mulsf3>:
    1226:	0b d0       	rcall	.+22     	; 0x123e <__mulsf3x>
    1228:	86 cf       	rjmp	.-244    	; 0x1136 <__fp_round>
    122a:	77 df       	rcall	.-274    	; 0x111a <__fp_pscA>
    122c:	28 f0       	brcs	.+10     	; 0x1238 <__mulsf3+0x12>
    122e:	7c df       	rcall	.-264    	; 0x1128 <__fp_pscB>
    1230:	18 f0       	brcs	.+6      	; 0x1238 <__mulsf3+0x12>
    1232:	95 23       	and	r25, r21
    1234:	09 f0       	breq	.+2      	; 0x1238 <__mulsf3+0x12>
    1236:	68 cf       	rjmp	.-304    	; 0x1108 <__fp_inf>
    1238:	6d cf       	rjmp	.-294    	; 0x1114 <__fp_nan>
    123a:	11 24       	eor	r1, r1
    123c:	b0 cf       	rjmp	.-160    	; 0x119e <__fp_szero>

0000123e <__mulsf3x>:
    123e:	8c df       	rcall	.-232    	; 0x1158 <__fp_split3>
    1240:	a0 f3       	brcs	.-24     	; 0x122a <__mulsf3+0x4>

00001242 <__mulsf3_pse>:
    1242:	95 9f       	mul	r25, r21
    1244:	d1 f3       	breq	.-12     	; 0x123a <__mulsf3+0x14>
    1246:	95 0f       	add	r25, r21
    1248:	50 e0       	ldi	r21, 0x00	; 0
    124a:	55 1f       	adc	r21, r21
    124c:	62 9f       	mul	r22, r18
    124e:	f0 01       	movw	r30, r0
    1250:	72 9f       	mul	r23, r18
    1252:	bb 27       	eor	r27, r27
    1254:	f0 0d       	add	r31, r0
    1256:	b1 1d       	adc	r27, r1
    1258:	63 9f       	mul	r22, r19
    125a:	aa 27       	eor	r26, r26
    125c:	f0 0d       	add	r31, r0
    125e:	b1 1d       	adc	r27, r1
    1260:	aa 1f       	adc	r26, r26
    1262:	64 9f       	mul	r22, r20
    1264:	66 27       	eor	r22, r22
    1266:	b0 0d       	add	r27, r0
    1268:	a1 1d       	adc	r26, r1
    126a:	66 1f       	adc	r22, r22
    126c:	82 9f       	mul	r24, r18
    126e:	22 27       	eor	r18, r18
    1270:	b0 0d       	add	r27, r0
    1272:	a1 1d       	adc	r26, r1
    1274:	62 1f       	adc	r22, r18
    1276:	73 9f       	mul	r23, r19
    1278:	b0 0d       	add	r27, r0
    127a:	a1 1d       	adc	r26, r1
    127c:	62 1f       	adc	r22, r18
    127e:	83 9f       	mul	r24, r19
    1280:	a0 0d       	add	r26, r0
    1282:	61 1d       	adc	r22, r1
    1284:	22 1f       	adc	r18, r18
    1286:	74 9f       	mul	r23, r20
    1288:	33 27       	eor	r19, r19
    128a:	a0 0d       	add	r26, r0
    128c:	61 1d       	adc	r22, r1
    128e:	23 1f       	adc	r18, r19
    1290:	84 9f       	mul	r24, r20
    1292:	60 0d       	add	r22, r0
    1294:	21 1d       	adc	r18, r1
    1296:	82 2f       	mov	r24, r18
    1298:	76 2f       	mov	r23, r22
    129a:	6a 2f       	mov	r22, r26
    129c:	11 24       	eor	r1, r1
    129e:	9f 57       	subi	r25, 0x7F	; 127
    12a0:	50 40       	sbci	r21, 0x00	; 0
    12a2:	8a f0       	brmi	.+34     	; 0x12c6 <__mulsf3_pse+0x84>
    12a4:	e1 f0       	breq	.+56     	; 0x12de <__mulsf3_pse+0x9c>
    12a6:	88 23       	and	r24, r24
    12a8:	4a f0       	brmi	.+18     	; 0x12bc <__mulsf3_pse+0x7a>
    12aa:	ee 0f       	add	r30, r30
    12ac:	ff 1f       	adc	r31, r31
    12ae:	bb 1f       	adc	r27, r27
    12b0:	66 1f       	adc	r22, r22
    12b2:	77 1f       	adc	r23, r23
    12b4:	88 1f       	adc	r24, r24
    12b6:	91 50       	subi	r25, 0x01	; 1
    12b8:	50 40       	sbci	r21, 0x00	; 0
    12ba:	a9 f7       	brne	.-22     	; 0x12a6 <__mulsf3_pse+0x64>
    12bc:	9e 3f       	cpi	r25, 0xFE	; 254
    12be:	51 05       	cpc	r21, r1
    12c0:	70 f0       	brcs	.+28     	; 0x12de <__mulsf3_pse+0x9c>
    12c2:	22 cf       	rjmp	.-444    	; 0x1108 <__fp_inf>
    12c4:	6c cf       	rjmp	.-296    	; 0x119e <__fp_szero>
    12c6:	5f 3f       	cpi	r21, 0xFF	; 255
    12c8:	ec f3       	brlt	.-6      	; 0x12c4 <__mulsf3_pse+0x82>
    12ca:	98 3e       	cpi	r25, 0xE8	; 232
    12cc:	dc f3       	brlt	.-10     	; 0x12c4 <__mulsf3_pse+0x82>
    12ce:	86 95       	lsr	r24
    12d0:	77 95       	ror	r23
    12d2:	67 95       	ror	r22
    12d4:	b7 95       	ror	r27
    12d6:	f7 95       	ror	r31
    12d8:	e7 95       	ror	r30
    12da:	9f 5f       	subi	r25, 0xFF	; 255
    12dc:	c1 f7       	brne	.-16     	; 0x12ce <__mulsf3_pse+0x8c>
    12de:	fe 2b       	or	r31, r30
    12e0:	88 0f       	add	r24, r24
    12e2:	91 1d       	adc	r25, r1
    12e4:	96 95       	lsr	r25
    12e6:	87 95       	ror	r24
    12e8:	97 f9       	bld	r25, 7
    12ea:	08 95       	ret

000012ec <__udivmodsi4>:
    12ec:	a1 e2       	ldi	r26, 0x21	; 33
    12ee:	1a 2e       	mov	r1, r26
    12f0:	aa 1b       	sub	r26, r26
    12f2:	bb 1b       	sub	r27, r27
    12f4:	fd 01       	movw	r30, r26
    12f6:	0d c0       	rjmp	.+26     	; 0x1312 <__udivmodsi4_ep>

000012f8 <__udivmodsi4_loop>:
    12f8:	aa 1f       	adc	r26, r26
    12fa:	bb 1f       	adc	r27, r27
    12fc:	ee 1f       	adc	r30, r30
    12fe:	ff 1f       	adc	r31, r31
    1300:	a2 17       	cp	r26, r18
    1302:	b3 07       	cpc	r27, r19
    1304:	e4 07       	cpc	r30, r20
    1306:	f5 07       	cpc	r31, r21
    1308:	20 f0       	brcs	.+8      	; 0x1312 <__udivmodsi4_ep>
    130a:	a2 1b       	sub	r26, r18
    130c:	b3 0b       	sbc	r27, r19
    130e:	e4 0b       	sbc	r30, r20
    1310:	f5 0b       	sbc	r31, r21

00001312 <__udivmodsi4_ep>:
    1312:	66 1f       	adc	r22, r22
    1314:	77 1f       	adc	r23, r23
    1316:	88 1f       	adc	r24, r24
    1318:	99 1f       	adc	r25, r25
    131a:	1a 94       	dec	r1
    131c:	69 f7       	brne	.-38     	; 0x12f8 <__udivmodsi4_loop>
    131e:	60 95       	com	r22
    1320:	70 95       	com	r23
    1322:	80 95       	com	r24
    1324:	90 95       	com	r25
    1326:	9b 01       	movw	r18, r22
    1328:	ac 01       	movw	r20, r24
    132a:	bd 01       	movw	r22, r26
    132c:	cf 01       	movw	r24, r30
    132e:	08 95       	ret

00001330 <__muluhisi3>:
    1330:	09 d0       	rcall	.+18     	; 0x1344 <__umulhisi3>
    1332:	a5 9f       	mul	r26, r21
    1334:	90 0d       	add	r25, r0
    1336:	b4 9f       	mul	r27, r20
    1338:	90 0d       	add	r25, r0
    133a:	a4 9f       	mul	r26, r20
    133c:	80 0d       	add	r24, r0
    133e:	91 1d       	adc	r25, r1
    1340:	11 24       	eor	r1, r1
    1342:	08 95       	ret

00001344 <__umulhisi3>:
    1344:	a2 9f       	mul	r26, r18
    1346:	b0 01       	movw	r22, r0
    1348:	b3 9f       	mul	r27, r19
    134a:	c0 01       	movw	r24, r0
    134c:	a3 9f       	mul	r26, r19
    134e:	70 0d       	add	r23, r0
    1350:	81 1d       	adc	r24, r1
    1352:	11 24       	eor	r1, r1
    1354:	91 1d       	adc	r25, r1
    1356:	b2 9f       	mul	r27, r18
    1358:	70 0d       	add	r23, r0
    135a:	81 1d       	adc	r24, r1
    135c:	11 24       	eor	r1, r1
    135e:	91 1d       	adc	r25, r1
    1360:	08 95       	ret

00001362 <sscanf>:
    1362:	cf 93       	push	r28
    1364:	df 93       	push	r29
    1366:	cd b7       	in	r28, 0x3d	; 61
    1368:	de b7       	in	r29, 0x3e	; 62
    136a:	2e 97       	sbiw	r28, 0x0e	; 14
    136c:	0f b6       	in	r0, 0x3f	; 63
    136e:	f8 94       	cli
    1370:	de bf       	out	0x3e, r29	; 62
    1372:	0f be       	out	0x3f, r0	; 63
    1374:	cd bf       	out	0x3d, r28	; 61
    1376:	85 e0       	ldi	r24, 0x05	; 5
    1378:	8c 83       	std	Y+4, r24	; 0x04
    137a:	8c 89       	ldd	r24, Y+20	; 0x14
    137c:	9d 89       	ldd	r25, Y+21	; 0x15
    137e:	9a 83       	std	Y+2, r25	; 0x02
    1380:	89 83       	std	Y+1, r24	; 0x01
    1382:	ae 01       	movw	r20, r28
    1384:	48 5e       	subi	r20, 0xE8	; 232
    1386:	5f 4f       	sbci	r21, 0xFF	; 255
    1388:	6e 89       	ldd	r22, Y+22	; 0x16
    138a:	7f 89       	ldd	r23, Y+23	; 0x17
    138c:	ce 01       	movw	r24, r28
    138e:	01 96       	adiw	r24, 0x01	; 1
    1390:	bb d1       	rcall	.+886    	; 0x1708 <vfscanf>
    1392:	2e 96       	adiw	r28, 0x0e	; 14
    1394:	0f b6       	in	r0, 0x3f	; 63
    1396:	f8 94       	cli
    1398:	de bf       	out	0x3e, r29	; 62
    139a:	0f be       	out	0x3f, r0	; 63
    139c:	cd bf       	out	0x3d, r28	; 61
    139e:	df 91       	pop	r29
    13a0:	cf 91       	pop	r28
    13a2:	08 95       	ret

000013a4 <putval>:
    13a4:	20 fd       	sbrc	r18, 0
    13a6:	09 c0       	rjmp	.+18     	; 0x13ba <putval+0x16>
    13a8:	fc 01       	movw	r30, r24
    13aa:	23 fd       	sbrc	r18, 3
    13ac:	05 c0       	rjmp	.+10     	; 0x13b8 <putval+0x14>
    13ae:	22 ff       	sbrs	r18, 2
    13b0:	02 c0       	rjmp	.+4      	; 0x13b6 <putval+0x12>
    13b2:	73 83       	std	Z+3, r23	; 0x03
    13b4:	62 83       	std	Z+2, r22	; 0x02
    13b6:	51 83       	std	Z+1, r21	; 0x01
    13b8:	40 83       	st	Z, r20
    13ba:	08 95       	ret

000013bc <mulacc>:
    13bc:	44 fd       	sbrc	r20, 4
    13be:	17 c0       	rjmp	.+46     	; 0x13ee <mulacc+0x32>
    13c0:	46 fd       	sbrc	r20, 6
    13c2:	17 c0       	rjmp	.+46     	; 0x13f2 <mulacc+0x36>
    13c4:	ab 01       	movw	r20, r22
    13c6:	bc 01       	movw	r22, r24
    13c8:	da 01       	movw	r26, r20
    13ca:	fb 01       	movw	r30, r22
    13cc:	aa 0f       	add	r26, r26
    13ce:	bb 1f       	adc	r27, r27
    13d0:	ee 1f       	adc	r30, r30
    13d2:	ff 1f       	adc	r31, r31
    13d4:	10 94       	com	r1
    13d6:	d1 f7       	brne	.-12     	; 0x13cc <mulacc+0x10>
    13d8:	4a 0f       	add	r20, r26
    13da:	5b 1f       	adc	r21, r27
    13dc:	6e 1f       	adc	r22, r30
    13de:	7f 1f       	adc	r23, r31
    13e0:	cb 01       	movw	r24, r22
    13e2:	ba 01       	movw	r22, r20
    13e4:	66 0f       	add	r22, r22
    13e6:	77 1f       	adc	r23, r23
    13e8:	88 1f       	adc	r24, r24
    13ea:	99 1f       	adc	r25, r25
    13ec:	09 c0       	rjmp	.+18     	; 0x1400 <mulacc+0x44>
    13ee:	33 e0       	ldi	r19, 0x03	; 3
    13f0:	01 c0       	rjmp	.+2      	; 0x13f4 <mulacc+0x38>
    13f2:	34 e0       	ldi	r19, 0x04	; 4
    13f4:	66 0f       	add	r22, r22
    13f6:	77 1f       	adc	r23, r23
    13f8:	88 1f       	adc	r24, r24
    13fa:	99 1f       	adc	r25, r25
    13fc:	31 50       	subi	r19, 0x01	; 1
    13fe:	d1 f7       	brne	.-12     	; 0x13f4 <mulacc+0x38>
    1400:	62 0f       	add	r22, r18
    1402:	71 1d       	adc	r23, r1
    1404:	81 1d       	adc	r24, r1
    1406:	91 1d       	adc	r25, r1
    1408:	08 95       	ret

0000140a <skip_spaces>:
    140a:	0f 93       	push	r16
    140c:	1f 93       	push	r17
    140e:	cf 93       	push	r28
    1410:	df 93       	push	r29
    1412:	8c 01       	movw	r16, r24
    1414:	c8 01       	movw	r24, r16
    1416:	a2 d2       	rcall	.+1348   	; 0x195c <fgetc>
    1418:	ec 01       	movw	r28, r24
    141a:	97 fd       	sbrc	r25, 7
    141c:	06 c0       	rjmp	.+12     	; 0x142a <skip_spaces+0x20>
    141e:	8b d2       	rcall	.+1302   	; 0x1936 <isspace>
    1420:	89 2b       	or	r24, r25
    1422:	c1 f7       	brne	.-16     	; 0x1414 <skip_spaces+0xa>
    1424:	b8 01       	movw	r22, r16
    1426:	ce 01       	movw	r24, r28
    1428:	d7 d2       	rcall	.+1454   	; 0x19d8 <ungetc>
    142a:	ce 01       	movw	r24, r28
    142c:	df 91       	pop	r29
    142e:	cf 91       	pop	r28
    1430:	1f 91       	pop	r17
    1432:	0f 91       	pop	r16
    1434:	08 95       	ret

00001436 <conv_int>:
    1436:	8f 92       	push	r8
    1438:	9f 92       	push	r9
    143a:	af 92       	push	r10
    143c:	bf 92       	push	r11
    143e:	ef 92       	push	r14
    1440:	ff 92       	push	r15
    1442:	0f 93       	push	r16
    1444:	1f 93       	push	r17
    1446:	cf 93       	push	r28
    1448:	df 93       	push	r29
    144a:	8c 01       	movw	r16, r24
    144c:	d6 2f       	mov	r29, r22
    144e:	7a 01       	movw	r14, r20
    1450:	b2 2e       	mov	r11, r18
    1452:	84 d2       	rcall	.+1288   	; 0x195c <fgetc>
    1454:	9c 01       	movw	r18, r24
    1456:	33 27       	eor	r19, r19
    1458:	2b 32       	cpi	r18, 0x2B	; 43
    145a:	31 05       	cpc	r19, r1
    145c:	31 f0       	breq	.+12     	; 0x146a <conv_int+0x34>
    145e:	2d 32       	cpi	r18, 0x2D	; 45
    1460:	31 05       	cpc	r19, r1
    1462:	59 f4       	brne	.+22     	; 0x147a <conv_int+0x44>
    1464:	8b 2d       	mov	r24, r11
    1466:	80 68       	ori	r24, 0x80	; 128
    1468:	b8 2e       	mov	r11, r24
    146a:	d1 50       	subi	r29, 0x01	; 1
    146c:	11 f4       	brne	.+4      	; 0x1472 <conv_int+0x3c>
    146e:	80 e0       	ldi	r24, 0x00	; 0
    1470:	61 c0       	rjmp	.+194    	; 0x1534 <conv_int+0xfe>
    1472:	c8 01       	movw	r24, r16
    1474:	73 d2       	rcall	.+1254   	; 0x195c <fgetc>
    1476:	97 fd       	sbrc	r25, 7
    1478:	fa cf       	rjmp	.-12     	; 0x146e <conv_int+0x38>
    147a:	cb 2d       	mov	r28, r11
    147c:	cd 7f       	andi	r28, 0xFD	; 253
    147e:	2b 2d       	mov	r18, r11
    1480:	20 73       	andi	r18, 0x30	; 48
    1482:	f9 f4       	brne	.+62     	; 0x14c2 <conv_int+0x8c>
    1484:	80 33       	cpi	r24, 0x30	; 48
    1486:	e9 f4       	brne	.+58     	; 0x14c2 <conv_int+0x8c>
    1488:	aa 24       	eor	r10, r10
    148a:	aa 94       	dec	r10
    148c:	ad 0e       	add	r10, r29
    148e:	09 f4       	brne	.+2      	; 0x1492 <conv_int+0x5c>
    1490:	3e c0       	rjmp	.+124    	; 0x150e <conv_int+0xd8>
    1492:	c8 01       	movw	r24, r16
    1494:	63 d2       	rcall	.+1222   	; 0x195c <fgetc>
    1496:	97 fd       	sbrc	r25, 7
    1498:	3a c0       	rjmp	.+116    	; 0x150e <conv_int+0xd8>
    149a:	9c 01       	movw	r18, r24
    149c:	2f 7d       	andi	r18, 0xDF	; 223
    149e:	33 27       	eor	r19, r19
    14a0:	28 35       	cpi	r18, 0x58	; 88
    14a2:	31 05       	cpc	r19, r1
    14a4:	41 f4       	brne	.+16     	; 0x14b6 <conv_int+0x80>
    14a6:	c2 64       	ori	r28, 0x42	; 66
    14a8:	d2 50       	subi	r29, 0x02	; 2
    14aa:	89 f1       	breq	.+98     	; 0x150e <conv_int+0xd8>
    14ac:	c8 01       	movw	r24, r16
    14ae:	56 d2       	rcall	.+1196   	; 0x195c <fgetc>
    14b0:	97 ff       	sbrs	r25, 7
    14b2:	07 c0       	rjmp	.+14     	; 0x14c2 <conv_int+0x8c>
    14b4:	2c c0       	rjmp	.+88     	; 0x150e <conv_int+0xd8>
    14b6:	b6 fe       	sbrs	r11, 6
    14b8:	02 c0       	rjmp	.+4      	; 0x14be <conv_int+0x88>
    14ba:	c2 60       	ori	r28, 0x02	; 2
    14bc:	01 c0       	rjmp	.+2      	; 0x14c0 <conv_int+0x8a>
    14be:	c2 61       	ori	r28, 0x12	; 18
    14c0:	da 2d       	mov	r29, r10
    14c2:	81 2c       	mov	r8, r1
    14c4:	91 2c       	mov	r9, r1
    14c6:	54 01       	movw	r10, r8
    14c8:	20 ed       	ldi	r18, 0xD0	; 208
    14ca:	28 0f       	add	r18, r24
    14cc:	28 30       	cpi	r18, 0x08	; 8
    14ce:	78 f0       	brcs	.+30     	; 0x14ee <conv_int+0xb8>
    14d0:	c4 ff       	sbrs	r28, 4
    14d2:	03 c0       	rjmp	.+6      	; 0x14da <conv_int+0xa4>
    14d4:	b8 01       	movw	r22, r16
    14d6:	80 d2       	rcall	.+1280   	; 0x19d8 <ungetc>
    14d8:	17 c0       	rjmp	.+46     	; 0x1508 <conv_int+0xd2>
    14da:	2a 30       	cpi	r18, 0x0A	; 10
    14dc:	40 f0       	brcs	.+16     	; 0x14ee <conv_int+0xb8>
    14de:	c6 ff       	sbrs	r28, 6
    14e0:	f9 cf       	rjmp	.-14     	; 0x14d4 <conv_int+0x9e>
    14e2:	2f 7d       	andi	r18, 0xDF	; 223
    14e4:	3f ee       	ldi	r19, 0xEF	; 239
    14e6:	32 0f       	add	r19, r18
    14e8:	36 30       	cpi	r19, 0x06	; 6
    14ea:	a0 f7       	brcc	.-24     	; 0x14d4 <conv_int+0x9e>
    14ec:	27 50       	subi	r18, 0x07	; 7
    14ee:	4c 2f       	mov	r20, r28
    14f0:	c5 01       	movw	r24, r10
    14f2:	b4 01       	movw	r22, r8
    14f4:	63 df       	rcall	.-314    	; 0x13bc <mulacc>
    14f6:	4b 01       	movw	r8, r22
    14f8:	5c 01       	movw	r10, r24
    14fa:	c2 60       	ori	r28, 0x02	; 2
    14fc:	d1 50       	subi	r29, 0x01	; 1
    14fe:	51 f0       	breq	.+20     	; 0x1514 <conv_int+0xde>
    1500:	c8 01       	movw	r24, r16
    1502:	2c d2       	rcall	.+1112   	; 0x195c <fgetc>
    1504:	97 ff       	sbrs	r25, 7
    1506:	e0 cf       	rjmp	.-64     	; 0x14c8 <conv_int+0x92>
    1508:	c1 fd       	sbrc	r28, 1
    150a:	04 c0       	rjmp	.+8      	; 0x1514 <conv_int+0xde>
    150c:	b0 cf       	rjmp	.-160    	; 0x146e <conv_int+0x38>
    150e:	81 2c       	mov	r8, r1
    1510:	91 2c       	mov	r9, r1
    1512:	54 01       	movw	r10, r8
    1514:	c7 ff       	sbrs	r28, 7
    1516:	08 c0       	rjmp	.+16     	; 0x1528 <conv_int+0xf2>
    1518:	b0 94       	com	r11
    151a:	a0 94       	com	r10
    151c:	90 94       	com	r9
    151e:	80 94       	com	r8
    1520:	81 1c       	adc	r8, r1
    1522:	91 1c       	adc	r9, r1
    1524:	a1 1c       	adc	r10, r1
    1526:	b1 1c       	adc	r11, r1
    1528:	2c 2f       	mov	r18, r28
    152a:	b5 01       	movw	r22, r10
    152c:	a4 01       	movw	r20, r8
    152e:	c7 01       	movw	r24, r14
    1530:	39 df       	rcall	.-398    	; 0x13a4 <putval>
    1532:	81 e0       	ldi	r24, 0x01	; 1
    1534:	df 91       	pop	r29
    1536:	cf 91       	pop	r28
    1538:	1f 91       	pop	r17
    153a:	0f 91       	pop	r16
    153c:	ff 90       	pop	r15
    153e:	ef 90       	pop	r14
    1540:	bf 90       	pop	r11
    1542:	af 90       	pop	r10
    1544:	9f 90       	pop	r9
    1546:	8f 90       	pop	r8
    1548:	08 95       	ret

0000154a <conv_brk>:
    154a:	5f 92       	push	r5
    154c:	6f 92       	push	r6
    154e:	7f 92       	push	r7
    1550:	8f 92       	push	r8
    1552:	9f 92       	push	r9
    1554:	af 92       	push	r10
    1556:	bf 92       	push	r11
    1558:	cf 92       	push	r12
    155a:	df 92       	push	r13
    155c:	ef 92       	push	r14
    155e:	ff 92       	push	r15
    1560:	0f 93       	push	r16
    1562:	1f 93       	push	r17
    1564:	cf 93       	push	r28
    1566:	df 93       	push	r29
    1568:	cd b7       	in	r28, 0x3d	; 61
    156a:	de b7       	in	r29, 0x3e	; 62
    156c:	a0 97       	sbiw	r28, 0x20	; 32
    156e:	0f b6       	in	r0, 0x3f	; 63
    1570:	f8 94       	cli
    1572:	de bf       	out	0x3e, r29	; 62
    1574:	0f be       	out	0x3f, r0	; 63
    1576:	cd bf       	out	0x3d, r28	; 61
    1578:	5c 01       	movw	r10, r24
    157a:	96 2e       	mov	r9, r22
    157c:	7a 01       	movw	r14, r20
    157e:	f9 01       	movw	r30, r18
    1580:	8e 01       	movw	r16, r28
    1582:	0f 5f       	subi	r16, 0xFF	; 255
    1584:	1f 4f       	sbci	r17, 0xFF	; 255
    1586:	68 01       	movw	r12, r16
    1588:	80 e2       	ldi	r24, 0x20	; 32
    158a:	d8 01       	movw	r26, r16
    158c:	1d 92       	st	X+, r1
    158e:	8a 95       	dec	r24
    1590:	e9 f7       	brne	.-6      	; 0x158c <conv_brk+0x42>
    1592:	d5 01       	movw	r26, r10
    1594:	13 96       	adiw	r26, 0x03	; 3
    1596:	8c 90       	ld	r8, X
    1598:	80 e0       	ldi	r24, 0x00	; 0
    159a:	90 e0       	ldi	r25, 0x00	; 0
    159c:	61 2c       	mov	r6, r1
    159e:	71 2c       	mov	r7, r1
    15a0:	30 e0       	ldi	r19, 0x00	; 0
    15a2:	61 e0       	ldi	r22, 0x01	; 1
    15a4:	70 e0       	ldi	r23, 0x00	; 0
    15a6:	83 fc       	sbrc	r8, 3
    15a8:	25 91       	lpm	r18, Z+
    15aa:	83 fe       	sbrs	r8, 3
    15ac:	21 91       	ld	r18, Z+
    15ae:	8f 01       	movw	r16, r30
    15b0:	52 2e       	mov	r5, r18
    15b2:	21 11       	cpse	r18, r1
    15b4:	03 c0       	rjmp	.+6      	; 0x15bc <conv_brk+0x72>
    15b6:	80 e0       	ldi	r24, 0x00	; 0
    15b8:	90 e0       	ldi	r25, 0x00	; 0
    15ba:	90 c0       	rjmp	.+288    	; 0x16dc <conv_brk+0x192>
    15bc:	2e 35       	cpi	r18, 0x5E	; 94
    15be:	11 f4       	brne	.+4      	; 0x15c4 <conv_brk+0x7a>
    15c0:	00 97       	sbiw	r24, 0x00	; 0
    15c2:	51 f1       	breq	.+84     	; 0x1618 <conv_brk+0xce>
    15c4:	43 2f       	mov	r20, r19
    15c6:	50 e0       	ldi	r21, 0x00	; 0
    15c8:	48 17       	cp	r20, r24
    15ca:	59 07       	cpc	r21, r25
    15cc:	3c f4       	brge	.+14     	; 0x15dc <conv_brk+0x92>
    15ce:	2d 35       	cpi	r18, 0x5D	; 93
    15d0:	59 f1       	breq	.+86     	; 0x1628 <conv_brk+0xde>
    15d2:	2d 32       	cpi	r18, 0x2D	; 45
    15d4:	19 f4       	brne	.+6      	; 0x15dc <conv_brk+0x92>
    15d6:	77 20       	and	r7, r7
    15d8:	09 f1       	breq	.+66     	; 0x161c <conv_brk+0xd2>
    15da:	03 c0       	rjmp	.+6      	; 0x15e2 <conv_brk+0x98>
    15dc:	77 20       	and	r7, r7
    15de:	09 f4       	brne	.+2      	; 0x15e2 <conv_brk+0x98>
    15e0:	68 c0       	rjmp	.+208    	; 0x16b2 <conv_brk+0x168>
    15e2:	45 2d       	mov	r20, r5
    15e4:	46 95       	lsr	r20
    15e6:	46 95       	lsr	r20
    15e8:	46 95       	lsr	r20
    15ea:	d6 01       	movw	r26, r12
    15ec:	a4 0f       	add	r26, r20
    15ee:	b1 1d       	adc	r27, r1
    15f0:	45 2d       	mov	r20, r5
    15f2:	47 70       	andi	r20, 0x07	; 7
    15f4:	8b 01       	movw	r16, r22
    15f6:	02 c0       	rjmp	.+4      	; 0x15fc <conv_brk+0xb2>
    15f8:	00 0f       	add	r16, r16
    15fa:	11 1f       	adc	r17, r17
    15fc:	4a 95       	dec	r20
    15fe:	e2 f7       	brpl	.-8      	; 0x15f8 <conv_brk+0xae>
    1600:	a8 01       	movw	r20, r16
    1602:	5c 91       	ld	r21, X
    1604:	45 2b       	or	r20, r21
    1606:	4c 93       	st	X, r20
    1608:	65 14       	cp	r6, r5
    160a:	59 f0       	breq	.+22     	; 0x1622 <conv_brk+0xd8>
    160c:	56 14       	cp	r5, r6
    160e:	10 f4       	brcc	.+4      	; 0x1614 <conv_brk+0xca>
    1610:	53 94       	inc	r5
    1612:	e7 cf       	rjmp	.-50     	; 0x15e2 <conv_brk+0x98>
    1614:	5a 94       	dec	r5
    1616:	e5 cf       	rjmp	.-54     	; 0x15e2 <conv_brk+0x98>
    1618:	31 e0       	ldi	r19, 0x01	; 1
    161a:	04 c0       	rjmp	.+8      	; 0x1624 <conv_brk+0xda>
    161c:	77 24       	eor	r7, r7
    161e:	73 94       	inc	r7
    1620:	01 c0       	rjmp	.+2      	; 0x1624 <conv_brk+0xda>
    1622:	71 2c       	mov	r7, r1
    1624:	01 96       	adiw	r24, 0x01	; 1
    1626:	bf cf       	rjmp	.-130    	; 0x15a6 <conv_brk+0x5c>
    1628:	77 20       	and	r7, r7
    162a:	19 f0       	breq	.+6      	; 0x1632 <conv_brk+0xe8>
    162c:	8e 81       	ldd	r24, Y+6	; 0x06
    162e:	80 62       	ori	r24, 0x20	; 32
    1630:	8e 83       	std	Y+6, r24	; 0x06
    1632:	31 11       	cpse	r19, r1
    1634:	03 c0       	rjmp	.+6      	; 0x163c <conv_brk+0xf2>
    1636:	88 24       	eor	r8, r8
    1638:	83 94       	inc	r8
    163a:	17 c0       	rjmp	.+46     	; 0x166a <conv_brk+0x120>
    163c:	f6 01       	movw	r30, r12
    163e:	9e 01       	movw	r18, r28
    1640:	2f 5d       	subi	r18, 0xDF	; 223
    1642:	3f 4f       	sbci	r19, 0xFF	; 255
    1644:	80 81       	ld	r24, Z
    1646:	80 95       	com	r24
    1648:	81 93       	st	Z+, r24
    164a:	2e 17       	cp	r18, r30
    164c:	3f 07       	cpc	r19, r31
    164e:	d1 f7       	brne	.-12     	; 0x1644 <conv_brk+0xfa>
    1650:	f2 cf       	rjmp	.-28     	; 0x1636 <conv_brk+0xec>
    1652:	e1 14       	cp	r14, r1
    1654:	f1 04       	cpc	r15, r1
    1656:	29 f0       	breq	.+10     	; 0x1662 <conv_brk+0x118>
    1658:	d7 01       	movw	r26, r14
    165a:	8c 93       	st	X, r24
    165c:	f7 01       	movw	r30, r14
    165e:	31 96       	adiw	r30, 0x01	; 1
    1660:	7f 01       	movw	r14, r30
    1662:	9a 94       	dec	r9
    1664:	81 2c       	mov	r8, r1
    1666:	99 20       	and	r9, r9
    1668:	e9 f0       	breq	.+58     	; 0x16a4 <conv_brk+0x15a>
    166a:	c5 01       	movw	r24, r10
    166c:	77 d1       	rcall	.+750    	; 0x195c <fgetc>
    166e:	97 fd       	sbrc	r25, 7
    1670:	17 c0       	rjmp	.+46     	; 0x16a0 <conv_brk+0x156>
    1672:	fc 01       	movw	r30, r24
    1674:	ff 27       	eor	r31, r31
    1676:	23 e0       	ldi	r18, 0x03	; 3
    1678:	f5 95       	asr	r31
    167a:	e7 95       	ror	r30
    167c:	2a 95       	dec	r18
    167e:	e1 f7       	brne	.-8      	; 0x1678 <conv_brk+0x12e>
    1680:	ec 0d       	add	r30, r12
    1682:	fd 1d       	adc	r31, r13
    1684:	20 81       	ld	r18, Z
    1686:	30 e0       	ldi	r19, 0x00	; 0
    1688:	ac 01       	movw	r20, r24
    168a:	47 70       	andi	r20, 0x07	; 7
    168c:	55 27       	eor	r21, r21
    168e:	02 c0       	rjmp	.+4      	; 0x1694 <conv_brk+0x14a>
    1690:	35 95       	asr	r19
    1692:	27 95       	ror	r18
    1694:	4a 95       	dec	r20
    1696:	e2 f7       	brpl	.-8      	; 0x1690 <conv_brk+0x146>
    1698:	20 fd       	sbrc	r18, 0
    169a:	db cf       	rjmp	.-74     	; 0x1652 <conv_brk+0x108>
    169c:	b5 01       	movw	r22, r10
    169e:	9c d1       	rcall	.+824    	; 0x19d8 <ungetc>
    16a0:	81 10       	cpse	r8, r1
    16a2:	89 cf       	rjmp	.-238    	; 0x15b6 <conv_brk+0x6c>
    16a4:	e1 14       	cp	r14, r1
    16a6:	f1 04       	cpc	r15, r1
    16a8:	11 f0       	breq	.+4      	; 0x16ae <conv_brk+0x164>
    16aa:	d7 01       	movw	r26, r14
    16ac:	1c 92       	st	X, r1
    16ae:	c8 01       	movw	r24, r16
    16b0:	15 c0       	rjmp	.+42     	; 0x16dc <conv_brk+0x192>
    16b2:	42 2f       	mov	r20, r18
    16b4:	46 95       	lsr	r20
    16b6:	46 95       	lsr	r20
    16b8:	46 95       	lsr	r20
    16ba:	d6 01       	movw	r26, r12
    16bc:	a4 0f       	add	r26, r20
    16be:	b1 1d       	adc	r27, r1
    16c0:	42 2f       	mov	r20, r18
    16c2:	47 70       	andi	r20, 0x07	; 7
    16c4:	8b 01       	movw	r16, r22
    16c6:	02 c0       	rjmp	.+4      	; 0x16cc <conv_brk+0x182>
    16c8:	00 0f       	add	r16, r16
    16ca:	11 1f       	adc	r17, r17
    16cc:	4a 95       	dec	r20
    16ce:	e2 f7       	brpl	.-8      	; 0x16c8 <conv_brk+0x17e>
    16d0:	a8 01       	movw	r20, r16
    16d2:	5c 91       	ld	r21, X
    16d4:	45 2b       	or	r20, r21
    16d6:	4c 93       	st	X, r20
    16d8:	62 2e       	mov	r6, r18
    16da:	a4 cf       	rjmp	.-184    	; 0x1624 <conv_brk+0xda>
    16dc:	a0 96       	adiw	r28, 0x20	; 32
    16de:	0f b6       	in	r0, 0x3f	; 63
    16e0:	f8 94       	cli
    16e2:	de bf       	out	0x3e, r29	; 62
    16e4:	0f be       	out	0x3f, r0	; 63
    16e6:	cd bf       	out	0x3d, r28	; 61
    16e8:	df 91       	pop	r29
    16ea:	cf 91       	pop	r28
    16ec:	1f 91       	pop	r17
    16ee:	0f 91       	pop	r16
    16f0:	ff 90       	pop	r15
    16f2:	ef 90       	pop	r14
    16f4:	df 90       	pop	r13
    16f6:	cf 90       	pop	r12
    16f8:	bf 90       	pop	r11
    16fa:	af 90       	pop	r10
    16fc:	9f 90       	pop	r9
    16fe:	8f 90       	pop	r8
    1700:	7f 90       	pop	r7
    1702:	6f 90       	pop	r6
    1704:	5f 90       	pop	r5
    1706:	08 95       	ret

00001708 <vfscanf>:
    1708:	5f 92       	push	r5
    170a:	6f 92       	push	r6
    170c:	7f 92       	push	r7
    170e:	8f 92       	push	r8
    1710:	9f 92       	push	r9
    1712:	af 92       	push	r10
    1714:	bf 92       	push	r11
    1716:	cf 92       	push	r12
    1718:	df 92       	push	r13
    171a:	ef 92       	push	r14
    171c:	ff 92       	push	r15
    171e:	0f 93       	push	r16
    1720:	1f 93       	push	r17
    1722:	cf 93       	push	r28
    1724:	df 93       	push	r29
    1726:	6c 01       	movw	r12, r24
    1728:	eb 01       	movw	r28, r22
    172a:	5a 01       	movw	r10, r20
    172c:	fc 01       	movw	r30, r24
    172e:	17 82       	std	Z+7, r1	; 0x07
    1730:	16 82       	std	Z+6, r1	; 0x06
    1732:	51 2c       	mov	r5, r1
    1734:	f6 01       	movw	r30, r12
    1736:	e3 80       	ldd	r14, Z+3	; 0x03
    1738:	fe 01       	movw	r30, r28
    173a:	e3 fc       	sbrc	r14, 3
    173c:	85 91       	lpm	r24, Z+
    173e:	e3 fe       	sbrs	r14, 3
    1740:	81 91       	ld	r24, Z+
    1742:	18 2f       	mov	r17, r24
    1744:	ef 01       	movw	r28, r30
    1746:	88 23       	and	r24, r24
    1748:	09 f4       	brne	.+2      	; 0x174c <vfscanf+0x44>
    174a:	e0 c0       	rjmp	.+448    	; 0x190c <vfscanf+0x204>
    174c:	90 e0       	ldi	r25, 0x00	; 0
    174e:	f3 d0       	rcall	.+486    	; 0x1936 <isspace>
    1750:	89 2b       	or	r24, r25
    1752:	19 f0       	breq	.+6      	; 0x175a <vfscanf+0x52>
    1754:	c6 01       	movw	r24, r12
    1756:	59 de       	rcall	.-846    	; 0x140a <skip_spaces>
    1758:	ed cf       	rjmp	.-38     	; 0x1734 <vfscanf+0x2c>
    175a:	15 32       	cpi	r17, 0x25	; 37
    175c:	41 f4       	brne	.+16     	; 0x176e <vfscanf+0x66>
    175e:	fe 01       	movw	r30, r28
    1760:	e3 fc       	sbrc	r14, 3
    1762:	15 91       	lpm	r17, Z+
    1764:	e3 fe       	sbrs	r14, 3
    1766:	11 91       	ld	r17, Z+
    1768:	ef 01       	movw	r28, r30
    176a:	15 32       	cpi	r17, 0x25	; 37
    176c:	71 f4       	brne	.+28     	; 0x178a <vfscanf+0x82>
    176e:	c6 01       	movw	r24, r12
    1770:	f5 d0       	rcall	.+490    	; 0x195c <fgetc>
    1772:	97 fd       	sbrc	r25, 7
    1774:	c9 c0       	rjmp	.+402    	; 0x1908 <vfscanf+0x200>
    1776:	41 2f       	mov	r20, r17
    1778:	50 e0       	ldi	r21, 0x00	; 0
    177a:	9c 01       	movw	r18, r24
    177c:	33 27       	eor	r19, r19
    177e:	24 17       	cp	r18, r20
    1780:	35 07       	cpc	r19, r21
    1782:	c1 f2       	breq	.-80     	; 0x1734 <vfscanf+0x2c>
    1784:	b6 01       	movw	r22, r12
    1786:	28 d1       	rcall	.+592    	; 0x19d8 <ungetc>
    1788:	c1 c0       	rjmp	.+386    	; 0x190c <vfscanf+0x204>
    178a:	1a 32       	cpi	r17, 0x2A	; 42
    178c:	39 f4       	brne	.+14     	; 0x179c <vfscanf+0x94>
    178e:	e3 fc       	sbrc	r14, 3
    1790:	15 91       	lpm	r17, Z+
    1792:	e3 fe       	sbrs	r14, 3
    1794:	11 91       	ld	r17, Z+
    1796:	ef 01       	movw	r28, r30
    1798:	01 e0       	ldi	r16, 0x01	; 1
    179a:	01 c0       	rjmp	.+2      	; 0x179e <vfscanf+0x96>
    179c:	00 e0       	ldi	r16, 0x00	; 0
    179e:	f1 2c       	mov	r15, r1
    17a0:	20 ed       	ldi	r18, 0xD0	; 208
    17a2:	21 0f       	add	r18, r17
    17a4:	2a 30       	cpi	r18, 0x0A	; 10
    17a6:	78 f4       	brcc	.+30     	; 0x17c6 <vfscanf+0xbe>
    17a8:	02 60       	ori	r16, 0x02	; 2
    17aa:	6f 2d       	mov	r22, r15
    17ac:	70 e0       	ldi	r23, 0x00	; 0
    17ae:	80 e0       	ldi	r24, 0x00	; 0
    17b0:	90 e0       	ldi	r25, 0x00	; 0
    17b2:	40 e2       	ldi	r20, 0x20	; 32
    17b4:	03 de       	rcall	.-1018   	; 0x13bc <mulacc>
    17b6:	f6 2e       	mov	r15, r22
    17b8:	fe 01       	movw	r30, r28
    17ba:	e3 fc       	sbrc	r14, 3
    17bc:	15 91       	lpm	r17, Z+
    17be:	e3 fe       	sbrs	r14, 3
    17c0:	11 91       	ld	r17, Z+
    17c2:	ef 01       	movw	r28, r30
    17c4:	ed cf       	rjmp	.-38     	; 0x17a0 <vfscanf+0x98>
    17c6:	01 ff       	sbrs	r16, 1
    17c8:	03 c0       	rjmp	.+6      	; 0x17d0 <vfscanf+0xc8>
    17ca:	f1 10       	cpse	r15, r1
    17cc:	03 c0       	rjmp	.+6      	; 0x17d4 <vfscanf+0xcc>
    17ce:	9e c0       	rjmp	.+316    	; 0x190c <vfscanf+0x204>
    17d0:	ff 24       	eor	r15, r15
    17d2:	fa 94       	dec	r15
    17d4:	18 36       	cpi	r17, 0x68	; 104
    17d6:	19 f0       	breq	.+6      	; 0x17de <vfscanf+0xd6>
    17d8:	1c 36       	cpi	r17, 0x6C	; 108
    17da:	51 f0       	breq	.+20     	; 0x17f0 <vfscanf+0xe8>
    17dc:	10 c0       	rjmp	.+32     	; 0x17fe <vfscanf+0xf6>
    17de:	fe 01       	movw	r30, r28
    17e0:	e3 fc       	sbrc	r14, 3
    17e2:	15 91       	lpm	r17, Z+
    17e4:	e3 fe       	sbrs	r14, 3
    17e6:	11 91       	ld	r17, Z+
    17e8:	ef 01       	movw	r28, r30
    17ea:	18 36       	cpi	r17, 0x68	; 104
    17ec:	41 f4       	brne	.+16     	; 0x17fe <vfscanf+0xf6>
    17ee:	08 60       	ori	r16, 0x08	; 8
    17f0:	04 60       	ori	r16, 0x04	; 4
    17f2:	fe 01       	movw	r30, r28
    17f4:	e3 fc       	sbrc	r14, 3
    17f6:	15 91       	lpm	r17, Z+
    17f8:	e3 fe       	sbrs	r14, 3
    17fa:	11 91       	ld	r17, Z+
    17fc:	ef 01       	movw	r28, r30
    17fe:	11 23       	and	r17, r17
    1800:	09 f4       	brne	.+2      	; 0x1804 <vfscanf+0xfc>
    1802:	84 c0       	rjmp	.+264    	; 0x190c <vfscanf+0x204>
    1804:	61 2f       	mov	r22, r17
    1806:	70 e0       	ldi	r23, 0x00	; 0
    1808:	84 ee       	ldi	r24, 0xE4	; 228
    180a:	90 e0       	ldi	r25, 0x00	; 0
    180c:	9c d0       	rcall	.+312    	; 0x1946 <strchr_P>
    180e:	89 2b       	or	r24, r25
    1810:	09 f4       	brne	.+2      	; 0x1814 <vfscanf+0x10c>
    1812:	7c c0       	rjmp	.+248    	; 0x190c <vfscanf+0x204>
    1814:	00 fd       	sbrc	r16, 0
    1816:	07 c0       	rjmp	.+14     	; 0x1826 <vfscanf+0x11e>
    1818:	f5 01       	movw	r30, r10
    181a:	80 80       	ld	r8, Z
    181c:	91 80       	ldd	r9, Z+1	; 0x01
    181e:	c5 01       	movw	r24, r10
    1820:	02 96       	adiw	r24, 0x02	; 2
    1822:	5c 01       	movw	r10, r24
    1824:	02 c0       	rjmp	.+4      	; 0x182a <vfscanf+0x122>
    1826:	81 2c       	mov	r8, r1
    1828:	91 2c       	mov	r9, r1
    182a:	1e 36       	cpi	r17, 0x6E	; 110
    182c:	49 f4       	brne	.+18     	; 0x1840 <vfscanf+0x138>
    182e:	f6 01       	movw	r30, r12
    1830:	46 81       	ldd	r20, Z+6	; 0x06
    1832:	57 81       	ldd	r21, Z+7	; 0x07
    1834:	60 e0       	ldi	r22, 0x00	; 0
    1836:	70 e0       	ldi	r23, 0x00	; 0
    1838:	20 2f       	mov	r18, r16
    183a:	c4 01       	movw	r24, r8
    183c:	b3 dd       	rcall	.-1178   	; 0x13a4 <putval>
    183e:	7a cf       	rjmp	.-268    	; 0x1734 <vfscanf+0x2c>
    1840:	13 36       	cpi	r17, 0x63	; 99
    1842:	a1 f4       	brne	.+40     	; 0x186c <vfscanf+0x164>
    1844:	01 fd       	sbrc	r16, 1
    1846:	02 c0       	rjmp	.+4      	; 0x184c <vfscanf+0x144>
    1848:	ff 24       	eor	r15, r15
    184a:	f3 94       	inc	r15
    184c:	c6 01       	movw	r24, r12
    184e:	86 d0       	rcall	.+268    	; 0x195c <fgetc>
    1850:	97 fd       	sbrc	r25, 7
    1852:	5a c0       	rjmp	.+180    	; 0x1908 <vfscanf+0x200>
    1854:	81 14       	cp	r8, r1
    1856:	91 04       	cpc	r9, r1
    1858:	29 f0       	breq	.+10     	; 0x1864 <vfscanf+0x15c>
    185a:	f4 01       	movw	r30, r8
    185c:	80 83       	st	Z, r24
    185e:	c4 01       	movw	r24, r8
    1860:	01 96       	adiw	r24, 0x01	; 1
    1862:	4c 01       	movw	r8, r24
    1864:	fa 94       	dec	r15
    1866:	f1 10       	cpse	r15, r1
    1868:	f1 cf       	rjmp	.-30     	; 0x184c <vfscanf+0x144>
    186a:	4a c0       	rjmp	.+148    	; 0x1900 <vfscanf+0x1f8>
    186c:	1b 35       	cpi	r17, 0x5B	; 91
    186e:	51 f4       	brne	.+20     	; 0x1884 <vfscanf+0x17c>
    1870:	9e 01       	movw	r18, r28
    1872:	a4 01       	movw	r20, r8
    1874:	6f 2d       	mov	r22, r15
    1876:	c6 01       	movw	r24, r12
    1878:	68 de       	rcall	.-816    	; 0x154a <conv_brk>
    187a:	ec 01       	movw	r28, r24
    187c:	89 2b       	or	r24, r25
    187e:	09 f0       	breq	.+2      	; 0x1882 <vfscanf+0x17a>
    1880:	3f c0       	rjmp	.+126    	; 0x1900 <vfscanf+0x1f8>
    1882:	39 c0       	rjmp	.+114    	; 0x18f6 <vfscanf+0x1ee>
    1884:	c6 01       	movw	r24, r12
    1886:	c1 dd       	rcall	.-1150   	; 0x140a <skip_spaces>
    1888:	97 fd       	sbrc	r25, 7
    188a:	3e c0       	rjmp	.+124    	; 0x1908 <vfscanf+0x200>
    188c:	1f 36       	cpi	r17, 0x6F	; 111
    188e:	49 f1       	breq	.+82     	; 0x18e2 <vfscanf+0x1da>
    1890:	28 f4       	brcc	.+10     	; 0x189c <vfscanf+0x194>
    1892:	14 36       	cpi	r17, 0x64	; 100
    1894:	21 f1       	breq	.+72     	; 0x18de <vfscanf+0x1d6>
    1896:	19 36       	cpi	r17, 0x69	; 105
    1898:	39 f1       	breq	.+78     	; 0x18e8 <vfscanf+0x1e0>
    189a:	25 c0       	rjmp	.+74     	; 0x18e6 <vfscanf+0x1de>
    189c:	13 37       	cpi	r17, 0x73	; 115
    189e:	71 f0       	breq	.+28     	; 0x18bc <vfscanf+0x1b4>
    18a0:	15 37       	cpi	r17, 0x75	; 117
    18a2:	e9 f0       	breq	.+58     	; 0x18de <vfscanf+0x1d6>
    18a4:	20 c0       	rjmp	.+64     	; 0x18e6 <vfscanf+0x1de>
    18a6:	81 14       	cp	r8, r1
    18a8:	91 04       	cpc	r9, r1
    18aa:	29 f0       	breq	.+10     	; 0x18b6 <vfscanf+0x1ae>
    18ac:	f4 01       	movw	r30, r8
    18ae:	60 82       	st	Z, r6
    18b0:	c4 01       	movw	r24, r8
    18b2:	01 96       	adiw	r24, 0x01	; 1
    18b4:	4c 01       	movw	r8, r24
    18b6:	fa 94       	dec	r15
    18b8:	ff 20       	and	r15, r15
    18ba:	59 f0       	breq	.+22     	; 0x18d2 <vfscanf+0x1ca>
    18bc:	c6 01       	movw	r24, r12
    18be:	4e d0       	rcall	.+156    	; 0x195c <fgetc>
    18c0:	3c 01       	movw	r6, r24
    18c2:	97 fd       	sbrc	r25, 7
    18c4:	06 c0       	rjmp	.+12     	; 0x18d2 <vfscanf+0x1ca>
    18c6:	37 d0       	rcall	.+110    	; 0x1936 <isspace>
    18c8:	89 2b       	or	r24, r25
    18ca:	69 f3       	breq	.-38     	; 0x18a6 <vfscanf+0x19e>
    18cc:	b6 01       	movw	r22, r12
    18ce:	c3 01       	movw	r24, r6
    18d0:	83 d0       	rcall	.+262    	; 0x19d8 <ungetc>
    18d2:	81 14       	cp	r8, r1
    18d4:	91 04       	cpc	r9, r1
    18d6:	a1 f0       	breq	.+40     	; 0x1900 <vfscanf+0x1f8>
    18d8:	f4 01       	movw	r30, r8
    18da:	10 82       	st	Z, r1
    18dc:	11 c0       	rjmp	.+34     	; 0x1900 <vfscanf+0x1f8>
    18de:	00 62       	ori	r16, 0x20	; 32
    18e0:	03 c0       	rjmp	.+6      	; 0x18e8 <vfscanf+0x1e0>
    18e2:	00 61       	ori	r16, 0x10	; 16
    18e4:	01 c0       	rjmp	.+2      	; 0x18e8 <vfscanf+0x1e0>
    18e6:	00 64       	ori	r16, 0x40	; 64
    18e8:	20 2f       	mov	r18, r16
    18ea:	a4 01       	movw	r20, r8
    18ec:	6f 2d       	mov	r22, r15
    18ee:	c6 01       	movw	r24, r12
    18f0:	a2 dd       	rcall	.-1212   	; 0x1436 <conv_int>
    18f2:	81 11       	cpse	r24, r1
    18f4:	05 c0       	rjmp	.+10     	; 0x1900 <vfscanf+0x1f8>
    18f6:	f6 01       	movw	r30, r12
    18f8:	83 81       	ldd	r24, Z+3	; 0x03
    18fa:	80 73       	andi	r24, 0x30	; 48
    18fc:	29 f4       	brne	.+10     	; 0x1908 <vfscanf+0x200>
    18fe:	06 c0       	rjmp	.+12     	; 0x190c <vfscanf+0x204>
    1900:	00 fd       	sbrc	r16, 0
    1902:	18 cf       	rjmp	.-464    	; 0x1734 <vfscanf+0x2c>
    1904:	53 94       	inc	r5
    1906:	16 cf       	rjmp	.-468    	; 0x1734 <vfscanf+0x2c>
    1908:	55 20       	and	r5, r5
    190a:	19 f0       	breq	.+6      	; 0x1912 <vfscanf+0x20a>
    190c:	85 2d       	mov	r24, r5
    190e:	90 e0       	ldi	r25, 0x00	; 0
    1910:	02 c0       	rjmp	.+4      	; 0x1916 <vfscanf+0x20e>
    1912:	8f ef       	ldi	r24, 0xFF	; 255
    1914:	9f ef       	ldi	r25, 0xFF	; 255
    1916:	df 91       	pop	r29
    1918:	cf 91       	pop	r28
    191a:	1f 91       	pop	r17
    191c:	0f 91       	pop	r16
    191e:	ff 90       	pop	r15
    1920:	ef 90       	pop	r14
    1922:	df 90       	pop	r13
    1924:	cf 90       	pop	r12
    1926:	bf 90       	pop	r11
    1928:	af 90       	pop	r10
    192a:	9f 90       	pop	r9
    192c:	8f 90       	pop	r8
    192e:	7f 90       	pop	r7
    1930:	6f 90       	pop	r6
    1932:	5f 90       	pop	r5
    1934:	08 95       	ret

00001936 <isspace>:
    1936:	91 11       	cpse	r25, r1
    1938:	68 c0       	rjmp	.+208    	; 0x1a0a <__ctype_isfalse>
    193a:	80 32       	cpi	r24, 0x20	; 32
    193c:	19 f0       	breq	.+6      	; 0x1944 <isspace+0xe>
    193e:	89 50       	subi	r24, 0x09	; 9
    1940:	85 50       	subi	r24, 0x05	; 5
    1942:	d0 f7       	brcc	.-12     	; 0x1938 <isspace+0x2>
    1944:	08 95       	ret

00001946 <strchr_P>:
    1946:	fc 01       	movw	r30, r24
    1948:	05 90       	lpm	r0, Z+
    194a:	06 16       	cp	r0, r22
    194c:	21 f0       	breq	.+8      	; 0x1956 <strchr_P+0x10>
    194e:	00 20       	and	r0, r0
    1950:	d9 f7       	brne	.-10     	; 0x1948 <strchr_P+0x2>
    1952:	c0 01       	movw	r24, r0
    1954:	08 95       	ret
    1956:	31 97       	sbiw	r30, 0x01	; 1
    1958:	cf 01       	movw	r24, r30
    195a:	08 95       	ret

0000195c <fgetc>:
    195c:	cf 93       	push	r28
    195e:	df 93       	push	r29
    1960:	ec 01       	movw	r28, r24
    1962:	2b 81       	ldd	r18, Y+3	; 0x03
    1964:	20 ff       	sbrs	r18, 0
    1966:	33 c0       	rjmp	.+102    	; 0x19ce <fgetc+0x72>
    1968:	26 ff       	sbrs	r18, 6
    196a:	0a c0       	rjmp	.+20     	; 0x1980 <fgetc+0x24>
    196c:	2f 7b       	andi	r18, 0xBF	; 191
    196e:	2b 83       	std	Y+3, r18	; 0x03
    1970:	8e 81       	ldd	r24, Y+6	; 0x06
    1972:	9f 81       	ldd	r25, Y+7	; 0x07
    1974:	01 96       	adiw	r24, 0x01	; 1
    1976:	9f 83       	std	Y+7, r25	; 0x07
    1978:	8e 83       	std	Y+6, r24	; 0x06
    197a:	8a 81       	ldd	r24, Y+2	; 0x02
    197c:	90 e0       	ldi	r25, 0x00	; 0
    197e:	29 c0       	rjmp	.+82     	; 0x19d2 <fgetc+0x76>
    1980:	22 ff       	sbrs	r18, 2
    1982:	0f c0       	rjmp	.+30     	; 0x19a2 <fgetc+0x46>
    1984:	e8 81       	ld	r30, Y
    1986:	f9 81       	ldd	r31, Y+1	; 0x01
    1988:	80 81       	ld	r24, Z
    198a:	08 2e       	mov	r0, r24
    198c:	00 0c       	add	r0, r0
    198e:	99 0b       	sbc	r25, r25
    1990:	00 97       	sbiw	r24, 0x00	; 0
    1992:	19 f4       	brne	.+6      	; 0x199a <fgetc+0x3e>
    1994:	20 62       	ori	r18, 0x20	; 32
    1996:	2b 83       	std	Y+3, r18	; 0x03
    1998:	1a c0       	rjmp	.+52     	; 0x19ce <fgetc+0x72>
    199a:	31 96       	adiw	r30, 0x01	; 1
    199c:	f9 83       	std	Y+1, r31	; 0x01
    199e:	e8 83       	st	Y, r30
    19a0:	0e c0       	rjmp	.+28     	; 0x19be <fgetc+0x62>
    19a2:	ea 85       	ldd	r30, Y+10	; 0x0a
    19a4:	fb 85       	ldd	r31, Y+11	; 0x0b
    19a6:	19 95       	eicall
    19a8:	97 ff       	sbrs	r25, 7
    19aa:	09 c0       	rjmp	.+18     	; 0x19be <fgetc+0x62>
    19ac:	2b 81       	ldd	r18, Y+3	; 0x03
    19ae:	01 96       	adiw	r24, 0x01	; 1
    19b0:	11 f0       	breq	.+4      	; 0x19b6 <fgetc+0x5a>
    19b2:	80 e2       	ldi	r24, 0x20	; 32
    19b4:	01 c0       	rjmp	.+2      	; 0x19b8 <fgetc+0x5c>
    19b6:	80 e1       	ldi	r24, 0x10	; 16
    19b8:	82 2b       	or	r24, r18
    19ba:	8b 83       	std	Y+3, r24	; 0x03
    19bc:	08 c0       	rjmp	.+16     	; 0x19ce <fgetc+0x72>
    19be:	2e 81       	ldd	r18, Y+6	; 0x06
    19c0:	3f 81       	ldd	r19, Y+7	; 0x07
    19c2:	2f 5f       	subi	r18, 0xFF	; 255
    19c4:	3f 4f       	sbci	r19, 0xFF	; 255
    19c6:	3f 83       	std	Y+7, r19	; 0x07
    19c8:	2e 83       	std	Y+6, r18	; 0x06
    19ca:	99 27       	eor	r25, r25
    19cc:	02 c0       	rjmp	.+4      	; 0x19d2 <fgetc+0x76>
    19ce:	8f ef       	ldi	r24, 0xFF	; 255
    19d0:	9f ef       	ldi	r25, 0xFF	; 255
    19d2:	df 91       	pop	r29
    19d4:	cf 91       	pop	r28
    19d6:	08 95       	ret

000019d8 <ungetc>:
    19d8:	fb 01       	movw	r30, r22
    19da:	23 81       	ldd	r18, Z+3	; 0x03
    19dc:	20 ff       	sbrs	r18, 0
    19de:	12 c0       	rjmp	.+36     	; 0x1a04 <ungetc+0x2c>
    19e0:	26 fd       	sbrc	r18, 6
    19e2:	10 c0       	rjmp	.+32     	; 0x1a04 <ungetc+0x2c>
    19e4:	8f 3f       	cpi	r24, 0xFF	; 255
    19e6:	3f ef       	ldi	r19, 0xFF	; 255
    19e8:	93 07       	cpc	r25, r19
    19ea:	61 f0       	breq	.+24     	; 0x1a04 <ungetc+0x2c>
    19ec:	82 83       	std	Z+2, r24	; 0x02
    19ee:	2f 7d       	andi	r18, 0xDF	; 223
    19f0:	20 64       	ori	r18, 0x40	; 64
    19f2:	23 83       	std	Z+3, r18	; 0x03
    19f4:	26 81       	ldd	r18, Z+6	; 0x06
    19f6:	37 81       	ldd	r19, Z+7	; 0x07
    19f8:	21 50       	subi	r18, 0x01	; 1
    19fa:	31 09       	sbc	r19, r1
    19fc:	37 83       	std	Z+7, r19	; 0x07
    19fe:	26 83       	std	Z+6, r18	; 0x06
    1a00:	99 27       	eor	r25, r25
    1a02:	08 95       	ret
    1a04:	8f ef       	ldi	r24, 0xFF	; 255
    1a06:	9f ef       	ldi	r25, 0xFF	; 255
    1a08:	08 95       	ret

00001a0a <__ctype_isfalse>:
    1a0a:	99 27       	eor	r25, r25
    1a0c:	88 27       	eor	r24, r24

00001a0e <__ctype_istrue>:
    1a0e:	08 95       	ret

00001a10 <_exit>:
    1a10:	f8 94       	cli

00001a12 <__stop_program>:
    1a12:	ff cf       	rjmp	.-2      	; 0x1a12 <__stop_program>
