
UniProject.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000010  00800200  00001104  00001198  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001104  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000025  00800210  00800210  000011a8  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000011a8  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001204  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000080  00000000  00000000  00001244  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000010e1  00000000  00000000  000012c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000cf6  00000000  00000000  000023a5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000644  00000000  00000000  0000309b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000025c  00000000  00000000  000036e0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000708  00000000  00000000  0000393c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000083a  00000000  00000000  00004044  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000070  00000000  00000000  0000487e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
       2:	00 00       	nop
       4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
       6:	00 00       	nop
       8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
       a:	00 00       	nop
       c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
       e:	00 00       	nop
      10:	57 c2       	rjmp	.+1198   	; 0x4c0 <__vector_4>
      12:	00 00       	nop
      14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
      16:	00 00       	nop
      18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
      1e:	00 00       	nop
      20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
      22:	00 00       	nop
      24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
      26:	00 00       	nop
      28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
      2e:	00 00       	nop
      30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
      32:	00 00       	nop
      34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
      36:	00 00       	nop
      38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
      3e:	00 00       	nop
      40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
      42:	00 00       	nop
      44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
      46:	00 00       	nop
      48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
      4e:	00 00       	nop
      50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
      52:	00 00       	nop
      54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
      56:	00 00       	nop
      58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	62 c0       	rjmp	.+196    	; 0x122 <__bad_interrupt>
      5e:	00 00       	nop
      60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
      62:	00 00       	nop
      64:	02 c3       	rjmp	.+1540   	; 0x66a <__vector_25>
      66:	00 00       	nop
      68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
      6e:	00 00       	nop
      70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
      72:	00 00       	nop
      74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
      76:	00 00       	nop
      78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
      7e:	00 00       	nop
      80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
      82:	00 00       	nop
      84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
      86:	00 00       	nop
      88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
      8e:	00 00       	nop
      90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
      92:	00 00       	nop
      94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
      96:	00 00       	nop
      98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	f7 c1       	rjmp	.+1006   	; 0x4a8 <__vector_46>
      ba:	00 00       	nop
      bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
      be:	00 00       	nop
      c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	78 c2       	rjmp	.+1264   	; 0x5ba <__vector_50>
      ca:	00 00       	nop
      cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
      da:	00 00       	nop
      dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
      de:	00 00       	nop
      e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
      e4:	11 24       	eor	r1, r1
      e6:	1f be       	out	0x3f, r1	; 63
      e8:	cf ef       	ldi	r28, 0xFF	; 255
      ea:	d1 e2       	ldi	r29, 0x21	; 33
      ec:	de bf       	out	0x3e, r29	; 62
      ee:	cd bf       	out	0x3d, r28	; 61
      f0:	00 e0       	ldi	r16, 0x00	; 0
      f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
      f4:	12 e0       	ldi	r17, 0x02	; 2
      f6:	a0 e0       	ldi	r26, 0x00	; 0
      f8:	b2 e0       	ldi	r27, 0x02	; 2
      fa:	e4 e0       	ldi	r30, 0x04	; 4
      fc:	f1 e1       	ldi	r31, 0x11	; 17
      fe:	00 e0       	ldi	r16, 0x00	; 0
     100:	0b bf       	out	0x3b, r16	; 59
     102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
     104:	07 90       	elpm	r0, Z+
     106:	0d 92       	st	X+, r0
     108:	a0 31       	cpi	r26, 0x10	; 16
     10a:	b1 07       	cpc	r27, r17
     10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
     10e:	22 e0       	ldi	r18, 0x02	; 2
     110:	a0 e1       	ldi	r26, 0x10	; 16
     112:	b2 e0       	ldi	r27, 0x02	; 2
     114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
     116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
     118:	a5 33       	cpi	r26, 0x35	; 53
     11a:	b2 07       	cpc	r27, r18
     11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
     11e:	8a d1       	rcall	.+788    	; 0x434 <main>
     120:	ef c7       	rjmp	.+4062   	; 0x1100 <_exit>

00000122 <__bad_interrupt>:
     122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <TransmitUART0>:
}

void TransmitUART0(unsigned char data)
{
	//Wait until the Transmitter is ready
	while (! (UCSR0A & (1 << UDRE0)) );
     124:	e0 ec       	ldi	r30, 0xC0	; 192
     126:	f0 e0       	ldi	r31, 0x00	; 0
     128:	90 81       	ld	r25, Z
     12a:	95 ff       	sbrs	r25, 5
     12c:	fd cf       	rjmp	.-6      	; 0x128 <TransmitUART0+0x4>

	//Get that data out a here!
	UDR0 = data;
     12e:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
     132:	08 95       	ret

00000134 <returnNewLine>:
}

void returnNewLine()
{
	TransmitUART0(10);
     134:	8a e0       	ldi	r24, 0x0A	; 10
	TransmitUART0(13);
     136:	f6 df       	rcall	.-20     	; 0x124 <TransmitUART0>
     138:	8d e0       	ldi	r24, 0x0D	; 13
     13a:	f4 cf       	rjmp	.-24     	; 0x124 <TransmitUART0>
     13c:	08 95       	ret

0000013e <TransmitString>:
}

void TransmitString(unsigned char *s)
{
     13e:	cf 93       	push	r28
     140:	df 93       	push	r29
     142:	ec 01       	movw	r28, r24
	while (*s != 0) TransmitUART0(*s++);
     144:	88 81       	ld	r24, Y
     146:	88 23       	and	r24, r24
     148:	29 f0       	breq	.+10     	; 0x154 <TransmitString+0x16>
     14a:	21 96       	adiw	r28, 0x01	; 1
     14c:	eb df       	rcall	.-42     	; 0x124 <TransmitUART0>
     14e:	89 91       	ld	r24, Y+
	returnNewLine();
     150:	81 11       	cpse	r24, r1
     152:	fc cf       	rjmp	.-8      	; 0x14c <TransmitString+0xe>
}
     154:	ef df       	rcall	.-34     	; 0x134 <returnNewLine>
     156:	df 91       	pop	r29
     158:	cf 91       	pop	r28
     15a:	08 95       	ret

0000015c <send_int_Uart>:

void send_int_Uart(uint32_t c)
//void send_int_Uart(float c)
{
     15c:	0f 93       	push	r16
     15e:	1f 93       	push	r17
     160:	cf 93       	push	r28
     162:	df 93       	push	r29
     164:	cd b7       	in	r28, 0x3d	; 61
     166:	de b7       	in	r29, 0x3e	; 62
     168:	2c 97       	sbiw	r28, 0x0c	; 12
     16a:	0f b6       	in	r0, 0x3f	; 63
     16c:	f8 94       	cli
     16e:	de bf       	out	0x3e, r29	; 62
     170:	0f be       	out	0x3f, r0	; 63
     172:	cd bf       	out	0x3d, r28	; 61
	char buffer[12];
	//int tmpInt1 = c;
	//double tmpFrac = c - tmpInt1;
	//int tmpInt2 = trunc(tmpFrac * 1000);
	sprintf(buffer, "%lu", c);
     174:	9f 93       	push	r25
     176:	8f 93       	push	r24
     178:	7f 93       	push	r23
     17a:	6f 93       	push	r22
     17c:	8c e0       	ldi	r24, 0x0C	; 12
     17e:	92 e0       	ldi	r25, 0x02	; 2
     180:	9f 93       	push	r25
     182:	8f 93       	push	r24
     184:	8e 01       	movw	r16, r28
     186:	0f 5f       	subi	r16, 0xFF	; 255
     188:	1f 4f       	sbci	r17, 0xFF	; 255
     18a:	1f 93       	push	r17
     18c:	0f 93       	push	r16
	//sprintf (buffer, "c = %d.%03d", tmpInt1, tmpInt2);
	//itoa(c, buffer, 10);
	TransmitString(buffer);
     18e:	dd d4       	rcall	.+2490   	; 0xb4a <sprintf>
     190:	c8 01       	movw	r24, r16
}
     192:	d5 df       	rcall	.-86     	; 0x13e <TransmitString>
     194:	0f b6       	in	r0, 0x3f	; 63
     196:	f8 94       	cli
     198:	de bf       	out	0x3e, r29	; 62
     19a:	0f be       	out	0x3f, r0	; 63
     19c:	cd bf       	out	0x3d, r28	; 61
     19e:	2c 96       	adiw	r28, 0x0c	; 12
     1a0:	0f b6       	in	r0, 0x3f	; 63
     1a2:	f8 94       	cli
     1a4:	de bf       	out	0x3e, r29	; 62
     1a6:	0f be       	out	0x3f, r0	; 63
     1a8:	cd bf       	out	0x3d, r28	; 61
     1aa:	df 91       	pop	r29
     1ac:	cf 91       	pop	r28
     1ae:	1f 91       	pop	r17
     1b0:	0f 91       	pop	r16
     1b2:	08 95       	ret

000001b4 <InitializeUART0>:

void InitializeUART0(int Baud, char AsyncDoubleSpeed, char DataSizeInBits, char ParityEVEorODD, char StopBits)
{
     1b4:	0f 93       	push	r16
     1b6:	1f 93       	push	r17
     1b8:	cf 93       	push	r28
     1ba:	df 93       	push	r29
     1bc:	16 2f       	mov	r17, r22
     1be:	c4 2f       	mov	r28, r20
     1c0:	d2 2f       	mov	r29, r18
	uint16_t UBBRValue = lrint( F_CPU / 16L / Baud ) - 1;
     1c2:	9c 01       	movw	r18, r24
     1c4:	99 0f       	add	r25, r25
     1c6:	44 0b       	sbc	r20, r20
     1c8:	55 0b       	sbc	r21, r21
     1ca:	60 e4       	ldi	r22, 0x40	; 64
     1cc:	72 e4       	ldi	r23, 0x42	; 66
     1ce:	8f e0       	ldi	r24, 0x0F	; 15
     1d0:	90 e0       	ldi	r25, 0x00	; 0
     1d2:	80 d4       	rcall	.+2304   	; 0xad4 <__udivmodsi4>
     1d4:	ca 01       	movw	r24, r20
     1d6:	b9 01       	movw	r22, r18
     1d8:	2e d3       	rcall	.+1628   	; 0x836 <__floatunsisf>
     1da:	df d3       	rcall	.+1982   	; 0x99a <lrint>
     1dc:	61 50       	subi	r22, 0x01	; 1
     1de:	71 09       	sbc	r23, r1
	
	if (AsyncDoubleSpeed == 1) UCSR0A = (1 << U2X0); // setting the U2X bit to 1 for double speed async
     1e0:	11 30       	cpi	r17, 0x01	; 1
     1e2:	19 f4       	brne	.+6      	; 0x1ea <InitializeUART0+0x36>
     1e4:	82 e0       	ldi	r24, 0x02	; 2
     1e6:	80 93 c0 00 	sts	0x00C0, r24	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7000c0>
	
	//Put the upper part of the baud number here (bits 8 to 11)
	UBRR1H = (unsigned char) (UBBRValue >> 8);
     1ea:	70 93 cd 00 	sts	0x00CD, r23	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7000cd>
	
	UBRR0L = UBBRValue;
     1ee:	60 93 c4 00 	sts	0x00C4, r22	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
	//Enable the receiver and transmitter
	UCSR0B = ( 1 << RXCIE0 ) |(1 << RXEN0) | (1 << TXEN0);
     1f2:	88 e9       	ldi	r24, 0x98	; 152
     1f4:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7000c1>
	
	//set 2 stop bits
	if (StopBits == 2) UCSR0C = (1 << USBS0);
     1f8:	02 30       	cpi	r16, 0x02	; 2
     1fa:	19 f4       	brne	.+6      	; 0x202 <InitializeUART0+0x4e>
     1fc:	88 e0       	ldi	r24, 0x08	; 8
     1fe:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7000c2>
	
	if (ParityEVEorODD == EVEN) UCSR0C |= (1 << UPM01);
     202:	d1 11       	cpse	r29, r1
     204:	06 c0       	rjmp	.+12     	; 0x212 <InitializeUART0+0x5e>
     206:	e2 ec       	ldi	r30, 0xC2	; 194
     208:	f0 e0       	ldi	r31, 0x00	; 0
     20a:	80 81       	ld	r24, Z
     20c:	80 62       	ori	r24, 0x20	; 32
     20e:	80 83       	st	Z, r24
     210:	07 c0       	rjmp	.+14     	; 0x220 <InitializeUART0+0x6c>
	if (ParityEVEorODD == ODD) UCSR0C |= (3 << UPM01);
     212:	d1 30       	cpi	r29, 0x01	; 1
     214:	29 f4       	brne	.+10     	; 0x220 <InitializeUART0+0x6c>
     216:	e2 ec       	ldi	r30, 0xC2	; 194
     218:	f0 e0       	ldi	r31, 0x00	; 0
     21a:	80 81       	ld	r24, Z
     21c:	80 66       	ori	r24, 0x60	; 96
     21e:	80 83       	st	Z, r24
	
	if (DataSizeInBits == 6) UCSR0C |= (1 << UCSZ00); // 6 bit data length
     220:	c6 30       	cpi	r28, 0x06	; 6
     222:	31 f4       	brne	.+12     	; 0x230 <InitializeUART0+0x7c>
     224:	e2 ec       	ldi	r30, 0xC2	; 194
     226:	f0 e0       	ldi	r31, 0x00	; 0
     228:	80 81       	ld	r24, Z
     22a:	82 60       	ori	r24, 0x02	; 2
     22c:	80 83       	st	Z, r24
     22e:	10 c0       	rjmp	.+32     	; 0x250 <InitializeUART0+0x9c>
	if (DataSizeInBits == 7) UCSR0C |= (2 << UCSZ00); // 7 bit data length
     230:	c7 30       	cpi	r28, 0x07	; 7
     232:	31 f4       	brne	.+12     	; 0x240 <InitializeUART0+0x8c>
     234:	e2 ec       	ldi	r30, 0xC2	; 194
     236:	f0 e0       	ldi	r31, 0x00	; 0
     238:	80 81       	ld	r24, Z
     23a:	84 60       	ori	r24, 0x04	; 4
     23c:	80 83       	st	Z, r24
     23e:	0f c0       	rjmp	.+30     	; 0x25e <InitializeUART0+0xaa>
	if (DataSizeInBits == 8) UCSR0C |= (3 << UCSZ00); // 8 bit data length
     240:	c8 30       	cpi	r28, 0x08	; 8
     242:	31 f4       	brne	.+12     	; 0x250 <InitializeUART0+0x9c>
     244:	e2 ec       	ldi	r30, 0xC2	; 194
     246:	f0 e0       	ldi	r31, 0x00	; 0
     248:	80 81       	ld	r24, Z
     24a:	86 60       	ori	r24, 0x06	; 6
     24c:	80 83       	st	Z, r24
     24e:	07 c0       	rjmp	.+14     	; 0x25e <InitializeUART0+0xaa>
	if (DataSizeInBits == 9) UCSR0C |= (7 << UCSZ00); // 9 bit data length
     250:	c9 30       	cpi	r28, 0x09	; 9
     252:	29 f4       	brne	.+10     	; 0x25e <InitializeUART0+0xaa>
     254:	e2 ec       	ldi	r30, 0xC2	; 194
     256:	f0 e0       	ldi	r31, 0x00	; 0
     258:	80 81       	ld	r24, Z
     25a:	8e 60       	ori	r24, 0x0E	; 14
     25c:	80 83       	st	Z, r24
}
     25e:	df 91       	pop	r29
     260:	cf 91       	pop	r28
     262:	1f 91       	pop	r17
     264:	0f 91       	pop	r16
     266:	08 95       	ret

00000268 <setPwm>:
#define PWMInit

#define F_CPU 16000000UL
#include <math.h>

void setPwm(double Pwm){
     268:	cf 92       	push	r12
     26a:	df 92       	push	r13
     26c:	ef 92       	push	r14
     26e:	ff 92       	push	r15
     270:	6b 01       	movw	r12, r22
     272:	7c 01       	movw	r14, r24
	if (Pwm <= 100)
     274:	20 e0       	ldi	r18, 0x00	; 0
     276:	30 e0       	ldi	r19, 0x00	; 0
     278:	48 ec       	ldi	r20, 0xC8	; 200
     27a:	52 e4       	ldi	r21, 0x42	; 66
     27c:	a7 d2       	rcall	.+1358   	; 0x7cc <__cmpsf2>
     27e:	18 16       	cp	r1, r24
     280:	ac f0       	brlt	.+42     	; 0x2ac <setPwm+0x44>
	{
		OCR4A = (uint16_t) ICR4 * 0.01 * Pwm;
     282:	60 91 a6 00 	lds	r22, 0x00A6	; 0x8000a6 <__TEXT_REGION_LENGTH__+0x7000a6>
     286:	70 91 a7 00 	lds	r23, 0x00A7	; 0x8000a7 <__TEXT_REGION_LENGTH__+0x7000a7>
     28a:	80 e0       	ldi	r24, 0x00	; 0
     28c:	90 e0       	ldi	r25, 0x00	; 0
     28e:	d3 d2       	rcall	.+1446   	; 0x836 <__floatunsisf>
     290:	2a e0       	ldi	r18, 0x0A	; 10
     292:	37 ed       	ldi	r19, 0xD7	; 215
     294:	43 e2       	ldi	r20, 0x23	; 35
     296:	5c e3       	ldi	r21, 0x3C	; 60
     298:	ba d3       	rcall	.+1908   	; 0xa0e <__mulsf3>
     29a:	a7 01       	movw	r20, r14
     29c:	96 01       	movw	r18, r12
     29e:	b7 d3       	rcall	.+1902   	; 0xa0e <__mulsf3>
     2a0:	9e d2       	rcall	.+1340   	; 0x7de <__fixunssfsi>
     2a2:	70 93 a9 00 	sts	0x00A9, r23	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7000a9>
     2a6:	60 93 a8 00 	sts	0x00A8, r22	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7000a8>
     2aa:	04 c0       	rjmp	.+8      	; 0x2b4 <setPwm+0x4c>
	} else {
		OCR4A = 0;
     2ac:	10 92 a9 00 	sts	0x00A9, r1	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7000a9>
     2b0:	10 92 a8 00 	sts	0x00A8, r1	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7000a8>
	}
}
     2b4:	ff 90       	pop	r15
     2b6:	ef 90       	pop	r14
     2b8:	df 90       	pop	r13
     2ba:	cf 90       	pop	r12
     2bc:	08 95       	ret

000002be <InitializePWM_4C>:

void InitializePWM_4C( uint32_t Frequency, int Pwm )
{
     2be:	0f 93       	push	r16
     2c0:	1f 93       	push	r17
     2c2:	cf 93       	push	r28
     2c4:	df 93       	push	r29
     2c6:	8b 01       	movw	r16, r22
     2c8:	9c 01       	movw	r18, r24
     2ca:	ea 01       	movw	r28, r20
	TCCR4B = 0x00;
     2cc:	e1 ea       	ldi	r30, 0xA1	; 161
     2ce:	f0 e0       	ldi	r31, 0x00	; 0
     2d0:	10 82       	st	Z, r1
	DDRH |= ( 1 << PH3 );
     2d2:	a1 e0       	ldi	r26, 0x01	; 1
     2d4:	b1 e0       	ldi	r27, 0x01	; 1
     2d6:	8c 91       	ld	r24, X
     2d8:	88 60       	ori	r24, 0x08	; 8
     2da:	8c 93       	st	X, r24
	TCCR4A |= ( 1 << WGM41) | ( 0 << WGM40 ) | ( 1 << COM4A1 ) | ( 0 << COM4A0 );
     2dc:	a0 ea       	ldi	r26, 0xA0	; 160
     2de:	b0 e0       	ldi	r27, 0x00	; 0
     2e0:	8c 91       	ld	r24, X
     2e2:	82 68       	ori	r24, 0x82	; 130
     2e4:	8c 93       	st	X, r24
	TCCR4B |= ( 1 << WGM43) | ( 1 << WGM42 ) ;
     2e6:	80 81       	ld	r24, Z
     2e8:	88 61       	ori	r24, 0x18	; 24
     2ea:	80 83       	st	Z, r24
	uint32_t F_factor = F_CPU / Frequency;
     2ec:	60 e0       	ldi	r22, 0x00	; 0
     2ee:	74 e2       	ldi	r23, 0x24	; 36
     2f0:	84 ef       	ldi	r24, 0xF4	; 244
     2f2:	90 e0       	ldi	r25, 0x00	; 0
     2f4:	a9 01       	movw	r20, r18
     2f6:	98 01       	movw	r18, r16
     2f8:	ed d3       	rcall	.+2010   	; 0xad4 <__udivmodsi4>
     2fa:	89 01       	movw	r16, r18
     2fc:	9a 01       	movw	r18, r20

	int shifter = 1;
	uint32_t multiplier = F_factor;
	while ( multiplier > 65535 ){
     2fe:	01 15       	cp	r16, r1
     300:	11 05       	cpc	r17, r1
     302:	61 e0       	ldi	r22, 0x01	; 1
     304:	26 07       	cpc	r18, r22
     306:	31 05       	cpc	r19, r1
     308:	38 f1       	brcs	.+78     	; 0x358 <InitializePWM_4C+0x9a>
     30a:	d9 01       	movw	r26, r18
     30c:	c8 01       	movw	r24, r16
     30e:	41 e0       	ldi	r20, 0x01	; 1
     310:	50 e0       	ldi	r21, 0x00	; 0
		multiplier /= 2;
     312:	b6 95       	lsr	r27
     314:	a7 95       	ror	r26
     316:	97 95       	ror	r25
     318:	87 95       	ror	r24
		shifter++;
     31a:	4f 5f       	subi	r20, 0xFF	; 255
     31c:	5f 4f       	sbci	r21, 0xFF	; 255
	TCCR4B |= ( 1 << WGM43) | ( 1 << WGM42 ) ;
	uint32_t F_factor = F_CPU / Frequency;

	int shifter = 1;
	uint32_t multiplier = F_factor;
	while ( multiplier > 65535 ){
     31e:	00 97       	sbiw	r24, 0x00	; 0
     320:	61 e0       	ldi	r22, 0x01	; 1
     322:	a6 07       	cpc	r26, r22
     324:	b1 05       	cpc	r27, r1
     326:	a8 f7       	brcc	.-22     	; 0x312 <InitializePWM_4C+0x54>
		shifter++;
	}
	if (shifter > 5) {
		shifter = 5;
	}
	switch ( shifter )
     328:	46 30       	cpi	r20, 0x06	; 6
     32a:	51 05       	cpc	r21, r1
     32c:	14 f0       	brlt	.+4      	; 0x332 <InitializePWM_4C+0x74>
     32e:	45 e0       	ldi	r20, 0x05	; 5
     330:	50 e0       	ldi	r21, 0x00	; 0
     332:	43 30       	cpi	r20, 0x03	; 3
     334:	51 05       	cpc	r21, r1
     336:	81 f1       	breq	.+96     	; 0x398 <InitializePWM_4C+0xda>
     338:	3c f4       	brge	.+14     	; 0x348 <InitializePWM_4C+0x8a>
     33a:	41 30       	cpi	r20, 0x01	; 1
     33c:	51 05       	cpc	r21, r1
     33e:	61 f0       	breq	.+24     	; 0x358 <InitializePWM_4C+0x9a>
     340:	42 30       	cpi	r20, 0x02	; 2
     342:	51 05       	cpc	r21, r1
     344:	a9 f0       	breq	.+42     	; 0x370 <InitializePWM_4C+0xb2>
     346:	60 c0       	rjmp	.+192    	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
     348:	44 30       	cpi	r20, 0x04	; 4
     34a:	51 05       	cpc	r21, r1
     34c:	c9 f1       	breq	.+114    	; 0x3c0 <InitializePWM_4C+0x102>
     34e:	45 30       	cpi	r20, 0x05	; 5
     350:	51 05       	cpc	r21, r1
     352:	09 f4       	brne	.+2      	; 0x356 <InitializePWM_4C+0x98>
     354:	45 c0       	rjmp	.+138    	; 0x3e0 <InitializePWM_4C+0x122>
     356:	58 c0       	rjmp	.+176    	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
		{
		case 1:
			TCCR4B |= ( 1 << CS40 ); 
     358:	e1 ea       	ldi	r30, 0xA1	; 161
     35a:	f0 e0       	ldi	r31, 0x00	; 0
     35c:	80 81       	ld	r24, Z
     35e:	81 60       	ori	r24, 0x01	; 1
     360:	80 83       	st	Z, r24
			ICR4 = (uint16_t) (F_factor  - 1);
     362:	01 50       	subi	r16, 0x01	; 1
     364:	11 09       	sbc	r17, r1
     366:	10 93 a7 00 	sts	0x00A7, r17	; 0x8000a7 <__TEXT_REGION_LENGTH__+0x7000a7>
     36a:	00 93 a6 00 	sts	0x00A6, r16	; 0x8000a6 <__TEXT_REGION_LENGTH__+0x7000a6>
		break;
     36e:	4c c0       	rjmp	.+152    	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
		case 2:
			TCCR4B |= ( 1 << CS41 ); //decrease in 8
     370:	e1 ea       	ldi	r30, 0xA1	; 161
     372:	f0 e0       	ldi	r31, 0x00	; 0
     374:	80 81       	ld	r24, Z
     376:	82 60       	ori	r24, 0x02	; 2
     378:	80 83       	st	Z, r24
			ICR4 = (uint16_t) (F_factor / 8  - 1);
     37a:	68 94       	set
     37c:	12 f8       	bld	r1, 2
     37e:	36 95       	lsr	r19
     380:	27 95       	ror	r18
     382:	17 95       	ror	r17
     384:	07 95       	ror	r16
     386:	16 94       	lsr	r1
     388:	d1 f7       	brne	.-12     	; 0x37e <InitializePWM_4C+0xc0>
     38a:	01 50       	subi	r16, 0x01	; 1
     38c:	11 09       	sbc	r17, r1
     38e:	10 93 a7 00 	sts	0x00A7, r17	; 0x8000a7 <__TEXT_REGION_LENGTH__+0x7000a7>
     392:	00 93 a6 00 	sts	0x00A6, r16	; 0x8000a6 <__TEXT_REGION_LENGTH__+0x7000a6>
		break;
     396:	38 c0       	rjmp	.+112    	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
		case 3:
			TCCR4B |= ( 1 << CS41 ) | ( 1 << CS40 ); //decrease in 64
     398:	e1 ea       	ldi	r30, 0xA1	; 161
     39a:	f0 e0       	ldi	r31, 0x00	; 0
     39c:	80 81       	ld	r24, Z
     39e:	83 60       	ori	r24, 0x03	; 3
     3a0:	80 83       	st	Z, r24
			ICR4 = (uint16_t) (F_factor / 64 - 1);
     3a2:	68 94       	set
     3a4:	15 f8       	bld	r1, 5
     3a6:	36 95       	lsr	r19
     3a8:	27 95       	ror	r18
     3aa:	17 95       	ror	r17
     3ac:	07 95       	ror	r16
     3ae:	16 94       	lsr	r1
     3b0:	d1 f7       	brne	.-12     	; 0x3a6 <InitializePWM_4C+0xe8>
     3b2:	01 50       	subi	r16, 0x01	; 1
     3b4:	11 09       	sbc	r17, r1
     3b6:	10 93 a7 00 	sts	0x00A7, r17	; 0x8000a7 <__TEXT_REGION_LENGTH__+0x7000a7>
     3ba:	00 93 a6 00 	sts	0x00A6, r16	; 0x8000a6 <__TEXT_REGION_LENGTH__+0x7000a6>
		break;
     3be:	24 c0       	rjmp	.+72     	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
		case 4:
			TCCR4B |= ( 1 << CS42 ); //decrease in 256
     3c0:	e1 ea       	ldi	r30, 0xA1	; 161
     3c2:	f0 e0       	ldi	r31, 0x00	; 0
     3c4:	80 81       	ld	r24, Z
     3c6:	84 60       	ori	r24, 0x04	; 4
     3c8:	80 83       	st	Z, r24
			ICR4 = (uint16_t) (F_factor / 256  - 1);
     3ca:	01 2f       	mov	r16, r17
     3cc:	12 2f       	mov	r17, r18
     3ce:	23 2f       	mov	r18, r19
     3d0:	33 27       	eor	r19, r19
     3d2:	01 50       	subi	r16, 0x01	; 1
     3d4:	11 09       	sbc	r17, r1
     3d6:	10 93 a7 00 	sts	0x00A7, r17	; 0x8000a7 <__TEXT_REGION_LENGTH__+0x7000a7>
     3da:	00 93 a6 00 	sts	0x00A6, r16	; 0x8000a6 <__TEXT_REGION_LENGTH__+0x7000a6>
		break;
     3de:	14 c0       	rjmp	.+40     	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
		case 5:
			TCCR4B |= ( 1 << CS42 ) | ( 1 << CS40 ); //decrease in 1024
     3e0:	e1 ea       	ldi	r30, 0xA1	; 161
     3e2:	f0 e0       	ldi	r31, 0x00	; 0
     3e4:	80 81       	ld	r24, Z
     3e6:	85 60       	ori	r24, 0x05	; 5
     3e8:	80 83       	st	Z, r24
			ICR4 = (uint16_t) (F_factor / 1024 + 1);
     3ea:	0f 2e       	mov	r0, r31
     3ec:	fa e0       	ldi	r31, 0x0A	; 10
     3ee:	36 95       	lsr	r19
     3f0:	27 95       	ror	r18
     3f2:	17 95       	ror	r17
     3f4:	07 95       	ror	r16
     3f6:	fa 95       	dec	r31
     3f8:	d1 f7       	brne	.-12     	; 0x3ee <InitializePWM_4C+0x130>
     3fa:	f0 2d       	mov	r31, r0
     3fc:	0f 5f       	subi	r16, 0xFF	; 255
     3fe:	1f 4f       	sbci	r17, 0xFF	; 255
     400:	10 93 a7 00 	sts	0x00A7, r17	; 0x8000a7 <__TEXT_REGION_LENGTH__+0x7000a7>
     404:	00 93 a6 00 	sts	0x00A6, r16	; 0x8000a6 <__TEXT_REGION_LENGTH__+0x7000a6>
		break;
	}
	
	if ( ICR4 == 0 )
     408:	80 91 a6 00 	lds	r24, 0x00A6	; 0x8000a6 <__TEXT_REGION_LENGTH__+0x7000a6>
     40c:	90 91 a7 00 	lds	r25, 0x00A7	; 0x8000a7 <__TEXT_REGION_LENGTH__+0x7000a7>
     410:	89 2b       	or	r24, r25
     412:	29 f4       	brne	.+10     	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
	{
		OCR4A = 0;
     414:	10 92 a9 00 	sts	0x00A9, r1	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7000a9>
     418:	10 92 a8 00 	sts	0x00A8, r1	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7000a8>
     41c:	06 c0       	rjmp	.+12     	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
	 } else {
		setPwm(Pwm); // 100 - percentage
     41e:	be 01       	movw	r22, r28
     420:	dd 0f       	add	r29, r29
     422:	88 0b       	sbc	r24, r24
     424:	99 0b       	sbc	r25, r25
     426:	09 d2       	rcall	.+1042   	; 0x83a <__floatsisf>
     428:	1f df       	rcall	.-450    	; 0x268 <setPwm>
	 }
}
     42a:	df 91       	pop	r29
     42c:	cf 91       	pop	r28
     42e:	1f 91       	pop	r17
     430:	0f 91       	pop	r16
     432:	08 95       	ret

00000434 <main>:
struct TIMER5 Timer5_1 = {.counter = 0, .captureFirst = 0, .captureSecond = 0, .seconds = 0, .totalTicks = 0 };
struct RPM RPM_1 = {.currentRPM = 0, .setRPM = 2500, .counter = 0};

int main(void)
{
	DDRH |= (1 << DDH4);
     434:	e1 e0       	ldi	r30, 0x01	; 1
     436:	f1 e0       	ldi	r31, 0x01	; 1
     438:	80 81       	ld	r24, Z
     43a:	80 61       	ori	r24, 0x10	; 16
     43c:	80 83       	st	Z, r24
	PORTH |=  (1 << PH4);
     43e:	e2 e0       	ldi	r30, 0x02	; 2
     440:	f1 e0       	ldi	r31, 0x01	; 1
     442:	80 81       	ld	r24, Z
     444:	80 61       	ori	r24, 0x10	; 16
     446:	80 83       	st	Z, r24
	
	//DDRD |= (0 << DDD4);
	PORTD |= (1 << PD3);
     448:	5b 9a       	sbi	0x0b, 3	; 11
	
  TIMSK5 |= (1 << TOIE5) | (0 << ICIE5);
     44a:	e3 e7       	ldi	r30, 0x73	; 115
     44c:	f0 e0       	ldi	r31, 0x00	; 0
     44e:	80 81       	ld	r24, Z
     450:	81 60       	ori	r24, 0x01	; 1
     452:	80 83       	st	Z, r24
	TCCR5A = (0	<< COM5A1) | (0 << COM5A0) | (0 << WGM51) | ( 0 << WGM50);
     454:	10 92 20 01 	sts	0x0120, r1	; 0x800120 <__TEXT_REGION_LENGTH__+0x700120>
	TCCR5B = (0 << ICNC5 ) | (0 << ICES5) | (0 << WGM53) | (0 << WGM52) | (0 << CS52) | (0 << CS51) | (1 << CS50);
     458:	81 e0       	ldi	r24, 0x01	; 1
     45a:	80 93 21 01 	sts	0x0121, r24	; 0x800121 <__TEXT_REGION_LENGTH__+0x700121>
  TCNT5 = 1535;
     45e:	8f ef       	ldi	r24, 0xFF	; 255
     460:	95 e0       	ldi	r25, 0x05	; 5
     462:	90 93 25 01 	sts	0x0125, r25	; 0x800125 <__TEXT_REGION_LENGTH__+0x700125>
     466:	80 93 24 01 	sts	0x0124, r24	; 0x800124 <__TEXT_REGION_LENGTH__+0x700124>
	
	EICRA |= (0 << ISC31) | (1 << ISC30);
     46a:	e9 e6       	ldi	r30, 0x69	; 105
     46c:	f0 e0       	ldi	r31, 0x00	; 0
     46e:	80 81       	ld	r24, Z
     470:	80 64       	ori	r24, 0x40	; 64
     472:	80 83       	st	Z, r24
	EIMSK |= (1 << INT3);
     474:	eb 9a       	sbi	0x1d, 3	; 29

	sei();
     476:	78 94       	sei
	InitializeUART0(9600, 0, 8, 0, 0);
     478:	00 e0       	ldi	r16, 0x00	; 0
     47a:	20 e0       	ldi	r18, 0x00	; 0
     47c:	48 e0       	ldi	r20, 0x08	; 8
     47e:	60 e0       	ldi	r22, 0x00	; 0
     480:	80 e8       	ldi	r24, 0x80	; 128
     482:	95 e2       	ldi	r25, 0x25	; 37
     484:	97 de       	rcall	.-722    	; 0x1b4 <InitializeUART0>
	InitializePWM_4C(PWM4C.pwmFrequency, PWM4C.pwmValue);
     486:	e6 e0       	ldi	r30, 0x06	; 6
     488:	f2 e0       	ldi	r31, 0x02	; 2
     48a:	62 81       	ldd	r22, Z+2	; 0x02
     48c:	73 81       	ldd	r23, Z+3	; 0x03
     48e:	84 81       	ldd	r24, Z+4	; 0x04
     490:	95 81       	ldd	r25, Z+5	; 0x05
     492:	c0 81       	ld	r28, Z
     494:	d1 81       	ldd	r29, Z+1	; 0x01
     496:	9e d1       	rcall	.+828    	; 0x7d4 <__fixsfsi>
     498:	9b 01       	movw	r18, r22
     49a:	ac 01       	movw	r20, r24
     49c:	be 01       	movw	r22, r28
     49e:	80 e0       	ldi	r24, 0x00	; 0
     4a0:	90 e0       	ldi	r25, 0x00	; 0
     4a2:	a9 01       	movw	r20, r18
     4a4:	0c df       	rcall	.-488    	; 0x2be <InitializePWM_4C>
     4a6:	ff cf       	rjmp	.-2      	; 0x4a6 <main+0x72>

000004a8 <__vector_46>:
    }
}


ISR(TIMER5_CAPT_vect)
{
     4a8:	1f 92       	push	r1
     4aa:	0f 92       	push	r0
     4ac:	0f b6       	in	r0, 0x3f	; 63
     4ae:	0f 92       	push	r0
     4b0:	11 24       	eor	r1, r1
	//counter++;
	cli();
     4b2:	f8 94       	cli
		////TransmitString("-");
		//setPwm(PWM4C.pwmValue -= 0.05);
	//}
	//TCNT5 = 0;
	//Timer5_1.counter = 0;
	sei();
     4b4:	78 94       	sei
}
     4b6:	0f 90       	pop	r0
     4b8:	0f be       	out	0x3f, r0	; 63
     4ba:	0f 90       	pop	r0
     4bc:	1f 90       	pop	r1
     4be:	18 95       	reti

000004c0 <__vector_4>:

ISR(INT3_vect)
{
     4c0:	1f 92       	push	r1
     4c2:	0f 92       	push	r0
     4c4:	0f b6       	in	r0, 0x3f	; 63
     4c6:	0f 92       	push	r0
     4c8:	11 24       	eor	r1, r1
     4ca:	0b b6       	in	r0, 0x3b	; 59
     4cc:	0f 92       	push	r0
     4ce:	cf 92       	push	r12
     4d0:	df 92       	push	r13
     4d2:	ef 92       	push	r14
     4d4:	ff 92       	push	r15
     4d6:	0f 93       	push	r16
     4d8:	1f 93       	push	r17
     4da:	2f 93       	push	r18
     4dc:	3f 93       	push	r19
     4de:	4f 93       	push	r20
     4e0:	5f 93       	push	r21
     4e2:	6f 93       	push	r22
     4e4:	7f 93       	push	r23
     4e6:	8f 93       	push	r24
     4e8:	9f 93       	push	r25
     4ea:	af 93       	push	r26
     4ec:	bf 93       	push	r27
     4ee:	cf 93       	push	r28
     4f0:	df 93       	push	r29
     4f2:	ef 93       	push	r30
     4f4:	ff 93       	push	r31
	RPM_1.counter++;
     4f6:	e0 e0       	ldi	r30, 0x00	; 0
     4f8:	f2 e0       	ldi	r31, 0x02	; 2
     4fa:	84 81       	ldd	r24, Z+4	; 0x04
     4fc:	95 81       	ldd	r25, Z+5	; 0x05
     4fe:	01 96       	adiw	r24, 0x01	; 1
     500:	95 83       	std	Z+5, r25	; 0x05
     502:	84 83       	std	Z+4, r24	; 0x04
	if(RPM_1.counter >= 10) {
     504:	84 81       	ldd	r24, Z+4	; 0x04
     506:	95 81       	ldd	r25, Z+5	; 0x05
     508:	0a 97       	sbiw	r24, 0x0a	; 10
     50a:	e0 f1       	brcs	.+120    	; 0x584 <__vector_4+0xc4>
		Timer5_1.totalTicks += Timer5_1.counter * 64000 + TCNT5;
     50c:	c0 e1       	ldi	r28, 0x10	; 16
     50e:	d2 e0       	ldi	r29, 0x02	; 2
     510:	28 81       	ld	r18, Y
     512:	39 81       	ldd	r19, Y+1	; 0x01
     514:	4a 81       	ldd	r20, Y+2	; 0x02
     516:	5b 81       	ldd	r21, Y+3	; 0x03
     518:	04 e2       	ldi	r16, 0x24	; 36
     51a:	11 e0       	ldi	r17, 0x01	; 1
     51c:	d8 01       	movw	r26, r16
     51e:	ed 91       	ld	r30, X+
     520:	fc 91       	ld	r31, X
     522:	c8 88       	ldd	r12, Y+16	; 0x10
     524:	d9 88       	ldd	r13, Y+17	; 0x11
     526:	ea 88       	ldd	r14, Y+18	; 0x12
     528:	fb 88       	ldd	r15, Y+19	; 0x13
     52a:	a0 e0       	ldi	r26, 0x00	; 0
     52c:	ba ef       	ldi	r27, 0xFA	; 250
     52e:	f4 d2       	rcall	.+1512   	; 0xb18 <__muluhisi3>
     530:	dc 01       	movw	r26, r24
     532:	cb 01       	movw	r24, r22
     534:	8e 0f       	add	r24, r30
     536:	9f 1f       	adc	r25, r31
     538:	a1 1d       	adc	r26, r1
     53a:	b1 1d       	adc	r27, r1
     53c:	c8 0e       	add	r12, r24
     53e:	d9 1e       	adc	r13, r25
     540:	ea 1e       	adc	r14, r26
     542:	fb 1e       	adc	r15, r27
     544:	c8 8a       	std	Y+16, r12	; 0x10
     546:	d9 8a       	std	Y+17, r13	; 0x11
     548:	ea 8a       	std	Y+18, r14	; 0x12
     54a:	fb 8a       	std	Y+19, r15	; 0x13
		multiply by 60 - per minute
		division by 4 - number of poles on engine - 8 => real revolution = 4 magnetic field revolutions
										(so, hall sensors will be detect it 4 times per real(mechanical) revolution) 
		division by 4 - interruption works on rise and fall => 10 * 60 / 4 / 2 = 75
		\****************/
		RPM_1.currentRPM = F_CPU * 75 /* 10 */ / Timer5_1.totalTicks /* * 60 / 4 / 2 */ ;
     54c:	28 89       	ldd	r18, Y+16	; 0x10
     54e:	39 89       	ldd	r19, Y+17	; 0x11
     550:	4a 89       	ldd	r20, Y+18	; 0x12
     552:	5b 89       	ldd	r21, Y+19	; 0x13
     554:	60 e0       	ldi	r22, 0x00	; 0
     556:	7c e8       	ldi	r23, 0x8C	; 140
     558:	86 e8       	ldi	r24, 0x86	; 134
     55a:	97 e4       	ldi	r25, 0x47	; 71
     55c:	bb d2       	rcall	.+1398   	; 0xad4 <__udivmodsi4>
     55e:	e0 e0       	ldi	r30, 0x00	; 0
     560:	f2 e0       	ldi	r31, 0x02	; 2
     562:	31 83       	std	Z+1, r19	; 0x01
     564:	20 83       	st	Z, r18
		RPM_1.counter = 0;
     566:	15 82       	std	Z+5, r1	; 0x05
     568:	14 82       	std	Z+4, r1	; 0x04
		Timer5_1.counter = 0;
     56a:	18 82       	st	Y, r1
     56c:	19 82       	std	Y+1, r1	; 0x01
     56e:	1a 82       	std	Y+2, r1	; 0x02
     570:	1b 82       	std	Y+3, r1	; 0x03
		Timer5_1.totalTicks = 0;
     572:	18 8a       	std	Y+16, r1	; 0x10
     574:	19 8a       	std	Y+17, r1	; 0x11
     576:	1a 8a       	std	Y+18, r1	; 0x12
     578:	1b 8a       	std	Y+19, r1	; 0x13
		TCNT5 = 1535;
     57a:	8f ef       	ldi	r24, 0xFF	; 255
     57c:	95 e0       	ldi	r25, 0x05	; 5
     57e:	f8 01       	movw	r30, r16
     580:	91 83       	std	Z+1, r25	; 0x01
     582:	80 83       	st	Z, r24
	}
	
}
     584:	ff 91       	pop	r31
     586:	ef 91       	pop	r30
     588:	df 91       	pop	r29
     58a:	cf 91       	pop	r28
     58c:	bf 91       	pop	r27
     58e:	af 91       	pop	r26
     590:	9f 91       	pop	r25
     592:	8f 91       	pop	r24
     594:	7f 91       	pop	r23
     596:	6f 91       	pop	r22
     598:	5f 91       	pop	r21
     59a:	4f 91       	pop	r20
     59c:	3f 91       	pop	r19
     59e:	2f 91       	pop	r18
     5a0:	1f 91       	pop	r17
     5a2:	0f 91       	pop	r16
     5a4:	ff 90       	pop	r15
     5a6:	ef 90       	pop	r14
     5a8:	df 90       	pop	r13
     5aa:	cf 90       	pop	r12
     5ac:	0f 90       	pop	r0
     5ae:	0b be       	out	0x3b, r0	; 59
     5b0:	0f 90       	pop	r0
     5b2:	0f be       	out	0x3f, r0	; 63
     5b4:	0f 90       	pop	r0
     5b6:	1f 90       	pop	r1
     5b8:	18 95       	reti

000005ba <__vector_50>:

ISR(TIMER5_OVF_vect)
{
     5ba:	1f 92       	push	r1
     5bc:	0f 92       	push	r0
     5be:	0f b6       	in	r0, 0x3f	; 63
     5c0:	0f 92       	push	r0
     5c2:	11 24       	eor	r1, r1
     5c4:	0b b6       	in	r0, 0x3b	; 59
     5c6:	0f 92       	push	r0
     5c8:	2f 93       	push	r18
     5ca:	3f 93       	push	r19
     5cc:	4f 93       	push	r20
     5ce:	5f 93       	push	r21
     5d0:	6f 93       	push	r22
     5d2:	7f 93       	push	r23
     5d4:	8f 93       	push	r24
     5d6:	9f 93       	push	r25
     5d8:	af 93       	push	r26
     5da:	bf 93       	push	r27
     5dc:	ef 93       	push	r30
     5de:	ff 93       	push	r31
	TCNT5 = 1535;
     5e0:	8f ef       	ldi	r24, 0xFF	; 255
     5e2:	95 e0       	ldi	r25, 0x05	; 5
     5e4:	90 93 25 01 	sts	0x0125, r25	; 0x800125 <__TEXT_REGION_LENGTH__+0x700125>
     5e8:	80 93 24 01 	sts	0x0124, r24	; 0x800124 <__TEXT_REGION_LENGTH__+0x700124>
	Timer5_1.counter++;
     5ec:	e0 e1       	ldi	r30, 0x10	; 16
     5ee:	f2 e0       	ldi	r31, 0x02	; 2
     5f0:	80 81       	ld	r24, Z
     5f2:	91 81       	ldd	r25, Z+1	; 0x01
     5f4:	a2 81       	ldd	r26, Z+2	; 0x02
     5f6:	b3 81       	ldd	r27, Z+3	; 0x03
     5f8:	01 96       	adiw	r24, 0x01	; 1
     5fa:	a1 1d       	adc	r26, r1
     5fc:	b1 1d       	adc	r27, r1
     5fe:	80 83       	st	Z, r24
     600:	91 83       	std	Z+1, r25	; 0x01
     602:	a2 83       	std	Z+2, r26	; 0x02
     604:	b3 83       	std	Z+3, r27	; 0x03
	if(++Timer5_1.seconds >= 125){
     606:	84 85       	ldd	r24, Z+12	; 0x0c
     608:	95 85       	ldd	r25, Z+13	; 0x0d
     60a:	a6 85       	ldd	r26, Z+14	; 0x0e
     60c:	b7 85       	ldd	r27, Z+15	; 0x0f
     60e:	01 96       	adiw	r24, 0x01	; 1
     610:	a1 1d       	adc	r26, r1
     612:	b1 1d       	adc	r27, r1
     614:	84 87       	std	Z+12, r24	; 0x0c
     616:	95 87       	std	Z+13, r25	; 0x0d
     618:	a6 87       	std	Z+14, r26	; 0x0e
     61a:	b7 87       	std	Z+15, r27	; 0x0f
     61c:	8d 37       	cpi	r24, 0x7D	; 125
     61e:	91 05       	cpc	r25, r1
     620:	a1 05       	cpc	r26, r1
     622:	b1 05       	cpc	r27, r1
     624:	78 f0       	brcs	.+30     	; 0x644 <__vector_50+0x8a>
		Timer5_1.seconds = 0;
     626:	10 92 1c 02 	sts	0x021C, r1	; 0x80021c <__data_end+0xc>
     62a:	10 92 1d 02 	sts	0x021D, r1	; 0x80021d <__data_end+0xd>
     62e:	10 92 1e 02 	sts	0x021E, r1	; 0x80021e <__data_end+0xe>
     632:	10 92 1f 02 	sts	0x021F, r1	; 0x80021f <__data_end+0xf>
		send_int_Uart(RPM_1.currentRPM);
     636:	60 91 00 02 	lds	r22, 0x0200	; 0x800200 <RPM_1>
     63a:	70 91 01 02 	lds	r23, 0x0201	; 0x800201 <RPM_1+0x1>
     63e:	80 e0       	ldi	r24, 0x00	; 0
     640:	90 e0       	ldi	r25, 0x00	; 0
     642:	8c dd       	rcall	.-1256   	; 0x15c <send_int_Uart>
	}
		
	//PORTH ^= (1 << PH4);
}
     644:	ff 91       	pop	r31
     646:	ef 91       	pop	r30
     648:	bf 91       	pop	r27
     64a:	af 91       	pop	r26
     64c:	9f 91       	pop	r25
     64e:	8f 91       	pop	r24
     650:	7f 91       	pop	r23
     652:	6f 91       	pop	r22
     654:	5f 91       	pop	r21
     656:	4f 91       	pop	r20
     658:	3f 91       	pop	r19
     65a:	2f 91       	pop	r18
     65c:	0f 90       	pop	r0
     65e:	0b be       	out	0x3b, r0	; 59
     660:	0f 90       	pop	r0
     662:	0f be       	out	0x3f, r0	; 63
     664:	0f 90       	pop	r0
     666:	1f 90       	pop	r1
     668:	18 95       	reti

0000066a <__vector_25>:

ISR (USART0_RX_vect)
{
     66a:	1f 92       	push	r1
     66c:	0f 92       	push	r0
     66e:	0f b6       	in	r0, 0x3f	; 63
     670:	0f 92       	push	r0
     672:	11 24       	eor	r1, r1
     674:	0b b6       	in	r0, 0x3b	; 59
     676:	0f 92       	push	r0
     678:	2f 93       	push	r18
     67a:	3f 93       	push	r19
     67c:	4f 93       	push	r20
     67e:	5f 93       	push	r21
     680:	6f 93       	push	r22
     682:	7f 93       	push	r23
     684:	8f 93       	push	r24
     686:	9f 93       	push	r25
     688:	af 93       	push	r26
     68a:	bf 93       	push	r27
     68c:	cf 93       	push	r28
     68e:	df 93       	push	r29
     690:	ef 93       	push	r30
     692:	ff 93       	push	r31
	UART0.data_in[UART0.dataCount] = UDR0;
     694:	e0 91 34 02 	lds	r30, 0x0234	; 0x800234 <UART0+0x10>
     698:	f0 e0       	ldi	r31, 0x00	; 0
     69a:	a6 ec       	ldi	r26, 0xC6	; 198
     69c:	b0 e0       	ldi	r27, 0x00	; 0
     69e:	8c 91       	ld	r24, X
     6a0:	ec 5d       	subi	r30, 0xDC	; 220
     6a2:	fd 4f       	sbci	r31, 0xFD	; 253
     6a4:	80 83       	st	Z, r24
	if(UDR0 == '+' ) {
     6a6:	8c 91       	ld	r24, X
     6a8:	8b 32       	cpi	r24, 0x2B	; 43
     6aa:	89 f4       	brne	.+34     	; 0x6ce <__vector_25+0x64>
		setPwm(++PWM4C.pwmValue);
     6ac:	c6 e0       	ldi	r28, 0x06	; 6
     6ae:	d2 e0       	ldi	r29, 0x02	; 2
     6b0:	6a 81       	ldd	r22, Y+2	; 0x02
     6b2:	7b 81       	ldd	r23, Y+3	; 0x03
     6b4:	8c 81       	ldd	r24, Y+4	; 0x04
     6b6:	9d 81       	ldd	r25, Y+5	; 0x05
     6b8:	20 e0       	ldi	r18, 0x00	; 0
     6ba:	30 e0       	ldi	r19, 0x00	; 0
     6bc:	40 e8       	ldi	r20, 0x80	; 128
     6be:	5f e3       	ldi	r21, 0x3F	; 63
     6c0:	21 d0       	rcall	.+66     	; 0x704 <__addsf3>
     6c2:	6a 83       	std	Y+2, r22	; 0x02
     6c4:	7b 83       	std	Y+3, r23	; 0x03
     6c6:	8c 83       	std	Y+4, r24	; 0x04
     6c8:	9d 83       	std	Y+5, r25	; 0x05
     6ca:	ce dd       	rcall	.-1124   	; 0x268 <setPwm>
     6cc:	05 c0       	rjmp	.+10     	; 0x6d8 <__vector_25+0x6e>
		//TransmitString(UART0.data_in);
		//UART0.dataCount = 0;
		//memset(&UART0.dataCount, 0, sizeof(UART0.dataCount));
	} else {
		UART0.dataCount++;
     6ce:	e4 e2       	ldi	r30, 0x24	; 36
     6d0:	f2 e0       	ldi	r31, 0x02	; 2
     6d2:	80 89       	ldd	r24, Z+16	; 0x10
     6d4:	8f 5f       	subi	r24, 0xFF	; 255
     6d6:	80 8b       	std	Z+16, r24	; 0x10
	}
	//TransmitString(UART0.data_in);
}
     6d8:	ff 91       	pop	r31
     6da:	ef 91       	pop	r30
     6dc:	df 91       	pop	r29
     6de:	cf 91       	pop	r28
     6e0:	bf 91       	pop	r27
     6e2:	af 91       	pop	r26
     6e4:	9f 91       	pop	r25
     6e6:	8f 91       	pop	r24
     6e8:	7f 91       	pop	r23
     6ea:	6f 91       	pop	r22
     6ec:	5f 91       	pop	r21
     6ee:	4f 91       	pop	r20
     6f0:	3f 91       	pop	r19
     6f2:	2f 91       	pop	r18
     6f4:	0f 90       	pop	r0
     6f6:	0b be       	out	0x3b, r0	; 59
     6f8:	0f 90       	pop	r0
     6fa:	0f be       	out	0x3f, r0	; 63
     6fc:	0f 90       	pop	r0
     6fe:	1f 90       	pop	r1
     700:	18 95       	reti

00000702 <__subsf3>:
     702:	50 58       	subi	r21, 0x80	; 128

00000704 <__addsf3>:
     704:	bb 27       	eor	r27, r27
     706:	aa 27       	eor	r26, r26
     708:	0e d0       	rcall	.+28     	; 0x726 <__addsf3x>
     70a:	0d c1       	rjmp	.+538    	; 0x926 <__fp_round>
     70c:	fe d0       	rcall	.+508    	; 0x90a <__fp_pscA>
     70e:	30 f0       	brcs	.+12     	; 0x71c <__addsf3+0x18>
     710:	03 d1       	rcall	.+518    	; 0x918 <__fp_pscB>
     712:	20 f0       	brcs	.+8      	; 0x71c <__addsf3+0x18>
     714:	31 f4       	brne	.+12     	; 0x722 <__addsf3+0x1e>
     716:	9f 3f       	cpi	r25, 0xFF	; 255
     718:	11 f4       	brne	.+4      	; 0x71e <__addsf3+0x1a>
     71a:	1e f4       	brtc	.+6      	; 0x722 <__addsf3+0x1e>
     71c:	f3 c0       	rjmp	.+486    	; 0x904 <__fp_nan>
     71e:	0e f4       	brtc	.+2      	; 0x722 <__addsf3+0x1e>
     720:	e0 95       	com	r30
     722:	e7 fb       	bst	r30, 7
     724:	e9 c0       	rjmp	.+466    	; 0x8f8 <__fp_inf>

00000726 <__addsf3x>:
     726:	e9 2f       	mov	r30, r25
     728:	0f d1       	rcall	.+542    	; 0x948 <__fp_split3>
     72a:	80 f3       	brcs	.-32     	; 0x70c <__addsf3+0x8>
     72c:	ba 17       	cp	r27, r26
     72e:	62 07       	cpc	r22, r18
     730:	73 07       	cpc	r23, r19
     732:	84 07       	cpc	r24, r20
     734:	95 07       	cpc	r25, r21
     736:	18 f0       	brcs	.+6      	; 0x73e <__addsf3x+0x18>
     738:	71 f4       	brne	.+28     	; 0x756 <__addsf3x+0x30>
     73a:	9e f5       	brtc	.+102    	; 0x7a2 <__addsf3x+0x7c>
     73c:	27 c1       	rjmp	.+590    	; 0x98c <__fp_zero>
     73e:	0e f4       	brtc	.+2      	; 0x742 <__addsf3x+0x1c>
     740:	e0 95       	com	r30
     742:	0b 2e       	mov	r0, r27
     744:	ba 2f       	mov	r27, r26
     746:	a0 2d       	mov	r26, r0
     748:	0b 01       	movw	r0, r22
     74a:	b9 01       	movw	r22, r18
     74c:	90 01       	movw	r18, r0
     74e:	0c 01       	movw	r0, r24
     750:	ca 01       	movw	r24, r20
     752:	a0 01       	movw	r20, r0
     754:	11 24       	eor	r1, r1
     756:	ff 27       	eor	r31, r31
     758:	59 1b       	sub	r21, r25
     75a:	99 f0       	breq	.+38     	; 0x782 <__addsf3x+0x5c>
     75c:	59 3f       	cpi	r21, 0xF9	; 249
     75e:	50 f4       	brcc	.+20     	; 0x774 <__addsf3x+0x4e>
     760:	50 3e       	cpi	r21, 0xE0	; 224
     762:	68 f1       	brcs	.+90     	; 0x7be <__addsf3x+0x98>
     764:	1a 16       	cp	r1, r26
     766:	f0 40       	sbci	r31, 0x00	; 0
     768:	a2 2f       	mov	r26, r18
     76a:	23 2f       	mov	r18, r19
     76c:	34 2f       	mov	r19, r20
     76e:	44 27       	eor	r20, r20
     770:	58 5f       	subi	r21, 0xF8	; 248
     772:	f3 cf       	rjmp	.-26     	; 0x75a <__addsf3x+0x34>
     774:	46 95       	lsr	r20
     776:	37 95       	ror	r19
     778:	27 95       	ror	r18
     77a:	a7 95       	ror	r26
     77c:	f0 40       	sbci	r31, 0x00	; 0
     77e:	53 95       	inc	r21
     780:	c9 f7       	brne	.-14     	; 0x774 <__addsf3x+0x4e>
     782:	7e f4       	brtc	.+30     	; 0x7a2 <__addsf3x+0x7c>
     784:	1f 16       	cp	r1, r31
     786:	ba 0b       	sbc	r27, r26
     788:	62 0b       	sbc	r22, r18
     78a:	73 0b       	sbc	r23, r19
     78c:	84 0b       	sbc	r24, r20
     78e:	ba f0       	brmi	.+46     	; 0x7be <__addsf3x+0x98>
     790:	91 50       	subi	r25, 0x01	; 1
     792:	a1 f0       	breq	.+40     	; 0x7bc <__addsf3x+0x96>
     794:	ff 0f       	add	r31, r31
     796:	bb 1f       	adc	r27, r27
     798:	66 1f       	adc	r22, r22
     79a:	77 1f       	adc	r23, r23
     79c:	88 1f       	adc	r24, r24
     79e:	c2 f7       	brpl	.-16     	; 0x790 <__addsf3x+0x6a>
     7a0:	0e c0       	rjmp	.+28     	; 0x7be <__addsf3x+0x98>
     7a2:	ba 0f       	add	r27, r26
     7a4:	62 1f       	adc	r22, r18
     7a6:	73 1f       	adc	r23, r19
     7a8:	84 1f       	adc	r24, r20
     7aa:	48 f4       	brcc	.+18     	; 0x7be <__addsf3x+0x98>
     7ac:	87 95       	ror	r24
     7ae:	77 95       	ror	r23
     7b0:	67 95       	ror	r22
     7b2:	b7 95       	ror	r27
     7b4:	f7 95       	ror	r31
     7b6:	9e 3f       	cpi	r25, 0xFE	; 254
     7b8:	08 f0       	brcs	.+2      	; 0x7bc <__addsf3x+0x96>
     7ba:	b3 cf       	rjmp	.-154    	; 0x722 <__addsf3+0x1e>
     7bc:	93 95       	inc	r25
     7be:	88 0f       	add	r24, r24
     7c0:	08 f0       	brcs	.+2      	; 0x7c4 <__addsf3x+0x9e>
     7c2:	99 27       	eor	r25, r25
     7c4:	ee 0f       	add	r30, r30
     7c6:	97 95       	ror	r25
     7c8:	87 95       	ror	r24
     7ca:	08 95       	ret

000007cc <__cmpsf2>:
     7cc:	71 d0       	rcall	.+226    	; 0x8b0 <__fp_cmp>
     7ce:	08 f4       	brcc	.+2      	; 0x7d2 <__cmpsf2+0x6>
     7d0:	81 e0       	ldi	r24, 0x01	; 1
     7d2:	08 95       	ret

000007d4 <__fixsfsi>:
     7d4:	04 d0       	rcall	.+8      	; 0x7de <__fixunssfsi>
     7d6:	68 94       	set
     7d8:	b1 11       	cpse	r27, r1
     7da:	d9 c0       	rjmp	.+434    	; 0x98e <__fp_szero>
     7dc:	08 95       	ret

000007de <__fixunssfsi>:
     7de:	bc d0       	rcall	.+376    	; 0x958 <__fp_splitA>
     7e0:	88 f0       	brcs	.+34     	; 0x804 <__fixunssfsi+0x26>
     7e2:	9f 57       	subi	r25, 0x7F	; 127
     7e4:	90 f0       	brcs	.+36     	; 0x80a <__fixunssfsi+0x2c>
     7e6:	b9 2f       	mov	r27, r25
     7e8:	99 27       	eor	r25, r25
     7ea:	b7 51       	subi	r27, 0x17	; 23
     7ec:	a0 f0       	brcs	.+40     	; 0x816 <__fixunssfsi+0x38>
     7ee:	d1 f0       	breq	.+52     	; 0x824 <__fixunssfsi+0x46>
     7f0:	66 0f       	add	r22, r22
     7f2:	77 1f       	adc	r23, r23
     7f4:	88 1f       	adc	r24, r24
     7f6:	99 1f       	adc	r25, r25
     7f8:	1a f0       	brmi	.+6      	; 0x800 <__fixunssfsi+0x22>
     7fa:	ba 95       	dec	r27
     7fc:	c9 f7       	brne	.-14     	; 0x7f0 <__fixunssfsi+0x12>
     7fe:	12 c0       	rjmp	.+36     	; 0x824 <__fixunssfsi+0x46>
     800:	b1 30       	cpi	r27, 0x01	; 1
     802:	81 f0       	breq	.+32     	; 0x824 <__fixunssfsi+0x46>
     804:	c3 d0       	rcall	.+390    	; 0x98c <__fp_zero>
     806:	b1 e0       	ldi	r27, 0x01	; 1
     808:	08 95       	ret
     80a:	c0 c0       	rjmp	.+384    	; 0x98c <__fp_zero>
     80c:	67 2f       	mov	r22, r23
     80e:	78 2f       	mov	r23, r24
     810:	88 27       	eor	r24, r24
     812:	b8 5f       	subi	r27, 0xF8	; 248
     814:	39 f0       	breq	.+14     	; 0x824 <__fixunssfsi+0x46>
     816:	b9 3f       	cpi	r27, 0xF9	; 249
     818:	cc f3       	brlt	.-14     	; 0x80c <__fixunssfsi+0x2e>
     81a:	86 95       	lsr	r24
     81c:	77 95       	ror	r23
     81e:	67 95       	ror	r22
     820:	b3 95       	inc	r27
     822:	d9 f7       	brne	.-10     	; 0x81a <__fixunssfsi+0x3c>
     824:	3e f4       	brtc	.+14     	; 0x834 <__fixunssfsi+0x56>
     826:	90 95       	com	r25
     828:	80 95       	com	r24
     82a:	70 95       	com	r23
     82c:	61 95       	neg	r22
     82e:	7f 4f       	sbci	r23, 0xFF	; 255
     830:	8f 4f       	sbci	r24, 0xFF	; 255
     832:	9f 4f       	sbci	r25, 0xFF	; 255
     834:	08 95       	ret

00000836 <__floatunsisf>:
     836:	e8 94       	clt
     838:	09 c0       	rjmp	.+18     	; 0x84c <__floatsisf+0x12>

0000083a <__floatsisf>:
     83a:	97 fb       	bst	r25, 7
     83c:	3e f4       	brtc	.+14     	; 0x84c <__floatsisf+0x12>
     83e:	90 95       	com	r25
     840:	80 95       	com	r24
     842:	70 95       	com	r23
     844:	61 95       	neg	r22
     846:	7f 4f       	sbci	r23, 0xFF	; 255
     848:	8f 4f       	sbci	r24, 0xFF	; 255
     84a:	9f 4f       	sbci	r25, 0xFF	; 255
     84c:	99 23       	and	r25, r25
     84e:	a9 f0       	breq	.+42     	; 0x87a <__floatsisf+0x40>
     850:	f9 2f       	mov	r31, r25
     852:	96 e9       	ldi	r25, 0x96	; 150
     854:	bb 27       	eor	r27, r27
     856:	93 95       	inc	r25
     858:	f6 95       	lsr	r31
     85a:	87 95       	ror	r24
     85c:	77 95       	ror	r23
     85e:	67 95       	ror	r22
     860:	b7 95       	ror	r27
     862:	f1 11       	cpse	r31, r1
     864:	f8 cf       	rjmp	.-16     	; 0x856 <__floatsisf+0x1c>
     866:	fa f4       	brpl	.+62     	; 0x8a6 <__floatsisf+0x6c>
     868:	bb 0f       	add	r27, r27
     86a:	11 f4       	brne	.+4      	; 0x870 <__floatsisf+0x36>
     86c:	60 ff       	sbrs	r22, 0
     86e:	1b c0       	rjmp	.+54     	; 0x8a6 <__floatsisf+0x6c>
     870:	6f 5f       	subi	r22, 0xFF	; 255
     872:	7f 4f       	sbci	r23, 0xFF	; 255
     874:	8f 4f       	sbci	r24, 0xFF	; 255
     876:	9f 4f       	sbci	r25, 0xFF	; 255
     878:	16 c0       	rjmp	.+44     	; 0x8a6 <__floatsisf+0x6c>
     87a:	88 23       	and	r24, r24
     87c:	11 f0       	breq	.+4      	; 0x882 <__floatsisf+0x48>
     87e:	96 e9       	ldi	r25, 0x96	; 150
     880:	11 c0       	rjmp	.+34     	; 0x8a4 <__floatsisf+0x6a>
     882:	77 23       	and	r23, r23
     884:	21 f0       	breq	.+8      	; 0x88e <__floatsisf+0x54>
     886:	9e e8       	ldi	r25, 0x8E	; 142
     888:	87 2f       	mov	r24, r23
     88a:	76 2f       	mov	r23, r22
     88c:	05 c0       	rjmp	.+10     	; 0x898 <__floatsisf+0x5e>
     88e:	66 23       	and	r22, r22
     890:	71 f0       	breq	.+28     	; 0x8ae <__floatsisf+0x74>
     892:	96 e8       	ldi	r25, 0x86	; 134
     894:	86 2f       	mov	r24, r22
     896:	70 e0       	ldi	r23, 0x00	; 0
     898:	60 e0       	ldi	r22, 0x00	; 0
     89a:	2a f0       	brmi	.+10     	; 0x8a6 <__floatsisf+0x6c>
     89c:	9a 95       	dec	r25
     89e:	66 0f       	add	r22, r22
     8a0:	77 1f       	adc	r23, r23
     8a2:	88 1f       	adc	r24, r24
     8a4:	da f7       	brpl	.-10     	; 0x89c <__floatsisf+0x62>
     8a6:	88 0f       	add	r24, r24
     8a8:	96 95       	lsr	r25
     8aa:	87 95       	ror	r24
     8ac:	97 f9       	bld	r25, 7
     8ae:	08 95       	ret

000008b0 <__fp_cmp>:
     8b0:	99 0f       	add	r25, r25
     8b2:	00 08       	sbc	r0, r0
     8b4:	55 0f       	add	r21, r21
     8b6:	aa 0b       	sbc	r26, r26
     8b8:	e0 e8       	ldi	r30, 0x80	; 128
     8ba:	fe ef       	ldi	r31, 0xFE	; 254
     8bc:	16 16       	cp	r1, r22
     8be:	17 06       	cpc	r1, r23
     8c0:	e8 07       	cpc	r30, r24
     8c2:	f9 07       	cpc	r31, r25
     8c4:	c0 f0       	brcs	.+48     	; 0x8f6 <__fp_cmp+0x46>
     8c6:	12 16       	cp	r1, r18
     8c8:	13 06       	cpc	r1, r19
     8ca:	e4 07       	cpc	r30, r20
     8cc:	f5 07       	cpc	r31, r21
     8ce:	98 f0       	brcs	.+38     	; 0x8f6 <__fp_cmp+0x46>
     8d0:	62 1b       	sub	r22, r18
     8d2:	73 0b       	sbc	r23, r19
     8d4:	84 0b       	sbc	r24, r20
     8d6:	95 0b       	sbc	r25, r21
     8d8:	39 f4       	brne	.+14     	; 0x8e8 <__fp_cmp+0x38>
     8da:	0a 26       	eor	r0, r26
     8dc:	61 f0       	breq	.+24     	; 0x8f6 <__fp_cmp+0x46>
     8de:	23 2b       	or	r18, r19
     8e0:	24 2b       	or	r18, r20
     8e2:	25 2b       	or	r18, r21
     8e4:	21 f4       	brne	.+8      	; 0x8ee <__fp_cmp+0x3e>
     8e6:	08 95       	ret
     8e8:	0a 26       	eor	r0, r26
     8ea:	09 f4       	brne	.+2      	; 0x8ee <__fp_cmp+0x3e>
     8ec:	a1 40       	sbci	r26, 0x01	; 1
     8ee:	a6 95       	lsr	r26
     8f0:	8f ef       	ldi	r24, 0xFF	; 255
     8f2:	81 1d       	adc	r24, r1
     8f4:	81 1d       	adc	r24, r1
     8f6:	08 95       	ret

000008f8 <__fp_inf>:
     8f8:	97 f9       	bld	r25, 7
     8fa:	9f 67       	ori	r25, 0x7F	; 127
     8fc:	80 e8       	ldi	r24, 0x80	; 128
     8fe:	70 e0       	ldi	r23, 0x00	; 0
     900:	60 e0       	ldi	r22, 0x00	; 0
     902:	08 95       	ret

00000904 <__fp_nan>:
     904:	9f ef       	ldi	r25, 0xFF	; 255
     906:	80 ec       	ldi	r24, 0xC0	; 192
     908:	08 95       	ret

0000090a <__fp_pscA>:
     90a:	00 24       	eor	r0, r0
     90c:	0a 94       	dec	r0
     90e:	16 16       	cp	r1, r22
     910:	17 06       	cpc	r1, r23
     912:	18 06       	cpc	r1, r24
     914:	09 06       	cpc	r0, r25
     916:	08 95       	ret

00000918 <__fp_pscB>:
     918:	00 24       	eor	r0, r0
     91a:	0a 94       	dec	r0
     91c:	12 16       	cp	r1, r18
     91e:	13 06       	cpc	r1, r19
     920:	14 06       	cpc	r1, r20
     922:	05 06       	cpc	r0, r21
     924:	08 95       	ret

00000926 <__fp_round>:
     926:	09 2e       	mov	r0, r25
     928:	03 94       	inc	r0
     92a:	00 0c       	add	r0, r0
     92c:	11 f4       	brne	.+4      	; 0x932 <__fp_round+0xc>
     92e:	88 23       	and	r24, r24
     930:	52 f0       	brmi	.+20     	; 0x946 <__fp_round+0x20>
     932:	bb 0f       	add	r27, r27
     934:	40 f4       	brcc	.+16     	; 0x946 <__fp_round+0x20>
     936:	bf 2b       	or	r27, r31
     938:	11 f4       	brne	.+4      	; 0x93e <__fp_round+0x18>
     93a:	60 ff       	sbrs	r22, 0
     93c:	04 c0       	rjmp	.+8      	; 0x946 <__fp_round+0x20>
     93e:	6f 5f       	subi	r22, 0xFF	; 255
     940:	7f 4f       	sbci	r23, 0xFF	; 255
     942:	8f 4f       	sbci	r24, 0xFF	; 255
     944:	9f 4f       	sbci	r25, 0xFF	; 255
     946:	08 95       	ret

00000948 <__fp_split3>:
     948:	57 fd       	sbrc	r21, 7
     94a:	90 58       	subi	r25, 0x80	; 128
     94c:	44 0f       	add	r20, r20
     94e:	55 1f       	adc	r21, r21
     950:	59 f0       	breq	.+22     	; 0x968 <__fp_splitA+0x10>
     952:	5f 3f       	cpi	r21, 0xFF	; 255
     954:	71 f0       	breq	.+28     	; 0x972 <__fp_splitA+0x1a>
     956:	47 95       	ror	r20

00000958 <__fp_splitA>:
     958:	88 0f       	add	r24, r24
     95a:	97 fb       	bst	r25, 7
     95c:	99 1f       	adc	r25, r25
     95e:	61 f0       	breq	.+24     	; 0x978 <__fp_splitA+0x20>
     960:	9f 3f       	cpi	r25, 0xFF	; 255
     962:	79 f0       	breq	.+30     	; 0x982 <__fp_splitA+0x2a>
     964:	87 95       	ror	r24
     966:	08 95       	ret
     968:	12 16       	cp	r1, r18
     96a:	13 06       	cpc	r1, r19
     96c:	14 06       	cpc	r1, r20
     96e:	55 1f       	adc	r21, r21
     970:	f2 cf       	rjmp	.-28     	; 0x956 <__fp_split3+0xe>
     972:	46 95       	lsr	r20
     974:	f1 df       	rcall	.-30     	; 0x958 <__fp_splitA>
     976:	08 c0       	rjmp	.+16     	; 0x988 <__fp_splitA+0x30>
     978:	16 16       	cp	r1, r22
     97a:	17 06       	cpc	r1, r23
     97c:	18 06       	cpc	r1, r24
     97e:	99 1f       	adc	r25, r25
     980:	f1 cf       	rjmp	.-30     	; 0x964 <__fp_splitA+0xc>
     982:	86 95       	lsr	r24
     984:	71 05       	cpc	r23, r1
     986:	61 05       	cpc	r22, r1
     988:	08 94       	sec
     98a:	08 95       	ret

0000098c <__fp_zero>:
     98c:	e8 94       	clt

0000098e <__fp_szero>:
     98e:	bb 27       	eor	r27, r27
     990:	66 27       	eor	r22, r22
     992:	77 27       	eor	r23, r23
     994:	cb 01       	movw	r24, r22
     996:	97 f9       	bld	r25, 7
     998:	08 95       	ret

0000099a <lrint>:
     99a:	de df       	rcall	.-68     	; 0x958 <__fp_splitA>
     99c:	a8 f1       	brcs	.+106    	; 0xa08 <lrint+0x6e>
     99e:	9e 57       	subi	r25, 0x7E	; 126
     9a0:	a8 f1       	brcs	.+106    	; 0xa0c <lrint+0x72>
     9a2:	98 51       	subi	r25, 0x18	; 24
     9a4:	60 f0       	brcs	.+24     	; 0x9be <lrint+0x24>
     9a6:	39 f1       	breq	.+78     	; 0x9f6 <lrint+0x5c>
     9a8:	98 30       	cpi	r25, 0x08	; 8
     9aa:	70 f5       	brcc	.+92     	; 0xa08 <lrint+0x6e>
     9ac:	09 2e       	mov	r0, r25
     9ae:	99 27       	eor	r25, r25
     9b0:	66 0f       	add	r22, r22
     9b2:	77 1f       	adc	r23, r23
     9b4:	88 1f       	adc	r24, r24
     9b6:	99 1f       	adc	r25, r25
     9b8:	0a 94       	dec	r0
     9ba:	d1 f7       	brne	.-12     	; 0x9b0 <lrint+0x16>
     9bc:	1c c0       	rjmp	.+56     	; 0x9f6 <lrint+0x5c>
     9be:	bb 27       	eor	r27, r27
     9c0:	99 3f       	cpi	r25, 0xF9	; 249
     9c2:	4c f4       	brge	.+18     	; 0x9d6 <lrint+0x3c>
     9c4:	b1 11       	cpse	r27, r1
     9c6:	b1 e0       	ldi	r27, 0x01	; 1
     9c8:	b6 2b       	or	r27, r22
     9ca:	67 2f       	mov	r22, r23
     9cc:	78 2f       	mov	r23, r24
     9ce:	88 27       	eor	r24, r24
     9d0:	98 5f       	subi	r25, 0xF8	; 248
     9d2:	b1 f7       	brne	.-20     	; 0x9c0 <lrint+0x26>
     9d4:	08 c0       	rjmp	.+16     	; 0x9e6 <lrint+0x4c>
     9d6:	86 95       	lsr	r24
     9d8:	77 95       	ror	r23
     9da:	67 95       	ror	r22
     9dc:	b7 95       	ror	r27
     9de:	08 f4       	brcc	.+2      	; 0x9e2 <lrint+0x48>
     9e0:	b1 60       	ori	r27, 0x01	; 1
     9e2:	93 95       	inc	r25
     9e4:	c1 f7       	brne	.-16     	; 0x9d6 <lrint+0x3c>
     9e6:	bb 0f       	add	r27, r27
     9e8:	30 f4       	brcc	.+12     	; 0x9f6 <lrint+0x5c>
     9ea:	11 f4       	brne	.+4      	; 0x9f0 <lrint+0x56>
     9ec:	60 ff       	sbrs	r22, 0
     9ee:	03 c0       	rjmp	.+6      	; 0x9f6 <lrint+0x5c>
     9f0:	6f 5f       	subi	r22, 0xFF	; 255
     9f2:	7f 4f       	sbci	r23, 0xFF	; 255
     9f4:	8f 4f       	sbci	r24, 0xFF	; 255
     9f6:	3e f4       	brtc	.+14     	; 0xa06 <lrint+0x6c>
     9f8:	90 95       	com	r25
     9fa:	80 95       	com	r24
     9fc:	70 95       	com	r23
     9fe:	61 95       	neg	r22
     a00:	7f 4f       	sbci	r23, 0xFF	; 255
     a02:	8f 4f       	sbci	r24, 0xFF	; 255
     a04:	9f 4f       	sbci	r25, 0xFF	; 255
     a06:	08 95       	ret
     a08:	68 94       	set
     a0a:	c1 cf       	rjmp	.-126    	; 0x98e <__fp_szero>
     a0c:	bf cf       	rjmp	.-130    	; 0x98c <__fp_zero>

00000a0e <__mulsf3>:
     a0e:	0b d0       	rcall	.+22     	; 0xa26 <__mulsf3x>
     a10:	8a cf       	rjmp	.-236    	; 0x926 <__fp_round>
     a12:	7b df       	rcall	.-266    	; 0x90a <__fp_pscA>
     a14:	28 f0       	brcs	.+10     	; 0xa20 <__mulsf3+0x12>
     a16:	80 df       	rcall	.-256    	; 0x918 <__fp_pscB>
     a18:	18 f0       	brcs	.+6      	; 0xa20 <__mulsf3+0x12>
     a1a:	95 23       	and	r25, r21
     a1c:	09 f0       	breq	.+2      	; 0xa20 <__mulsf3+0x12>
     a1e:	6c cf       	rjmp	.-296    	; 0x8f8 <__fp_inf>
     a20:	71 cf       	rjmp	.-286    	; 0x904 <__fp_nan>
     a22:	11 24       	eor	r1, r1
     a24:	b4 cf       	rjmp	.-152    	; 0x98e <__fp_szero>

00000a26 <__mulsf3x>:
     a26:	90 df       	rcall	.-224    	; 0x948 <__fp_split3>
     a28:	a0 f3       	brcs	.-24     	; 0xa12 <__mulsf3+0x4>

00000a2a <__mulsf3_pse>:
     a2a:	95 9f       	mul	r25, r21
     a2c:	d1 f3       	breq	.-12     	; 0xa22 <__mulsf3+0x14>
     a2e:	95 0f       	add	r25, r21
     a30:	50 e0       	ldi	r21, 0x00	; 0
     a32:	55 1f       	adc	r21, r21
     a34:	62 9f       	mul	r22, r18
     a36:	f0 01       	movw	r30, r0
     a38:	72 9f       	mul	r23, r18
     a3a:	bb 27       	eor	r27, r27
     a3c:	f0 0d       	add	r31, r0
     a3e:	b1 1d       	adc	r27, r1
     a40:	63 9f       	mul	r22, r19
     a42:	aa 27       	eor	r26, r26
     a44:	f0 0d       	add	r31, r0
     a46:	b1 1d       	adc	r27, r1
     a48:	aa 1f       	adc	r26, r26
     a4a:	64 9f       	mul	r22, r20
     a4c:	66 27       	eor	r22, r22
     a4e:	b0 0d       	add	r27, r0
     a50:	a1 1d       	adc	r26, r1
     a52:	66 1f       	adc	r22, r22
     a54:	82 9f       	mul	r24, r18
     a56:	22 27       	eor	r18, r18
     a58:	b0 0d       	add	r27, r0
     a5a:	a1 1d       	adc	r26, r1
     a5c:	62 1f       	adc	r22, r18
     a5e:	73 9f       	mul	r23, r19
     a60:	b0 0d       	add	r27, r0
     a62:	a1 1d       	adc	r26, r1
     a64:	62 1f       	adc	r22, r18
     a66:	83 9f       	mul	r24, r19
     a68:	a0 0d       	add	r26, r0
     a6a:	61 1d       	adc	r22, r1
     a6c:	22 1f       	adc	r18, r18
     a6e:	74 9f       	mul	r23, r20
     a70:	33 27       	eor	r19, r19
     a72:	a0 0d       	add	r26, r0
     a74:	61 1d       	adc	r22, r1
     a76:	23 1f       	adc	r18, r19
     a78:	84 9f       	mul	r24, r20
     a7a:	60 0d       	add	r22, r0
     a7c:	21 1d       	adc	r18, r1
     a7e:	82 2f       	mov	r24, r18
     a80:	76 2f       	mov	r23, r22
     a82:	6a 2f       	mov	r22, r26
     a84:	11 24       	eor	r1, r1
     a86:	9f 57       	subi	r25, 0x7F	; 127
     a88:	50 40       	sbci	r21, 0x00	; 0
     a8a:	8a f0       	brmi	.+34     	; 0xaae <__mulsf3_pse+0x84>
     a8c:	e1 f0       	breq	.+56     	; 0xac6 <__mulsf3_pse+0x9c>
     a8e:	88 23       	and	r24, r24
     a90:	4a f0       	brmi	.+18     	; 0xaa4 <__mulsf3_pse+0x7a>
     a92:	ee 0f       	add	r30, r30
     a94:	ff 1f       	adc	r31, r31
     a96:	bb 1f       	adc	r27, r27
     a98:	66 1f       	adc	r22, r22
     a9a:	77 1f       	adc	r23, r23
     a9c:	88 1f       	adc	r24, r24
     a9e:	91 50       	subi	r25, 0x01	; 1
     aa0:	50 40       	sbci	r21, 0x00	; 0
     aa2:	a9 f7       	brne	.-22     	; 0xa8e <__mulsf3_pse+0x64>
     aa4:	9e 3f       	cpi	r25, 0xFE	; 254
     aa6:	51 05       	cpc	r21, r1
     aa8:	70 f0       	brcs	.+28     	; 0xac6 <__mulsf3_pse+0x9c>
     aaa:	26 cf       	rjmp	.-436    	; 0x8f8 <__fp_inf>
     aac:	70 cf       	rjmp	.-288    	; 0x98e <__fp_szero>
     aae:	5f 3f       	cpi	r21, 0xFF	; 255
     ab0:	ec f3       	brlt	.-6      	; 0xaac <__mulsf3_pse+0x82>
     ab2:	98 3e       	cpi	r25, 0xE8	; 232
     ab4:	dc f3       	brlt	.-10     	; 0xaac <__mulsf3_pse+0x82>
     ab6:	86 95       	lsr	r24
     ab8:	77 95       	ror	r23
     aba:	67 95       	ror	r22
     abc:	b7 95       	ror	r27
     abe:	f7 95       	ror	r31
     ac0:	e7 95       	ror	r30
     ac2:	9f 5f       	subi	r25, 0xFF	; 255
     ac4:	c1 f7       	brne	.-16     	; 0xab6 <__mulsf3_pse+0x8c>
     ac6:	fe 2b       	or	r31, r30
     ac8:	88 0f       	add	r24, r24
     aca:	91 1d       	adc	r25, r1
     acc:	96 95       	lsr	r25
     ace:	87 95       	ror	r24
     ad0:	97 f9       	bld	r25, 7
     ad2:	08 95       	ret

00000ad4 <__udivmodsi4>:
     ad4:	a1 e2       	ldi	r26, 0x21	; 33
     ad6:	1a 2e       	mov	r1, r26
     ad8:	aa 1b       	sub	r26, r26
     ada:	bb 1b       	sub	r27, r27
     adc:	fd 01       	movw	r30, r26
     ade:	0d c0       	rjmp	.+26     	; 0xafa <__udivmodsi4_ep>

00000ae0 <__udivmodsi4_loop>:
     ae0:	aa 1f       	adc	r26, r26
     ae2:	bb 1f       	adc	r27, r27
     ae4:	ee 1f       	adc	r30, r30
     ae6:	ff 1f       	adc	r31, r31
     ae8:	a2 17       	cp	r26, r18
     aea:	b3 07       	cpc	r27, r19
     aec:	e4 07       	cpc	r30, r20
     aee:	f5 07       	cpc	r31, r21
     af0:	20 f0       	brcs	.+8      	; 0xafa <__udivmodsi4_ep>
     af2:	a2 1b       	sub	r26, r18
     af4:	b3 0b       	sbc	r27, r19
     af6:	e4 0b       	sbc	r30, r20
     af8:	f5 0b       	sbc	r31, r21

00000afa <__udivmodsi4_ep>:
     afa:	66 1f       	adc	r22, r22
     afc:	77 1f       	adc	r23, r23
     afe:	88 1f       	adc	r24, r24
     b00:	99 1f       	adc	r25, r25
     b02:	1a 94       	dec	r1
     b04:	69 f7       	brne	.-38     	; 0xae0 <__udivmodsi4_loop>
     b06:	60 95       	com	r22
     b08:	70 95       	com	r23
     b0a:	80 95       	com	r24
     b0c:	90 95       	com	r25
     b0e:	9b 01       	movw	r18, r22
     b10:	ac 01       	movw	r20, r24
     b12:	bd 01       	movw	r22, r26
     b14:	cf 01       	movw	r24, r30
     b16:	08 95       	ret

00000b18 <__muluhisi3>:
     b18:	09 d0       	rcall	.+18     	; 0xb2c <__umulhisi3>
     b1a:	a5 9f       	mul	r26, r21
     b1c:	90 0d       	add	r25, r0
     b1e:	b4 9f       	mul	r27, r20
     b20:	90 0d       	add	r25, r0
     b22:	a4 9f       	mul	r26, r20
     b24:	80 0d       	add	r24, r0
     b26:	91 1d       	adc	r25, r1
     b28:	11 24       	eor	r1, r1
     b2a:	08 95       	ret

00000b2c <__umulhisi3>:
     b2c:	a2 9f       	mul	r26, r18
     b2e:	b0 01       	movw	r22, r0
     b30:	b3 9f       	mul	r27, r19
     b32:	c0 01       	movw	r24, r0
     b34:	a3 9f       	mul	r26, r19
     b36:	70 0d       	add	r23, r0
     b38:	81 1d       	adc	r24, r1
     b3a:	11 24       	eor	r1, r1
     b3c:	91 1d       	adc	r25, r1
     b3e:	b2 9f       	mul	r27, r18
     b40:	70 0d       	add	r23, r0
     b42:	81 1d       	adc	r24, r1
     b44:	11 24       	eor	r1, r1
     b46:	91 1d       	adc	r25, r1
     b48:	08 95       	ret

00000b4a <sprintf>:
     b4a:	0f 93       	push	r16
     b4c:	1f 93       	push	r17
     b4e:	cf 93       	push	r28
     b50:	df 93       	push	r29
     b52:	cd b7       	in	r28, 0x3d	; 61
     b54:	de b7       	in	r29, 0x3e	; 62
     b56:	2e 97       	sbiw	r28, 0x0e	; 14
     b58:	0f b6       	in	r0, 0x3f	; 63
     b5a:	f8 94       	cli
     b5c:	de bf       	out	0x3e, r29	; 62
     b5e:	0f be       	out	0x3f, r0	; 63
     b60:	cd bf       	out	0x3d, r28	; 61
     b62:	0e 89       	ldd	r16, Y+22	; 0x16
     b64:	1f 89       	ldd	r17, Y+23	; 0x17
     b66:	86 e0       	ldi	r24, 0x06	; 6
     b68:	8c 83       	std	Y+4, r24	; 0x04
     b6a:	1a 83       	std	Y+2, r17	; 0x02
     b6c:	09 83       	std	Y+1, r16	; 0x01
     b6e:	8f ef       	ldi	r24, 0xFF	; 255
     b70:	9f e7       	ldi	r25, 0x7F	; 127
     b72:	9e 83       	std	Y+6, r25	; 0x06
     b74:	8d 83       	std	Y+5, r24	; 0x05
     b76:	ae 01       	movw	r20, r28
     b78:	46 5e       	subi	r20, 0xE6	; 230
     b7a:	5f 4f       	sbci	r21, 0xFF	; 255
     b7c:	68 8d       	ldd	r22, Y+24	; 0x18
     b7e:	79 8d       	ldd	r23, Y+25	; 0x19
     b80:	ce 01       	movw	r24, r28
     b82:	01 96       	adiw	r24, 0x01	; 1
     b84:	10 d0       	rcall	.+32     	; 0xba6 <vfprintf>
     b86:	ef 81       	ldd	r30, Y+7	; 0x07
     b88:	f8 85       	ldd	r31, Y+8	; 0x08
     b8a:	e0 0f       	add	r30, r16
     b8c:	f1 1f       	adc	r31, r17
     b8e:	10 82       	st	Z, r1
     b90:	2e 96       	adiw	r28, 0x0e	; 14
     b92:	0f b6       	in	r0, 0x3f	; 63
     b94:	f8 94       	cli
     b96:	de bf       	out	0x3e, r29	; 62
     b98:	0f be       	out	0x3f, r0	; 63
     b9a:	cd bf       	out	0x3d, r28	; 61
     b9c:	df 91       	pop	r29
     b9e:	cf 91       	pop	r28
     ba0:	1f 91       	pop	r17
     ba2:	0f 91       	pop	r16
     ba4:	08 95       	ret

00000ba6 <vfprintf>:
     ba6:	2f 92       	push	r2
     ba8:	3f 92       	push	r3
     baa:	4f 92       	push	r4
     bac:	5f 92       	push	r5
     bae:	6f 92       	push	r6
     bb0:	7f 92       	push	r7
     bb2:	8f 92       	push	r8
     bb4:	9f 92       	push	r9
     bb6:	af 92       	push	r10
     bb8:	bf 92       	push	r11
     bba:	cf 92       	push	r12
     bbc:	df 92       	push	r13
     bbe:	ef 92       	push	r14
     bc0:	ff 92       	push	r15
     bc2:	0f 93       	push	r16
     bc4:	1f 93       	push	r17
     bc6:	cf 93       	push	r28
     bc8:	df 93       	push	r29
     bca:	cd b7       	in	r28, 0x3d	; 61
     bcc:	de b7       	in	r29, 0x3e	; 62
     bce:	2b 97       	sbiw	r28, 0x0b	; 11
     bd0:	0f b6       	in	r0, 0x3f	; 63
     bd2:	f8 94       	cli
     bd4:	de bf       	out	0x3e, r29	; 62
     bd6:	0f be       	out	0x3f, r0	; 63
     bd8:	cd bf       	out	0x3d, r28	; 61
     bda:	6c 01       	movw	r12, r24
     bdc:	7b 01       	movw	r14, r22
     bde:	8a 01       	movw	r16, r20
     be0:	fc 01       	movw	r30, r24
     be2:	17 82       	std	Z+7, r1	; 0x07
     be4:	16 82       	std	Z+6, r1	; 0x06
     be6:	83 81       	ldd	r24, Z+3	; 0x03
     be8:	81 ff       	sbrs	r24, 1
     bea:	bf c1       	rjmp	.+894    	; 0xf6a <vfprintf+0x3c4>
     bec:	ce 01       	movw	r24, r28
     bee:	01 96       	adiw	r24, 0x01	; 1
     bf0:	3c 01       	movw	r6, r24
     bf2:	f6 01       	movw	r30, r12
     bf4:	93 81       	ldd	r25, Z+3	; 0x03
     bf6:	f7 01       	movw	r30, r14
     bf8:	93 fd       	sbrc	r25, 3
     bfa:	85 91       	lpm	r24, Z+
     bfc:	93 ff       	sbrs	r25, 3
     bfe:	81 91       	ld	r24, Z+
     c00:	7f 01       	movw	r14, r30
     c02:	88 23       	and	r24, r24
     c04:	09 f4       	brne	.+2      	; 0xc08 <vfprintf+0x62>
     c06:	ad c1       	rjmp	.+858    	; 0xf62 <vfprintf+0x3bc>
     c08:	85 32       	cpi	r24, 0x25	; 37
     c0a:	39 f4       	brne	.+14     	; 0xc1a <vfprintf+0x74>
     c0c:	93 fd       	sbrc	r25, 3
     c0e:	85 91       	lpm	r24, Z+
     c10:	93 ff       	sbrs	r25, 3
     c12:	81 91       	ld	r24, Z+
     c14:	7f 01       	movw	r14, r30
     c16:	85 32       	cpi	r24, 0x25	; 37
     c18:	21 f4       	brne	.+8      	; 0xc22 <vfprintf+0x7c>
     c1a:	b6 01       	movw	r22, r12
     c1c:	90 e0       	ldi	r25, 0x00	; 0
     c1e:	d6 d1       	rcall	.+940    	; 0xfcc <fputc>
     c20:	e8 cf       	rjmp	.-48     	; 0xbf2 <vfprintf+0x4c>
     c22:	91 2c       	mov	r9, r1
     c24:	21 2c       	mov	r2, r1
     c26:	31 2c       	mov	r3, r1
     c28:	ff e1       	ldi	r31, 0x1F	; 31
     c2a:	f3 15       	cp	r31, r3
     c2c:	d8 f0       	brcs	.+54     	; 0xc64 <vfprintf+0xbe>
     c2e:	8b 32       	cpi	r24, 0x2B	; 43
     c30:	79 f0       	breq	.+30     	; 0xc50 <vfprintf+0xaa>
     c32:	38 f4       	brcc	.+14     	; 0xc42 <vfprintf+0x9c>
     c34:	80 32       	cpi	r24, 0x20	; 32
     c36:	79 f0       	breq	.+30     	; 0xc56 <vfprintf+0xb0>
     c38:	83 32       	cpi	r24, 0x23	; 35
     c3a:	a1 f4       	brne	.+40     	; 0xc64 <vfprintf+0xbe>
     c3c:	23 2d       	mov	r18, r3
     c3e:	20 61       	ori	r18, 0x10	; 16
     c40:	1d c0       	rjmp	.+58     	; 0xc7c <vfprintf+0xd6>
     c42:	8d 32       	cpi	r24, 0x2D	; 45
     c44:	61 f0       	breq	.+24     	; 0xc5e <vfprintf+0xb8>
     c46:	80 33       	cpi	r24, 0x30	; 48
     c48:	69 f4       	brne	.+26     	; 0xc64 <vfprintf+0xbe>
     c4a:	23 2d       	mov	r18, r3
     c4c:	21 60       	ori	r18, 0x01	; 1
     c4e:	16 c0       	rjmp	.+44     	; 0xc7c <vfprintf+0xd6>
     c50:	83 2d       	mov	r24, r3
     c52:	82 60       	ori	r24, 0x02	; 2
     c54:	38 2e       	mov	r3, r24
     c56:	e3 2d       	mov	r30, r3
     c58:	e4 60       	ori	r30, 0x04	; 4
     c5a:	3e 2e       	mov	r3, r30
     c5c:	2a c0       	rjmp	.+84     	; 0xcb2 <vfprintf+0x10c>
     c5e:	f3 2d       	mov	r31, r3
     c60:	f8 60       	ori	r31, 0x08	; 8
     c62:	1d c0       	rjmp	.+58     	; 0xc9e <vfprintf+0xf8>
     c64:	37 fc       	sbrc	r3, 7
     c66:	2d c0       	rjmp	.+90     	; 0xcc2 <vfprintf+0x11c>
     c68:	20 ed       	ldi	r18, 0xD0	; 208
     c6a:	28 0f       	add	r18, r24
     c6c:	2a 30       	cpi	r18, 0x0A	; 10
     c6e:	40 f0       	brcs	.+16     	; 0xc80 <vfprintf+0xda>
     c70:	8e 32       	cpi	r24, 0x2E	; 46
     c72:	b9 f4       	brne	.+46     	; 0xca2 <vfprintf+0xfc>
     c74:	36 fc       	sbrc	r3, 6
     c76:	75 c1       	rjmp	.+746    	; 0xf62 <vfprintf+0x3bc>
     c78:	23 2d       	mov	r18, r3
     c7a:	20 64       	ori	r18, 0x40	; 64
     c7c:	32 2e       	mov	r3, r18
     c7e:	19 c0       	rjmp	.+50     	; 0xcb2 <vfprintf+0x10c>
     c80:	36 fe       	sbrs	r3, 6
     c82:	06 c0       	rjmp	.+12     	; 0xc90 <vfprintf+0xea>
     c84:	8a e0       	ldi	r24, 0x0A	; 10
     c86:	98 9e       	mul	r9, r24
     c88:	20 0d       	add	r18, r0
     c8a:	11 24       	eor	r1, r1
     c8c:	92 2e       	mov	r9, r18
     c8e:	11 c0       	rjmp	.+34     	; 0xcb2 <vfprintf+0x10c>
     c90:	ea e0       	ldi	r30, 0x0A	; 10
     c92:	2e 9e       	mul	r2, r30
     c94:	20 0d       	add	r18, r0
     c96:	11 24       	eor	r1, r1
     c98:	22 2e       	mov	r2, r18
     c9a:	f3 2d       	mov	r31, r3
     c9c:	f0 62       	ori	r31, 0x20	; 32
     c9e:	3f 2e       	mov	r3, r31
     ca0:	08 c0       	rjmp	.+16     	; 0xcb2 <vfprintf+0x10c>
     ca2:	8c 36       	cpi	r24, 0x6C	; 108
     ca4:	21 f4       	brne	.+8      	; 0xcae <vfprintf+0x108>
     ca6:	83 2d       	mov	r24, r3
     ca8:	80 68       	ori	r24, 0x80	; 128
     caa:	38 2e       	mov	r3, r24
     cac:	02 c0       	rjmp	.+4      	; 0xcb2 <vfprintf+0x10c>
     cae:	88 36       	cpi	r24, 0x68	; 104
     cb0:	41 f4       	brne	.+16     	; 0xcc2 <vfprintf+0x11c>
     cb2:	f7 01       	movw	r30, r14
     cb4:	93 fd       	sbrc	r25, 3
     cb6:	85 91       	lpm	r24, Z+
     cb8:	93 ff       	sbrs	r25, 3
     cba:	81 91       	ld	r24, Z+
     cbc:	7f 01       	movw	r14, r30
     cbe:	81 11       	cpse	r24, r1
     cc0:	b3 cf       	rjmp	.-154    	; 0xc28 <vfprintf+0x82>
     cc2:	98 2f       	mov	r25, r24
     cc4:	9f 7d       	andi	r25, 0xDF	; 223
     cc6:	95 54       	subi	r25, 0x45	; 69
     cc8:	93 30       	cpi	r25, 0x03	; 3
     cca:	28 f4       	brcc	.+10     	; 0xcd6 <vfprintf+0x130>
     ccc:	0c 5f       	subi	r16, 0xFC	; 252
     cce:	1f 4f       	sbci	r17, 0xFF	; 255
     cd0:	9f e3       	ldi	r25, 0x3F	; 63
     cd2:	99 83       	std	Y+1, r25	; 0x01
     cd4:	0d c0       	rjmp	.+26     	; 0xcf0 <vfprintf+0x14a>
     cd6:	83 36       	cpi	r24, 0x63	; 99
     cd8:	31 f0       	breq	.+12     	; 0xce6 <vfprintf+0x140>
     cda:	83 37       	cpi	r24, 0x73	; 115
     cdc:	71 f0       	breq	.+28     	; 0xcfa <vfprintf+0x154>
     cde:	83 35       	cpi	r24, 0x53	; 83
     ce0:	09 f0       	breq	.+2      	; 0xce4 <vfprintf+0x13e>
     ce2:	55 c0       	rjmp	.+170    	; 0xd8e <vfprintf+0x1e8>
     ce4:	20 c0       	rjmp	.+64     	; 0xd26 <vfprintf+0x180>
     ce6:	f8 01       	movw	r30, r16
     ce8:	80 81       	ld	r24, Z
     cea:	89 83       	std	Y+1, r24	; 0x01
     cec:	0e 5f       	subi	r16, 0xFE	; 254
     cee:	1f 4f       	sbci	r17, 0xFF	; 255
     cf0:	88 24       	eor	r8, r8
     cf2:	83 94       	inc	r8
     cf4:	91 2c       	mov	r9, r1
     cf6:	53 01       	movw	r10, r6
     cf8:	12 c0       	rjmp	.+36     	; 0xd1e <vfprintf+0x178>
     cfa:	28 01       	movw	r4, r16
     cfc:	f2 e0       	ldi	r31, 0x02	; 2
     cfe:	4f 0e       	add	r4, r31
     d00:	51 1c       	adc	r5, r1
     d02:	f8 01       	movw	r30, r16
     d04:	a0 80       	ld	r10, Z
     d06:	b1 80       	ldd	r11, Z+1	; 0x01
     d08:	36 fe       	sbrs	r3, 6
     d0a:	03 c0       	rjmp	.+6      	; 0xd12 <vfprintf+0x16c>
     d0c:	69 2d       	mov	r22, r9
     d0e:	70 e0       	ldi	r23, 0x00	; 0
     d10:	02 c0       	rjmp	.+4      	; 0xd16 <vfprintf+0x170>
     d12:	6f ef       	ldi	r22, 0xFF	; 255
     d14:	7f ef       	ldi	r23, 0xFF	; 255
     d16:	c5 01       	movw	r24, r10
     d18:	4e d1       	rcall	.+668    	; 0xfb6 <strnlen>
     d1a:	4c 01       	movw	r8, r24
     d1c:	82 01       	movw	r16, r4
     d1e:	f3 2d       	mov	r31, r3
     d20:	ff 77       	andi	r31, 0x7F	; 127
     d22:	3f 2e       	mov	r3, r31
     d24:	15 c0       	rjmp	.+42     	; 0xd50 <vfprintf+0x1aa>
     d26:	28 01       	movw	r4, r16
     d28:	22 e0       	ldi	r18, 0x02	; 2
     d2a:	42 0e       	add	r4, r18
     d2c:	51 1c       	adc	r5, r1
     d2e:	f8 01       	movw	r30, r16
     d30:	a0 80       	ld	r10, Z
     d32:	b1 80       	ldd	r11, Z+1	; 0x01
     d34:	36 fe       	sbrs	r3, 6
     d36:	03 c0       	rjmp	.+6      	; 0xd3e <vfprintf+0x198>
     d38:	69 2d       	mov	r22, r9
     d3a:	70 e0       	ldi	r23, 0x00	; 0
     d3c:	02 c0       	rjmp	.+4      	; 0xd42 <vfprintf+0x19c>
     d3e:	6f ef       	ldi	r22, 0xFF	; 255
     d40:	7f ef       	ldi	r23, 0xFF	; 255
     d42:	c5 01       	movw	r24, r10
     d44:	2d d1       	rcall	.+602    	; 0xfa0 <strnlen_P>
     d46:	4c 01       	movw	r8, r24
     d48:	f3 2d       	mov	r31, r3
     d4a:	f0 68       	ori	r31, 0x80	; 128
     d4c:	3f 2e       	mov	r3, r31
     d4e:	82 01       	movw	r16, r4
     d50:	33 fc       	sbrc	r3, 3
     d52:	19 c0       	rjmp	.+50     	; 0xd86 <vfprintf+0x1e0>
     d54:	82 2d       	mov	r24, r2
     d56:	90 e0       	ldi	r25, 0x00	; 0
     d58:	88 16       	cp	r8, r24
     d5a:	99 06       	cpc	r9, r25
     d5c:	a0 f4       	brcc	.+40     	; 0xd86 <vfprintf+0x1e0>
     d5e:	b6 01       	movw	r22, r12
     d60:	80 e2       	ldi	r24, 0x20	; 32
     d62:	90 e0       	ldi	r25, 0x00	; 0
     d64:	33 d1       	rcall	.+614    	; 0xfcc <fputc>
     d66:	2a 94       	dec	r2
     d68:	f5 cf       	rjmp	.-22     	; 0xd54 <vfprintf+0x1ae>
     d6a:	f5 01       	movw	r30, r10
     d6c:	37 fc       	sbrc	r3, 7
     d6e:	85 91       	lpm	r24, Z+
     d70:	37 fe       	sbrs	r3, 7
     d72:	81 91       	ld	r24, Z+
     d74:	5f 01       	movw	r10, r30
     d76:	b6 01       	movw	r22, r12
     d78:	90 e0       	ldi	r25, 0x00	; 0
     d7a:	28 d1       	rcall	.+592    	; 0xfcc <fputc>
     d7c:	21 10       	cpse	r2, r1
     d7e:	2a 94       	dec	r2
     d80:	21 e0       	ldi	r18, 0x01	; 1
     d82:	82 1a       	sub	r8, r18
     d84:	91 08       	sbc	r9, r1
     d86:	81 14       	cp	r8, r1
     d88:	91 04       	cpc	r9, r1
     d8a:	79 f7       	brne	.-34     	; 0xd6a <vfprintf+0x1c4>
     d8c:	e1 c0       	rjmp	.+450    	; 0xf50 <vfprintf+0x3aa>
     d8e:	84 36       	cpi	r24, 0x64	; 100
     d90:	11 f0       	breq	.+4      	; 0xd96 <vfprintf+0x1f0>
     d92:	89 36       	cpi	r24, 0x69	; 105
     d94:	39 f5       	brne	.+78     	; 0xde4 <vfprintf+0x23e>
     d96:	f8 01       	movw	r30, r16
     d98:	37 fe       	sbrs	r3, 7
     d9a:	07 c0       	rjmp	.+14     	; 0xdaa <vfprintf+0x204>
     d9c:	60 81       	ld	r22, Z
     d9e:	71 81       	ldd	r23, Z+1	; 0x01
     da0:	82 81       	ldd	r24, Z+2	; 0x02
     da2:	93 81       	ldd	r25, Z+3	; 0x03
     da4:	0c 5f       	subi	r16, 0xFC	; 252
     da6:	1f 4f       	sbci	r17, 0xFF	; 255
     da8:	08 c0       	rjmp	.+16     	; 0xdba <vfprintf+0x214>
     daa:	60 81       	ld	r22, Z
     dac:	71 81       	ldd	r23, Z+1	; 0x01
     dae:	07 2e       	mov	r0, r23
     db0:	00 0c       	add	r0, r0
     db2:	88 0b       	sbc	r24, r24
     db4:	99 0b       	sbc	r25, r25
     db6:	0e 5f       	subi	r16, 0xFE	; 254
     db8:	1f 4f       	sbci	r17, 0xFF	; 255
     dba:	f3 2d       	mov	r31, r3
     dbc:	ff 76       	andi	r31, 0x6F	; 111
     dbe:	3f 2e       	mov	r3, r31
     dc0:	97 ff       	sbrs	r25, 7
     dc2:	09 c0       	rjmp	.+18     	; 0xdd6 <vfprintf+0x230>
     dc4:	90 95       	com	r25
     dc6:	80 95       	com	r24
     dc8:	70 95       	com	r23
     dca:	61 95       	neg	r22
     dcc:	7f 4f       	sbci	r23, 0xFF	; 255
     dce:	8f 4f       	sbci	r24, 0xFF	; 255
     dd0:	9f 4f       	sbci	r25, 0xFF	; 255
     dd2:	f0 68       	ori	r31, 0x80	; 128
     dd4:	3f 2e       	mov	r3, r31
     dd6:	2a e0       	ldi	r18, 0x0A	; 10
     dd8:	30 e0       	ldi	r19, 0x00	; 0
     dda:	a3 01       	movw	r20, r6
     ddc:	33 d1       	rcall	.+614    	; 0x1044 <__ultoa_invert>
     dde:	88 2e       	mov	r8, r24
     de0:	86 18       	sub	r8, r6
     de2:	44 c0       	rjmp	.+136    	; 0xe6c <vfprintf+0x2c6>
     de4:	85 37       	cpi	r24, 0x75	; 117
     de6:	31 f4       	brne	.+12     	; 0xdf4 <vfprintf+0x24e>
     de8:	23 2d       	mov	r18, r3
     dea:	2f 7e       	andi	r18, 0xEF	; 239
     dec:	b2 2e       	mov	r11, r18
     dee:	2a e0       	ldi	r18, 0x0A	; 10
     df0:	30 e0       	ldi	r19, 0x00	; 0
     df2:	25 c0       	rjmp	.+74     	; 0xe3e <vfprintf+0x298>
     df4:	93 2d       	mov	r25, r3
     df6:	99 7f       	andi	r25, 0xF9	; 249
     df8:	b9 2e       	mov	r11, r25
     dfa:	8f 36       	cpi	r24, 0x6F	; 111
     dfc:	c1 f0       	breq	.+48     	; 0xe2e <vfprintf+0x288>
     dfe:	18 f4       	brcc	.+6      	; 0xe06 <vfprintf+0x260>
     e00:	88 35       	cpi	r24, 0x58	; 88
     e02:	79 f0       	breq	.+30     	; 0xe22 <vfprintf+0x27c>
     e04:	ae c0       	rjmp	.+348    	; 0xf62 <vfprintf+0x3bc>
     e06:	80 37       	cpi	r24, 0x70	; 112
     e08:	19 f0       	breq	.+6      	; 0xe10 <vfprintf+0x26a>
     e0a:	88 37       	cpi	r24, 0x78	; 120
     e0c:	21 f0       	breq	.+8      	; 0xe16 <vfprintf+0x270>
     e0e:	a9 c0       	rjmp	.+338    	; 0xf62 <vfprintf+0x3bc>
     e10:	e9 2f       	mov	r30, r25
     e12:	e0 61       	ori	r30, 0x10	; 16
     e14:	be 2e       	mov	r11, r30
     e16:	b4 fe       	sbrs	r11, 4
     e18:	0d c0       	rjmp	.+26     	; 0xe34 <vfprintf+0x28e>
     e1a:	fb 2d       	mov	r31, r11
     e1c:	f4 60       	ori	r31, 0x04	; 4
     e1e:	bf 2e       	mov	r11, r31
     e20:	09 c0       	rjmp	.+18     	; 0xe34 <vfprintf+0x28e>
     e22:	34 fe       	sbrs	r3, 4
     e24:	0a c0       	rjmp	.+20     	; 0xe3a <vfprintf+0x294>
     e26:	29 2f       	mov	r18, r25
     e28:	26 60       	ori	r18, 0x06	; 6
     e2a:	b2 2e       	mov	r11, r18
     e2c:	06 c0       	rjmp	.+12     	; 0xe3a <vfprintf+0x294>
     e2e:	28 e0       	ldi	r18, 0x08	; 8
     e30:	30 e0       	ldi	r19, 0x00	; 0
     e32:	05 c0       	rjmp	.+10     	; 0xe3e <vfprintf+0x298>
     e34:	20 e1       	ldi	r18, 0x10	; 16
     e36:	30 e0       	ldi	r19, 0x00	; 0
     e38:	02 c0       	rjmp	.+4      	; 0xe3e <vfprintf+0x298>
     e3a:	20 e1       	ldi	r18, 0x10	; 16
     e3c:	32 e0       	ldi	r19, 0x02	; 2
     e3e:	f8 01       	movw	r30, r16
     e40:	b7 fe       	sbrs	r11, 7
     e42:	07 c0       	rjmp	.+14     	; 0xe52 <vfprintf+0x2ac>
     e44:	60 81       	ld	r22, Z
     e46:	71 81       	ldd	r23, Z+1	; 0x01
     e48:	82 81       	ldd	r24, Z+2	; 0x02
     e4a:	93 81       	ldd	r25, Z+3	; 0x03
     e4c:	0c 5f       	subi	r16, 0xFC	; 252
     e4e:	1f 4f       	sbci	r17, 0xFF	; 255
     e50:	06 c0       	rjmp	.+12     	; 0xe5e <vfprintf+0x2b8>
     e52:	60 81       	ld	r22, Z
     e54:	71 81       	ldd	r23, Z+1	; 0x01
     e56:	80 e0       	ldi	r24, 0x00	; 0
     e58:	90 e0       	ldi	r25, 0x00	; 0
     e5a:	0e 5f       	subi	r16, 0xFE	; 254
     e5c:	1f 4f       	sbci	r17, 0xFF	; 255
     e5e:	a3 01       	movw	r20, r6
     e60:	f1 d0       	rcall	.+482    	; 0x1044 <__ultoa_invert>
     e62:	88 2e       	mov	r8, r24
     e64:	86 18       	sub	r8, r6
     e66:	fb 2d       	mov	r31, r11
     e68:	ff 77       	andi	r31, 0x7F	; 127
     e6a:	3f 2e       	mov	r3, r31
     e6c:	36 fe       	sbrs	r3, 6
     e6e:	0d c0       	rjmp	.+26     	; 0xe8a <vfprintf+0x2e4>
     e70:	23 2d       	mov	r18, r3
     e72:	2e 7f       	andi	r18, 0xFE	; 254
     e74:	a2 2e       	mov	r10, r18
     e76:	89 14       	cp	r8, r9
     e78:	58 f4       	brcc	.+22     	; 0xe90 <vfprintf+0x2ea>
     e7a:	34 fe       	sbrs	r3, 4
     e7c:	0b c0       	rjmp	.+22     	; 0xe94 <vfprintf+0x2ee>
     e7e:	32 fc       	sbrc	r3, 2
     e80:	09 c0       	rjmp	.+18     	; 0xe94 <vfprintf+0x2ee>
     e82:	83 2d       	mov	r24, r3
     e84:	8e 7e       	andi	r24, 0xEE	; 238
     e86:	a8 2e       	mov	r10, r24
     e88:	05 c0       	rjmp	.+10     	; 0xe94 <vfprintf+0x2ee>
     e8a:	b8 2c       	mov	r11, r8
     e8c:	a3 2c       	mov	r10, r3
     e8e:	03 c0       	rjmp	.+6      	; 0xe96 <vfprintf+0x2f0>
     e90:	b8 2c       	mov	r11, r8
     e92:	01 c0       	rjmp	.+2      	; 0xe96 <vfprintf+0x2f0>
     e94:	b9 2c       	mov	r11, r9
     e96:	a4 fe       	sbrs	r10, 4
     e98:	0f c0       	rjmp	.+30     	; 0xeb8 <vfprintf+0x312>
     e9a:	fe 01       	movw	r30, r28
     e9c:	e8 0d       	add	r30, r8
     e9e:	f1 1d       	adc	r31, r1
     ea0:	80 81       	ld	r24, Z
     ea2:	80 33       	cpi	r24, 0x30	; 48
     ea4:	21 f4       	brne	.+8      	; 0xeae <vfprintf+0x308>
     ea6:	9a 2d       	mov	r25, r10
     ea8:	99 7e       	andi	r25, 0xE9	; 233
     eaa:	a9 2e       	mov	r10, r25
     eac:	09 c0       	rjmp	.+18     	; 0xec0 <vfprintf+0x31a>
     eae:	a2 fe       	sbrs	r10, 2
     eb0:	06 c0       	rjmp	.+12     	; 0xebe <vfprintf+0x318>
     eb2:	b3 94       	inc	r11
     eb4:	b3 94       	inc	r11
     eb6:	04 c0       	rjmp	.+8      	; 0xec0 <vfprintf+0x31a>
     eb8:	8a 2d       	mov	r24, r10
     eba:	86 78       	andi	r24, 0x86	; 134
     ebc:	09 f0       	breq	.+2      	; 0xec0 <vfprintf+0x31a>
     ebe:	b3 94       	inc	r11
     ec0:	a3 fc       	sbrc	r10, 3
     ec2:	10 c0       	rjmp	.+32     	; 0xee4 <vfprintf+0x33e>
     ec4:	a0 fe       	sbrs	r10, 0
     ec6:	06 c0       	rjmp	.+12     	; 0xed4 <vfprintf+0x32e>
     ec8:	b2 14       	cp	r11, r2
     eca:	80 f4       	brcc	.+32     	; 0xeec <vfprintf+0x346>
     ecc:	28 0c       	add	r2, r8
     ece:	92 2c       	mov	r9, r2
     ed0:	9b 18       	sub	r9, r11
     ed2:	0d c0       	rjmp	.+26     	; 0xeee <vfprintf+0x348>
     ed4:	b2 14       	cp	r11, r2
     ed6:	58 f4       	brcc	.+22     	; 0xeee <vfprintf+0x348>
     ed8:	b6 01       	movw	r22, r12
     eda:	80 e2       	ldi	r24, 0x20	; 32
     edc:	90 e0       	ldi	r25, 0x00	; 0
     ede:	76 d0       	rcall	.+236    	; 0xfcc <fputc>
     ee0:	b3 94       	inc	r11
     ee2:	f8 cf       	rjmp	.-16     	; 0xed4 <vfprintf+0x32e>
     ee4:	b2 14       	cp	r11, r2
     ee6:	18 f4       	brcc	.+6      	; 0xeee <vfprintf+0x348>
     ee8:	2b 18       	sub	r2, r11
     eea:	02 c0       	rjmp	.+4      	; 0xef0 <vfprintf+0x34a>
     eec:	98 2c       	mov	r9, r8
     eee:	21 2c       	mov	r2, r1
     ef0:	a4 fe       	sbrs	r10, 4
     ef2:	0f c0       	rjmp	.+30     	; 0xf12 <vfprintf+0x36c>
     ef4:	b6 01       	movw	r22, r12
     ef6:	80 e3       	ldi	r24, 0x30	; 48
     ef8:	90 e0       	ldi	r25, 0x00	; 0
     efa:	68 d0       	rcall	.+208    	; 0xfcc <fputc>
     efc:	a2 fe       	sbrs	r10, 2
     efe:	16 c0       	rjmp	.+44     	; 0xf2c <vfprintf+0x386>
     f00:	a1 fc       	sbrc	r10, 1
     f02:	03 c0       	rjmp	.+6      	; 0xf0a <vfprintf+0x364>
     f04:	88 e7       	ldi	r24, 0x78	; 120
     f06:	90 e0       	ldi	r25, 0x00	; 0
     f08:	02 c0       	rjmp	.+4      	; 0xf0e <vfprintf+0x368>
     f0a:	88 e5       	ldi	r24, 0x58	; 88
     f0c:	90 e0       	ldi	r25, 0x00	; 0
     f0e:	b6 01       	movw	r22, r12
     f10:	0c c0       	rjmp	.+24     	; 0xf2a <vfprintf+0x384>
     f12:	8a 2d       	mov	r24, r10
     f14:	86 78       	andi	r24, 0x86	; 134
     f16:	51 f0       	breq	.+20     	; 0xf2c <vfprintf+0x386>
     f18:	a1 fe       	sbrs	r10, 1
     f1a:	02 c0       	rjmp	.+4      	; 0xf20 <vfprintf+0x37a>
     f1c:	8b e2       	ldi	r24, 0x2B	; 43
     f1e:	01 c0       	rjmp	.+2      	; 0xf22 <vfprintf+0x37c>
     f20:	80 e2       	ldi	r24, 0x20	; 32
     f22:	a7 fc       	sbrc	r10, 7
     f24:	8d e2       	ldi	r24, 0x2D	; 45
     f26:	b6 01       	movw	r22, r12
     f28:	90 e0       	ldi	r25, 0x00	; 0
     f2a:	50 d0       	rcall	.+160    	; 0xfcc <fputc>
     f2c:	89 14       	cp	r8, r9
     f2e:	30 f4       	brcc	.+12     	; 0xf3c <vfprintf+0x396>
     f30:	b6 01       	movw	r22, r12
     f32:	80 e3       	ldi	r24, 0x30	; 48
     f34:	90 e0       	ldi	r25, 0x00	; 0
     f36:	4a d0       	rcall	.+148    	; 0xfcc <fputc>
     f38:	9a 94       	dec	r9
     f3a:	f8 cf       	rjmp	.-16     	; 0xf2c <vfprintf+0x386>
     f3c:	8a 94       	dec	r8
     f3e:	f3 01       	movw	r30, r6
     f40:	e8 0d       	add	r30, r8
     f42:	f1 1d       	adc	r31, r1
     f44:	80 81       	ld	r24, Z
     f46:	b6 01       	movw	r22, r12
     f48:	90 e0       	ldi	r25, 0x00	; 0
     f4a:	40 d0       	rcall	.+128    	; 0xfcc <fputc>
     f4c:	81 10       	cpse	r8, r1
     f4e:	f6 cf       	rjmp	.-20     	; 0xf3c <vfprintf+0x396>
     f50:	22 20       	and	r2, r2
     f52:	09 f4       	brne	.+2      	; 0xf56 <vfprintf+0x3b0>
     f54:	4e ce       	rjmp	.-868    	; 0xbf2 <vfprintf+0x4c>
     f56:	b6 01       	movw	r22, r12
     f58:	80 e2       	ldi	r24, 0x20	; 32
     f5a:	90 e0       	ldi	r25, 0x00	; 0
     f5c:	37 d0       	rcall	.+110    	; 0xfcc <fputc>
     f5e:	2a 94       	dec	r2
     f60:	f7 cf       	rjmp	.-18     	; 0xf50 <vfprintf+0x3aa>
     f62:	f6 01       	movw	r30, r12
     f64:	86 81       	ldd	r24, Z+6	; 0x06
     f66:	97 81       	ldd	r25, Z+7	; 0x07
     f68:	02 c0       	rjmp	.+4      	; 0xf6e <vfprintf+0x3c8>
     f6a:	8f ef       	ldi	r24, 0xFF	; 255
     f6c:	9f ef       	ldi	r25, 0xFF	; 255
     f6e:	2b 96       	adiw	r28, 0x0b	; 11
     f70:	0f b6       	in	r0, 0x3f	; 63
     f72:	f8 94       	cli
     f74:	de bf       	out	0x3e, r29	; 62
     f76:	0f be       	out	0x3f, r0	; 63
     f78:	cd bf       	out	0x3d, r28	; 61
     f7a:	df 91       	pop	r29
     f7c:	cf 91       	pop	r28
     f7e:	1f 91       	pop	r17
     f80:	0f 91       	pop	r16
     f82:	ff 90       	pop	r15
     f84:	ef 90       	pop	r14
     f86:	df 90       	pop	r13
     f88:	cf 90       	pop	r12
     f8a:	bf 90       	pop	r11
     f8c:	af 90       	pop	r10
     f8e:	9f 90       	pop	r9
     f90:	8f 90       	pop	r8
     f92:	7f 90       	pop	r7
     f94:	6f 90       	pop	r6
     f96:	5f 90       	pop	r5
     f98:	4f 90       	pop	r4
     f9a:	3f 90       	pop	r3
     f9c:	2f 90       	pop	r2
     f9e:	08 95       	ret

00000fa0 <strnlen_P>:
     fa0:	fc 01       	movw	r30, r24
     fa2:	05 90       	lpm	r0, Z+
     fa4:	61 50       	subi	r22, 0x01	; 1
     fa6:	70 40       	sbci	r23, 0x00	; 0
     fa8:	01 10       	cpse	r0, r1
     faa:	d8 f7       	brcc	.-10     	; 0xfa2 <strnlen_P+0x2>
     fac:	80 95       	com	r24
     fae:	90 95       	com	r25
     fb0:	8e 0f       	add	r24, r30
     fb2:	9f 1f       	adc	r25, r31
     fb4:	08 95       	ret

00000fb6 <strnlen>:
     fb6:	fc 01       	movw	r30, r24
     fb8:	61 50       	subi	r22, 0x01	; 1
     fba:	70 40       	sbci	r23, 0x00	; 0
     fbc:	01 90       	ld	r0, Z+
     fbe:	01 10       	cpse	r0, r1
     fc0:	d8 f7       	brcc	.-10     	; 0xfb8 <strnlen+0x2>
     fc2:	80 95       	com	r24
     fc4:	90 95       	com	r25
     fc6:	8e 0f       	add	r24, r30
     fc8:	9f 1f       	adc	r25, r31
     fca:	08 95       	ret

00000fcc <fputc>:
     fcc:	0f 93       	push	r16
     fce:	1f 93       	push	r17
     fd0:	cf 93       	push	r28
     fd2:	df 93       	push	r29
     fd4:	fb 01       	movw	r30, r22
     fd6:	23 81       	ldd	r18, Z+3	; 0x03
     fd8:	21 fd       	sbrc	r18, 1
     fda:	03 c0       	rjmp	.+6      	; 0xfe2 <fputc+0x16>
     fdc:	8f ef       	ldi	r24, 0xFF	; 255
     fde:	9f ef       	ldi	r25, 0xFF	; 255
     fe0:	2c c0       	rjmp	.+88     	; 0x103a <fputc+0x6e>
     fe2:	22 ff       	sbrs	r18, 2
     fe4:	16 c0       	rjmp	.+44     	; 0x1012 <fputc+0x46>
     fe6:	46 81       	ldd	r20, Z+6	; 0x06
     fe8:	57 81       	ldd	r21, Z+7	; 0x07
     fea:	24 81       	ldd	r18, Z+4	; 0x04
     fec:	35 81       	ldd	r19, Z+5	; 0x05
     fee:	42 17       	cp	r20, r18
     ff0:	53 07       	cpc	r21, r19
     ff2:	44 f4       	brge	.+16     	; 0x1004 <fputc+0x38>
     ff4:	a0 81       	ld	r26, Z
     ff6:	b1 81       	ldd	r27, Z+1	; 0x01
     ff8:	9d 01       	movw	r18, r26
     ffa:	2f 5f       	subi	r18, 0xFF	; 255
     ffc:	3f 4f       	sbci	r19, 0xFF	; 255
     ffe:	31 83       	std	Z+1, r19	; 0x01
    1000:	20 83       	st	Z, r18
    1002:	8c 93       	st	X, r24
    1004:	26 81       	ldd	r18, Z+6	; 0x06
    1006:	37 81       	ldd	r19, Z+7	; 0x07
    1008:	2f 5f       	subi	r18, 0xFF	; 255
    100a:	3f 4f       	sbci	r19, 0xFF	; 255
    100c:	37 83       	std	Z+7, r19	; 0x07
    100e:	26 83       	std	Z+6, r18	; 0x06
    1010:	14 c0       	rjmp	.+40     	; 0x103a <fputc+0x6e>
    1012:	8b 01       	movw	r16, r22
    1014:	ec 01       	movw	r28, r24
    1016:	fb 01       	movw	r30, r22
    1018:	00 84       	ldd	r0, Z+8	; 0x08
    101a:	f1 85       	ldd	r31, Z+9	; 0x09
    101c:	e0 2d       	mov	r30, r0
    101e:	19 95       	eicall
    1020:	89 2b       	or	r24, r25
    1022:	e1 f6       	brne	.-72     	; 0xfdc <fputc+0x10>
    1024:	d8 01       	movw	r26, r16
    1026:	16 96       	adiw	r26, 0x06	; 6
    1028:	8d 91       	ld	r24, X+
    102a:	9c 91       	ld	r25, X
    102c:	17 97       	sbiw	r26, 0x07	; 7
    102e:	01 96       	adiw	r24, 0x01	; 1
    1030:	17 96       	adiw	r26, 0x07	; 7
    1032:	9c 93       	st	X, r25
    1034:	8e 93       	st	-X, r24
    1036:	16 97       	sbiw	r26, 0x06	; 6
    1038:	ce 01       	movw	r24, r28
    103a:	df 91       	pop	r29
    103c:	cf 91       	pop	r28
    103e:	1f 91       	pop	r17
    1040:	0f 91       	pop	r16
    1042:	08 95       	ret

00001044 <__ultoa_invert>:
    1044:	fa 01       	movw	r30, r20
    1046:	aa 27       	eor	r26, r26
    1048:	28 30       	cpi	r18, 0x08	; 8
    104a:	51 f1       	breq	.+84     	; 0x10a0 <__ultoa_invert+0x5c>
    104c:	20 31       	cpi	r18, 0x10	; 16
    104e:	81 f1       	breq	.+96     	; 0x10b0 <__ultoa_invert+0x6c>
    1050:	e8 94       	clt
    1052:	6f 93       	push	r22
    1054:	6e 7f       	andi	r22, 0xFE	; 254
    1056:	6e 5f       	subi	r22, 0xFE	; 254
    1058:	7f 4f       	sbci	r23, 0xFF	; 255
    105a:	8f 4f       	sbci	r24, 0xFF	; 255
    105c:	9f 4f       	sbci	r25, 0xFF	; 255
    105e:	af 4f       	sbci	r26, 0xFF	; 255
    1060:	b1 e0       	ldi	r27, 0x01	; 1
    1062:	3e d0       	rcall	.+124    	; 0x10e0 <__ultoa_invert+0x9c>
    1064:	b4 e0       	ldi	r27, 0x04	; 4
    1066:	3c d0       	rcall	.+120    	; 0x10e0 <__ultoa_invert+0x9c>
    1068:	67 0f       	add	r22, r23
    106a:	78 1f       	adc	r23, r24
    106c:	89 1f       	adc	r24, r25
    106e:	9a 1f       	adc	r25, r26
    1070:	a1 1d       	adc	r26, r1
    1072:	68 0f       	add	r22, r24
    1074:	79 1f       	adc	r23, r25
    1076:	8a 1f       	adc	r24, r26
    1078:	91 1d       	adc	r25, r1
    107a:	a1 1d       	adc	r26, r1
    107c:	6a 0f       	add	r22, r26
    107e:	71 1d       	adc	r23, r1
    1080:	81 1d       	adc	r24, r1
    1082:	91 1d       	adc	r25, r1
    1084:	a1 1d       	adc	r26, r1
    1086:	20 d0       	rcall	.+64     	; 0x10c8 <__ultoa_invert+0x84>
    1088:	09 f4       	brne	.+2      	; 0x108c <__ultoa_invert+0x48>
    108a:	68 94       	set
    108c:	3f 91       	pop	r19
    108e:	2a e0       	ldi	r18, 0x0A	; 10
    1090:	26 9f       	mul	r18, r22
    1092:	11 24       	eor	r1, r1
    1094:	30 19       	sub	r19, r0
    1096:	30 5d       	subi	r19, 0xD0	; 208
    1098:	31 93       	st	Z+, r19
    109a:	de f6       	brtc	.-74     	; 0x1052 <__ultoa_invert+0xe>
    109c:	cf 01       	movw	r24, r30
    109e:	08 95       	ret
    10a0:	46 2f       	mov	r20, r22
    10a2:	47 70       	andi	r20, 0x07	; 7
    10a4:	40 5d       	subi	r20, 0xD0	; 208
    10a6:	41 93       	st	Z+, r20
    10a8:	b3 e0       	ldi	r27, 0x03	; 3
    10aa:	0f d0       	rcall	.+30     	; 0x10ca <__ultoa_invert+0x86>
    10ac:	c9 f7       	brne	.-14     	; 0x10a0 <__ultoa_invert+0x5c>
    10ae:	f6 cf       	rjmp	.-20     	; 0x109c <__ultoa_invert+0x58>
    10b0:	46 2f       	mov	r20, r22
    10b2:	4f 70       	andi	r20, 0x0F	; 15
    10b4:	40 5d       	subi	r20, 0xD0	; 208
    10b6:	4a 33       	cpi	r20, 0x3A	; 58
    10b8:	18 f0       	brcs	.+6      	; 0x10c0 <__ultoa_invert+0x7c>
    10ba:	49 5d       	subi	r20, 0xD9	; 217
    10bc:	31 fd       	sbrc	r19, 1
    10be:	40 52       	subi	r20, 0x20	; 32
    10c0:	41 93       	st	Z+, r20
    10c2:	02 d0       	rcall	.+4      	; 0x10c8 <__ultoa_invert+0x84>
    10c4:	a9 f7       	brne	.-22     	; 0x10b0 <__ultoa_invert+0x6c>
    10c6:	ea cf       	rjmp	.-44     	; 0x109c <__ultoa_invert+0x58>
    10c8:	b4 e0       	ldi	r27, 0x04	; 4
    10ca:	a6 95       	lsr	r26
    10cc:	97 95       	ror	r25
    10ce:	87 95       	ror	r24
    10d0:	77 95       	ror	r23
    10d2:	67 95       	ror	r22
    10d4:	ba 95       	dec	r27
    10d6:	c9 f7       	brne	.-14     	; 0x10ca <__ultoa_invert+0x86>
    10d8:	00 97       	sbiw	r24, 0x00	; 0
    10da:	61 05       	cpc	r22, r1
    10dc:	71 05       	cpc	r23, r1
    10de:	08 95       	ret
    10e0:	9b 01       	movw	r18, r22
    10e2:	ac 01       	movw	r20, r24
    10e4:	0a 2e       	mov	r0, r26
    10e6:	06 94       	lsr	r0
    10e8:	57 95       	ror	r21
    10ea:	47 95       	ror	r20
    10ec:	37 95       	ror	r19
    10ee:	27 95       	ror	r18
    10f0:	ba 95       	dec	r27
    10f2:	c9 f7       	brne	.-14     	; 0x10e6 <__ultoa_invert+0xa2>
    10f4:	62 0f       	add	r22, r18
    10f6:	73 1f       	adc	r23, r19
    10f8:	84 1f       	adc	r24, r20
    10fa:	95 1f       	adc	r25, r21
    10fc:	a0 1d       	adc	r26, r0
    10fe:	08 95       	ret

00001100 <_exit>:
    1100:	f8 94       	cli

00001102 <__stop_program>:
    1102:	ff cf       	rjmp	.-2      	; 0x1102 <__stop_program>
