
UniProject.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000010  00800200  000010de  00001172  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000010de  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000002b  00800210  00800210  00001182  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001182  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000011e0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000080  00000000  00000000  00001220  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001105  00000000  00000000  000012a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000cf6  00000000  00000000  000023a5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000644  00000000  00000000  0000309b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000023c  00000000  00000000  000036e0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000070f  00000000  00000000  0000391c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000007ec  00000000  00000000  0000402b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000070  00000000  00000000  00004817  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
       2:	00 00       	nop
       4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
       6:	00 00       	nop
       8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
       a:	00 00       	nop
       c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
       e:	00 00       	nop
      10:	57 c2       	rjmp	.+1198   	; 0x4c0 <__vector_4>
      12:	00 00       	nop
      14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
      16:	00 00       	nop
      18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
      1e:	00 00       	nop
      20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
      22:	00 00       	nop
      24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
      26:	00 00       	nop
      28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
      2e:	00 00       	nop
      30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
      32:	00 00       	nop
      34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
      36:	00 00       	nop
      38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
      3e:	00 00       	nop
      40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
      42:	00 00       	nop
      44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
      46:	00 00       	nop
      48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
      4e:	00 00       	nop
      50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
      52:	00 00       	nop
      54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
      56:	00 00       	nop
      58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	62 c0       	rjmp	.+196    	; 0x122 <__bad_interrupt>
      5e:	00 00       	nop
      60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
      62:	00 00       	nop
      64:	ef c2       	rjmp	.+1502   	; 0x644 <__vector_25>
      66:	00 00       	nop
      68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
      6e:	00 00       	nop
      70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
      72:	00 00       	nop
      74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
      76:	00 00       	nop
      78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
      7e:	00 00       	nop
      80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
      82:	00 00       	nop
      84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
      86:	00 00       	nop
      88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
      8e:	00 00       	nop
      90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
      92:	00 00       	nop
      94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
      96:	00 00       	nop
      98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	f7 c1       	rjmp	.+1006   	; 0x4a8 <__vector_46>
      ba:	00 00       	nop
      bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
      be:	00 00       	nop
      c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	96 c2       	rjmp	.+1324   	; 0x5f6 <__vector_50>
      ca:	00 00       	nop
      cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
      da:	00 00       	nop
      dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
      de:	00 00       	nop
      e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
      e4:	11 24       	eor	r1, r1
      e6:	1f be       	out	0x3f, r1	; 63
      e8:	cf ef       	ldi	r28, 0xFF	; 255
      ea:	d1 e2       	ldi	r29, 0x21	; 33
      ec:	de bf       	out	0x3e, r29	; 62
      ee:	cd bf       	out	0x3d, r28	; 61
      f0:	00 e0       	ldi	r16, 0x00	; 0
      f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
      f4:	12 e0       	ldi	r17, 0x02	; 2
      f6:	a0 e0       	ldi	r26, 0x00	; 0
      f8:	b2 e0       	ldi	r27, 0x02	; 2
      fa:	ee ed       	ldi	r30, 0xDE	; 222
      fc:	f0 e1       	ldi	r31, 0x10	; 16
      fe:	00 e0       	ldi	r16, 0x00	; 0
     100:	0b bf       	out	0x3b, r16	; 59
     102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
     104:	07 90       	elpm	r0, Z+
     106:	0d 92       	st	X+, r0
     108:	a0 31       	cpi	r26, 0x10	; 16
     10a:	b1 07       	cpc	r27, r17
     10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
     10e:	22 e0       	ldi	r18, 0x02	; 2
     110:	a0 e1       	ldi	r26, 0x10	; 16
     112:	b2 e0       	ldi	r27, 0x02	; 2
     114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
     116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
     118:	ab 33       	cpi	r26, 0x3B	; 59
     11a:	b2 07       	cpc	r27, r18
     11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
     11e:	8a d1       	rcall	.+788    	; 0x434 <main>
     120:	dc c7       	rjmp	.+4024   	; 0x10da <_exit>

00000122 <__bad_interrupt>:
     122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <TransmitUART0>:
}

void TransmitUART0(unsigned char data)
{
	//Wait until the Transmitter is ready
	while (! (UCSR0A & (1 << UDRE0)) );
     124:	e0 ec       	ldi	r30, 0xC0	; 192
     126:	f0 e0       	ldi	r31, 0x00	; 0
     128:	90 81       	ld	r25, Z
     12a:	95 ff       	sbrs	r25, 5
     12c:	fd cf       	rjmp	.-6      	; 0x128 <TransmitUART0+0x4>

	//Get that data out a here!
	UDR0 = data;
     12e:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
     132:	08 95       	ret

00000134 <returnNewLine>:
}

void returnNewLine()
{
	TransmitUART0(10);
     134:	8a e0       	ldi	r24, 0x0A	; 10
	TransmitUART0(13);
     136:	f6 df       	rcall	.-20     	; 0x124 <TransmitUART0>
     138:	8d e0       	ldi	r24, 0x0D	; 13
     13a:	f4 cf       	rjmp	.-24     	; 0x124 <TransmitUART0>
     13c:	08 95       	ret

0000013e <TransmitString>:
}

void TransmitString(unsigned char *s)
{
     13e:	cf 93       	push	r28
     140:	df 93       	push	r29
     142:	ec 01       	movw	r28, r24
	while (*s != 0) TransmitUART0(*s++);
     144:	88 81       	ld	r24, Y
     146:	88 23       	and	r24, r24
     148:	29 f0       	breq	.+10     	; 0x154 <TransmitString+0x16>
     14a:	21 96       	adiw	r28, 0x01	; 1
     14c:	eb df       	rcall	.-42     	; 0x124 <TransmitUART0>
     14e:	89 91       	ld	r24, Y+
	returnNewLine();
     150:	81 11       	cpse	r24, r1
     152:	fc cf       	rjmp	.-8      	; 0x14c <TransmitString+0xe>
}
     154:	ef df       	rcall	.-34     	; 0x134 <returnNewLine>
     156:	df 91       	pop	r29
     158:	cf 91       	pop	r28
     15a:	08 95       	ret

0000015c <send_int_Uart>:

void send_int_Uart(uint32_t c)
//void send_int_Uart(float c)
{
     15c:	0f 93       	push	r16
     15e:	1f 93       	push	r17
     160:	cf 93       	push	r28
     162:	df 93       	push	r29
     164:	cd b7       	in	r28, 0x3d	; 61
     166:	de b7       	in	r29, 0x3e	; 62
     168:	2c 97       	sbiw	r28, 0x0c	; 12
     16a:	0f b6       	in	r0, 0x3f	; 63
     16c:	f8 94       	cli
     16e:	de bf       	out	0x3e, r29	; 62
     170:	0f be       	out	0x3f, r0	; 63
     172:	cd bf       	out	0x3d, r28	; 61
	char buffer[12];
	//int tmpInt1 = c;
	//double tmpFrac = c - tmpInt1;
	//int tmpInt2 = trunc(tmpFrac * 1000);
	sprintf(buffer, "%lu", c);
     174:	9f 93       	push	r25
     176:	8f 93       	push	r24
     178:	7f 93       	push	r23
     17a:	6f 93       	push	r22
     17c:	8c e0       	ldi	r24, 0x0C	; 12
     17e:	92 e0       	ldi	r25, 0x02	; 2
     180:	9f 93       	push	r25
     182:	8f 93       	push	r24
     184:	8e 01       	movw	r16, r28
     186:	0f 5f       	subi	r16, 0xFF	; 255
     188:	1f 4f       	sbci	r17, 0xFF	; 255
     18a:	1f 93       	push	r17
     18c:	0f 93       	push	r16
	//sprintf (buffer, "c = %d.%03d", tmpInt1, tmpInt2);
	//itoa(c, buffer, 10);
	TransmitString(buffer);
     18e:	ca d4       	rcall	.+2452   	; 0xb24 <sprintf>
     190:	c8 01       	movw	r24, r16
}
     192:	d5 df       	rcall	.-86     	; 0x13e <TransmitString>
     194:	0f b6       	in	r0, 0x3f	; 63
     196:	f8 94       	cli
     198:	de bf       	out	0x3e, r29	; 62
     19a:	0f be       	out	0x3f, r0	; 63
     19c:	cd bf       	out	0x3d, r28	; 61
     19e:	2c 96       	adiw	r28, 0x0c	; 12
     1a0:	0f b6       	in	r0, 0x3f	; 63
     1a2:	f8 94       	cli
     1a4:	de bf       	out	0x3e, r29	; 62
     1a6:	0f be       	out	0x3f, r0	; 63
     1a8:	cd bf       	out	0x3d, r28	; 61
     1aa:	df 91       	pop	r29
     1ac:	cf 91       	pop	r28
     1ae:	1f 91       	pop	r17
     1b0:	0f 91       	pop	r16
     1b2:	08 95       	ret

000001b4 <InitializeUART0>:

void InitializeUART0(int Baud, char AsyncDoubleSpeed, char DataSizeInBits, char ParityEVEorODD, char StopBits)
{
     1b4:	0f 93       	push	r16
     1b6:	1f 93       	push	r17
     1b8:	cf 93       	push	r28
     1ba:	df 93       	push	r29
     1bc:	16 2f       	mov	r17, r22
     1be:	c4 2f       	mov	r28, r20
     1c0:	d2 2f       	mov	r29, r18
	uint16_t UBBRValue = lrint( F_CPU / 16L / Baud ) - 1;
     1c2:	9c 01       	movw	r18, r24
     1c4:	99 0f       	add	r25, r25
     1c6:	44 0b       	sbc	r20, r20
     1c8:	55 0b       	sbc	r21, r21
     1ca:	60 e4       	ldi	r22, 0x40	; 64
     1cc:	72 e4       	ldi	r23, 0x42	; 66
     1ce:	8f e0       	ldi	r24, 0x0F	; 15
     1d0:	90 e0       	ldi	r25, 0x00	; 0
     1d2:	6d d4       	rcall	.+2266   	; 0xaae <__udivmodsi4>
     1d4:	ca 01       	movw	r24, r20
     1d6:	b9 01       	movw	r22, r18
     1d8:	1b d3       	rcall	.+1590   	; 0x810 <__floatunsisf>
     1da:	cc d3       	rcall	.+1944   	; 0x974 <lrint>
     1dc:	61 50       	subi	r22, 0x01	; 1
     1de:	71 09       	sbc	r23, r1
	
	if (AsyncDoubleSpeed == 1) UCSR0A = (1 << U2X0); // setting the U2X bit to 1 for double speed async
     1e0:	11 30       	cpi	r17, 0x01	; 1
     1e2:	19 f4       	brne	.+6      	; 0x1ea <InitializeUART0+0x36>
     1e4:	82 e0       	ldi	r24, 0x02	; 2
     1e6:	80 93 c0 00 	sts	0x00C0, r24	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7000c0>
	
	//Put the upper part of the baud number here (bits 8 to 11)
	UBRR1H = (unsigned char) (UBBRValue >> 8);
     1ea:	70 93 cd 00 	sts	0x00CD, r23	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7000cd>
	
	UBRR0L = UBBRValue;
     1ee:	60 93 c4 00 	sts	0x00C4, r22	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
	//Enable the receiver and transmitter
	UCSR0B = ( 1 << RXCIE0 ) |(1 << RXEN0) | (1 << TXEN0);
     1f2:	88 e9       	ldi	r24, 0x98	; 152
     1f4:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7000c1>
	
	//set 2 stop bits
	if (StopBits == 2) UCSR0C = (1 << USBS0);
     1f8:	02 30       	cpi	r16, 0x02	; 2
     1fa:	19 f4       	brne	.+6      	; 0x202 <InitializeUART0+0x4e>
     1fc:	88 e0       	ldi	r24, 0x08	; 8
     1fe:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7000c2>
	
	if (ParityEVEorODD == EVEN) UCSR0C |= (1 << UPM01);
     202:	d1 11       	cpse	r29, r1
     204:	06 c0       	rjmp	.+12     	; 0x212 <InitializeUART0+0x5e>
     206:	e2 ec       	ldi	r30, 0xC2	; 194
     208:	f0 e0       	ldi	r31, 0x00	; 0
     20a:	80 81       	ld	r24, Z
     20c:	80 62       	ori	r24, 0x20	; 32
     20e:	80 83       	st	Z, r24
     210:	07 c0       	rjmp	.+14     	; 0x220 <InitializeUART0+0x6c>
	if (ParityEVEorODD == ODD) UCSR0C |= (3 << UPM01);
     212:	d1 30       	cpi	r29, 0x01	; 1
     214:	29 f4       	brne	.+10     	; 0x220 <InitializeUART0+0x6c>
     216:	e2 ec       	ldi	r30, 0xC2	; 194
     218:	f0 e0       	ldi	r31, 0x00	; 0
     21a:	80 81       	ld	r24, Z
     21c:	80 66       	ori	r24, 0x60	; 96
     21e:	80 83       	st	Z, r24
	
	if (DataSizeInBits == 6) UCSR0C |= (1 << UCSZ00); // 6 bit data length
     220:	c6 30       	cpi	r28, 0x06	; 6
     222:	31 f4       	brne	.+12     	; 0x230 <InitializeUART0+0x7c>
     224:	e2 ec       	ldi	r30, 0xC2	; 194
     226:	f0 e0       	ldi	r31, 0x00	; 0
     228:	80 81       	ld	r24, Z
     22a:	82 60       	ori	r24, 0x02	; 2
     22c:	80 83       	st	Z, r24
     22e:	10 c0       	rjmp	.+32     	; 0x250 <InitializeUART0+0x9c>
	if (DataSizeInBits == 7) UCSR0C |= (2 << UCSZ00); // 7 bit data length
     230:	c7 30       	cpi	r28, 0x07	; 7
     232:	31 f4       	brne	.+12     	; 0x240 <InitializeUART0+0x8c>
     234:	e2 ec       	ldi	r30, 0xC2	; 194
     236:	f0 e0       	ldi	r31, 0x00	; 0
     238:	80 81       	ld	r24, Z
     23a:	84 60       	ori	r24, 0x04	; 4
     23c:	80 83       	st	Z, r24
     23e:	0f c0       	rjmp	.+30     	; 0x25e <InitializeUART0+0xaa>
	if (DataSizeInBits == 8) UCSR0C |= (3 << UCSZ00); // 8 bit data length
     240:	c8 30       	cpi	r28, 0x08	; 8
     242:	31 f4       	brne	.+12     	; 0x250 <InitializeUART0+0x9c>
     244:	e2 ec       	ldi	r30, 0xC2	; 194
     246:	f0 e0       	ldi	r31, 0x00	; 0
     248:	80 81       	ld	r24, Z
     24a:	86 60       	ori	r24, 0x06	; 6
     24c:	80 83       	st	Z, r24
     24e:	07 c0       	rjmp	.+14     	; 0x25e <InitializeUART0+0xaa>
	if (DataSizeInBits == 9) UCSR0C |= (7 << UCSZ00); // 9 bit data length
     250:	c9 30       	cpi	r28, 0x09	; 9
     252:	29 f4       	brne	.+10     	; 0x25e <InitializeUART0+0xaa>
     254:	e2 ec       	ldi	r30, 0xC2	; 194
     256:	f0 e0       	ldi	r31, 0x00	; 0
     258:	80 81       	ld	r24, Z
     25a:	8e 60       	ori	r24, 0x0E	; 14
     25c:	80 83       	st	Z, r24
}
     25e:	df 91       	pop	r29
     260:	cf 91       	pop	r28
     262:	1f 91       	pop	r17
     264:	0f 91       	pop	r16
     266:	08 95       	ret

00000268 <setPwm>:
#define PWMInit

#define F_CPU 16000000UL
#include <math.h>

void setPwm(double Pwm){
     268:	cf 92       	push	r12
     26a:	df 92       	push	r13
     26c:	ef 92       	push	r14
     26e:	ff 92       	push	r15
     270:	6b 01       	movw	r12, r22
     272:	7c 01       	movw	r14, r24
	if (Pwm <= 100)
     274:	20 e0       	ldi	r18, 0x00	; 0
     276:	30 e0       	ldi	r19, 0x00	; 0
     278:	48 ec       	ldi	r20, 0xC8	; 200
     27a:	52 e4       	ldi	r21, 0x42	; 66
     27c:	94 d2       	rcall	.+1320   	; 0x7a6 <__cmpsf2>
     27e:	18 16       	cp	r1, r24
     280:	ac f0       	brlt	.+42     	; 0x2ac <setPwm+0x44>
	{
		OCR4A = (uint16_t) ICR4 * 0.01 * Pwm;
     282:	60 91 a6 00 	lds	r22, 0x00A6	; 0x8000a6 <__TEXT_REGION_LENGTH__+0x7000a6>
     286:	70 91 a7 00 	lds	r23, 0x00A7	; 0x8000a7 <__TEXT_REGION_LENGTH__+0x7000a7>
     28a:	80 e0       	ldi	r24, 0x00	; 0
     28c:	90 e0       	ldi	r25, 0x00	; 0
     28e:	c0 d2       	rcall	.+1408   	; 0x810 <__floatunsisf>
     290:	2a e0       	ldi	r18, 0x0A	; 10
     292:	37 ed       	ldi	r19, 0xD7	; 215
     294:	43 e2       	ldi	r20, 0x23	; 35
     296:	5c e3       	ldi	r21, 0x3C	; 60
     298:	a7 d3       	rcall	.+1870   	; 0x9e8 <__mulsf3>
     29a:	a7 01       	movw	r20, r14
     29c:	96 01       	movw	r18, r12
     29e:	a4 d3       	rcall	.+1864   	; 0x9e8 <__mulsf3>
     2a0:	8b d2       	rcall	.+1302   	; 0x7b8 <__fixunssfsi>
     2a2:	70 93 a9 00 	sts	0x00A9, r23	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7000a9>
     2a6:	60 93 a8 00 	sts	0x00A8, r22	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7000a8>
     2aa:	04 c0       	rjmp	.+8      	; 0x2b4 <setPwm+0x4c>
	} else {
		OCR4A = 0;
     2ac:	10 92 a9 00 	sts	0x00A9, r1	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7000a9>
     2b0:	10 92 a8 00 	sts	0x00A8, r1	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7000a8>
	}
}
     2b4:	ff 90       	pop	r15
     2b6:	ef 90       	pop	r14
     2b8:	df 90       	pop	r13
     2ba:	cf 90       	pop	r12
     2bc:	08 95       	ret

000002be <InitializePWM_4C>:

void InitializePWM_4C( uint32_t Frequency, int Pwm )
{
     2be:	0f 93       	push	r16
     2c0:	1f 93       	push	r17
     2c2:	cf 93       	push	r28
     2c4:	df 93       	push	r29
     2c6:	8b 01       	movw	r16, r22
     2c8:	9c 01       	movw	r18, r24
     2ca:	ea 01       	movw	r28, r20
	TCCR4B = 0x00;
     2cc:	e1 ea       	ldi	r30, 0xA1	; 161
     2ce:	f0 e0       	ldi	r31, 0x00	; 0
     2d0:	10 82       	st	Z, r1
	DDRH |= ( 1 << PH3 );
     2d2:	a1 e0       	ldi	r26, 0x01	; 1
     2d4:	b1 e0       	ldi	r27, 0x01	; 1
     2d6:	8c 91       	ld	r24, X
     2d8:	88 60       	ori	r24, 0x08	; 8
     2da:	8c 93       	st	X, r24
	TCCR4A |= ( 1 << WGM41) | ( 0 << WGM40 ) | ( 1 << COM4A1 ) | ( 0 << COM4A0 );
     2dc:	a0 ea       	ldi	r26, 0xA0	; 160
     2de:	b0 e0       	ldi	r27, 0x00	; 0
     2e0:	8c 91       	ld	r24, X
     2e2:	82 68       	ori	r24, 0x82	; 130
     2e4:	8c 93       	st	X, r24
	TCCR4B |= ( 1 << WGM43) | ( 1 << WGM42 ) ;
     2e6:	80 81       	ld	r24, Z
     2e8:	88 61       	ori	r24, 0x18	; 24
     2ea:	80 83       	st	Z, r24
	uint32_t F_factor = F_CPU / Frequency;
     2ec:	60 e0       	ldi	r22, 0x00	; 0
     2ee:	74 e2       	ldi	r23, 0x24	; 36
     2f0:	84 ef       	ldi	r24, 0xF4	; 244
     2f2:	90 e0       	ldi	r25, 0x00	; 0
     2f4:	a9 01       	movw	r20, r18
     2f6:	98 01       	movw	r18, r16
     2f8:	da d3       	rcall	.+1972   	; 0xaae <__udivmodsi4>
     2fa:	89 01       	movw	r16, r18
     2fc:	9a 01       	movw	r18, r20

	int shifter = 1;
	uint32_t multiplier = F_factor;
	while ( multiplier > 65535 ){
     2fe:	01 15       	cp	r16, r1
     300:	11 05       	cpc	r17, r1
     302:	61 e0       	ldi	r22, 0x01	; 1
     304:	26 07       	cpc	r18, r22
     306:	31 05       	cpc	r19, r1
     308:	38 f1       	brcs	.+78     	; 0x358 <InitializePWM_4C+0x9a>
     30a:	d9 01       	movw	r26, r18
     30c:	c8 01       	movw	r24, r16
     30e:	41 e0       	ldi	r20, 0x01	; 1
     310:	50 e0       	ldi	r21, 0x00	; 0
		multiplier /= 2;
     312:	b6 95       	lsr	r27
     314:	a7 95       	ror	r26
     316:	97 95       	ror	r25
     318:	87 95       	ror	r24
		shifter++;
     31a:	4f 5f       	subi	r20, 0xFF	; 255
     31c:	5f 4f       	sbci	r21, 0xFF	; 255
	TCCR4B |= ( 1 << WGM43) | ( 1 << WGM42 ) ;
	uint32_t F_factor = F_CPU / Frequency;

	int shifter = 1;
	uint32_t multiplier = F_factor;
	while ( multiplier > 65535 ){
     31e:	00 97       	sbiw	r24, 0x00	; 0
     320:	61 e0       	ldi	r22, 0x01	; 1
     322:	a6 07       	cpc	r26, r22
     324:	b1 05       	cpc	r27, r1
     326:	a8 f7       	brcc	.-22     	; 0x312 <InitializePWM_4C+0x54>
		shifter++;
	}
	if (shifter > 5) {
		shifter = 5;
	}
	switch ( shifter )
     328:	46 30       	cpi	r20, 0x06	; 6
     32a:	51 05       	cpc	r21, r1
     32c:	14 f0       	brlt	.+4      	; 0x332 <InitializePWM_4C+0x74>
     32e:	45 e0       	ldi	r20, 0x05	; 5
     330:	50 e0       	ldi	r21, 0x00	; 0
     332:	43 30       	cpi	r20, 0x03	; 3
     334:	51 05       	cpc	r21, r1
     336:	81 f1       	breq	.+96     	; 0x398 <InitializePWM_4C+0xda>
     338:	3c f4       	brge	.+14     	; 0x348 <InitializePWM_4C+0x8a>
     33a:	41 30       	cpi	r20, 0x01	; 1
     33c:	51 05       	cpc	r21, r1
     33e:	61 f0       	breq	.+24     	; 0x358 <InitializePWM_4C+0x9a>
     340:	42 30       	cpi	r20, 0x02	; 2
     342:	51 05       	cpc	r21, r1
     344:	a9 f0       	breq	.+42     	; 0x370 <InitializePWM_4C+0xb2>
     346:	60 c0       	rjmp	.+192    	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
     348:	44 30       	cpi	r20, 0x04	; 4
     34a:	51 05       	cpc	r21, r1
     34c:	c9 f1       	breq	.+114    	; 0x3c0 <InitializePWM_4C+0x102>
     34e:	45 30       	cpi	r20, 0x05	; 5
     350:	51 05       	cpc	r21, r1
     352:	09 f4       	brne	.+2      	; 0x356 <InitializePWM_4C+0x98>
     354:	45 c0       	rjmp	.+138    	; 0x3e0 <InitializePWM_4C+0x122>
     356:	58 c0       	rjmp	.+176    	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
		{
		case 1:
			TCCR4B |= ( 1 << CS40 ); 
     358:	e1 ea       	ldi	r30, 0xA1	; 161
     35a:	f0 e0       	ldi	r31, 0x00	; 0
     35c:	80 81       	ld	r24, Z
     35e:	81 60       	ori	r24, 0x01	; 1
     360:	80 83       	st	Z, r24
			ICR4 = (uint16_t) (F_factor  - 1);
     362:	01 50       	subi	r16, 0x01	; 1
     364:	11 09       	sbc	r17, r1
     366:	10 93 a7 00 	sts	0x00A7, r17	; 0x8000a7 <__TEXT_REGION_LENGTH__+0x7000a7>
     36a:	00 93 a6 00 	sts	0x00A6, r16	; 0x8000a6 <__TEXT_REGION_LENGTH__+0x7000a6>
		break;
     36e:	4c c0       	rjmp	.+152    	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
		case 2:
			TCCR4B |= ( 1 << CS41 ); //decrease in 8
     370:	e1 ea       	ldi	r30, 0xA1	; 161
     372:	f0 e0       	ldi	r31, 0x00	; 0
     374:	80 81       	ld	r24, Z
     376:	82 60       	ori	r24, 0x02	; 2
     378:	80 83       	st	Z, r24
			ICR4 = (uint16_t) (F_factor / 8  - 1);
     37a:	68 94       	set
     37c:	12 f8       	bld	r1, 2
     37e:	36 95       	lsr	r19
     380:	27 95       	ror	r18
     382:	17 95       	ror	r17
     384:	07 95       	ror	r16
     386:	16 94       	lsr	r1
     388:	d1 f7       	brne	.-12     	; 0x37e <InitializePWM_4C+0xc0>
     38a:	01 50       	subi	r16, 0x01	; 1
     38c:	11 09       	sbc	r17, r1
     38e:	10 93 a7 00 	sts	0x00A7, r17	; 0x8000a7 <__TEXT_REGION_LENGTH__+0x7000a7>
     392:	00 93 a6 00 	sts	0x00A6, r16	; 0x8000a6 <__TEXT_REGION_LENGTH__+0x7000a6>
		break;
     396:	38 c0       	rjmp	.+112    	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
		case 3:
			TCCR4B |= ( 1 << CS41 ) | ( 1 << CS40 ); //decrease in 64
     398:	e1 ea       	ldi	r30, 0xA1	; 161
     39a:	f0 e0       	ldi	r31, 0x00	; 0
     39c:	80 81       	ld	r24, Z
     39e:	83 60       	ori	r24, 0x03	; 3
     3a0:	80 83       	st	Z, r24
			ICR4 = (uint16_t) (F_factor / 64 - 1);
     3a2:	68 94       	set
     3a4:	15 f8       	bld	r1, 5
     3a6:	36 95       	lsr	r19
     3a8:	27 95       	ror	r18
     3aa:	17 95       	ror	r17
     3ac:	07 95       	ror	r16
     3ae:	16 94       	lsr	r1
     3b0:	d1 f7       	brne	.-12     	; 0x3a6 <InitializePWM_4C+0xe8>
     3b2:	01 50       	subi	r16, 0x01	; 1
     3b4:	11 09       	sbc	r17, r1
     3b6:	10 93 a7 00 	sts	0x00A7, r17	; 0x8000a7 <__TEXT_REGION_LENGTH__+0x7000a7>
     3ba:	00 93 a6 00 	sts	0x00A6, r16	; 0x8000a6 <__TEXT_REGION_LENGTH__+0x7000a6>
		break;
     3be:	24 c0       	rjmp	.+72     	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
		case 4:
			TCCR4B |= ( 1 << CS42 ); //decrease in 256
     3c0:	e1 ea       	ldi	r30, 0xA1	; 161
     3c2:	f0 e0       	ldi	r31, 0x00	; 0
     3c4:	80 81       	ld	r24, Z
     3c6:	84 60       	ori	r24, 0x04	; 4
     3c8:	80 83       	st	Z, r24
			ICR4 = (uint16_t) (F_factor / 256  - 1);
     3ca:	01 2f       	mov	r16, r17
     3cc:	12 2f       	mov	r17, r18
     3ce:	23 2f       	mov	r18, r19
     3d0:	33 27       	eor	r19, r19
     3d2:	01 50       	subi	r16, 0x01	; 1
     3d4:	11 09       	sbc	r17, r1
     3d6:	10 93 a7 00 	sts	0x00A7, r17	; 0x8000a7 <__TEXT_REGION_LENGTH__+0x7000a7>
     3da:	00 93 a6 00 	sts	0x00A6, r16	; 0x8000a6 <__TEXT_REGION_LENGTH__+0x7000a6>
		break;
     3de:	14 c0       	rjmp	.+40     	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
		case 5:
			TCCR4B |= ( 1 << CS42 ) | ( 1 << CS40 ); //decrease in 1024
     3e0:	e1 ea       	ldi	r30, 0xA1	; 161
     3e2:	f0 e0       	ldi	r31, 0x00	; 0
     3e4:	80 81       	ld	r24, Z
     3e6:	85 60       	ori	r24, 0x05	; 5
     3e8:	80 83       	st	Z, r24
			ICR4 = (uint16_t) (F_factor / 1024 + 1);
     3ea:	0f 2e       	mov	r0, r31
     3ec:	fa e0       	ldi	r31, 0x0A	; 10
     3ee:	36 95       	lsr	r19
     3f0:	27 95       	ror	r18
     3f2:	17 95       	ror	r17
     3f4:	07 95       	ror	r16
     3f6:	fa 95       	dec	r31
     3f8:	d1 f7       	brne	.-12     	; 0x3ee <InitializePWM_4C+0x130>
     3fa:	f0 2d       	mov	r31, r0
     3fc:	0f 5f       	subi	r16, 0xFF	; 255
     3fe:	1f 4f       	sbci	r17, 0xFF	; 255
     400:	10 93 a7 00 	sts	0x00A7, r17	; 0x8000a7 <__TEXT_REGION_LENGTH__+0x7000a7>
     404:	00 93 a6 00 	sts	0x00A6, r16	; 0x8000a6 <__TEXT_REGION_LENGTH__+0x7000a6>
		break;
	}
	
	if ( ICR4 == 0 )
     408:	80 91 a6 00 	lds	r24, 0x00A6	; 0x8000a6 <__TEXT_REGION_LENGTH__+0x7000a6>
     40c:	90 91 a7 00 	lds	r25, 0x00A7	; 0x8000a7 <__TEXT_REGION_LENGTH__+0x7000a7>
     410:	89 2b       	or	r24, r25
     412:	29 f4       	brne	.+10     	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
	{
		OCR4A = 0;
     414:	10 92 a9 00 	sts	0x00A9, r1	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7000a9>
     418:	10 92 a8 00 	sts	0x00A8, r1	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7000a8>
     41c:	06 c0       	rjmp	.+12     	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
	 } else {
		setPwm(Pwm); // 100 - percentage
     41e:	be 01       	movw	r22, r28
     420:	dd 0f       	add	r29, r29
     422:	88 0b       	sbc	r24, r24
     424:	99 0b       	sbc	r25, r25
     426:	f6 d1       	rcall	.+1004   	; 0x814 <__floatsisf>
     428:	1f df       	rcall	.-450    	; 0x268 <setPwm>
	 }
}
     42a:	df 91       	pop	r29
     42c:	cf 91       	pop	r28
     42e:	1f 91       	pop	r17
     430:	0f 91       	pop	r16
     432:	08 95       	ret

00000434 <main>:
struct TIMER5 Timer5_1 = {.counter = 0, .captureFirst = 0, .captureSecond = 0, .seconds = 0, .totalTicks = 0 };
struct RPM RPM_1 = {.currentRPM = 0, .setRPM = 2500, .counter = 0};

int main(void)
{
	DDRH |= (1 << DDH4);
     434:	e1 e0       	ldi	r30, 0x01	; 1
     436:	f1 e0       	ldi	r31, 0x01	; 1
     438:	80 81       	ld	r24, Z
     43a:	80 61       	ori	r24, 0x10	; 16
     43c:	80 83       	st	Z, r24
	PORTH |=  (1 << PH4);
     43e:	e2 e0       	ldi	r30, 0x02	; 2
     440:	f1 e0       	ldi	r31, 0x01	; 1
     442:	80 81       	ld	r24, Z
     444:	80 61       	ori	r24, 0x10	; 16
     446:	80 83       	st	Z, r24
	
	//DDRD |= (0 << DDD4);
	PORTD |= (1 << PD3);
     448:	5b 9a       	sbi	0x0b, 3	; 11
	
  TIMSK5 |= (1 << TOIE5) | (0 << ICIE5);
     44a:	e3 e7       	ldi	r30, 0x73	; 115
     44c:	f0 e0       	ldi	r31, 0x00	; 0
     44e:	80 81       	ld	r24, Z
     450:	81 60       	ori	r24, 0x01	; 1
     452:	80 83       	st	Z, r24
	TCCR5A = (0	<< COM5A1) | (0 << COM5A0) | (0 << WGM51) | ( 0 << WGM50);
     454:	10 92 20 01 	sts	0x0120, r1	; 0x800120 <__TEXT_REGION_LENGTH__+0x700120>
	TCCR5B = (0 << ICNC5 ) | (0 << ICES5) | (0 << WGM53) | (0 << WGM52) | (0 << CS52) | (0 << CS51) | (1 << CS50);
     458:	81 e0       	ldi	r24, 0x01	; 1
     45a:	80 93 21 01 	sts	0x0121, r24	; 0x800121 <__TEXT_REGION_LENGTH__+0x700121>
  TCNT5 = 1535;
     45e:	8f ef       	ldi	r24, 0xFF	; 255
     460:	95 e0       	ldi	r25, 0x05	; 5
     462:	90 93 25 01 	sts	0x0125, r25	; 0x800125 <__TEXT_REGION_LENGTH__+0x700125>
     466:	80 93 24 01 	sts	0x0124, r24	; 0x800124 <__TEXT_REGION_LENGTH__+0x700124>
	
	EICRA |= (0 << ISC31) | (1 << ISC30);
     46a:	e9 e6       	ldi	r30, 0x69	; 105
     46c:	f0 e0       	ldi	r31, 0x00	; 0
     46e:	80 81       	ld	r24, Z
     470:	80 64       	ori	r24, 0x40	; 64
     472:	80 83       	st	Z, r24
	EIMSK |= (1 << INT3);
     474:	eb 9a       	sbi	0x1d, 3	; 29

	sei();
     476:	78 94       	sei
	InitializeUART0(9600, 0, 8, 0, 0);
     478:	00 e0       	ldi	r16, 0x00	; 0
     47a:	20 e0       	ldi	r18, 0x00	; 0
     47c:	48 e0       	ldi	r20, 0x08	; 8
     47e:	60 e0       	ldi	r22, 0x00	; 0
     480:	80 e8       	ldi	r24, 0x80	; 128
     482:	95 e2       	ldi	r25, 0x25	; 37
     484:	97 de       	rcall	.-722    	; 0x1b4 <InitializeUART0>
	InitializePWM_4C(PWM4C.pwmFrequency, PWM4C.pwmValue);
     486:	e6 e0       	ldi	r30, 0x06	; 6
     488:	f2 e0       	ldi	r31, 0x02	; 2
     48a:	62 81       	ldd	r22, Z+2	; 0x02
     48c:	73 81       	ldd	r23, Z+3	; 0x03
     48e:	84 81       	ldd	r24, Z+4	; 0x04
     490:	95 81       	ldd	r25, Z+5	; 0x05
     492:	c0 81       	ld	r28, Z
     494:	d1 81       	ldd	r29, Z+1	; 0x01
     496:	8b d1       	rcall	.+790    	; 0x7ae <__fixsfsi>
     498:	9b 01       	movw	r18, r22
     49a:	ac 01       	movw	r20, r24
     49c:	be 01       	movw	r22, r28
     49e:	80 e0       	ldi	r24, 0x00	; 0
     4a0:	90 e0       	ldi	r25, 0x00	; 0
     4a2:	a9 01       	movw	r20, r18
     4a4:	0c df       	rcall	.-488    	; 0x2be <InitializePWM_4C>
     4a6:	ff cf       	rjmp	.-2      	; 0x4a6 <main+0x72>

000004a8 <__vector_46>:
    }
}


ISR(TIMER5_CAPT_vect)
{
     4a8:	1f 92       	push	r1
     4aa:	0f 92       	push	r0
     4ac:	0f b6       	in	r0, 0x3f	; 63
     4ae:	0f 92       	push	r0
     4b0:	11 24       	eor	r1, r1
	//counter++;
	cli();
     4b2:	f8 94       	cli
		////TransmitString("-");
		//setPwm(PWM4C.pwmValue -= 0.05);
	//}
	//TCNT5 = 0;
	//Timer5_1.counter = 0;
	sei();
     4b4:	78 94       	sei
}
     4b6:	0f 90       	pop	r0
     4b8:	0f be       	out	0x3f, r0	; 63
     4ba:	0f 90       	pop	r0
     4bc:	1f 90       	pop	r1
     4be:	18 95       	reti

000004c0 <__vector_4>:

int sender = 0;
uint32_t currentRPM = 0 ;
ISR(INT3_vect)
{
     4c0:	1f 92       	push	r1
     4c2:	0f 92       	push	r0
     4c4:	0f b6       	in	r0, 0x3f	; 63
     4c6:	0f 92       	push	r0
     4c8:	11 24       	eor	r1, r1
     4ca:	0b b6       	in	r0, 0x3b	; 59
     4cc:	0f 92       	push	r0
     4ce:	cf 92       	push	r12
     4d0:	df 92       	push	r13
     4d2:	ef 92       	push	r14
     4d4:	ff 92       	push	r15
     4d6:	0f 93       	push	r16
     4d8:	1f 93       	push	r17
     4da:	2f 93       	push	r18
     4dc:	3f 93       	push	r19
     4de:	4f 93       	push	r20
     4e0:	5f 93       	push	r21
     4e2:	6f 93       	push	r22
     4e4:	7f 93       	push	r23
     4e6:	8f 93       	push	r24
     4e8:	9f 93       	push	r25
     4ea:	af 93       	push	r26
     4ec:	bf 93       	push	r27
     4ee:	cf 93       	push	r28
     4f0:	df 93       	push	r29
     4f2:	ef 93       	push	r30
     4f4:	ff 93       	push	r31
	//TransmitString("asd");
	RPM_1.counter++;
     4f6:	e0 e0       	ldi	r30, 0x00	; 0
     4f8:	f2 e0       	ldi	r31, 0x02	; 2
     4fa:	84 81       	ldd	r24, Z+4	; 0x04
     4fc:	95 81       	ldd	r25, Z+5	; 0x05
     4fe:	01 96       	adiw	r24, 0x01	; 1
     500:	95 83       	std	Z+5, r25	; 0x05
     502:	84 83       	std	Z+4, r24	; 0x04
	if(RPM_1.counter >= 10) {
     504:	84 81       	ldd	r24, Z+4	; 0x04
     506:	95 81       	ldd	r25, Z+5	; 0x05
     508:	0a 97       	sbiw	r24, 0x0a	; 10
     50a:	08 f4       	brcc	.+2      	; 0x50e <__vector_4+0x4e>
     50c:	40 c0       	rjmp	.+128    	; 0x58e <__vector_4+0xce>
		Timer5_1.totalTicks += Timer5_1.counter * 65535 + TCNT5;
     50e:	c6 e1       	ldi	r28, 0x16	; 22
     510:	d2 e0       	ldi	r29, 0x02	; 2
     512:	28 81       	ld	r18, Y
     514:	39 81       	ldd	r19, Y+1	; 0x01
     516:	4a 81       	ldd	r20, Y+2	; 0x02
     518:	5b 81       	ldd	r21, Y+3	; 0x03
     51a:	04 e2       	ldi	r16, 0x24	; 36
     51c:	11 e0       	ldi	r17, 0x01	; 1
     51e:	d8 01       	movw	r26, r16
     520:	ed 91       	ld	r30, X+
     522:	fc 91       	ld	r31, X
     524:	c8 88       	ldd	r12, Y+16	; 0x10
     526:	d9 88       	ldd	r13, Y+17	; 0x11
     528:	ea 88       	ldd	r14, Y+18	; 0x12
     52a:	fb 88       	ldd	r15, Y+19	; 0x13
     52c:	af ef       	ldi	r26, 0xFF	; 255
     52e:	bf ef       	ldi	r27, 0xFF	; 255
     530:	e0 d2       	rcall	.+1472   	; 0xaf2 <__muluhisi3>
     532:	dc 01       	movw	r26, r24
     534:	cb 01       	movw	r24, r22
     536:	8e 0f       	add	r24, r30
     538:	9f 1f       	adc	r25, r31
     53a:	a1 1d       	adc	r26, r1
     53c:	b1 1d       	adc	r27, r1
     53e:	c8 0e       	add	r12, r24
     540:	d9 1e       	adc	r13, r25
     542:	ea 1e       	adc	r14, r26
     544:	fb 1e       	adc	r15, r27
     546:	c8 8a       	std	Y+16, r12	; 0x10
     548:	d9 8a       	std	Y+17, r13	; 0x11
     54a:	ea 8a       	std	Y+18, r14	; 0x12
     54c:	fb 8a       	std	Y+19, r15	; 0x13
		multiply by 60 - per minute
		division by 4 - number of poles on engine - 8 => real revolution = 4 magnetic field revolutions
										(so, hall sensors will be detect it 4 times per real(mechanical) revolution) 
		division by 4 - interruption works on rise and fall => 10 * 60 / 4 / 2 = 75
		\****************/
		currentRPM = F_CPU * 75 /* 10 */ / Timer5_1.totalTicks /* * 60 / 4 / 2 */ ;
     54e:	28 89       	ldd	r18, Y+16	; 0x10
     550:	39 89       	ldd	r19, Y+17	; 0x11
     552:	4a 89       	ldd	r20, Y+18	; 0x12
     554:	5b 89       	ldd	r21, Y+19	; 0x13
     556:	60 e0       	ldi	r22, 0x00	; 0
     558:	7c e8       	ldi	r23, 0x8C	; 140
     55a:	86 e8       	ldi	r24, 0x86	; 134
     55c:	97 e4       	ldi	r25, 0x47	; 71
     55e:	a7 d2       	rcall	.+1358   	; 0xaae <__udivmodsi4>
     560:	20 93 10 02 	sts	0x0210, r18	; 0x800210 <__data_end>
     564:	30 93 11 02 	sts	0x0211, r19	; 0x800211 <__data_end+0x1>
     568:	40 93 12 02 	sts	0x0212, r20	; 0x800212 <__data_end+0x2>
     56c:	50 93 13 02 	sts	0x0213, r21	; 0x800213 <__data_end+0x3>
		RPM_1.counter = 0;
     570:	10 92 05 02 	sts	0x0205, r1	; 0x800205 <RPM_1+0x5>
     574:	10 92 04 02 	sts	0x0204, r1	; 0x800204 <RPM_1+0x4>
		Timer5_1.counter = 0;
     578:	18 82       	st	Y, r1
     57a:	19 82       	std	Y+1, r1	; 0x01
     57c:	1a 82       	std	Y+2, r1	; 0x02
     57e:	1b 82       	std	Y+3, r1	; 0x03
		Timer5_1.totalTicks = 0;
     580:	18 8a       	std	Y+16, r1	; 0x10
     582:	19 8a       	std	Y+17, r1	; 0x11
     584:	1a 8a       	std	Y+18, r1	; 0x12
     586:	1b 8a       	std	Y+19, r1	; 0x13
		 TCNT5 = 0;
     588:	f8 01       	movw	r30, r16
     58a:	11 82       	std	Z+1, r1	; 0x01
     58c:	10 82       	st	Z, r1
	}
	;
	sender++;
     58e:	80 91 14 02 	lds	r24, 0x0214	; 0x800214 <sender>
     592:	90 91 15 02 	lds	r25, 0x0215	; 0x800215 <sender+0x1>
     596:	01 96       	adiw	r24, 0x01	; 1
     598:	90 93 15 02 	sts	0x0215, r25	; 0x800215 <sender+0x1>
     59c:	80 93 14 02 	sts	0x0214, r24	; 0x800214 <sender>
	if (sender > 500) {
     5a0:	85 3f       	cpi	r24, 0xF5	; 245
     5a2:	91 40       	sbci	r25, 0x01	; 1
     5a4:	6c f0       	brlt	.+26     	; 0x5c0 <__vector_4+0x100>
		send_int_Uart(currentRPM);
     5a6:	60 91 10 02 	lds	r22, 0x0210	; 0x800210 <__data_end>
     5aa:	70 91 11 02 	lds	r23, 0x0211	; 0x800211 <__data_end+0x1>
     5ae:	80 91 12 02 	lds	r24, 0x0212	; 0x800212 <__data_end+0x2>
     5b2:	90 91 13 02 	lds	r25, 0x0213	; 0x800213 <__data_end+0x3>
     5b6:	d2 dd       	rcall	.-1116   	; 0x15c <send_int_Uart>
		sender = 0;
     5b8:	10 92 15 02 	sts	0x0215, r1	; 0x800215 <sender+0x1>
     5bc:	10 92 14 02 	sts	0x0214, r1	; 0x800214 <sender>
		//Timer5_1.totalTicks += Timer5_1.counter * 64000 + Timer5_1.captureFirst + Timer5_1.captureSecond;
	//}
	//send_int_Uart(F_CPU / Timer5_1.totalTicks * 3 *4);
	//Timer5_1.totalTicks = Timer5_1.counter * 64000 + TCNT5;
	//PORTH ^= (1 << PH4);
}
     5c0:	ff 91       	pop	r31
     5c2:	ef 91       	pop	r30
     5c4:	df 91       	pop	r29
     5c6:	cf 91       	pop	r28
     5c8:	bf 91       	pop	r27
     5ca:	af 91       	pop	r26
     5cc:	9f 91       	pop	r25
     5ce:	8f 91       	pop	r24
     5d0:	7f 91       	pop	r23
     5d2:	6f 91       	pop	r22
     5d4:	5f 91       	pop	r21
     5d6:	4f 91       	pop	r20
     5d8:	3f 91       	pop	r19
     5da:	2f 91       	pop	r18
     5dc:	1f 91       	pop	r17
     5de:	0f 91       	pop	r16
     5e0:	ff 90       	pop	r15
     5e2:	ef 90       	pop	r14
     5e4:	df 90       	pop	r13
     5e6:	cf 90       	pop	r12
     5e8:	0f 90       	pop	r0
     5ea:	0b be       	out	0x3b, r0	; 59
     5ec:	0f 90       	pop	r0
     5ee:	0f be       	out	0x3f, r0	; 63
     5f0:	0f 90       	pop	r0
     5f2:	1f 90       	pop	r1
     5f4:	18 95       	reti

000005f6 <__vector_50>:

ISR(TIMER5_OVF_vect)
{
     5f6:	1f 92       	push	r1
     5f8:	0f 92       	push	r0
     5fa:	0f b6       	in	r0, 0x3f	; 63
     5fc:	0f 92       	push	r0
     5fe:	11 24       	eor	r1, r1
     600:	0b b6       	in	r0, 0x3b	; 59
     602:	0f 92       	push	r0
     604:	8f 93       	push	r24
     606:	9f 93       	push	r25
     608:	af 93       	push	r26
     60a:	bf 93       	push	r27
     60c:	ef 93       	push	r30
     60e:	ff 93       	push	r31
	//if(Timer5_1.totalTicks == 0 && PWM4C.pwmValue == 0) {
		//PWM4C.pwmValue = 2;
		//setPwm(PWM4C.pwmValue);
	//}
	Timer5_1.counter++;
     610:	e6 e1       	ldi	r30, 0x16	; 22
     612:	f2 e0       	ldi	r31, 0x02	; 2
     614:	80 81       	ld	r24, Z
     616:	91 81       	ldd	r25, Z+1	; 0x01
     618:	a2 81       	ldd	r26, Z+2	; 0x02
     61a:	b3 81       	ldd	r27, Z+3	; 0x03
     61c:	01 96       	adiw	r24, 0x01	; 1
     61e:	a1 1d       	adc	r26, r1
     620:	b1 1d       	adc	r27, r1
     622:	80 83       	st	Z, r24
     624:	91 83       	std	Z+1, r25	; 0x01
     626:	a2 83       	std	Z+2, r26	; 0x02
     628:	b3 83       	std	Z+3, r27	; 0x03
		////send_int_Uart(counter * 4 * 3);
		////counter=0;
	//}
	
	//PORTH ^= (1 << PH4);
}
     62a:	ff 91       	pop	r31
     62c:	ef 91       	pop	r30
     62e:	bf 91       	pop	r27
     630:	af 91       	pop	r26
     632:	9f 91       	pop	r25
     634:	8f 91       	pop	r24
     636:	0f 90       	pop	r0
     638:	0b be       	out	0x3b, r0	; 59
     63a:	0f 90       	pop	r0
     63c:	0f be       	out	0x3f, r0	; 63
     63e:	0f 90       	pop	r0
     640:	1f 90       	pop	r1
     642:	18 95       	reti

00000644 <__vector_25>:

ISR (USART0_RX_vect)
{
     644:	1f 92       	push	r1
     646:	0f 92       	push	r0
     648:	0f b6       	in	r0, 0x3f	; 63
     64a:	0f 92       	push	r0
     64c:	11 24       	eor	r1, r1
     64e:	0b b6       	in	r0, 0x3b	; 59
     650:	0f 92       	push	r0
     652:	2f 93       	push	r18
     654:	3f 93       	push	r19
     656:	4f 93       	push	r20
     658:	5f 93       	push	r21
     65a:	6f 93       	push	r22
     65c:	7f 93       	push	r23
     65e:	8f 93       	push	r24
     660:	9f 93       	push	r25
     662:	af 93       	push	r26
     664:	bf 93       	push	r27
     666:	cf 93       	push	r28
     668:	df 93       	push	r29
     66a:	ef 93       	push	r30
     66c:	ff 93       	push	r31
	UART0.data_in[UART0.dataCount] = UDR0;
     66e:	e0 91 3a 02 	lds	r30, 0x023A	; 0x80023a <UART0+0x10>
     672:	f0 e0       	ldi	r31, 0x00	; 0
     674:	a6 ec       	ldi	r26, 0xC6	; 198
     676:	b0 e0       	ldi	r27, 0x00	; 0
     678:	8c 91       	ld	r24, X
     67a:	e6 5d       	subi	r30, 0xD6	; 214
     67c:	fd 4f       	sbci	r31, 0xFD	; 253
     67e:	80 83       	st	Z, r24
	if(UDR0 == '+' ) {
     680:	8c 91       	ld	r24, X
     682:	8b 32       	cpi	r24, 0x2B	; 43
     684:	89 f4       	brne	.+34     	; 0x6a8 <__vector_25+0x64>
		setPwm(++PWM4C.pwmValue);
     686:	c6 e0       	ldi	r28, 0x06	; 6
     688:	d2 e0       	ldi	r29, 0x02	; 2
     68a:	6a 81       	ldd	r22, Y+2	; 0x02
     68c:	7b 81       	ldd	r23, Y+3	; 0x03
     68e:	8c 81       	ldd	r24, Y+4	; 0x04
     690:	9d 81       	ldd	r25, Y+5	; 0x05
     692:	20 e0       	ldi	r18, 0x00	; 0
     694:	30 e0       	ldi	r19, 0x00	; 0
     696:	40 e8       	ldi	r20, 0x80	; 128
     698:	5f e3       	ldi	r21, 0x3F	; 63
     69a:	21 d0       	rcall	.+66     	; 0x6de <__addsf3>
     69c:	6a 83       	std	Y+2, r22	; 0x02
     69e:	7b 83       	std	Y+3, r23	; 0x03
     6a0:	8c 83       	std	Y+4, r24	; 0x04
     6a2:	9d 83       	std	Y+5, r25	; 0x05
     6a4:	e1 dd       	rcall	.-1086   	; 0x268 <setPwm>
     6a6:	05 c0       	rjmp	.+10     	; 0x6b2 <__vector_25+0x6e>
		//TransmitString(UART0.data_in);
		//UART0.dataCount = 0;
		//memset(&UART0.dataCount, 0, sizeof(UART0.dataCount));
	} else {
		UART0.dataCount++;
     6a8:	ea e2       	ldi	r30, 0x2A	; 42
     6aa:	f2 e0       	ldi	r31, 0x02	; 2
     6ac:	80 89       	ldd	r24, Z+16	; 0x10
     6ae:	8f 5f       	subi	r24, 0xFF	; 255
     6b0:	80 8b       	std	Z+16, r24	; 0x10
	}
	//TransmitString(UART0.data_in);
}
     6b2:	ff 91       	pop	r31
     6b4:	ef 91       	pop	r30
     6b6:	df 91       	pop	r29
     6b8:	cf 91       	pop	r28
     6ba:	bf 91       	pop	r27
     6bc:	af 91       	pop	r26
     6be:	9f 91       	pop	r25
     6c0:	8f 91       	pop	r24
     6c2:	7f 91       	pop	r23
     6c4:	6f 91       	pop	r22
     6c6:	5f 91       	pop	r21
     6c8:	4f 91       	pop	r20
     6ca:	3f 91       	pop	r19
     6cc:	2f 91       	pop	r18
     6ce:	0f 90       	pop	r0
     6d0:	0b be       	out	0x3b, r0	; 59
     6d2:	0f 90       	pop	r0
     6d4:	0f be       	out	0x3f, r0	; 63
     6d6:	0f 90       	pop	r0
     6d8:	1f 90       	pop	r1
     6da:	18 95       	reti

000006dc <__subsf3>:
     6dc:	50 58       	subi	r21, 0x80	; 128

000006de <__addsf3>:
     6de:	bb 27       	eor	r27, r27
     6e0:	aa 27       	eor	r26, r26
     6e2:	0e d0       	rcall	.+28     	; 0x700 <__addsf3x>
     6e4:	0d c1       	rjmp	.+538    	; 0x900 <__fp_round>
     6e6:	fe d0       	rcall	.+508    	; 0x8e4 <__fp_pscA>
     6e8:	30 f0       	brcs	.+12     	; 0x6f6 <__addsf3+0x18>
     6ea:	03 d1       	rcall	.+518    	; 0x8f2 <__fp_pscB>
     6ec:	20 f0       	brcs	.+8      	; 0x6f6 <__addsf3+0x18>
     6ee:	31 f4       	brne	.+12     	; 0x6fc <__addsf3+0x1e>
     6f0:	9f 3f       	cpi	r25, 0xFF	; 255
     6f2:	11 f4       	brne	.+4      	; 0x6f8 <__addsf3+0x1a>
     6f4:	1e f4       	brtc	.+6      	; 0x6fc <__addsf3+0x1e>
     6f6:	f3 c0       	rjmp	.+486    	; 0x8de <__fp_nan>
     6f8:	0e f4       	brtc	.+2      	; 0x6fc <__addsf3+0x1e>
     6fa:	e0 95       	com	r30
     6fc:	e7 fb       	bst	r30, 7
     6fe:	e9 c0       	rjmp	.+466    	; 0x8d2 <__fp_inf>

00000700 <__addsf3x>:
     700:	e9 2f       	mov	r30, r25
     702:	0f d1       	rcall	.+542    	; 0x922 <__fp_split3>
     704:	80 f3       	brcs	.-32     	; 0x6e6 <__addsf3+0x8>
     706:	ba 17       	cp	r27, r26
     708:	62 07       	cpc	r22, r18
     70a:	73 07       	cpc	r23, r19
     70c:	84 07       	cpc	r24, r20
     70e:	95 07       	cpc	r25, r21
     710:	18 f0       	brcs	.+6      	; 0x718 <__addsf3x+0x18>
     712:	71 f4       	brne	.+28     	; 0x730 <__addsf3x+0x30>
     714:	9e f5       	brtc	.+102    	; 0x77c <__addsf3x+0x7c>
     716:	27 c1       	rjmp	.+590    	; 0x966 <__fp_zero>
     718:	0e f4       	brtc	.+2      	; 0x71c <__addsf3x+0x1c>
     71a:	e0 95       	com	r30
     71c:	0b 2e       	mov	r0, r27
     71e:	ba 2f       	mov	r27, r26
     720:	a0 2d       	mov	r26, r0
     722:	0b 01       	movw	r0, r22
     724:	b9 01       	movw	r22, r18
     726:	90 01       	movw	r18, r0
     728:	0c 01       	movw	r0, r24
     72a:	ca 01       	movw	r24, r20
     72c:	a0 01       	movw	r20, r0
     72e:	11 24       	eor	r1, r1
     730:	ff 27       	eor	r31, r31
     732:	59 1b       	sub	r21, r25
     734:	99 f0       	breq	.+38     	; 0x75c <__addsf3x+0x5c>
     736:	59 3f       	cpi	r21, 0xF9	; 249
     738:	50 f4       	brcc	.+20     	; 0x74e <__addsf3x+0x4e>
     73a:	50 3e       	cpi	r21, 0xE0	; 224
     73c:	68 f1       	brcs	.+90     	; 0x798 <__addsf3x+0x98>
     73e:	1a 16       	cp	r1, r26
     740:	f0 40       	sbci	r31, 0x00	; 0
     742:	a2 2f       	mov	r26, r18
     744:	23 2f       	mov	r18, r19
     746:	34 2f       	mov	r19, r20
     748:	44 27       	eor	r20, r20
     74a:	58 5f       	subi	r21, 0xF8	; 248
     74c:	f3 cf       	rjmp	.-26     	; 0x734 <__addsf3x+0x34>
     74e:	46 95       	lsr	r20
     750:	37 95       	ror	r19
     752:	27 95       	ror	r18
     754:	a7 95       	ror	r26
     756:	f0 40       	sbci	r31, 0x00	; 0
     758:	53 95       	inc	r21
     75a:	c9 f7       	brne	.-14     	; 0x74e <__addsf3x+0x4e>
     75c:	7e f4       	brtc	.+30     	; 0x77c <__addsf3x+0x7c>
     75e:	1f 16       	cp	r1, r31
     760:	ba 0b       	sbc	r27, r26
     762:	62 0b       	sbc	r22, r18
     764:	73 0b       	sbc	r23, r19
     766:	84 0b       	sbc	r24, r20
     768:	ba f0       	brmi	.+46     	; 0x798 <__addsf3x+0x98>
     76a:	91 50       	subi	r25, 0x01	; 1
     76c:	a1 f0       	breq	.+40     	; 0x796 <__addsf3x+0x96>
     76e:	ff 0f       	add	r31, r31
     770:	bb 1f       	adc	r27, r27
     772:	66 1f       	adc	r22, r22
     774:	77 1f       	adc	r23, r23
     776:	88 1f       	adc	r24, r24
     778:	c2 f7       	brpl	.-16     	; 0x76a <__addsf3x+0x6a>
     77a:	0e c0       	rjmp	.+28     	; 0x798 <__addsf3x+0x98>
     77c:	ba 0f       	add	r27, r26
     77e:	62 1f       	adc	r22, r18
     780:	73 1f       	adc	r23, r19
     782:	84 1f       	adc	r24, r20
     784:	48 f4       	brcc	.+18     	; 0x798 <__addsf3x+0x98>
     786:	87 95       	ror	r24
     788:	77 95       	ror	r23
     78a:	67 95       	ror	r22
     78c:	b7 95       	ror	r27
     78e:	f7 95       	ror	r31
     790:	9e 3f       	cpi	r25, 0xFE	; 254
     792:	08 f0       	brcs	.+2      	; 0x796 <__addsf3x+0x96>
     794:	b3 cf       	rjmp	.-154    	; 0x6fc <__addsf3+0x1e>
     796:	93 95       	inc	r25
     798:	88 0f       	add	r24, r24
     79a:	08 f0       	brcs	.+2      	; 0x79e <__addsf3x+0x9e>
     79c:	99 27       	eor	r25, r25
     79e:	ee 0f       	add	r30, r30
     7a0:	97 95       	ror	r25
     7a2:	87 95       	ror	r24
     7a4:	08 95       	ret

000007a6 <__cmpsf2>:
     7a6:	71 d0       	rcall	.+226    	; 0x88a <__fp_cmp>
     7a8:	08 f4       	brcc	.+2      	; 0x7ac <__cmpsf2+0x6>
     7aa:	81 e0       	ldi	r24, 0x01	; 1
     7ac:	08 95       	ret

000007ae <__fixsfsi>:
     7ae:	04 d0       	rcall	.+8      	; 0x7b8 <__fixunssfsi>
     7b0:	68 94       	set
     7b2:	b1 11       	cpse	r27, r1
     7b4:	d9 c0       	rjmp	.+434    	; 0x968 <__fp_szero>
     7b6:	08 95       	ret

000007b8 <__fixunssfsi>:
     7b8:	bc d0       	rcall	.+376    	; 0x932 <__fp_splitA>
     7ba:	88 f0       	brcs	.+34     	; 0x7de <__fixunssfsi+0x26>
     7bc:	9f 57       	subi	r25, 0x7F	; 127
     7be:	90 f0       	brcs	.+36     	; 0x7e4 <__fixunssfsi+0x2c>
     7c0:	b9 2f       	mov	r27, r25
     7c2:	99 27       	eor	r25, r25
     7c4:	b7 51       	subi	r27, 0x17	; 23
     7c6:	a0 f0       	brcs	.+40     	; 0x7f0 <__fixunssfsi+0x38>
     7c8:	d1 f0       	breq	.+52     	; 0x7fe <__fixunssfsi+0x46>
     7ca:	66 0f       	add	r22, r22
     7cc:	77 1f       	adc	r23, r23
     7ce:	88 1f       	adc	r24, r24
     7d0:	99 1f       	adc	r25, r25
     7d2:	1a f0       	brmi	.+6      	; 0x7da <__fixunssfsi+0x22>
     7d4:	ba 95       	dec	r27
     7d6:	c9 f7       	brne	.-14     	; 0x7ca <__fixunssfsi+0x12>
     7d8:	12 c0       	rjmp	.+36     	; 0x7fe <__fixunssfsi+0x46>
     7da:	b1 30       	cpi	r27, 0x01	; 1
     7dc:	81 f0       	breq	.+32     	; 0x7fe <__fixunssfsi+0x46>
     7de:	c3 d0       	rcall	.+390    	; 0x966 <__fp_zero>
     7e0:	b1 e0       	ldi	r27, 0x01	; 1
     7e2:	08 95       	ret
     7e4:	c0 c0       	rjmp	.+384    	; 0x966 <__fp_zero>
     7e6:	67 2f       	mov	r22, r23
     7e8:	78 2f       	mov	r23, r24
     7ea:	88 27       	eor	r24, r24
     7ec:	b8 5f       	subi	r27, 0xF8	; 248
     7ee:	39 f0       	breq	.+14     	; 0x7fe <__fixunssfsi+0x46>
     7f0:	b9 3f       	cpi	r27, 0xF9	; 249
     7f2:	cc f3       	brlt	.-14     	; 0x7e6 <__fixunssfsi+0x2e>
     7f4:	86 95       	lsr	r24
     7f6:	77 95       	ror	r23
     7f8:	67 95       	ror	r22
     7fa:	b3 95       	inc	r27
     7fc:	d9 f7       	brne	.-10     	; 0x7f4 <__fixunssfsi+0x3c>
     7fe:	3e f4       	brtc	.+14     	; 0x80e <__fixunssfsi+0x56>
     800:	90 95       	com	r25
     802:	80 95       	com	r24
     804:	70 95       	com	r23
     806:	61 95       	neg	r22
     808:	7f 4f       	sbci	r23, 0xFF	; 255
     80a:	8f 4f       	sbci	r24, 0xFF	; 255
     80c:	9f 4f       	sbci	r25, 0xFF	; 255
     80e:	08 95       	ret

00000810 <__floatunsisf>:
     810:	e8 94       	clt
     812:	09 c0       	rjmp	.+18     	; 0x826 <__floatsisf+0x12>

00000814 <__floatsisf>:
     814:	97 fb       	bst	r25, 7
     816:	3e f4       	brtc	.+14     	; 0x826 <__floatsisf+0x12>
     818:	90 95       	com	r25
     81a:	80 95       	com	r24
     81c:	70 95       	com	r23
     81e:	61 95       	neg	r22
     820:	7f 4f       	sbci	r23, 0xFF	; 255
     822:	8f 4f       	sbci	r24, 0xFF	; 255
     824:	9f 4f       	sbci	r25, 0xFF	; 255
     826:	99 23       	and	r25, r25
     828:	a9 f0       	breq	.+42     	; 0x854 <__floatsisf+0x40>
     82a:	f9 2f       	mov	r31, r25
     82c:	96 e9       	ldi	r25, 0x96	; 150
     82e:	bb 27       	eor	r27, r27
     830:	93 95       	inc	r25
     832:	f6 95       	lsr	r31
     834:	87 95       	ror	r24
     836:	77 95       	ror	r23
     838:	67 95       	ror	r22
     83a:	b7 95       	ror	r27
     83c:	f1 11       	cpse	r31, r1
     83e:	f8 cf       	rjmp	.-16     	; 0x830 <__floatsisf+0x1c>
     840:	fa f4       	brpl	.+62     	; 0x880 <__floatsisf+0x6c>
     842:	bb 0f       	add	r27, r27
     844:	11 f4       	brne	.+4      	; 0x84a <__floatsisf+0x36>
     846:	60 ff       	sbrs	r22, 0
     848:	1b c0       	rjmp	.+54     	; 0x880 <__floatsisf+0x6c>
     84a:	6f 5f       	subi	r22, 0xFF	; 255
     84c:	7f 4f       	sbci	r23, 0xFF	; 255
     84e:	8f 4f       	sbci	r24, 0xFF	; 255
     850:	9f 4f       	sbci	r25, 0xFF	; 255
     852:	16 c0       	rjmp	.+44     	; 0x880 <__floatsisf+0x6c>
     854:	88 23       	and	r24, r24
     856:	11 f0       	breq	.+4      	; 0x85c <__floatsisf+0x48>
     858:	96 e9       	ldi	r25, 0x96	; 150
     85a:	11 c0       	rjmp	.+34     	; 0x87e <__floatsisf+0x6a>
     85c:	77 23       	and	r23, r23
     85e:	21 f0       	breq	.+8      	; 0x868 <__floatsisf+0x54>
     860:	9e e8       	ldi	r25, 0x8E	; 142
     862:	87 2f       	mov	r24, r23
     864:	76 2f       	mov	r23, r22
     866:	05 c0       	rjmp	.+10     	; 0x872 <__floatsisf+0x5e>
     868:	66 23       	and	r22, r22
     86a:	71 f0       	breq	.+28     	; 0x888 <__floatsisf+0x74>
     86c:	96 e8       	ldi	r25, 0x86	; 134
     86e:	86 2f       	mov	r24, r22
     870:	70 e0       	ldi	r23, 0x00	; 0
     872:	60 e0       	ldi	r22, 0x00	; 0
     874:	2a f0       	brmi	.+10     	; 0x880 <__floatsisf+0x6c>
     876:	9a 95       	dec	r25
     878:	66 0f       	add	r22, r22
     87a:	77 1f       	adc	r23, r23
     87c:	88 1f       	adc	r24, r24
     87e:	da f7       	brpl	.-10     	; 0x876 <__floatsisf+0x62>
     880:	88 0f       	add	r24, r24
     882:	96 95       	lsr	r25
     884:	87 95       	ror	r24
     886:	97 f9       	bld	r25, 7
     888:	08 95       	ret

0000088a <__fp_cmp>:
     88a:	99 0f       	add	r25, r25
     88c:	00 08       	sbc	r0, r0
     88e:	55 0f       	add	r21, r21
     890:	aa 0b       	sbc	r26, r26
     892:	e0 e8       	ldi	r30, 0x80	; 128
     894:	fe ef       	ldi	r31, 0xFE	; 254
     896:	16 16       	cp	r1, r22
     898:	17 06       	cpc	r1, r23
     89a:	e8 07       	cpc	r30, r24
     89c:	f9 07       	cpc	r31, r25
     89e:	c0 f0       	brcs	.+48     	; 0x8d0 <__fp_cmp+0x46>
     8a0:	12 16       	cp	r1, r18
     8a2:	13 06       	cpc	r1, r19
     8a4:	e4 07       	cpc	r30, r20
     8a6:	f5 07       	cpc	r31, r21
     8a8:	98 f0       	brcs	.+38     	; 0x8d0 <__fp_cmp+0x46>
     8aa:	62 1b       	sub	r22, r18
     8ac:	73 0b       	sbc	r23, r19
     8ae:	84 0b       	sbc	r24, r20
     8b0:	95 0b       	sbc	r25, r21
     8b2:	39 f4       	brne	.+14     	; 0x8c2 <__fp_cmp+0x38>
     8b4:	0a 26       	eor	r0, r26
     8b6:	61 f0       	breq	.+24     	; 0x8d0 <__fp_cmp+0x46>
     8b8:	23 2b       	or	r18, r19
     8ba:	24 2b       	or	r18, r20
     8bc:	25 2b       	or	r18, r21
     8be:	21 f4       	brne	.+8      	; 0x8c8 <__fp_cmp+0x3e>
     8c0:	08 95       	ret
     8c2:	0a 26       	eor	r0, r26
     8c4:	09 f4       	brne	.+2      	; 0x8c8 <__fp_cmp+0x3e>
     8c6:	a1 40       	sbci	r26, 0x01	; 1
     8c8:	a6 95       	lsr	r26
     8ca:	8f ef       	ldi	r24, 0xFF	; 255
     8cc:	81 1d       	adc	r24, r1
     8ce:	81 1d       	adc	r24, r1
     8d0:	08 95       	ret

000008d2 <__fp_inf>:
     8d2:	97 f9       	bld	r25, 7
     8d4:	9f 67       	ori	r25, 0x7F	; 127
     8d6:	80 e8       	ldi	r24, 0x80	; 128
     8d8:	70 e0       	ldi	r23, 0x00	; 0
     8da:	60 e0       	ldi	r22, 0x00	; 0
     8dc:	08 95       	ret

000008de <__fp_nan>:
     8de:	9f ef       	ldi	r25, 0xFF	; 255
     8e0:	80 ec       	ldi	r24, 0xC0	; 192
     8e2:	08 95       	ret

000008e4 <__fp_pscA>:
     8e4:	00 24       	eor	r0, r0
     8e6:	0a 94       	dec	r0
     8e8:	16 16       	cp	r1, r22
     8ea:	17 06       	cpc	r1, r23
     8ec:	18 06       	cpc	r1, r24
     8ee:	09 06       	cpc	r0, r25
     8f0:	08 95       	ret

000008f2 <__fp_pscB>:
     8f2:	00 24       	eor	r0, r0
     8f4:	0a 94       	dec	r0
     8f6:	12 16       	cp	r1, r18
     8f8:	13 06       	cpc	r1, r19
     8fa:	14 06       	cpc	r1, r20
     8fc:	05 06       	cpc	r0, r21
     8fe:	08 95       	ret

00000900 <__fp_round>:
     900:	09 2e       	mov	r0, r25
     902:	03 94       	inc	r0
     904:	00 0c       	add	r0, r0
     906:	11 f4       	brne	.+4      	; 0x90c <__fp_round+0xc>
     908:	88 23       	and	r24, r24
     90a:	52 f0       	brmi	.+20     	; 0x920 <__fp_round+0x20>
     90c:	bb 0f       	add	r27, r27
     90e:	40 f4       	brcc	.+16     	; 0x920 <__fp_round+0x20>
     910:	bf 2b       	or	r27, r31
     912:	11 f4       	brne	.+4      	; 0x918 <__fp_round+0x18>
     914:	60 ff       	sbrs	r22, 0
     916:	04 c0       	rjmp	.+8      	; 0x920 <__fp_round+0x20>
     918:	6f 5f       	subi	r22, 0xFF	; 255
     91a:	7f 4f       	sbci	r23, 0xFF	; 255
     91c:	8f 4f       	sbci	r24, 0xFF	; 255
     91e:	9f 4f       	sbci	r25, 0xFF	; 255
     920:	08 95       	ret

00000922 <__fp_split3>:
     922:	57 fd       	sbrc	r21, 7
     924:	90 58       	subi	r25, 0x80	; 128
     926:	44 0f       	add	r20, r20
     928:	55 1f       	adc	r21, r21
     92a:	59 f0       	breq	.+22     	; 0x942 <__fp_splitA+0x10>
     92c:	5f 3f       	cpi	r21, 0xFF	; 255
     92e:	71 f0       	breq	.+28     	; 0x94c <__fp_splitA+0x1a>
     930:	47 95       	ror	r20

00000932 <__fp_splitA>:
     932:	88 0f       	add	r24, r24
     934:	97 fb       	bst	r25, 7
     936:	99 1f       	adc	r25, r25
     938:	61 f0       	breq	.+24     	; 0x952 <__fp_splitA+0x20>
     93a:	9f 3f       	cpi	r25, 0xFF	; 255
     93c:	79 f0       	breq	.+30     	; 0x95c <__fp_splitA+0x2a>
     93e:	87 95       	ror	r24
     940:	08 95       	ret
     942:	12 16       	cp	r1, r18
     944:	13 06       	cpc	r1, r19
     946:	14 06       	cpc	r1, r20
     948:	55 1f       	adc	r21, r21
     94a:	f2 cf       	rjmp	.-28     	; 0x930 <__fp_split3+0xe>
     94c:	46 95       	lsr	r20
     94e:	f1 df       	rcall	.-30     	; 0x932 <__fp_splitA>
     950:	08 c0       	rjmp	.+16     	; 0x962 <__fp_splitA+0x30>
     952:	16 16       	cp	r1, r22
     954:	17 06       	cpc	r1, r23
     956:	18 06       	cpc	r1, r24
     958:	99 1f       	adc	r25, r25
     95a:	f1 cf       	rjmp	.-30     	; 0x93e <__fp_splitA+0xc>
     95c:	86 95       	lsr	r24
     95e:	71 05       	cpc	r23, r1
     960:	61 05       	cpc	r22, r1
     962:	08 94       	sec
     964:	08 95       	ret

00000966 <__fp_zero>:
     966:	e8 94       	clt

00000968 <__fp_szero>:
     968:	bb 27       	eor	r27, r27
     96a:	66 27       	eor	r22, r22
     96c:	77 27       	eor	r23, r23
     96e:	cb 01       	movw	r24, r22
     970:	97 f9       	bld	r25, 7
     972:	08 95       	ret

00000974 <lrint>:
     974:	de df       	rcall	.-68     	; 0x932 <__fp_splitA>
     976:	a8 f1       	brcs	.+106    	; 0x9e2 <lrint+0x6e>
     978:	9e 57       	subi	r25, 0x7E	; 126
     97a:	a8 f1       	brcs	.+106    	; 0x9e6 <lrint+0x72>
     97c:	98 51       	subi	r25, 0x18	; 24
     97e:	60 f0       	brcs	.+24     	; 0x998 <lrint+0x24>
     980:	39 f1       	breq	.+78     	; 0x9d0 <lrint+0x5c>
     982:	98 30       	cpi	r25, 0x08	; 8
     984:	70 f5       	brcc	.+92     	; 0x9e2 <lrint+0x6e>
     986:	09 2e       	mov	r0, r25
     988:	99 27       	eor	r25, r25
     98a:	66 0f       	add	r22, r22
     98c:	77 1f       	adc	r23, r23
     98e:	88 1f       	adc	r24, r24
     990:	99 1f       	adc	r25, r25
     992:	0a 94       	dec	r0
     994:	d1 f7       	brne	.-12     	; 0x98a <lrint+0x16>
     996:	1c c0       	rjmp	.+56     	; 0x9d0 <lrint+0x5c>
     998:	bb 27       	eor	r27, r27
     99a:	99 3f       	cpi	r25, 0xF9	; 249
     99c:	4c f4       	brge	.+18     	; 0x9b0 <lrint+0x3c>
     99e:	b1 11       	cpse	r27, r1
     9a0:	b1 e0       	ldi	r27, 0x01	; 1
     9a2:	b6 2b       	or	r27, r22
     9a4:	67 2f       	mov	r22, r23
     9a6:	78 2f       	mov	r23, r24
     9a8:	88 27       	eor	r24, r24
     9aa:	98 5f       	subi	r25, 0xF8	; 248
     9ac:	b1 f7       	brne	.-20     	; 0x99a <lrint+0x26>
     9ae:	08 c0       	rjmp	.+16     	; 0x9c0 <lrint+0x4c>
     9b0:	86 95       	lsr	r24
     9b2:	77 95       	ror	r23
     9b4:	67 95       	ror	r22
     9b6:	b7 95       	ror	r27
     9b8:	08 f4       	brcc	.+2      	; 0x9bc <lrint+0x48>
     9ba:	b1 60       	ori	r27, 0x01	; 1
     9bc:	93 95       	inc	r25
     9be:	c1 f7       	brne	.-16     	; 0x9b0 <lrint+0x3c>
     9c0:	bb 0f       	add	r27, r27
     9c2:	30 f4       	brcc	.+12     	; 0x9d0 <lrint+0x5c>
     9c4:	11 f4       	brne	.+4      	; 0x9ca <lrint+0x56>
     9c6:	60 ff       	sbrs	r22, 0
     9c8:	03 c0       	rjmp	.+6      	; 0x9d0 <lrint+0x5c>
     9ca:	6f 5f       	subi	r22, 0xFF	; 255
     9cc:	7f 4f       	sbci	r23, 0xFF	; 255
     9ce:	8f 4f       	sbci	r24, 0xFF	; 255
     9d0:	3e f4       	brtc	.+14     	; 0x9e0 <lrint+0x6c>
     9d2:	90 95       	com	r25
     9d4:	80 95       	com	r24
     9d6:	70 95       	com	r23
     9d8:	61 95       	neg	r22
     9da:	7f 4f       	sbci	r23, 0xFF	; 255
     9dc:	8f 4f       	sbci	r24, 0xFF	; 255
     9de:	9f 4f       	sbci	r25, 0xFF	; 255
     9e0:	08 95       	ret
     9e2:	68 94       	set
     9e4:	c1 cf       	rjmp	.-126    	; 0x968 <__fp_szero>
     9e6:	bf cf       	rjmp	.-130    	; 0x966 <__fp_zero>

000009e8 <__mulsf3>:
     9e8:	0b d0       	rcall	.+22     	; 0xa00 <__mulsf3x>
     9ea:	8a cf       	rjmp	.-236    	; 0x900 <__fp_round>
     9ec:	7b df       	rcall	.-266    	; 0x8e4 <__fp_pscA>
     9ee:	28 f0       	brcs	.+10     	; 0x9fa <__mulsf3+0x12>
     9f0:	80 df       	rcall	.-256    	; 0x8f2 <__fp_pscB>
     9f2:	18 f0       	brcs	.+6      	; 0x9fa <__mulsf3+0x12>
     9f4:	95 23       	and	r25, r21
     9f6:	09 f0       	breq	.+2      	; 0x9fa <__mulsf3+0x12>
     9f8:	6c cf       	rjmp	.-296    	; 0x8d2 <__fp_inf>
     9fa:	71 cf       	rjmp	.-286    	; 0x8de <__fp_nan>
     9fc:	11 24       	eor	r1, r1
     9fe:	b4 cf       	rjmp	.-152    	; 0x968 <__fp_szero>

00000a00 <__mulsf3x>:
     a00:	90 df       	rcall	.-224    	; 0x922 <__fp_split3>
     a02:	a0 f3       	brcs	.-24     	; 0x9ec <__mulsf3+0x4>

00000a04 <__mulsf3_pse>:
     a04:	95 9f       	mul	r25, r21
     a06:	d1 f3       	breq	.-12     	; 0x9fc <__mulsf3+0x14>
     a08:	95 0f       	add	r25, r21
     a0a:	50 e0       	ldi	r21, 0x00	; 0
     a0c:	55 1f       	adc	r21, r21
     a0e:	62 9f       	mul	r22, r18
     a10:	f0 01       	movw	r30, r0
     a12:	72 9f       	mul	r23, r18
     a14:	bb 27       	eor	r27, r27
     a16:	f0 0d       	add	r31, r0
     a18:	b1 1d       	adc	r27, r1
     a1a:	63 9f       	mul	r22, r19
     a1c:	aa 27       	eor	r26, r26
     a1e:	f0 0d       	add	r31, r0
     a20:	b1 1d       	adc	r27, r1
     a22:	aa 1f       	adc	r26, r26
     a24:	64 9f       	mul	r22, r20
     a26:	66 27       	eor	r22, r22
     a28:	b0 0d       	add	r27, r0
     a2a:	a1 1d       	adc	r26, r1
     a2c:	66 1f       	adc	r22, r22
     a2e:	82 9f       	mul	r24, r18
     a30:	22 27       	eor	r18, r18
     a32:	b0 0d       	add	r27, r0
     a34:	a1 1d       	adc	r26, r1
     a36:	62 1f       	adc	r22, r18
     a38:	73 9f       	mul	r23, r19
     a3a:	b0 0d       	add	r27, r0
     a3c:	a1 1d       	adc	r26, r1
     a3e:	62 1f       	adc	r22, r18
     a40:	83 9f       	mul	r24, r19
     a42:	a0 0d       	add	r26, r0
     a44:	61 1d       	adc	r22, r1
     a46:	22 1f       	adc	r18, r18
     a48:	74 9f       	mul	r23, r20
     a4a:	33 27       	eor	r19, r19
     a4c:	a0 0d       	add	r26, r0
     a4e:	61 1d       	adc	r22, r1
     a50:	23 1f       	adc	r18, r19
     a52:	84 9f       	mul	r24, r20
     a54:	60 0d       	add	r22, r0
     a56:	21 1d       	adc	r18, r1
     a58:	82 2f       	mov	r24, r18
     a5a:	76 2f       	mov	r23, r22
     a5c:	6a 2f       	mov	r22, r26
     a5e:	11 24       	eor	r1, r1
     a60:	9f 57       	subi	r25, 0x7F	; 127
     a62:	50 40       	sbci	r21, 0x00	; 0
     a64:	8a f0       	brmi	.+34     	; 0xa88 <__mulsf3_pse+0x84>
     a66:	e1 f0       	breq	.+56     	; 0xaa0 <__mulsf3_pse+0x9c>
     a68:	88 23       	and	r24, r24
     a6a:	4a f0       	brmi	.+18     	; 0xa7e <__mulsf3_pse+0x7a>
     a6c:	ee 0f       	add	r30, r30
     a6e:	ff 1f       	adc	r31, r31
     a70:	bb 1f       	adc	r27, r27
     a72:	66 1f       	adc	r22, r22
     a74:	77 1f       	adc	r23, r23
     a76:	88 1f       	adc	r24, r24
     a78:	91 50       	subi	r25, 0x01	; 1
     a7a:	50 40       	sbci	r21, 0x00	; 0
     a7c:	a9 f7       	brne	.-22     	; 0xa68 <__mulsf3_pse+0x64>
     a7e:	9e 3f       	cpi	r25, 0xFE	; 254
     a80:	51 05       	cpc	r21, r1
     a82:	70 f0       	brcs	.+28     	; 0xaa0 <__mulsf3_pse+0x9c>
     a84:	26 cf       	rjmp	.-436    	; 0x8d2 <__fp_inf>
     a86:	70 cf       	rjmp	.-288    	; 0x968 <__fp_szero>
     a88:	5f 3f       	cpi	r21, 0xFF	; 255
     a8a:	ec f3       	brlt	.-6      	; 0xa86 <__mulsf3_pse+0x82>
     a8c:	98 3e       	cpi	r25, 0xE8	; 232
     a8e:	dc f3       	brlt	.-10     	; 0xa86 <__mulsf3_pse+0x82>
     a90:	86 95       	lsr	r24
     a92:	77 95       	ror	r23
     a94:	67 95       	ror	r22
     a96:	b7 95       	ror	r27
     a98:	f7 95       	ror	r31
     a9a:	e7 95       	ror	r30
     a9c:	9f 5f       	subi	r25, 0xFF	; 255
     a9e:	c1 f7       	brne	.-16     	; 0xa90 <__mulsf3_pse+0x8c>
     aa0:	fe 2b       	or	r31, r30
     aa2:	88 0f       	add	r24, r24
     aa4:	91 1d       	adc	r25, r1
     aa6:	96 95       	lsr	r25
     aa8:	87 95       	ror	r24
     aaa:	97 f9       	bld	r25, 7
     aac:	08 95       	ret

00000aae <__udivmodsi4>:
     aae:	a1 e2       	ldi	r26, 0x21	; 33
     ab0:	1a 2e       	mov	r1, r26
     ab2:	aa 1b       	sub	r26, r26
     ab4:	bb 1b       	sub	r27, r27
     ab6:	fd 01       	movw	r30, r26
     ab8:	0d c0       	rjmp	.+26     	; 0xad4 <__udivmodsi4_ep>

00000aba <__udivmodsi4_loop>:
     aba:	aa 1f       	adc	r26, r26
     abc:	bb 1f       	adc	r27, r27
     abe:	ee 1f       	adc	r30, r30
     ac0:	ff 1f       	adc	r31, r31
     ac2:	a2 17       	cp	r26, r18
     ac4:	b3 07       	cpc	r27, r19
     ac6:	e4 07       	cpc	r30, r20
     ac8:	f5 07       	cpc	r31, r21
     aca:	20 f0       	brcs	.+8      	; 0xad4 <__udivmodsi4_ep>
     acc:	a2 1b       	sub	r26, r18
     ace:	b3 0b       	sbc	r27, r19
     ad0:	e4 0b       	sbc	r30, r20
     ad2:	f5 0b       	sbc	r31, r21

00000ad4 <__udivmodsi4_ep>:
     ad4:	66 1f       	adc	r22, r22
     ad6:	77 1f       	adc	r23, r23
     ad8:	88 1f       	adc	r24, r24
     ada:	99 1f       	adc	r25, r25
     adc:	1a 94       	dec	r1
     ade:	69 f7       	brne	.-38     	; 0xaba <__udivmodsi4_loop>
     ae0:	60 95       	com	r22
     ae2:	70 95       	com	r23
     ae4:	80 95       	com	r24
     ae6:	90 95       	com	r25
     ae8:	9b 01       	movw	r18, r22
     aea:	ac 01       	movw	r20, r24
     aec:	bd 01       	movw	r22, r26
     aee:	cf 01       	movw	r24, r30
     af0:	08 95       	ret

00000af2 <__muluhisi3>:
     af2:	09 d0       	rcall	.+18     	; 0xb06 <__umulhisi3>
     af4:	a5 9f       	mul	r26, r21
     af6:	90 0d       	add	r25, r0
     af8:	b4 9f       	mul	r27, r20
     afa:	90 0d       	add	r25, r0
     afc:	a4 9f       	mul	r26, r20
     afe:	80 0d       	add	r24, r0
     b00:	91 1d       	adc	r25, r1
     b02:	11 24       	eor	r1, r1
     b04:	08 95       	ret

00000b06 <__umulhisi3>:
     b06:	a2 9f       	mul	r26, r18
     b08:	b0 01       	movw	r22, r0
     b0a:	b3 9f       	mul	r27, r19
     b0c:	c0 01       	movw	r24, r0
     b0e:	a3 9f       	mul	r26, r19
     b10:	70 0d       	add	r23, r0
     b12:	81 1d       	adc	r24, r1
     b14:	11 24       	eor	r1, r1
     b16:	91 1d       	adc	r25, r1
     b18:	b2 9f       	mul	r27, r18
     b1a:	70 0d       	add	r23, r0
     b1c:	81 1d       	adc	r24, r1
     b1e:	11 24       	eor	r1, r1
     b20:	91 1d       	adc	r25, r1
     b22:	08 95       	ret

00000b24 <sprintf>:
     b24:	0f 93       	push	r16
     b26:	1f 93       	push	r17
     b28:	cf 93       	push	r28
     b2a:	df 93       	push	r29
     b2c:	cd b7       	in	r28, 0x3d	; 61
     b2e:	de b7       	in	r29, 0x3e	; 62
     b30:	2e 97       	sbiw	r28, 0x0e	; 14
     b32:	0f b6       	in	r0, 0x3f	; 63
     b34:	f8 94       	cli
     b36:	de bf       	out	0x3e, r29	; 62
     b38:	0f be       	out	0x3f, r0	; 63
     b3a:	cd bf       	out	0x3d, r28	; 61
     b3c:	0e 89       	ldd	r16, Y+22	; 0x16
     b3e:	1f 89       	ldd	r17, Y+23	; 0x17
     b40:	86 e0       	ldi	r24, 0x06	; 6
     b42:	8c 83       	std	Y+4, r24	; 0x04
     b44:	1a 83       	std	Y+2, r17	; 0x02
     b46:	09 83       	std	Y+1, r16	; 0x01
     b48:	8f ef       	ldi	r24, 0xFF	; 255
     b4a:	9f e7       	ldi	r25, 0x7F	; 127
     b4c:	9e 83       	std	Y+6, r25	; 0x06
     b4e:	8d 83       	std	Y+5, r24	; 0x05
     b50:	ae 01       	movw	r20, r28
     b52:	46 5e       	subi	r20, 0xE6	; 230
     b54:	5f 4f       	sbci	r21, 0xFF	; 255
     b56:	68 8d       	ldd	r22, Y+24	; 0x18
     b58:	79 8d       	ldd	r23, Y+25	; 0x19
     b5a:	ce 01       	movw	r24, r28
     b5c:	01 96       	adiw	r24, 0x01	; 1
     b5e:	10 d0       	rcall	.+32     	; 0xb80 <vfprintf>
     b60:	ef 81       	ldd	r30, Y+7	; 0x07
     b62:	f8 85       	ldd	r31, Y+8	; 0x08
     b64:	e0 0f       	add	r30, r16
     b66:	f1 1f       	adc	r31, r17
     b68:	10 82       	st	Z, r1
     b6a:	2e 96       	adiw	r28, 0x0e	; 14
     b6c:	0f b6       	in	r0, 0x3f	; 63
     b6e:	f8 94       	cli
     b70:	de bf       	out	0x3e, r29	; 62
     b72:	0f be       	out	0x3f, r0	; 63
     b74:	cd bf       	out	0x3d, r28	; 61
     b76:	df 91       	pop	r29
     b78:	cf 91       	pop	r28
     b7a:	1f 91       	pop	r17
     b7c:	0f 91       	pop	r16
     b7e:	08 95       	ret

00000b80 <vfprintf>:
     b80:	2f 92       	push	r2
     b82:	3f 92       	push	r3
     b84:	4f 92       	push	r4
     b86:	5f 92       	push	r5
     b88:	6f 92       	push	r6
     b8a:	7f 92       	push	r7
     b8c:	8f 92       	push	r8
     b8e:	9f 92       	push	r9
     b90:	af 92       	push	r10
     b92:	bf 92       	push	r11
     b94:	cf 92       	push	r12
     b96:	df 92       	push	r13
     b98:	ef 92       	push	r14
     b9a:	ff 92       	push	r15
     b9c:	0f 93       	push	r16
     b9e:	1f 93       	push	r17
     ba0:	cf 93       	push	r28
     ba2:	df 93       	push	r29
     ba4:	cd b7       	in	r28, 0x3d	; 61
     ba6:	de b7       	in	r29, 0x3e	; 62
     ba8:	2b 97       	sbiw	r28, 0x0b	; 11
     baa:	0f b6       	in	r0, 0x3f	; 63
     bac:	f8 94       	cli
     bae:	de bf       	out	0x3e, r29	; 62
     bb0:	0f be       	out	0x3f, r0	; 63
     bb2:	cd bf       	out	0x3d, r28	; 61
     bb4:	6c 01       	movw	r12, r24
     bb6:	7b 01       	movw	r14, r22
     bb8:	8a 01       	movw	r16, r20
     bba:	fc 01       	movw	r30, r24
     bbc:	17 82       	std	Z+7, r1	; 0x07
     bbe:	16 82       	std	Z+6, r1	; 0x06
     bc0:	83 81       	ldd	r24, Z+3	; 0x03
     bc2:	81 ff       	sbrs	r24, 1
     bc4:	bf c1       	rjmp	.+894    	; 0xf44 <vfprintf+0x3c4>
     bc6:	ce 01       	movw	r24, r28
     bc8:	01 96       	adiw	r24, 0x01	; 1
     bca:	3c 01       	movw	r6, r24
     bcc:	f6 01       	movw	r30, r12
     bce:	93 81       	ldd	r25, Z+3	; 0x03
     bd0:	f7 01       	movw	r30, r14
     bd2:	93 fd       	sbrc	r25, 3
     bd4:	85 91       	lpm	r24, Z+
     bd6:	93 ff       	sbrs	r25, 3
     bd8:	81 91       	ld	r24, Z+
     bda:	7f 01       	movw	r14, r30
     bdc:	88 23       	and	r24, r24
     bde:	09 f4       	brne	.+2      	; 0xbe2 <vfprintf+0x62>
     be0:	ad c1       	rjmp	.+858    	; 0xf3c <vfprintf+0x3bc>
     be2:	85 32       	cpi	r24, 0x25	; 37
     be4:	39 f4       	brne	.+14     	; 0xbf4 <vfprintf+0x74>
     be6:	93 fd       	sbrc	r25, 3
     be8:	85 91       	lpm	r24, Z+
     bea:	93 ff       	sbrs	r25, 3
     bec:	81 91       	ld	r24, Z+
     bee:	7f 01       	movw	r14, r30
     bf0:	85 32       	cpi	r24, 0x25	; 37
     bf2:	21 f4       	brne	.+8      	; 0xbfc <vfprintf+0x7c>
     bf4:	b6 01       	movw	r22, r12
     bf6:	90 e0       	ldi	r25, 0x00	; 0
     bf8:	d6 d1       	rcall	.+940    	; 0xfa6 <fputc>
     bfa:	e8 cf       	rjmp	.-48     	; 0xbcc <vfprintf+0x4c>
     bfc:	91 2c       	mov	r9, r1
     bfe:	21 2c       	mov	r2, r1
     c00:	31 2c       	mov	r3, r1
     c02:	ff e1       	ldi	r31, 0x1F	; 31
     c04:	f3 15       	cp	r31, r3
     c06:	d8 f0       	brcs	.+54     	; 0xc3e <vfprintf+0xbe>
     c08:	8b 32       	cpi	r24, 0x2B	; 43
     c0a:	79 f0       	breq	.+30     	; 0xc2a <vfprintf+0xaa>
     c0c:	38 f4       	brcc	.+14     	; 0xc1c <vfprintf+0x9c>
     c0e:	80 32       	cpi	r24, 0x20	; 32
     c10:	79 f0       	breq	.+30     	; 0xc30 <vfprintf+0xb0>
     c12:	83 32       	cpi	r24, 0x23	; 35
     c14:	a1 f4       	brne	.+40     	; 0xc3e <vfprintf+0xbe>
     c16:	23 2d       	mov	r18, r3
     c18:	20 61       	ori	r18, 0x10	; 16
     c1a:	1d c0       	rjmp	.+58     	; 0xc56 <vfprintf+0xd6>
     c1c:	8d 32       	cpi	r24, 0x2D	; 45
     c1e:	61 f0       	breq	.+24     	; 0xc38 <vfprintf+0xb8>
     c20:	80 33       	cpi	r24, 0x30	; 48
     c22:	69 f4       	brne	.+26     	; 0xc3e <vfprintf+0xbe>
     c24:	23 2d       	mov	r18, r3
     c26:	21 60       	ori	r18, 0x01	; 1
     c28:	16 c0       	rjmp	.+44     	; 0xc56 <vfprintf+0xd6>
     c2a:	83 2d       	mov	r24, r3
     c2c:	82 60       	ori	r24, 0x02	; 2
     c2e:	38 2e       	mov	r3, r24
     c30:	e3 2d       	mov	r30, r3
     c32:	e4 60       	ori	r30, 0x04	; 4
     c34:	3e 2e       	mov	r3, r30
     c36:	2a c0       	rjmp	.+84     	; 0xc8c <vfprintf+0x10c>
     c38:	f3 2d       	mov	r31, r3
     c3a:	f8 60       	ori	r31, 0x08	; 8
     c3c:	1d c0       	rjmp	.+58     	; 0xc78 <vfprintf+0xf8>
     c3e:	37 fc       	sbrc	r3, 7
     c40:	2d c0       	rjmp	.+90     	; 0xc9c <vfprintf+0x11c>
     c42:	20 ed       	ldi	r18, 0xD0	; 208
     c44:	28 0f       	add	r18, r24
     c46:	2a 30       	cpi	r18, 0x0A	; 10
     c48:	40 f0       	brcs	.+16     	; 0xc5a <vfprintf+0xda>
     c4a:	8e 32       	cpi	r24, 0x2E	; 46
     c4c:	b9 f4       	brne	.+46     	; 0xc7c <vfprintf+0xfc>
     c4e:	36 fc       	sbrc	r3, 6
     c50:	75 c1       	rjmp	.+746    	; 0xf3c <vfprintf+0x3bc>
     c52:	23 2d       	mov	r18, r3
     c54:	20 64       	ori	r18, 0x40	; 64
     c56:	32 2e       	mov	r3, r18
     c58:	19 c0       	rjmp	.+50     	; 0xc8c <vfprintf+0x10c>
     c5a:	36 fe       	sbrs	r3, 6
     c5c:	06 c0       	rjmp	.+12     	; 0xc6a <vfprintf+0xea>
     c5e:	8a e0       	ldi	r24, 0x0A	; 10
     c60:	98 9e       	mul	r9, r24
     c62:	20 0d       	add	r18, r0
     c64:	11 24       	eor	r1, r1
     c66:	92 2e       	mov	r9, r18
     c68:	11 c0       	rjmp	.+34     	; 0xc8c <vfprintf+0x10c>
     c6a:	ea e0       	ldi	r30, 0x0A	; 10
     c6c:	2e 9e       	mul	r2, r30
     c6e:	20 0d       	add	r18, r0
     c70:	11 24       	eor	r1, r1
     c72:	22 2e       	mov	r2, r18
     c74:	f3 2d       	mov	r31, r3
     c76:	f0 62       	ori	r31, 0x20	; 32
     c78:	3f 2e       	mov	r3, r31
     c7a:	08 c0       	rjmp	.+16     	; 0xc8c <vfprintf+0x10c>
     c7c:	8c 36       	cpi	r24, 0x6C	; 108
     c7e:	21 f4       	brne	.+8      	; 0xc88 <vfprintf+0x108>
     c80:	83 2d       	mov	r24, r3
     c82:	80 68       	ori	r24, 0x80	; 128
     c84:	38 2e       	mov	r3, r24
     c86:	02 c0       	rjmp	.+4      	; 0xc8c <vfprintf+0x10c>
     c88:	88 36       	cpi	r24, 0x68	; 104
     c8a:	41 f4       	brne	.+16     	; 0xc9c <vfprintf+0x11c>
     c8c:	f7 01       	movw	r30, r14
     c8e:	93 fd       	sbrc	r25, 3
     c90:	85 91       	lpm	r24, Z+
     c92:	93 ff       	sbrs	r25, 3
     c94:	81 91       	ld	r24, Z+
     c96:	7f 01       	movw	r14, r30
     c98:	81 11       	cpse	r24, r1
     c9a:	b3 cf       	rjmp	.-154    	; 0xc02 <vfprintf+0x82>
     c9c:	98 2f       	mov	r25, r24
     c9e:	9f 7d       	andi	r25, 0xDF	; 223
     ca0:	95 54       	subi	r25, 0x45	; 69
     ca2:	93 30       	cpi	r25, 0x03	; 3
     ca4:	28 f4       	brcc	.+10     	; 0xcb0 <vfprintf+0x130>
     ca6:	0c 5f       	subi	r16, 0xFC	; 252
     ca8:	1f 4f       	sbci	r17, 0xFF	; 255
     caa:	9f e3       	ldi	r25, 0x3F	; 63
     cac:	99 83       	std	Y+1, r25	; 0x01
     cae:	0d c0       	rjmp	.+26     	; 0xcca <vfprintf+0x14a>
     cb0:	83 36       	cpi	r24, 0x63	; 99
     cb2:	31 f0       	breq	.+12     	; 0xcc0 <vfprintf+0x140>
     cb4:	83 37       	cpi	r24, 0x73	; 115
     cb6:	71 f0       	breq	.+28     	; 0xcd4 <vfprintf+0x154>
     cb8:	83 35       	cpi	r24, 0x53	; 83
     cba:	09 f0       	breq	.+2      	; 0xcbe <vfprintf+0x13e>
     cbc:	55 c0       	rjmp	.+170    	; 0xd68 <vfprintf+0x1e8>
     cbe:	20 c0       	rjmp	.+64     	; 0xd00 <vfprintf+0x180>
     cc0:	f8 01       	movw	r30, r16
     cc2:	80 81       	ld	r24, Z
     cc4:	89 83       	std	Y+1, r24	; 0x01
     cc6:	0e 5f       	subi	r16, 0xFE	; 254
     cc8:	1f 4f       	sbci	r17, 0xFF	; 255
     cca:	88 24       	eor	r8, r8
     ccc:	83 94       	inc	r8
     cce:	91 2c       	mov	r9, r1
     cd0:	53 01       	movw	r10, r6
     cd2:	12 c0       	rjmp	.+36     	; 0xcf8 <vfprintf+0x178>
     cd4:	28 01       	movw	r4, r16
     cd6:	f2 e0       	ldi	r31, 0x02	; 2
     cd8:	4f 0e       	add	r4, r31
     cda:	51 1c       	adc	r5, r1
     cdc:	f8 01       	movw	r30, r16
     cde:	a0 80       	ld	r10, Z
     ce0:	b1 80       	ldd	r11, Z+1	; 0x01
     ce2:	36 fe       	sbrs	r3, 6
     ce4:	03 c0       	rjmp	.+6      	; 0xcec <vfprintf+0x16c>
     ce6:	69 2d       	mov	r22, r9
     ce8:	70 e0       	ldi	r23, 0x00	; 0
     cea:	02 c0       	rjmp	.+4      	; 0xcf0 <vfprintf+0x170>
     cec:	6f ef       	ldi	r22, 0xFF	; 255
     cee:	7f ef       	ldi	r23, 0xFF	; 255
     cf0:	c5 01       	movw	r24, r10
     cf2:	4e d1       	rcall	.+668    	; 0xf90 <strnlen>
     cf4:	4c 01       	movw	r8, r24
     cf6:	82 01       	movw	r16, r4
     cf8:	f3 2d       	mov	r31, r3
     cfa:	ff 77       	andi	r31, 0x7F	; 127
     cfc:	3f 2e       	mov	r3, r31
     cfe:	15 c0       	rjmp	.+42     	; 0xd2a <vfprintf+0x1aa>
     d00:	28 01       	movw	r4, r16
     d02:	22 e0       	ldi	r18, 0x02	; 2
     d04:	42 0e       	add	r4, r18
     d06:	51 1c       	adc	r5, r1
     d08:	f8 01       	movw	r30, r16
     d0a:	a0 80       	ld	r10, Z
     d0c:	b1 80       	ldd	r11, Z+1	; 0x01
     d0e:	36 fe       	sbrs	r3, 6
     d10:	03 c0       	rjmp	.+6      	; 0xd18 <vfprintf+0x198>
     d12:	69 2d       	mov	r22, r9
     d14:	70 e0       	ldi	r23, 0x00	; 0
     d16:	02 c0       	rjmp	.+4      	; 0xd1c <vfprintf+0x19c>
     d18:	6f ef       	ldi	r22, 0xFF	; 255
     d1a:	7f ef       	ldi	r23, 0xFF	; 255
     d1c:	c5 01       	movw	r24, r10
     d1e:	2d d1       	rcall	.+602    	; 0xf7a <strnlen_P>
     d20:	4c 01       	movw	r8, r24
     d22:	f3 2d       	mov	r31, r3
     d24:	f0 68       	ori	r31, 0x80	; 128
     d26:	3f 2e       	mov	r3, r31
     d28:	82 01       	movw	r16, r4
     d2a:	33 fc       	sbrc	r3, 3
     d2c:	19 c0       	rjmp	.+50     	; 0xd60 <vfprintf+0x1e0>
     d2e:	82 2d       	mov	r24, r2
     d30:	90 e0       	ldi	r25, 0x00	; 0
     d32:	88 16       	cp	r8, r24
     d34:	99 06       	cpc	r9, r25
     d36:	a0 f4       	brcc	.+40     	; 0xd60 <vfprintf+0x1e0>
     d38:	b6 01       	movw	r22, r12
     d3a:	80 e2       	ldi	r24, 0x20	; 32
     d3c:	90 e0       	ldi	r25, 0x00	; 0
     d3e:	33 d1       	rcall	.+614    	; 0xfa6 <fputc>
     d40:	2a 94       	dec	r2
     d42:	f5 cf       	rjmp	.-22     	; 0xd2e <vfprintf+0x1ae>
     d44:	f5 01       	movw	r30, r10
     d46:	37 fc       	sbrc	r3, 7
     d48:	85 91       	lpm	r24, Z+
     d4a:	37 fe       	sbrs	r3, 7
     d4c:	81 91       	ld	r24, Z+
     d4e:	5f 01       	movw	r10, r30
     d50:	b6 01       	movw	r22, r12
     d52:	90 e0       	ldi	r25, 0x00	; 0
     d54:	28 d1       	rcall	.+592    	; 0xfa6 <fputc>
     d56:	21 10       	cpse	r2, r1
     d58:	2a 94       	dec	r2
     d5a:	21 e0       	ldi	r18, 0x01	; 1
     d5c:	82 1a       	sub	r8, r18
     d5e:	91 08       	sbc	r9, r1
     d60:	81 14       	cp	r8, r1
     d62:	91 04       	cpc	r9, r1
     d64:	79 f7       	brne	.-34     	; 0xd44 <vfprintf+0x1c4>
     d66:	e1 c0       	rjmp	.+450    	; 0xf2a <vfprintf+0x3aa>
     d68:	84 36       	cpi	r24, 0x64	; 100
     d6a:	11 f0       	breq	.+4      	; 0xd70 <vfprintf+0x1f0>
     d6c:	89 36       	cpi	r24, 0x69	; 105
     d6e:	39 f5       	brne	.+78     	; 0xdbe <vfprintf+0x23e>
     d70:	f8 01       	movw	r30, r16
     d72:	37 fe       	sbrs	r3, 7
     d74:	07 c0       	rjmp	.+14     	; 0xd84 <vfprintf+0x204>
     d76:	60 81       	ld	r22, Z
     d78:	71 81       	ldd	r23, Z+1	; 0x01
     d7a:	82 81       	ldd	r24, Z+2	; 0x02
     d7c:	93 81       	ldd	r25, Z+3	; 0x03
     d7e:	0c 5f       	subi	r16, 0xFC	; 252
     d80:	1f 4f       	sbci	r17, 0xFF	; 255
     d82:	08 c0       	rjmp	.+16     	; 0xd94 <vfprintf+0x214>
     d84:	60 81       	ld	r22, Z
     d86:	71 81       	ldd	r23, Z+1	; 0x01
     d88:	07 2e       	mov	r0, r23
     d8a:	00 0c       	add	r0, r0
     d8c:	88 0b       	sbc	r24, r24
     d8e:	99 0b       	sbc	r25, r25
     d90:	0e 5f       	subi	r16, 0xFE	; 254
     d92:	1f 4f       	sbci	r17, 0xFF	; 255
     d94:	f3 2d       	mov	r31, r3
     d96:	ff 76       	andi	r31, 0x6F	; 111
     d98:	3f 2e       	mov	r3, r31
     d9a:	97 ff       	sbrs	r25, 7
     d9c:	09 c0       	rjmp	.+18     	; 0xdb0 <vfprintf+0x230>
     d9e:	90 95       	com	r25
     da0:	80 95       	com	r24
     da2:	70 95       	com	r23
     da4:	61 95       	neg	r22
     da6:	7f 4f       	sbci	r23, 0xFF	; 255
     da8:	8f 4f       	sbci	r24, 0xFF	; 255
     daa:	9f 4f       	sbci	r25, 0xFF	; 255
     dac:	f0 68       	ori	r31, 0x80	; 128
     dae:	3f 2e       	mov	r3, r31
     db0:	2a e0       	ldi	r18, 0x0A	; 10
     db2:	30 e0       	ldi	r19, 0x00	; 0
     db4:	a3 01       	movw	r20, r6
     db6:	33 d1       	rcall	.+614    	; 0x101e <__ultoa_invert>
     db8:	88 2e       	mov	r8, r24
     dba:	86 18       	sub	r8, r6
     dbc:	44 c0       	rjmp	.+136    	; 0xe46 <vfprintf+0x2c6>
     dbe:	85 37       	cpi	r24, 0x75	; 117
     dc0:	31 f4       	brne	.+12     	; 0xdce <vfprintf+0x24e>
     dc2:	23 2d       	mov	r18, r3
     dc4:	2f 7e       	andi	r18, 0xEF	; 239
     dc6:	b2 2e       	mov	r11, r18
     dc8:	2a e0       	ldi	r18, 0x0A	; 10
     dca:	30 e0       	ldi	r19, 0x00	; 0
     dcc:	25 c0       	rjmp	.+74     	; 0xe18 <vfprintf+0x298>
     dce:	93 2d       	mov	r25, r3
     dd0:	99 7f       	andi	r25, 0xF9	; 249
     dd2:	b9 2e       	mov	r11, r25
     dd4:	8f 36       	cpi	r24, 0x6F	; 111
     dd6:	c1 f0       	breq	.+48     	; 0xe08 <vfprintf+0x288>
     dd8:	18 f4       	brcc	.+6      	; 0xde0 <vfprintf+0x260>
     dda:	88 35       	cpi	r24, 0x58	; 88
     ddc:	79 f0       	breq	.+30     	; 0xdfc <vfprintf+0x27c>
     dde:	ae c0       	rjmp	.+348    	; 0xf3c <vfprintf+0x3bc>
     de0:	80 37       	cpi	r24, 0x70	; 112
     de2:	19 f0       	breq	.+6      	; 0xdea <vfprintf+0x26a>
     de4:	88 37       	cpi	r24, 0x78	; 120
     de6:	21 f0       	breq	.+8      	; 0xdf0 <vfprintf+0x270>
     de8:	a9 c0       	rjmp	.+338    	; 0xf3c <vfprintf+0x3bc>
     dea:	e9 2f       	mov	r30, r25
     dec:	e0 61       	ori	r30, 0x10	; 16
     dee:	be 2e       	mov	r11, r30
     df0:	b4 fe       	sbrs	r11, 4
     df2:	0d c0       	rjmp	.+26     	; 0xe0e <vfprintf+0x28e>
     df4:	fb 2d       	mov	r31, r11
     df6:	f4 60       	ori	r31, 0x04	; 4
     df8:	bf 2e       	mov	r11, r31
     dfa:	09 c0       	rjmp	.+18     	; 0xe0e <vfprintf+0x28e>
     dfc:	34 fe       	sbrs	r3, 4
     dfe:	0a c0       	rjmp	.+20     	; 0xe14 <vfprintf+0x294>
     e00:	29 2f       	mov	r18, r25
     e02:	26 60       	ori	r18, 0x06	; 6
     e04:	b2 2e       	mov	r11, r18
     e06:	06 c0       	rjmp	.+12     	; 0xe14 <vfprintf+0x294>
     e08:	28 e0       	ldi	r18, 0x08	; 8
     e0a:	30 e0       	ldi	r19, 0x00	; 0
     e0c:	05 c0       	rjmp	.+10     	; 0xe18 <vfprintf+0x298>
     e0e:	20 e1       	ldi	r18, 0x10	; 16
     e10:	30 e0       	ldi	r19, 0x00	; 0
     e12:	02 c0       	rjmp	.+4      	; 0xe18 <vfprintf+0x298>
     e14:	20 e1       	ldi	r18, 0x10	; 16
     e16:	32 e0       	ldi	r19, 0x02	; 2
     e18:	f8 01       	movw	r30, r16
     e1a:	b7 fe       	sbrs	r11, 7
     e1c:	07 c0       	rjmp	.+14     	; 0xe2c <vfprintf+0x2ac>
     e1e:	60 81       	ld	r22, Z
     e20:	71 81       	ldd	r23, Z+1	; 0x01
     e22:	82 81       	ldd	r24, Z+2	; 0x02
     e24:	93 81       	ldd	r25, Z+3	; 0x03
     e26:	0c 5f       	subi	r16, 0xFC	; 252
     e28:	1f 4f       	sbci	r17, 0xFF	; 255
     e2a:	06 c0       	rjmp	.+12     	; 0xe38 <vfprintf+0x2b8>
     e2c:	60 81       	ld	r22, Z
     e2e:	71 81       	ldd	r23, Z+1	; 0x01
     e30:	80 e0       	ldi	r24, 0x00	; 0
     e32:	90 e0       	ldi	r25, 0x00	; 0
     e34:	0e 5f       	subi	r16, 0xFE	; 254
     e36:	1f 4f       	sbci	r17, 0xFF	; 255
     e38:	a3 01       	movw	r20, r6
     e3a:	f1 d0       	rcall	.+482    	; 0x101e <__ultoa_invert>
     e3c:	88 2e       	mov	r8, r24
     e3e:	86 18       	sub	r8, r6
     e40:	fb 2d       	mov	r31, r11
     e42:	ff 77       	andi	r31, 0x7F	; 127
     e44:	3f 2e       	mov	r3, r31
     e46:	36 fe       	sbrs	r3, 6
     e48:	0d c0       	rjmp	.+26     	; 0xe64 <vfprintf+0x2e4>
     e4a:	23 2d       	mov	r18, r3
     e4c:	2e 7f       	andi	r18, 0xFE	; 254
     e4e:	a2 2e       	mov	r10, r18
     e50:	89 14       	cp	r8, r9
     e52:	58 f4       	brcc	.+22     	; 0xe6a <vfprintf+0x2ea>
     e54:	34 fe       	sbrs	r3, 4
     e56:	0b c0       	rjmp	.+22     	; 0xe6e <vfprintf+0x2ee>
     e58:	32 fc       	sbrc	r3, 2
     e5a:	09 c0       	rjmp	.+18     	; 0xe6e <vfprintf+0x2ee>
     e5c:	83 2d       	mov	r24, r3
     e5e:	8e 7e       	andi	r24, 0xEE	; 238
     e60:	a8 2e       	mov	r10, r24
     e62:	05 c0       	rjmp	.+10     	; 0xe6e <vfprintf+0x2ee>
     e64:	b8 2c       	mov	r11, r8
     e66:	a3 2c       	mov	r10, r3
     e68:	03 c0       	rjmp	.+6      	; 0xe70 <vfprintf+0x2f0>
     e6a:	b8 2c       	mov	r11, r8
     e6c:	01 c0       	rjmp	.+2      	; 0xe70 <vfprintf+0x2f0>
     e6e:	b9 2c       	mov	r11, r9
     e70:	a4 fe       	sbrs	r10, 4
     e72:	0f c0       	rjmp	.+30     	; 0xe92 <vfprintf+0x312>
     e74:	fe 01       	movw	r30, r28
     e76:	e8 0d       	add	r30, r8
     e78:	f1 1d       	adc	r31, r1
     e7a:	80 81       	ld	r24, Z
     e7c:	80 33       	cpi	r24, 0x30	; 48
     e7e:	21 f4       	brne	.+8      	; 0xe88 <vfprintf+0x308>
     e80:	9a 2d       	mov	r25, r10
     e82:	99 7e       	andi	r25, 0xE9	; 233
     e84:	a9 2e       	mov	r10, r25
     e86:	09 c0       	rjmp	.+18     	; 0xe9a <vfprintf+0x31a>
     e88:	a2 fe       	sbrs	r10, 2
     e8a:	06 c0       	rjmp	.+12     	; 0xe98 <vfprintf+0x318>
     e8c:	b3 94       	inc	r11
     e8e:	b3 94       	inc	r11
     e90:	04 c0       	rjmp	.+8      	; 0xe9a <vfprintf+0x31a>
     e92:	8a 2d       	mov	r24, r10
     e94:	86 78       	andi	r24, 0x86	; 134
     e96:	09 f0       	breq	.+2      	; 0xe9a <vfprintf+0x31a>
     e98:	b3 94       	inc	r11
     e9a:	a3 fc       	sbrc	r10, 3
     e9c:	10 c0       	rjmp	.+32     	; 0xebe <vfprintf+0x33e>
     e9e:	a0 fe       	sbrs	r10, 0
     ea0:	06 c0       	rjmp	.+12     	; 0xeae <vfprintf+0x32e>
     ea2:	b2 14       	cp	r11, r2
     ea4:	80 f4       	brcc	.+32     	; 0xec6 <vfprintf+0x346>
     ea6:	28 0c       	add	r2, r8
     ea8:	92 2c       	mov	r9, r2
     eaa:	9b 18       	sub	r9, r11
     eac:	0d c0       	rjmp	.+26     	; 0xec8 <vfprintf+0x348>
     eae:	b2 14       	cp	r11, r2
     eb0:	58 f4       	brcc	.+22     	; 0xec8 <vfprintf+0x348>
     eb2:	b6 01       	movw	r22, r12
     eb4:	80 e2       	ldi	r24, 0x20	; 32
     eb6:	90 e0       	ldi	r25, 0x00	; 0
     eb8:	76 d0       	rcall	.+236    	; 0xfa6 <fputc>
     eba:	b3 94       	inc	r11
     ebc:	f8 cf       	rjmp	.-16     	; 0xeae <vfprintf+0x32e>
     ebe:	b2 14       	cp	r11, r2
     ec0:	18 f4       	brcc	.+6      	; 0xec8 <vfprintf+0x348>
     ec2:	2b 18       	sub	r2, r11
     ec4:	02 c0       	rjmp	.+4      	; 0xeca <vfprintf+0x34a>
     ec6:	98 2c       	mov	r9, r8
     ec8:	21 2c       	mov	r2, r1
     eca:	a4 fe       	sbrs	r10, 4
     ecc:	0f c0       	rjmp	.+30     	; 0xeec <vfprintf+0x36c>
     ece:	b6 01       	movw	r22, r12
     ed0:	80 e3       	ldi	r24, 0x30	; 48
     ed2:	90 e0       	ldi	r25, 0x00	; 0
     ed4:	68 d0       	rcall	.+208    	; 0xfa6 <fputc>
     ed6:	a2 fe       	sbrs	r10, 2
     ed8:	16 c0       	rjmp	.+44     	; 0xf06 <vfprintf+0x386>
     eda:	a1 fc       	sbrc	r10, 1
     edc:	03 c0       	rjmp	.+6      	; 0xee4 <vfprintf+0x364>
     ede:	88 e7       	ldi	r24, 0x78	; 120
     ee0:	90 e0       	ldi	r25, 0x00	; 0
     ee2:	02 c0       	rjmp	.+4      	; 0xee8 <vfprintf+0x368>
     ee4:	88 e5       	ldi	r24, 0x58	; 88
     ee6:	90 e0       	ldi	r25, 0x00	; 0
     ee8:	b6 01       	movw	r22, r12
     eea:	0c c0       	rjmp	.+24     	; 0xf04 <vfprintf+0x384>
     eec:	8a 2d       	mov	r24, r10
     eee:	86 78       	andi	r24, 0x86	; 134
     ef0:	51 f0       	breq	.+20     	; 0xf06 <vfprintf+0x386>
     ef2:	a1 fe       	sbrs	r10, 1
     ef4:	02 c0       	rjmp	.+4      	; 0xefa <vfprintf+0x37a>
     ef6:	8b e2       	ldi	r24, 0x2B	; 43
     ef8:	01 c0       	rjmp	.+2      	; 0xefc <vfprintf+0x37c>
     efa:	80 e2       	ldi	r24, 0x20	; 32
     efc:	a7 fc       	sbrc	r10, 7
     efe:	8d e2       	ldi	r24, 0x2D	; 45
     f00:	b6 01       	movw	r22, r12
     f02:	90 e0       	ldi	r25, 0x00	; 0
     f04:	50 d0       	rcall	.+160    	; 0xfa6 <fputc>
     f06:	89 14       	cp	r8, r9
     f08:	30 f4       	brcc	.+12     	; 0xf16 <vfprintf+0x396>
     f0a:	b6 01       	movw	r22, r12
     f0c:	80 e3       	ldi	r24, 0x30	; 48
     f0e:	90 e0       	ldi	r25, 0x00	; 0
     f10:	4a d0       	rcall	.+148    	; 0xfa6 <fputc>
     f12:	9a 94       	dec	r9
     f14:	f8 cf       	rjmp	.-16     	; 0xf06 <vfprintf+0x386>
     f16:	8a 94       	dec	r8
     f18:	f3 01       	movw	r30, r6
     f1a:	e8 0d       	add	r30, r8
     f1c:	f1 1d       	adc	r31, r1
     f1e:	80 81       	ld	r24, Z
     f20:	b6 01       	movw	r22, r12
     f22:	90 e0       	ldi	r25, 0x00	; 0
     f24:	40 d0       	rcall	.+128    	; 0xfa6 <fputc>
     f26:	81 10       	cpse	r8, r1
     f28:	f6 cf       	rjmp	.-20     	; 0xf16 <vfprintf+0x396>
     f2a:	22 20       	and	r2, r2
     f2c:	09 f4       	brne	.+2      	; 0xf30 <vfprintf+0x3b0>
     f2e:	4e ce       	rjmp	.-868    	; 0xbcc <vfprintf+0x4c>
     f30:	b6 01       	movw	r22, r12
     f32:	80 e2       	ldi	r24, 0x20	; 32
     f34:	90 e0       	ldi	r25, 0x00	; 0
     f36:	37 d0       	rcall	.+110    	; 0xfa6 <fputc>
     f38:	2a 94       	dec	r2
     f3a:	f7 cf       	rjmp	.-18     	; 0xf2a <vfprintf+0x3aa>
     f3c:	f6 01       	movw	r30, r12
     f3e:	86 81       	ldd	r24, Z+6	; 0x06
     f40:	97 81       	ldd	r25, Z+7	; 0x07
     f42:	02 c0       	rjmp	.+4      	; 0xf48 <vfprintf+0x3c8>
     f44:	8f ef       	ldi	r24, 0xFF	; 255
     f46:	9f ef       	ldi	r25, 0xFF	; 255
     f48:	2b 96       	adiw	r28, 0x0b	; 11
     f4a:	0f b6       	in	r0, 0x3f	; 63
     f4c:	f8 94       	cli
     f4e:	de bf       	out	0x3e, r29	; 62
     f50:	0f be       	out	0x3f, r0	; 63
     f52:	cd bf       	out	0x3d, r28	; 61
     f54:	df 91       	pop	r29
     f56:	cf 91       	pop	r28
     f58:	1f 91       	pop	r17
     f5a:	0f 91       	pop	r16
     f5c:	ff 90       	pop	r15
     f5e:	ef 90       	pop	r14
     f60:	df 90       	pop	r13
     f62:	cf 90       	pop	r12
     f64:	bf 90       	pop	r11
     f66:	af 90       	pop	r10
     f68:	9f 90       	pop	r9
     f6a:	8f 90       	pop	r8
     f6c:	7f 90       	pop	r7
     f6e:	6f 90       	pop	r6
     f70:	5f 90       	pop	r5
     f72:	4f 90       	pop	r4
     f74:	3f 90       	pop	r3
     f76:	2f 90       	pop	r2
     f78:	08 95       	ret

00000f7a <strnlen_P>:
     f7a:	fc 01       	movw	r30, r24
     f7c:	05 90       	lpm	r0, Z+
     f7e:	61 50       	subi	r22, 0x01	; 1
     f80:	70 40       	sbci	r23, 0x00	; 0
     f82:	01 10       	cpse	r0, r1
     f84:	d8 f7       	brcc	.-10     	; 0xf7c <strnlen_P+0x2>
     f86:	80 95       	com	r24
     f88:	90 95       	com	r25
     f8a:	8e 0f       	add	r24, r30
     f8c:	9f 1f       	adc	r25, r31
     f8e:	08 95       	ret

00000f90 <strnlen>:
     f90:	fc 01       	movw	r30, r24
     f92:	61 50       	subi	r22, 0x01	; 1
     f94:	70 40       	sbci	r23, 0x00	; 0
     f96:	01 90       	ld	r0, Z+
     f98:	01 10       	cpse	r0, r1
     f9a:	d8 f7       	brcc	.-10     	; 0xf92 <strnlen+0x2>
     f9c:	80 95       	com	r24
     f9e:	90 95       	com	r25
     fa0:	8e 0f       	add	r24, r30
     fa2:	9f 1f       	adc	r25, r31
     fa4:	08 95       	ret

00000fa6 <fputc>:
     fa6:	0f 93       	push	r16
     fa8:	1f 93       	push	r17
     faa:	cf 93       	push	r28
     fac:	df 93       	push	r29
     fae:	fb 01       	movw	r30, r22
     fb0:	23 81       	ldd	r18, Z+3	; 0x03
     fb2:	21 fd       	sbrc	r18, 1
     fb4:	03 c0       	rjmp	.+6      	; 0xfbc <fputc+0x16>
     fb6:	8f ef       	ldi	r24, 0xFF	; 255
     fb8:	9f ef       	ldi	r25, 0xFF	; 255
     fba:	2c c0       	rjmp	.+88     	; 0x1014 <fputc+0x6e>
     fbc:	22 ff       	sbrs	r18, 2
     fbe:	16 c0       	rjmp	.+44     	; 0xfec <fputc+0x46>
     fc0:	46 81       	ldd	r20, Z+6	; 0x06
     fc2:	57 81       	ldd	r21, Z+7	; 0x07
     fc4:	24 81       	ldd	r18, Z+4	; 0x04
     fc6:	35 81       	ldd	r19, Z+5	; 0x05
     fc8:	42 17       	cp	r20, r18
     fca:	53 07       	cpc	r21, r19
     fcc:	44 f4       	brge	.+16     	; 0xfde <fputc+0x38>
     fce:	a0 81       	ld	r26, Z
     fd0:	b1 81       	ldd	r27, Z+1	; 0x01
     fd2:	9d 01       	movw	r18, r26
     fd4:	2f 5f       	subi	r18, 0xFF	; 255
     fd6:	3f 4f       	sbci	r19, 0xFF	; 255
     fd8:	31 83       	std	Z+1, r19	; 0x01
     fda:	20 83       	st	Z, r18
     fdc:	8c 93       	st	X, r24
     fde:	26 81       	ldd	r18, Z+6	; 0x06
     fe0:	37 81       	ldd	r19, Z+7	; 0x07
     fe2:	2f 5f       	subi	r18, 0xFF	; 255
     fe4:	3f 4f       	sbci	r19, 0xFF	; 255
     fe6:	37 83       	std	Z+7, r19	; 0x07
     fe8:	26 83       	std	Z+6, r18	; 0x06
     fea:	14 c0       	rjmp	.+40     	; 0x1014 <fputc+0x6e>
     fec:	8b 01       	movw	r16, r22
     fee:	ec 01       	movw	r28, r24
     ff0:	fb 01       	movw	r30, r22
     ff2:	00 84       	ldd	r0, Z+8	; 0x08
     ff4:	f1 85       	ldd	r31, Z+9	; 0x09
     ff6:	e0 2d       	mov	r30, r0
     ff8:	19 95       	eicall
     ffa:	89 2b       	or	r24, r25
     ffc:	e1 f6       	brne	.-72     	; 0xfb6 <fputc+0x10>
     ffe:	d8 01       	movw	r26, r16
    1000:	16 96       	adiw	r26, 0x06	; 6
    1002:	8d 91       	ld	r24, X+
    1004:	9c 91       	ld	r25, X
    1006:	17 97       	sbiw	r26, 0x07	; 7
    1008:	01 96       	adiw	r24, 0x01	; 1
    100a:	17 96       	adiw	r26, 0x07	; 7
    100c:	9c 93       	st	X, r25
    100e:	8e 93       	st	-X, r24
    1010:	16 97       	sbiw	r26, 0x06	; 6
    1012:	ce 01       	movw	r24, r28
    1014:	df 91       	pop	r29
    1016:	cf 91       	pop	r28
    1018:	1f 91       	pop	r17
    101a:	0f 91       	pop	r16
    101c:	08 95       	ret

0000101e <__ultoa_invert>:
    101e:	fa 01       	movw	r30, r20
    1020:	aa 27       	eor	r26, r26
    1022:	28 30       	cpi	r18, 0x08	; 8
    1024:	51 f1       	breq	.+84     	; 0x107a <__ultoa_invert+0x5c>
    1026:	20 31       	cpi	r18, 0x10	; 16
    1028:	81 f1       	breq	.+96     	; 0x108a <__ultoa_invert+0x6c>
    102a:	e8 94       	clt
    102c:	6f 93       	push	r22
    102e:	6e 7f       	andi	r22, 0xFE	; 254
    1030:	6e 5f       	subi	r22, 0xFE	; 254
    1032:	7f 4f       	sbci	r23, 0xFF	; 255
    1034:	8f 4f       	sbci	r24, 0xFF	; 255
    1036:	9f 4f       	sbci	r25, 0xFF	; 255
    1038:	af 4f       	sbci	r26, 0xFF	; 255
    103a:	b1 e0       	ldi	r27, 0x01	; 1
    103c:	3e d0       	rcall	.+124    	; 0x10ba <__ultoa_invert+0x9c>
    103e:	b4 e0       	ldi	r27, 0x04	; 4
    1040:	3c d0       	rcall	.+120    	; 0x10ba <__ultoa_invert+0x9c>
    1042:	67 0f       	add	r22, r23
    1044:	78 1f       	adc	r23, r24
    1046:	89 1f       	adc	r24, r25
    1048:	9a 1f       	adc	r25, r26
    104a:	a1 1d       	adc	r26, r1
    104c:	68 0f       	add	r22, r24
    104e:	79 1f       	adc	r23, r25
    1050:	8a 1f       	adc	r24, r26
    1052:	91 1d       	adc	r25, r1
    1054:	a1 1d       	adc	r26, r1
    1056:	6a 0f       	add	r22, r26
    1058:	71 1d       	adc	r23, r1
    105a:	81 1d       	adc	r24, r1
    105c:	91 1d       	adc	r25, r1
    105e:	a1 1d       	adc	r26, r1
    1060:	20 d0       	rcall	.+64     	; 0x10a2 <__ultoa_invert+0x84>
    1062:	09 f4       	brne	.+2      	; 0x1066 <__ultoa_invert+0x48>
    1064:	68 94       	set
    1066:	3f 91       	pop	r19
    1068:	2a e0       	ldi	r18, 0x0A	; 10
    106a:	26 9f       	mul	r18, r22
    106c:	11 24       	eor	r1, r1
    106e:	30 19       	sub	r19, r0
    1070:	30 5d       	subi	r19, 0xD0	; 208
    1072:	31 93       	st	Z+, r19
    1074:	de f6       	brtc	.-74     	; 0x102c <__ultoa_invert+0xe>
    1076:	cf 01       	movw	r24, r30
    1078:	08 95       	ret
    107a:	46 2f       	mov	r20, r22
    107c:	47 70       	andi	r20, 0x07	; 7
    107e:	40 5d       	subi	r20, 0xD0	; 208
    1080:	41 93       	st	Z+, r20
    1082:	b3 e0       	ldi	r27, 0x03	; 3
    1084:	0f d0       	rcall	.+30     	; 0x10a4 <__ultoa_invert+0x86>
    1086:	c9 f7       	brne	.-14     	; 0x107a <__ultoa_invert+0x5c>
    1088:	f6 cf       	rjmp	.-20     	; 0x1076 <__ultoa_invert+0x58>
    108a:	46 2f       	mov	r20, r22
    108c:	4f 70       	andi	r20, 0x0F	; 15
    108e:	40 5d       	subi	r20, 0xD0	; 208
    1090:	4a 33       	cpi	r20, 0x3A	; 58
    1092:	18 f0       	brcs	.+6      	; 0x109a <__ultoa_invert+0x7c>
    1094:	49 5d       	subi	r20, 0xD9	; 217
    1096:	31 fd       	sbrc	r19, 1
    1098:	40 52       	subi	r20, 0x20	; 32
    109a:	41 93       	st	Z+, r20
    109c:	02 d0       	rcall	.+4      	; 0x10a2 <__ultoa_invert+0x84>
    109e:	a9 f7       	brne	.-22     	; 0x108a <__ultoa_invert+0x6c>
    10a0:	ea cf       	rjmp	.-44     	; 0x1076 <__ultoa_invert+0x58>
    10a2:	b4 e0       	ldi	r27, 0x04	; 4
    10a4:	a6 95       	lsr	r26
    10a6:	97 95       	ror	r25
    10a8:	87 95       	ror	r24
    10aa:	77 95       	ror	r23
    10ac:	67 95       	ror	r22
    10ae:	ba 95       	dec	r27
    10b0:	c9 f7       	brne	.-14     	; 0x10a4 <__ultoa_invert+0x86>
    10b2:	00 97       	sbiw	r24, 0x00	; 0
    10b4:	61 05       	cpc	r22, r1
    10b6:	71 05       	cpc	r23, r1
    10b8:	08 95       	ret
    10ba:	9b 01       	movw	r18, r22
    10bc:	ac 01       	movw	r20, r24
    10be:	0a 2e       	mov	r0, r26
    10c0:	06 94       	lsr	r0
    10c2:	57 95       	ror	r21
    10c4:	47 95       	ror	r20
    10c6:	37 95       	ror	r19
    10c8:	27 95       	ror	r18
    10ca:	ba 95       	dec	r27
    10cc:	c9 f7       	brne	.-14     	; 0x10c0 <__ultoa_invert+0xa2>
    10ce:	62 0f       	add	r22, r18
    10d0:	73 1f       	adc	r23, r19
    10d2:	84 1f       	adc	r24, r20
    10d4:	95 1f       	adc	r25, r21
    10d6:	a0 1d       	adc	r26, r0
    10d8:	08 95       	ret

000010da <_exit>:
    10da:	f8 94       	cli

000010dc <__stop_program>:
    10dc:	ff cf       	rjmp	.-2      	; 0x10dc <__stop_program>
