
UniProject.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000032  00800200  00002170  00002204  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002170  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000073  00800232  00800232  00002236  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00002236  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002294  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000278  00000000  00000000  000022d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000020aa  00000000  00000000  0000254c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000011f0  00000000  00000000  000045f6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001475  00000000  00000000  000057e6  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000714  00000000  00000000  00006c5c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000c66  00000000  00000000  00007370  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000d9d  00000000  00000000  00007fd6  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000218  00000000  00000000  00008d73  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	77 c0       	rjmp	.+238    	; 0xf0 <__ctors_end>
       2:	00 00       	nop
       4:	95 c0       	rjmp	.+298    	; 0x130 <__bad_interrupt>
       6:	00 00       	nop
       8:	93 c0       	rjmp	.+294    	; 0x130 <__bad_interrupt>
       a:	00 00       	nop
       c:	91 c0       	rjmp	.+290    	; 0x130 <__bad_interrupt>
       e:	00 00       	nop
      10:	6e c4       	rjmp	.+2268   	; 0x8ee <__vector_4>
      12:	00 00       	nop
      14:	8d c0       	rjmp	.+282    	; 0x130 <__bad_interrupt>
      16:	00 00       	nop
      18:	8b c0       	rjmp	.+278    	; 0x130 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	89 c0       	rjmp	.+274    	; 0x130 <__bad_interrupt>
      1e:	00 00       	nop
      20:	87 c0       	rjmp	.+270    	; 0x130 <__bad_interrupt>
      22:	00 00       	nop
      24:	85 c0       	rjmp	.+266    	; 0x130 <__bad_interrupt>
      26:	00 00       	nop
      28:	83 c0       	rjmp	.+262    	; 0x130 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	81 c0       	rjmp	.+258    	; 0x130 <__bad_interrupt>
      2e:	00 00       	nop
      30:	7f c0       	rjmp	.+254    	; 0x130 <__bad_interrupt>
      32:	00 00       	nop
      34:	7d c0       	rjmp	.+250    	; 0x130 <__bad_interrupt>
      36:	00 00       	nop
      38:	7b c0       	rjmp	.+246    	; 0x130 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	79 c0       	rjmp	.+242    	; 0x130 <__bad_interrupt>
      3e:	00 00       	nop
      40:	77 c0       	rjmp	.+238    	; 0x130 <__bad_interrupt>
      42:	00 00       	nop
      44:	75 c0       	rjmp	.+234    	; 0x130 <__bad_interrupt>
      46:	00 00       	nop
      48:	73 c0       	rjmp	.+230    	; 0x130 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	71 c0       	rjmp	.+226    	; 0x130 <__bad_interrupt>
      4e:	00 00       	nop
      50:	34 c7       	rjmp	.+3688   	; 0xeba <__vector_20>
      52:	00 00       	nop
      54:	6d c0       	rjmp	.+218    	; 0x130 <__bad_interrupt>
      56:	00 00       	nop
      58:	6b c0       	rjmp	.+214    	; 0x130 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	0a c5       	rjmp	.+2580   	; 0xa72 <__vector_23>
      5e:	00 00       	nop
      60:	67 c0       	rjmp	.+206    	; 0x130 <__bad_interrupt>
      62:	00 00       	nop
      64:	2a c6       	rjmp	.+3156   	; 0xcba <__vector_25>
      66:	00 00       	nop
      68:	63 c0       	rjmp	.+198    	; 0x130 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	61 c0       	rjmp	.+194    	; 0x130 <__bad_interrupt>
      6e:	00 00       	nop
      70:	5f c0       	rjmp	.+190    	; 0x130 <__bad_interrupt>
      72:	00 00       	nop
      74:	5d c0       	rjmp	.+186    	; 0x130 <__bad_interrupt>
      76:	00 00       	nop
      78:	5b c0       	rjmp	.+182    	; 0x130 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	59 c0       	rjmp	.+178    	; 0x130 <__bad_interrupt>
      7e:	00 00       	nop
      80:	57 c0       	rjmp	.+174    	; 0x130 <__bad_interrupt>
      82:	00 00       	nop
      84:	55 c0       	rjmp	.+170    	; 0x130 <__bad_interrupt>
      86:	00 00       	nop
      88:	53 c0       	rjmp	.+166    	; 0x130 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	51 c0       	rjmp	.+162    	; 0x130 <__bad_interrupt>
      8e:	00 00       	nop
      90:	4f c0       	rjmp	.+158    	; 0x130 <__bad_interrupt>
      92:	00 00       	nop
      94:	4d c0       	rjmp	.+154    	; 0x130 <__bad_interrupt>
      96:	00 00       	nop
      98:	4b c0       	rjmp	.+150    	; 0x130 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	49 c0       	rjmp	.+146    	; 0x130 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	47 c0       	rjmp	.+142    	; 0x130 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	45 c0       	rjmp	.+138    	; 0x130 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	43 c0       	rjmp	.+134    	; 0x130 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	41 c0       	rjmp	.+130    	; 0x130 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	3f c0       	rjmp	.+126    	; 0x130 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	3d c0       	rjmp	.+122    	; 0x130 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	3b c0       	rjmp	.+118    	; 0x130 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	39 c0       	rjmp	.+114    	; 0x130 <__bad_interrupt>
      be:	00 00       	nop
      c0:	37 c0       	rjmp	.+110    	; 0x130 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	35 c0       	rjmp	.+106    	; 0x130 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	92 c4       	rjmp	.+2340   	; 0x9ee <__vector_50>
      ca:	00 00       	nop
      cc:	31 c0       	rjmp	.+98     	; 0x130 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	2f c0       	rjmp	.+94     	; 0x130 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	2d c0       	rjmp	.+90     	; 0x130 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	2b c0       	rjmp	.+86     	; 0x130 <__bad_interrupt>
      da:	00 00       	nop
      dc:	29 c0       	rjmp	.+82     	; 0x130 <__bad_interrupt>
      de:	00 00       	nop
      e0:	27 c0       	rjmp	.+78     	; 0x130 <__bad_interrupt>
	...

000000e4 <__trampolines_end>:
      e4:	63 64       	ori	r22, 0x43	; 67
      e6:	69 6e       	ori	r22, 0xE9	; 233
      e8:	6f 70       	andi	r22, 0x0F	; 15
      ea:	73 75       	andi	r23, 0x53	; 83
      ec:	78 58       	subi	r23, 0x88	; 136
      ee:	5b 00       	.word	0x005b	; ????

000000f0 <__ctors_end>:
      f0:	11 24       	eor	r1, r1
      f2:	1f be       	out	0x3f, r1	; 63
      f4:	cf ef       	ldi	r28, 0xFF	; 255
      f6:	d1 e2       	ldi	r29, 0x21	; 33
      f8:	de bf       	out	0x3e, r29	; 62
      fa:	cd bf       	out	0x3d, r28	; 61
      fc:	00 e0       	ldi	r16, 0x00	; 0
      fe:	0c bf       	out	0x3c, r16	; 60

00000100 <__do_copy_data>:
     100:	12 e0       	ldi	r17, 0x02	; 2
     102:	a0 e0       	ldi	r26, 0x00	; 0
     104:	b2 e0       	ldi	r27, 0x02	; 2
     106:	e0 e7       	ldi	r30, 0x70	; 112
     108:	f1 e2       	ldi	r31, 0x21	; 33
     10a:	00 e0       	ldi	r16, 0x00	; 0
     10c:	0b bf       	out	0x3b, r16	; 59
     10e:	02 c0       	rjmp	.+4      	; 0x114 <__do_copy_data+0x14>
     110:	07 90       	elpm	r0, Z+
     112:	0d 92       	st	X+, r0
     114:	a2 33       	cpi	r26, 0x32	; 50
     116:	b1 07       	cpc	r27, r17
     118:	d9 f7       	brne	.-10     	; 0x110 <__do_copy_data+0x10>

0000011a <__do_clear_bss>:
     11a:	22 e0       	ldi	r18, 0x02	; 2
     11c:	a2 e3       	ldi	r26, 0x32	; 50
     11e:	b2 e0       	ldi	r27, 0x02	; 2
     120:	01 c0       	rjmp	.+2      	; 0x124 <.do_clear_bss_start>

00000122 <.do_clear_bss_loop>:
     122:	1d 92       	st	X+, r1

00000124 <.do_clear_bss_start>:
     124:	a5 3a       	cpi	r26, 0xA5	; 165
     126:	b2 07       	cpc	r27, r18
     128:	e1 f7       	brne	.-8      	; 0x122 <.do_clear_bss_loop>
     12a:	b1 d3       	rcall	.+1890   	; 0x88e <main>
     12c:	0c 94 b6 10 	jmp	0x216c	; 0x216c <_exit>

00000130 <__bad_interrupt>:
     130:	67 cf       	rjmp	.-306    	; 0x0 <__vectors>

00000132 <TransmitUART0>:

#ifndef TIMER5_H_
#define TIMER5_H_

void TCNT5_startingValue(unsigned int value) {
	TCNT5 = value;
     132:	e0 ec       	ldi	r30, 0xC0	; 192
     134:	f0 e0       	ldi	r31, 0x00	; 0
     136:	90 81       	ld	r25, Z
     138:	95 ff       	sbrs	r25, 5
     13a:	fd cf       	rjmp	.-6      	; 0x136 <TransmitUART0+0x4>
     13c:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
     140:	08 95       	ret

00000142 <returnNewLine>:
     142:	8a e0       	ldi	r24, 0x0A	; 10
     144:	f6 df       	rcall	.-20     	; 0x132 <TransmitUART0>
     146:	8d e0       	ldi	r24, 0x0D	; 13
     148:	f4 cf       	rjmp	.-24     	; 0x132 <TransmitUART0>
     14a:	08 95       	ret

0000014c <TransmitString>:
     14c:	cf 93       	push	r28
     14e:	df 93       	push	r29
     150:	ec 01       	movw	r28, r24
     152:	88 81       	ld	r24, Y
     154:	88 23       	and	r24, r24
     156:	29 f0       	breq	.+10     	; 0x162 <TransmitString+0x16>
     158:	21 96       	adiw	r28, 0x01	; 1
     15a:	eb df       	rcall	.-42     	; 0x132 <TransmitUART0>
     15c:	89 91       	ld	r24, Y+
     15e:	81 11       	cpse	r24, r1
     160:	fc cf       	rjmp	.-8      	; 0x15a <TransmitString+0xe>
     162:	ef df       	rcall	.-34     	; 0x142 <returnNewLine>
     164:	df 91       	pop	r29
     166:	cf 91       	pop	r28
     168:	08 95       	ret

0000016a <send_int_Uart>:
     16a:	0f 93       	push	r16
     16c:	1f 93       	push	r17
     16e:	cf 93       	push	r28
     170:	df 93       	push	r29
     172:	cd b7       	in	r28, 0x3d	; 61
     174:	de b7       	in	r29, 0x3e	; 62
     176:	28 97       	sbiw	r28, 0x08	; 8
     178:	0f b6       	in	r0, 0x3f	; 63
     17a:	f8 94       	cli
     17c:	de bf       	out	0x3e, r29	; 62
     17e:	0f be       	out	0x3f, r0	; 63
     180:	cd bf       	out	0x3d, r28	; 61
     182:	9f 93       	push	r25
     184:	8f 93       	push	r24
     186:	8e e0       	ldi	r24, 0x0E	; 14
     188:	92 e0       	ldi	r25, 0x02	; 2
     18a:	9f 93       	push	r25
     18c:	8f 93       	push	r24
     18e:	8e 01       	movw	r16, r28
     190:	0f 5f       	subi	r16, 0xFF	; 255
     192:	1f 4f       	sbci	r17, 0xFF	; 255
     194:	1f 93       	push	r17
     196:	0f 93       	push	r16
     198:	0e 94 84 0a 	call	0x1508	; 0x1508 <sprintf>
     19c:	c8 01       	movw	r24, r16
     19e:	d6 df       	rcall	.-84     	; 0x14c <TransmitString>
     1a0:	0f 90       	pop	r0
     1a2:	0f 90       	pop	r0
     1a4:	0f 90       	pop	r0
     1a6:	0f 90       	pop	r0
     1a8:	0f 90       	pop	r0
     1aa:	0f 90       	pop	r0
     1ac:	28 96       	adiw	r28, 0x08	; 8
     1ae:	0f b6       	in	r0, 0x3f	; 63
     1b0:	f8 94       	cli
     1b2:	de bf       	out	0x3e, r29	; 62
     1b4:	0f be       	out	0x3f, r0	; 63
     1b6:	cd bf       	out	0x3d, r28	; 61
     1b8:	df 91       	pop	r29
     1ba:	cf 91       	pop	r28
     1bc:	1f 91       	pop	r17
     1be:	0f 91       	pop	r16
     1c0:	08 95       	ret

000001c2 <InitializeUART0>:
     1c2:	8f 92       	push	r8
     1c4:	9f 92       	push	r9
     1c6:	af 92       	push	r10
     1c8:	bf 92       	push	r11
     1ca:	ef 92       	push	r14
     1cc:	cf 93       	push	r28
     1ce:	df 93       	push	r29
     1d0:	4b 01       	movw	r8, r22
     1d2:	5c 01       	movw	r10, r24
     1d4:	d4 2f       	mov	r29, r20
     1d6:	c2 2f       	mov	r28, r18
     1d8:	60 e4       	ldi	r22, 0x40	; 64
     1da:	72 e4       	ldi	r23, 0x42	; 66
     1dc:	8f e0       	ldi	r24, 0x0F	; 15
     1de:	90 e0       	ldi	r25, 0x00	; 0
     1e0:	a5 01       	movw	r20, r10
     1e2:	94 01       	movw	r18, r8
     1e4:	0e 94 49 0a 	call	0x1492	; 0x1492 <__udivmodsi4>
     1e8:	ca 01       	movw	r24, r20
     1ea:	b9 01       	movw	r22, r18
     1ec:	ff d7       	rcall	.+4094   	; 0x11ec <__floatunsisf>
     1ee:	0e 94 ac 09 	call	0x1358	; 0x1358 <lrint>
     1f2:	61 50       	subi	r22, 0x01	; 1
     1f4:	71 09       	sbc	r23, r1
     1f6:	d1 30       	cpi	r29, 0x01	; 1
     1f8:	19 f4       	brne	.+6      	; 0x200 <InitializeUART0+0x3e>
     1fa:	82 e0       	ldi	r24, 0x02	; 2
     1fc:	80 93 c0 00 	sts	0x00C0, r24	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7000c0>
     200:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
     204:	60 93 c4 00 	sts	0x00C4, r22	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
     208:	88 e9       	ldi	r24, 0x98	; 152
     20a:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7000c1>
     20e:	82 e0       	ldi	r24, 0x02	; 2
     210:	e8 12       	cpse	r14, r24
     212:	03 c0       	rjmp	.+6      	; 0x21a <InitializeUART0+0x58>
     214:	88 e0       	ldi	r24, 0x08	; 8
     216:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7000c2>
     21a:	c6 30       	cpi	r28, 0x06	; 6
     21c:	31 f4       	brne	.+12     	; 0x22a <InitializeUART0+0x68>
     21e:	e2 ec       	ldi	r30, 0xC2	; 194
     220:	f0 e0       	ldi	r31, 0x00	; 0
     222:	80 81       	ld	r24, Z
     224:	82 60       	ori	r24, 0x02	; 2
     226:	80 83       	st	Z, r24
     228:	0f c0       	rjmp	.+30     	; 0x248 <InitializeUART0+0x86>
     22a:	c7 30       	cpi	r28, 0x07	; 7
     22c:	31 f4       	brne	.+12     	; 0x23a <InitializeUART0+0x78>
     22e:	e2 ec       	ldi	r30, 0xC2	; 194
     230:	f0 e0       	ldi	r31, 0x00	; 0
     232:	80 81       	ld	r24, Z
     234:	84 60       	ori	r24, 0x04	; 4
     236:	80 83       	st	Z, r24
     238:	07 c0       	rjmp	.+14     	; 0x248 <InitializeUART0+0x86>
     23a:	c9 30       	cpi	r28, 0x09	; 9
     23c:	29 f4       	brne	.+10     	; 0x248 <InitializeUART0+0x86>
     23e:	e2 ec       	ldi	r30, 0xC2	; 194
     240:	f0 e0       	ldi	r31, 0x00	; 0
     242:	80 81       	ld	r24, Z
     244:	8e 60       	ori	r24, 0x0E	; 14
     246:	80 83       	st	Z, r24
     248:	df 91       	pop	r29
     24a:	cf 91       	pop	r28
     24c:	ef 90       	pop	r14
     24e:	bf 90       	pop	r11
     250:	af 90       	pop	r10
     252:	9f 90       	pop	r9
     254:	8f 90       	pop	r8
     256:	08 95       	ret

00000258 <setPwm>:
     258:	cf 92       	push	r12
     25a:	df 92       	push	r13
     25c:	ef 92       	push	r14
     25e:	ff 92       	push	r15
     260:	6b 01       	movw	r12, r22
     262:	7c 01       	movw	r14, r24
     264:	20 e0       	ldi	r18, 0x00	; 0
     266:	30 e0       	ldi	r19, 0x00	; 0
     268:	48 ec       	ldi	r20, 0xC8	; 200
     26a:	52 e4       	ldi	r21, 0x42	; 66
     26c:	8f d7       	rcall	.+3870   	; 0x118c <__cmpsf2>
     26e:	18 16       	cp	r1, r24
     270:	bc f0       	brlt	.+46     	; 0x2a0 <setPwm+0x48>
     272:	60 91 a6 00 	lds	r22, 0x00A6	; 0x8000a6 <__TEXT_REGION_LENGTH__+0x7000a6>
     276:	70 91 a7 00 	lds	r23, 0x00A7	; 0x8000a7 <__TEXT_REGION_LENGTH__+0x7000a7>
     27a:	80 e0       	ldi	r24, 0x00	; 0
     27c:	90 e0       	ldi	r25, 0x00	; 0
     27e:	b6 d7       	rcall	.+3948   	; 0x11ec <__floatunsisf>
     280:	2a e0       	ldi	r18, 0x0A	; 10
     282:	37 ed       	ldi	r19, 0xD7	; 215
     284:	43 e2       	ldi	r20, 0x23	; 35
     286:	5c e3       	ldi	r21, 0x3C	; 60
     288:	0e 94 e6 09 	call	0x13cc	; 0x13cc <__mulsf3>
     28c:	a7 01       	movw	r20, r14
     28e:	96 01       	movw	r18, r12
     290:	0e 94 e6 09 	call	0x13cc	; 0x13cc <__mulsf3>
     294:	7f d7       	rcall	.+3838   	; 0x1194 <__fixunssfsi>
     296:	70 93 a9 00 	sts	0x00A9, r23	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7000a9>
     29a:	60 93 a8 00 	sts	0x00A8, r22	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7000a8>
     29e:	1b c0       	rjmp	.+54     	; 0x2d6 <setPwm+0x7e>
     2a0:	20 e0       	ldi	r18, 0x00	; 0
     2a2:	30 e0       	ldi	r19, 0x00	; 0
     2a4:	a9 01       	movw	r20, r18
     2a6:	c7 01       	movw	r24, r14
     2a8:	b6 01       	movw	r22, r12
     2aa:	70 d7       	rcall	.+3808   	; 0x118c <__cmpsf2>
     2ac:	18 16       	cp	r1, r24
     2ae:	2c f0       	brlt	.+10     	; 0x2ba <setPwm+0x62>
     2b0:	10 92 a9 00 	sts	0x00A9, r1	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7000a9>
     2b4:	10 92 a8 00 	sts	0x00A8, r1	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7000a8>
     2b8:	0e c0       	rjmp	.+28     	; 0x2d6 <setPwm+0x7e>
     2ba:	20 e0       	ldi	r18, 0x00	; 0
     2bc:	30 e0       	ldi	r19, 0x00	; 0
     2be:	48 ec       	ldi	r20, 0xC8	; 200
     2c0:	52 e4       	ldi	r21, 0x42	; 66
     2c2:	c7 01       	movw	r24, r14
     2c4:	b6 01       	movw	r22, r12
     2c6:	0e 94 a8 09 	call	0x1350	; 0x1350 <__gesf2>
     2ca:	18 16       	cp	r1, r24
     2cc:	24 f4       	brge	.+8      	; 0x2d6 <setPwm+0x7e>
     2ce:	10 92 a9 00 	sts	0x00A9, r1	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7000a9>
     2d2:	10 92 a8 00 	sts	0x00A8, r1	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7000a8>
     2d6:	ff 90       	pop	r15
     2d8:	ef 90       	pop	r14
     2da:	df 90       	pop	r13
     2dc:	cf 90       	pop	r12
     2de:	08 95       	ret

000002e0 <InitializePWM_4C>:
     2e0:	8f 92       	push	r8
     2e2:	9f 92       	push	r9
     2e4:	af 92       	push	r10
     2e6:	bf 92       	push	r11
     2e8:	cf 92       	push	r12
     2ea:	df 92       	push	r13
     2ec:	ef 92       	push	r14
     2ee:	ff 92       	push	r15
     2f0:	0f 93       	push	r16
     2f2:	1f 93       	push	r17
     2f4:	4b 01       	movw	r8, r22
     2f6:	5c 01       	movw	r10, r24
     2f8:	69 01       	movw	r12, r18
     2fa:	7a 01       	movw	r14, r20
     2fc:	e1 ea       	ldi	r30, 0xA1	; 161
     2fe:	f0 e0       	ldi	r31, 0x00	; 0
     300:	10 82       	st	Z, r1
     302:	a1 e0       	ldi	r26, 0x01	; 1
     304:	b1 e0       	ldi	r27, 0x01	; 1
     306:	8c 91       	ld	r24, X
     308:	88 60       	ori	r24, 0x08	; 8
     30a:	8c 93       	st	X, r24
     30c:	a0 ea       	ldi	r26, 0xA0	; 160
     30e:	b0 e0       	ldi	r27, 0x00	; 0
     310:	8c 91       	ld	r24, X
     312:	82 68       	ori	r24, 0x82	; 130
     314:	8c 93       	st	X, r24
     316:	80 81       	ld	r24, Z
     318:	88 61       	ori	r24, 0x18	; 24
     31a:	80 83       	st	Z, r24
     31c:	60 e0       	ldi	r22, 0x00	; 0
     31e:	74 e2       	ldi	r23, 0x24	; 36
     320:	84 ef       	ldi	r24, 0xF4	; 244
     322:	90 e0       	ldi	r25, 0x00	; 0
     324:	a5 01       	movw	r20, r10
     326:	94 01       	movw	r18, r8
     328:	0e 94 49 0a 	call	0x1492	; 0x1492 <__udivmodsi4>
     32c:	89 01       	movw	r16, r18
     32e:	9a 01       	movw	r18, r20
     330:	01 15       	cp	r16, r1
     332:	11 05       	cpc	r17, r1
     334:	61 e0       	ldi	r22, 0x01	; 1
     336:	26 07       	cpc	r18, r22
     338:	31 05       	cpc	r19, r1
     33a:	38 f1       	brcs	.+78     	; 0x38a <InitializePWM_4C+0xaa>
     33c:	d9 01       	movw	r26, r18
     33e:	c8 01       	movw	r24, r16
     340:	41 e0       	ldi	r20, 0x01	; 1
     342:	50 e0       	ldi	r21, 0x00	; 0
     344:	b6 95       	lsr	r27
     346:	a7 95       	ror	r26
     348:	97 95       	ror	r25
     34a:	87 95       	ror	r24
     34c:	4f 5f       	subi	r20, 0xFF	; 255
     34e:	5f 4f       	sbci	r21, 0xFF	; 255
     350:	00 97       	sbiw	r24, 0x00	; 0
     352:	61 e0       	ldi	r22, 0x01	; 1
     354:	a6 07       	cpc	r26, r22
     356:	b1 05       	cpc	r27, r1
     358:	a8 f7       	brcc	.-22     	; 0x344 <InitializePWM_4C+0x64>
     35a:	46 30       	cpi	r20, 0x06	; 6
     35c:	51 05       	cpc	r21, r1
     35e:	14 f0       	brlt	.+4      	; 0x364 <InitializePWM_4C+0x84>
     360:	45 e0       	ldi	r20, 0x05	; 5
     362:	50 e0       	ldi	r21, 0x00	; 0
     364:	43 30       	cpi	r20, 0x03	; 3
     366:	51 05       	cpc	r21, r1
     368:	81 f1       	breq	.+96     	; 0x3ca <InitializePWM_4C+0xea>
     36a:	3c f4       	brge	.+14     	; 0x37a <InitializePWM_4C+0x9a>
     36c:	41 30       	cpi	r20, 0x01	; 1
     36e:	51 05       	cpc	r21, r1
     370:	61 f0       	breq	.+24     	; 0x38a <InitializePWM_4C+0xaa>
     372:	42 30       	cpi	r20, 0x02	; 2
     374:	51 05       	cpc	r21, r1
     376:	a9 f0       	breq	.+42     	; 0x3a2 <InitializePWM_4C+0xc2>
     378:	60 c0       	rjmp	.+192    	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
     37a:	44 30       	cpi	r20, 0x04	; 4
     37c:	51 05       	cpc	r21, r1
     37e:	c9 f1       	breq	.+114    	; 0x3f2 <InitializePWM_4C+0x112>
     380:	45 30       	cpi	r20, 0x05	; 5
     382:	51 05       	cpc	r21, r1
     384:	09 f4       	brne	.+2      	; 0x388 <InitializePWM_4C+0xa8>
     386:	45 c0       	rjmp	.+138    	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
     388:	58 c0       	rjmp	.+176    	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
     38a:	e1 ea       	ldi	r30, 0xA1	; 161
     38c:	f0 e0       	ldi	r31, 0x00	; 0
     38e:	80 81       	ld	r24, Z
     390:	81 60       	ori	r24, 0x01	; 1
     392:	80 83       	st	Z, r24
     394:	01 50       	subi	r16, 0x01	; 1
     396:	11 09       	sbc	r17, r1
     398:	10 93 a7 00 	sts	0x00A7, r17	; 0x8000a7 <__TEXT_REGION_LENGTH__+0x7000a7>
     39c:	00 93 a6 00 	sts	0x00A6, r16	; 0x8000a6 <__TEXT_REGION_LENGTH__+0x7000a6>
     3a0:	4c c0       	rjmp	.+152    	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
     3a2:	e1 ea       	ldi	r30, 0xA1	; 161
     3a4:	f0 e0       	ldi	r31, 0x00	; 0
     3a6:	80 81       	ld	r24, Z
     3a8:	82 60       	ori	r24, 0x02	; 2
     3aa:	80 83       	st	Z, r24
     3ac:	68 94       	set
     3ae:	12 f8       	bld	r1, 2
     3b0:	36 95       	lsr	r19
     3b2:	27 95       	ror	r18
     3b4:	17 95       	ror	r17
     3b6:	07 95       	ror	r16
     3b8:	16 94       	lsr	r1
     3ba:	d1 f7       	brne	.-12     	; 0x3b0 <InitializePWM_4C+0xd0>
     3bc:	01 50       	subi	r16, 0x01	; 1
     3be:	11 09       	sbc	r17, r1
     3c0:	10 93 a7 00 	sts	0x00A7, r17	; 0x8000a7 <__TEXT_REGION_LENGTH__+0x7000a7>
     3c4:	00 93 a6 00 	sts	0x00A6, r16	; 0x8000a6 <__TEXT_REGION_LENGTH__+0x7000a6>
     3c8:	38 c0       	rjmp	.+112    	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
     3ca:	e1 ea       	ldi	r30, 0xA1	; 161
     3cc:	f0 e0       	ldi	r31, 0x00	; 0
     3ce:	80 81       	ld	r24, Z
     3d0:	83 60       	ori	r24, 0x03	; 3
     3d2:	80 83       	st	Z, r24
     3d4:	68 94       	set
     3d6:	15 f8       	bld	r1, 5
     3d8:	36 95       	lsr	r19
     3da:	27 95       	ror	r18
     3dc:	17 95       	ror	r17
     3de:	07 95       	ror	r16
     3e0:	16 94       	lsr	r1
     3e2:	d1 f7       	brne	.-12     	; 0x3d8 <InitializePWM_4C+0xf8>
     3e4:	01 50       	subi	r16, 0x01	; 1
     3e6:	11 09       	sbc	r17, r1
     3e8:	10 93 a7 00 	sts	0x00A7, r17	; 0x8000a7 <__TEXT_REGION_LENGTH__+0x7000a7>
     3ec:	00 93 a6 00 	sts	0x00A6, r16	; 0x8000a6 <__TEXT_REGION_LENGTH__+0x7000a6>
     3f0:	24 c0       	rjmp	.+72     	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
     3f2:	e1 ea       	ldi	r30, 0xA1	; 161
     3f4:	f0 e0       	ldi	r31, 0x00	; 0
     3f6:	80 81       	ld	r24, Z
     3f8:	84 60       	ori	r24, 0x04	; 4
     3fa:	80 83       	st	Z, r24
     3fc:	01 2f       	mov	r16, r17
     3fe:	12 2f       	mov	r17, r18
     400:	23 2f       	mov	r18, r19
     402:	33 27       	eor	r19, r19
     404:	01 50       	subi	r16, 0x01	; 1
     406:	11 09       	sbc	r17, r1
     408:	10 93 a7 00 	sts	0x00A7, r17	; 0x8000a7 <__TEXT_REGION_LENGTH__+0x7000a7>
     40c:	00 93 a6 00 	sts	0x00A6, r16	; 0x8000a6 <__TEXT_REGION_LENGTH__+0x7000a6>
     410:	14 c0       	rjmp	.+40     	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
     412:	e1 ea       	ldi	r30, 0xA1	; 161
     414:	f0 e0       	ldi	r31, 0x00	; 0
     416:	80 81       	ld	r24, Z
     418:	85 60       	ori	r24, 0x05	; 5
     41a:	80 83       	st	Z, r24
     41c:	0f 2e       	mov	r0, r31
     41e:	fa e0       	ldi	r31, 0x0A	; 10
     420:	36 95       	lsr	r19
     422:	27 95       	ror	r18
     424:	17 95       	ror	r17
     426:	07 95       	ror	r16
     428:	fa 95       	dec	r31
     42a:	d1 f7       	brne	.-12     	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
     42c:	f0 2d       	mov	r31, r0
     42e:	0f 5f       	subi	r16, 0xFF	; 255
     430:	1f 4f       	sbci	r17, 0xFF	; 255
     432:	10 93 a7 00 	sts	0x00A7, r17	; 0x8000a7 <__TEXT_REGION_LENGTH__+0x7000a7>
     436:	00 93 a6 00 	sts	0x00A6, r16	; 0x8000a6 <__TEXT_REGION_LENGTH__+0x7000a6>
     43a:	80 91 a6 00 	lds	r24, 0x00A6	; 0x8000a6 <__TEXT_REGION_LENGTH__+0x7000a6>
     43e:	90 91 a7 00 	lds	r25, 0x00A7	; 0x8000a7 <__TEXT_REGION_LENGTH__+0x7000a7>
     442:	89 2b       	or	r24, r25
     444:	29 f4       	brne	.+10     	; 0x450 <__LOCK_REGION_LENGTH__+0x50>
     446:	10 92 a9 00 	sts	0x00A9, r1	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7000a9>
     44a:	10 92 a8 00 	sts	0x00A8, r1	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7000a8>
     44e:	03 c0       	rjmp	.+6      	; 0x456 <__LOCK_REGION_LENGTH__+0x56>
     450:	c7 01       	movw	r24, r14
     452:	b6 01       	movw	r22, r12
     454:	01 df       	rcall	.-510    	; 0x258 <setPwm>
     456:	1f 91       	pop	r17
     458:	0f 91       	pop	r16
     45a:	ff 90       	pop	r15
     45c:	ef 90       	pop	r14
     45e:	df 90       	pop	r13
     460:	cf 90       	pop	r12
     462:	bf 90       	pop	r11
     464:	af 90       	pop	r10
     466:	9f 90       	pop	r9
     468:	8f 90       	pop	r8
     46a:	08 95       	ret

0000046c <initializeTimerCounter_5>:
}

void initializeTimerCounter_5()
{
	TIMSK5 |= (1 << TOIE5);
     46c:	e3 e7       	ldi	r30, 0x73	; 115
     46e:	f0 e0       	ldi	r31, 0x00	; 0
     470:	80 81       	ld	r24, Z
     472:	81 60       	ori	r24, 0x01	; 1
     474:	80 83       	st	Z, r24
	TCCR5B = (1 << CS50); // doesnt increase countsec value - should change CS50 to CS51 or smth else 
     476:	81 e0       	ldi	r24, 0x01	; 1
     478:	80 93 21 01 	sts	0x0121, r24	; 0x800121 <__TEXT_REGION_LENGTH__+0x700121>

#ifndef TIMER5_H_
#define TIMER5_H_

void TCNT5_startingValue(unsigned int value) {
	TCNT5 = value;
     47c:	8f ef       	ldi	r24, 0xFF	; 255
     47e:	95 e0       	ldi	r25, 0x05	; 5
     480:	90 93 25 01 	sts	0x0125, r25	; 0x800125 <__TEXT_REGION_LENGTH__+0x700125>
     484:	80 93 24 01 	sts	0x0124, r24	; 0x800124 <__TEXT_REGION_LENGTH__+0x700124>
     488:	08 95       	ret

0000048a <decodeCommands>:
volatile struct RPM RPM_1 = {.currentRPM = 0, .setRPM = 0, .counter = 0, .interruptionCounter = 10};

char sendinComands = 0;

void decodeCommands(volatile unsigned char commands[])
{
     48a:	2f 92       	push	r2
     48c:	3f 92       	push	r3
     48e:	4f 92       	push	r4
     490:	5f 92       	push	r5
     492:	6f 92       	push	r6
     494:	7f 92       	push	r7
     496:	8f 92       	push	r8
     498:	9f 92       	push	r9
     49a:	af 92       	push	r10
     49c:	bf 92       	push	r11
     49e:	cf 92       	push	r12
     4a0:	df 92       	push	r13
     4a2:	ef 92       	push	r14
     4a4:	ff 92       	push	r15
     4a6:	0f 93       	push	r16
     4a8:	1f 93       	push	r17
     4aa:	cf 93       	push	r28
     4ac:	df 93       	push	r29
     4ae:	cd b7       	in	r28, 0x3d	; 61
     4b0:	de b7       	in	r29, 0x3e	; 62
     4b2:	2c 97       	sbiw	r28, 0x0c	; 12
     4b4:	0f b6       	in	r0, 0x3f	; 63
     4b6:	f8 94       	cli
     4b8:	de bf       	out	0x3e, r29	; 62
     4ba:	0f be       	out	0x3f, r0	; 63
     4bc:	cd bf       	out	0x3d, r28	; 61
	unsigned int i = 0;
	unsigned int j = 0;
	unsigned char tempBuf[10];
	unsigned int extractedValue;
	while(commands[i] != '\n') {
     4be:	dc 01       	movw	r26, r24
     4c0:	2c 91       	ld	r18, X
     4c2:	2a 30       	cpi	r18, 0x0A	; 10
     4c4:	09 f4       	brne	.+2      	; 0x4c8 <decodeCommands+0x3e>
     4c6:	ca c1       	rjmp	.+916    	; 0x85c <decodeCommands+0x3d2>
     4c8:	7c 01       	movw	r14, r24
     4ca:	6c 01       	movw	r12, r24
     4cc:	81 2c       	mov	r8, r1
     4ce:	91 2c       	mov	r9, r1
     4d0:	00 e0       	ldi	r16, 0x00	; 0
     4d2:	10 e0       	ldi	r17, 0x00	; 0

		// stop command from control program
		if (commands[i] == 'S'){
			RPM_1.setRPM = 0;
     4d4:	0f 2e       	mov	r0, r31
     4d6:	f0 e0       	ldi	r31, 0x00	; 0
     4d8:	4f 2e       	mov	r4, r31
     4da:	f2 e0       	ldi	r31, 0x02	; 2
     4dc:	5f 2e       	mov	r5, r31
     4de:	f0 2d       	mov	r31, r0
			closeValve_0();
			closeValve_1();
			closeValve_2();
			VALVES.closeV1();
     4e0:	0f 2e       	mov	r0, r31
     4e2:	f2 e8       	ldi	r31, 0x82	; 130
     4e4:	6f 2e       	mov	r6, r31
     4e6:	f2 e0       	ldi	r31, 0x02	; 2
     4e8:	7f 2e       	mov	r7, r31
     4ea:	f0 2d       	mov	r31, r0
			while(commands[i] != '|'){
				tempBuf[j] = commands[i];
				i++;
				j++;
			}
			sscanf(tempBuf, "%d", &extractedValue);
     4ec:	1e 01       	movw	r2, r28
     4ee:	bb e0       	ldi	r27, 0x0B	; 11
     4f0:	2b 0e       	add	r2, r27
     4f2:	31 1c       	adc	r3, r1
     4f4:	fe 01       	movw	r30, r28
     4f6:	31 96       	adiw	r30, 0x01	; 1
     4f8:	5f 01       	movw	r10, r30
	unsigned char tempBuf[10];
	unsigned int extractedValue;
	while(commands[i] != '\n') {

		// stop command from control program
		if (commands[i] == 'S'){
     4fa:	d6 01       	movw	r26, r12
     4fc:	8c 91       	ld	r24, X
     4fe:	83 35       	cpi	r24, 0x53	; 83
     500:	51 f5       	brne	.+84     	; 0x556 <decodeCommands+0xcc>
			RPM_1.setRPM = 0;
     502:	f2 01       	movw	r30, r4
     504:	13 82       	std	Z+3, r1	; 0x03
     506:	12 82       	std	Z+2, r1	; 0x02
			closeValve_0();
     508:	27 d4       	rcall	.+2126   	; 0xd58 <closeValve_0>
			closeValve_1();
     50a:	56 d4       	rcall	.+2220   	; 0xdb8 <closeValve_1>
			closeValve_2();
     50c:	84 d4       	rcall	.+2312   	; 0xe16 <closeValve_2>
     50e:	d3 01       	movw	r26, r6
			VALVES.closeV1();
     510:	50 96       	adiw	r26, 0x10	; 16
     512:	ed 91       	ld	r30, X+
     514:	fc 91       	ld	r31, X
     516:	51 97       	sbiw	r26, 0x11	; 17
     518:	19 95       	eicall
     51a:	d3 01       	movw	r26, r6
			VALVES.closeV2();
     51c:	52 96       	adiw	r26, 0x12	; 18
     51e:	ed 91       	ld	r30, X+
     520:	fc 91       	ld	r31, X
     522:	53 97       	sbiw	r26, 0x13	; 19
     524:	19 95       	eicall
     526:	d3 01       	movw	r26, r6
			VALVES.closeV3();
     528:	54 96       	adiw	r26, 0x14	; 20
     52a:	ed 91       	ld	r30, X+
     52c:	fc 91       	ld	r31, X
     52e:	55 97       	sbiw	r26, 0x15	; 21
     530:	19 95       	eicall
     532:	d3 01       	movw	r26, r6
			VALVES.closeV4();
     534:	56 96       	adiw	r26, 0x16	; 22
     536:	ed 91       	ld	r30, X+
     538:	fc 91       	ld	r31, X
     53a:	57 97       	sbiw	r26, 0x17	; 23
     53c:	19 95       	eicall
     53e:	d3 01       	movw	r26, r6
			VALVES.closeV5();
     540:	58 96       	adiw	r26, 0x18	; 24
     542:	ed 91       	ld	r30, X+
     544:	fc 91       	ld	r31, X
     546:	59 97       	sbiw	r26, 0x19	; 25
     548:	19 95       	eicall
     54a:	d3 01       	movw	r26, r6
			VALVES.closeV6();
     54c:	5a 96       	adiw	r26, 0x1a	; 26
     54e:	ed 91       	ld	r30, X+
     550:	fc 91       	ld	r31, X
     552:	5b 97       	sbiw	r26, 0x1b	; 27
     554:	19 95       	eicall
     556:	f6 01       	movw	r30, r12
		}
		if(commands[i] == 'R' && commands[i + 1] == '8') {
     558:	80 81       	ld	r24, Z
     55a:	82 35       	cpi	r24, 0x52	; 82
     55c:	09 f0       	breq	.+2      	; 0x560 <decodeCommands+0xd6>
     55e:	3e c0       	rjmp	.+124    	; 0x5dc <decodeCommands+0x152>
     560:	f8 01       	movw	r30, r16
     562:	31 96       	adiw	r30, 0x01	; 1
     564:	ee 0d       	add	r30, r14
     566:	ff 1d       	adc	r31, r15
     568:	80 81       	ld	r24, Z
     56a:	88 33       	cpi	r24, 0x38	; 56
     56c:	b9 f5       	brne	.+110    	; 0x5dc <decodeCommands+0x152>
     56e:	68 01       	movw	r12, r16
			i = i + 2;
     570:	f2 e0       	ldi	r31, 0x02	; 2
     572:	cf 0e       	add	r12, r31
     574:	d1 1c       	adc	r13, r1
     576:	c7 01       	movw	r24, r14
			while(commands[i] != '|'){
     578:	8c 0d       	add	r24, r12
     57a:	9d 1d       	adc	r25, r13
     57c:	dc 01       	movw	r26, r24
     57e:	2c 91       	ld	r18, X
     580:	2c 37       	cpi	r18, 0x7C	; 124
     582:	b9 f0       	breq	.+46     	; 0x5b2 <decodeCommands+0x128>
     584:	d5 01       	movw	r26, r10
     586:	a8 0d       	add	r26, r8
     588:	b9 1d       	adc	r27, r9
     58a:	fc 01       	movw	r30, r24
     58c:	0d 5f       	subi	r16, 0xFD	; 253
     58e:	1f 4f       	sbci	r17, 0xFF	; 255
     590:	08 1b       	sub	r16, r24
     592:	19 0b       	sbc	r17, r25
     594:	80 81       	ld	r24, Z
				tempBuf[j] = commands[i];
     596:	8d 93       	st	X+, r24
     598:	2f ef       	ldi	r18, 0xFF	; 255
				i++;
     59a:	c2 1a       	sub	r12, r18
     59c:	d2 0a       	sbc	r13, r18
     59e:	4d 01       	movw	r8, r26
     5a0:	8a 18       	sub	r8, r10
     5a2:	9b 08       	sbc	r9, r11
     5a4:	e0 0f       	add	r30, r16
     5a6:	f1 1f       	adc	r31, r17
     5a8:	ee 0d       	add	r30, r14
     5aa:	ff 1d       	adc	r31, r15
     5ac:	80 81       	ld	r24, Z
			VALVES.closeV5();
			VALVES.closeV6();
		}
		if(commands[i] == 'R' && commands[i + 1] == '8') {
			i = i + 2;
			while(commands[i] != '|'){
     5ae:	8c 37       	cpi	r24, 0x7C	; 124
     5b0:	89 f7       	brne	.-30     	; 0x594 <decodeCommands+0x10a>
     5b2:	3f 92       	push	r3
				tempBuf[j] = commands[i];
				i++;
				j++;
			}
			sscanf(tempBuf, "%d", &extractedValue);
     5b4:	2f 92       	push	r2
     5b6:	81 e2       	ldi	r24, 0x21	; 33
     5b8:	92 e0       	ldi	r25, 0x02	; 2
     5ba:	9f 93       	push	r25
     5bc:	8f 93       	push	r24
     5be:	bf 92       	push	r11
     5c0:	af 92       	push	r10
     5c2:	d0 d7       	rcall	.+4000   	; 0x1564 <sscanf>
     5c4:	8b 85       	ldd	r24, Y+11	; 0x0b
			//send_int_Uart(extractedValue);
			RPM_1.setRPM = extractedValue;
     5c6:	9c 85       	ldd	r25, Y+12	; 0x0c
     5c8:	f2 01       	movw	r30, r4
     5ca:	93 83       	std	Z+3, r25	; 0x03
     5cc:	82 83       	std	Z+2, r24	; 0x02
     5ce:	0f 90       	pop	r0
     5d0:	0f 90       	pop	r0
     5d2:	0f 90       	pop	r0
     5d4:	0f 90       	pop	r0
     5d6:	0f 90       	pop	r0
     5d8:	0f 90       	pop	r0
     5da:	86 01       	movw	r16, r12
     5dc:	f7 01       	movw	r30, r14
			//send_int_Uart();
			//TransmitString(commands);
			//extractValue(*commands++);
		}
		if(commands[i] == 'V' && commands[i + 1] == '0') {
     5de:	e0 0f       	add	r30, r16
     5e0:	f1 1f       	adc	r31, r17
     5e2:	80 81       	ld	r24, Z
     5e4:	86 35       	cpi	r24, 0x56	; 86
     5e6:	f1 f4       	brne	.+60     	; 0x624 <decodeCommands+0x19a>
     5e8:	f8 01       	movw	r30, r16
     5ea:	31 96       	adiw	r30, 0x01	; 1
     5ec:	ee 0d       	add	r30, r14
     5ee:	ff 1d       	adc	r31, r15
     5f0:	80 81       	ld	r24, Z
     5f2:	80 33       	cpi	r24, 0x30	; 48
     5f4:	b9 f4       	brne	.+46     	; 0x624 <decodeCommands+0x19a>
     5f6:	0e 5f       	subi	r16, 0xFE	; 254
			i = i + 2;
     5f8:	1f 4f       	sbci	r17, 0xFF	; 255
     5fa:	67 01       	movw	r12, r14
			if(commands[i] == 'Y')
     5fc:	c0 0e       	add	r12, r16
     5fe:	d1 1e       	adc	r13, r17
     600:	d6 01       	movw	r26, r12
     602:	8c 91       	ld	r24, X
     604:	89 35       	cpi	r24, 0x59	; 89
     606:	21 f4       	brne	.+8      	; 0x610 <decodeCommands+0x186>
     608:	d3 01       	movw	r26, r6
			{
				VALVES.openV1();
     60a:	ed 91       	ld	r30, X+
     60c:	fc 91       	ld	r31, X
     60e:	19 95       	eicall
     610:	f6 01       	movw	r30, r12
			}
			if(commands[i] == 'N'){
     612:	80 81       	ld	r24, Z
     614:	8e 34       	cpi	r24, 0x4E	; 78
     616:	31 f4       	brne	.+12     	; 0x624 <decodeCommands+0x19a>
     618:	d3 01       	movw	r26, r6
				VALVES.closeV1();
     61a:	50 96       	adiw	r26, 0x10	; 16
     61c:	ed 91       	ld	r30, X+
     61e:	fc 91       	ld	r31, X
     620:	51 97       	sbiw	r26, 0x11	; 17
     622:	19 95       	eicall
     624:	f7 01       	movw	r30, r14
			}
		}
		if(commands[i] == 'V' && commands[i + 1] == '1') {
     626:	e0 0f       	add	r30, r16
     628:	f1 1f       	adc	r31, r17
     62a:	80 81       	ld	r24, Z
     62c:	86 35       	cpi	r24, 0x56	; 86
     62e:	01 f5       	brne	.+64     	; 0x670 <decodeCommands+0x1e6>
     630:	f8 01       	movw	r30, r16
     632:	31 96       	adiw	r30, 0x01	; 1
     634:	ee 0d       	add	r30, r14
     636:	ff 1d       	adc	r31, r15
     638:	80 81       	ld	r24, Z
     63a:	81 33       	cpi	r24, 0x31	; 49
     63c:	c9 f4       	brne	.+50     	; 0x670 <decodeCommands+0x1e6>
     63e:	0e 5f       	subi	r16, 0xFE	; 254
			i = i + 2;
     640:	1f 4f       	sbci	r17, 0xFF	; 255
     642:	67 01       	movw	r12, r14
			if(commands[i] == 'Y')
     644:	c0 0e       	add	r12, r16
     646:	d1 1e       	adc	r13, r17
     648:	f6 01       	movw	r30, r12
     64a:	80 81       	ld	r24, Z
     64c:	89 35       	cpi	r24, 0x59	; 89
     64e:	31 f4       	brne	.+12     	; 0x65c <decodeCommands+0x1d2>
     650:	d3 01       	movw	r26, r6
			{
				VALVES.openV2();
     652:	12 96       	adiw	r26, 0x02	; 2
     654:	ed 91       	ld	r30, X+
     656:	fc 91       	ld	r31, X
     658:	13 97       	sbiw	r26, 0x03	; 3
     65a:	19 95       	eicall
     65c:	f6 01       	movw	r30, r12
			}
			if(commands[i] == 'N'){
     65e:	80 81       	ld	r24, Z
     660:	8e 34       	cpi	r24, 0x4E	; 78
     662:	31 f4       	brne	.+12     	; 0x670 <decodeCommands+0x1e6>
     664:	d3 01       	movw	r26, r6
				VALVES.closeV2();
     666:	52 96       	adiw	r26, 0x12	; 18
     668:	ed 91       	ld	r30, X+
     66a:	fc 91       	ld	r31, X
     66c:	53 97       	sbiw	r26, 0x13	; 19
     66e:	19 95       	eicall
     670:	f7 01       	movw	r30, r14
			}
		}
		if(commands[i] == 'V' && commands[i + 1] == '2') {
     672:	e0 0f       	add	r30, r16
     674:	f1 1f       	adc	r31, r17
     676:	80 81       	ld	r24, Z
     678:	86 35       	cpi	r24, 0x56	; 86
     67a:	01 f5       	brne	.+64     	; 0x6bc <decodeCommands+0x232>
     67c:	f8 01       	movw	r30, r16
     67e:	31 96       	adiw	r30, 0x01	; 1
     680:	ee 0d       	add	r30, r14
     682:	ff 1d       	adc	r31, r15
     684:	80 81       	ld	r24, Z
     686:	82 33       	cpi	r24, 0x32	; 50
     688:	c9 f4       	brne	.+50     	; 0x6bc <decodeCommands+0x232>
     68a:	0e 5f       	subi	r16, 0xFE	; 254
			i = i + 2;
     68c:	1f 4f       	sbci	r17, 0xFF	; 255
     68e:	67 01       	movw	r12, r14
			if(commands[i] == 'Y')
     690:	c0 0e       	add	r12, r16
     692:	d1 1e       	adc	r13, r17
     694:	f6 01       	movw	r30, r12
     696:	80 81       	ld	r24, Z
     698:	89 35       	cpi	r24, 0x59	; 89
     69a:	31 f4       	brne	.+12     	; 0x6a8 <decodeCommands+0x21e>
     69c:	d3 01       	movw	r26, r6
			{
				VALVES.openV3();
     69e:	14 96       	adiw	r26, 0x04	; 4
     6a0:	ed 91       	ld	r30, X+
     6a2:	fc 91       	ld	r31, X
     6a4:	15 97       	sbiw	r26, 0x05	; 5
     6a6:	19 95       	eicall
     6a8:	f6 01       	movw	r30, r12
			}
			if(commands[i] == 'N'){
     6aa:	80 81       	ld	r24, Z
     6ac:	8e 34       	cpi	r24, 0x4E	; 78
     6ae:	31 f4       	brne	.+12     	; 0x6bc <decodeCommands+0x232>
     6b0:	d3 01       	movw	r26, r6
				VALVES.closeV3();
     6b2:	54 96       	adiw	r26, 0x14	; 20
     6b4:	ed 91       	ld	r30, X+
     6b6:	fc 91       	ld	r31, X
     6b8:	55 97       	sbiw	r26, 0x15	; 21
     6ba:	19 95       	eicall
     6bc:	f7 01       	movw	r30, r14
			}
		}
		if(commands[i] == 'V' && commands[i + 1] == '3') {
     6be:	e0 0f       	add	r30, r16
     6c0:	f1 1f       	adc	r31, r17
     6c2:	80 81       	ld	r24, Z
     6c4:	86 35       	cpi	r24, 0x56	; 86
     6c6:	01 f5       	brne	.+64     	; 0x708 <decodeCommands+0x27e>
     6c8:	f8 01       	movw	r30, r16
     6ca:	31 96       	adiw	r30, 0x01	; 1
     6cc:	ee 0d       	add	r30, r14
     6ce:	ff 1d       	adc	r31, r15
     6d0:	80 81       	ld	r24, Z
     6d2:	83 33       	cpi	r24, 0x33	; 51
     6d4:	c9 f4       	brne	.+50     	; 0x708 <decodeCommands+0x27e>
     6d6:	0e 5f       	subi	r16, 0xFE	; 254
			i = i + 2;
     6d8:	1f 4f       	sbci	r17, 0xFF	; 255
     6da:	67 01       	movw	r12, r14
			if(commands[i] == 'Y')
     6dc:	c0 0e       	add	r12, r16
     6de:	d1 1e       	adc	r13, r17
     6e0:	f6 01       	movw	r30, r12
     6e2:	80 81       	ld	r24, Z
     6e4:	89 35       	cpi	r24, 0x59	; 89
     6e6:	31 f4       	brne	.+12     	; 0x6f4 <decodeCommands+0x26a>
     6e8:	d3 01       	movw	r26, r6
			{
				VALVES.openV4();
     6ea:	16 96       	adiw	r26, 0x06	; 6
     6ec:	ed 91       	ld	r30, X+
     6ee:	fc 91       	ld	r31, X
     6f0:	17 97       	sbiw	r26, 0x07	; 7
     6f2:	19 95       	eicall
     6f4:	f6 01       	movw	r30, r12
			}
			if(commands[i] == 'N'){
     6f6:	80 81       	ld	r24, Z
     6f8:	8e 34       	cpi	r24, 0x4E	; 78
     6fa:	31 f4       	brne	.+12     	; 0x708 <decodeCommands+0x27e>
     6fc:	d3 01       	movw	r26, r6
				VALVES.closeV4();
     6fe:	56 96       	adiw	r26, 0x16	; 22
     700:	ed 91       	ld	r30, X+
     702:	fc 91       	ld	r31, X
     704:	57 97       	sbiw	r26, 0x17	; 23
     706:	19 95       	eicall
     708:	f7 01       	movw	r30, r14
			}
		}
		if(commands[i] == 'V' && commands[i + 1] == '4') {
     70a:	e0 0f       	add	r30, r16
     70c:	f1 1f       	adc	r31, r17
     70e:	80 81       	ld	r24, Z
     710:	86 35       	cpi	r24, 0x56	; 86
     712:	01 f5       	brne	.+64     	; 0x754 <decodeCommands+0x2ca>
     714:	f8 01       	movw	r30, r16
     716:	31 96       	adiw	r30, 0x01	; 1
     718:	ee 0d       	add	r30, r14
     71a:	ff 1d       	adc	r31, r15
     71c:	80 81       	ld	r24, Z
     71e:	84 33       	cpi	r24, 0x34	; 52
     720:	c9 f4       	brne	.+50     	; 0x754 <decodeCommands+0x2ca>
     722:	0e 5f       	subi	r16, 0xFE	; 254
			i = i + 2;
     724:	1f 4f       	sbci	r17, 0xFF	; 255
     726:	67 01       	movw	r12, r14
			if(commands[i] == 'Y')
     728:	c0 0e       	add	r12, r16
     72a:	d1 1e       	adc	r13, r17
     72c:	f6 01       	movw	r30, r12
     72e:	80 81       	ld	r24, Z
     730:	89 35       	cpi	r24, 0x59	; 89
     732:	31 f4       	brne	.+12     	; 0x740 <decodeCommands+0x2b6>
     734:	d3 01       	movw	r26, r6
			{
				VALVES.openV5();
     736:	18 96       	adiw	r26, 0x08	; 8
     738:	ed 91       	ld	r30, X+
     73a:	fc 91       	ld	r31, X
     73c:	19 97       	sbiw	r26, 0x09	; 9
     73e:	19 95       	eicall
     740:	f6 01       	movw	r30, r12
			}
			if(commands[i] == 'N'){
     742:	80 81       	ld	r24, Z
     744:	8e 34       	cpi	r24, 0x4E	; 78
     746:	31 f4       	brne	.+12     	; 0x754 <decodeCommands+0x2ca>
     748:	d3 01       	movw	r26, r6
				VALVES.closeV5();
     74a:	58 96       	adiw	r26, 0x18	; 24
     74c:	ed 91       	ld	r30, X+
     74e:	fc 91       	ld	r31, X
     750:	59 97       	sbiw	r26, 0x19	; 25
     752:	19 95       	eicall
     754:	f7 01       	movw	r30, r14
			}
		}
		if(commands[i] == 'V' && commands[i + 1] == '5') {
     756:	e0 0f       	add	r30, r16
     758:	f1 1f       	adc	r31, r17
     75a:	80 81       	ld	r24, Z
     75c:	86 35       	cpi	r24, 0x56	; 86
     75e:	01 f5       	brne	.+64     	; 0x7a0 <decodeCommands+0x316>
     760:	f8 01       	movw	r30, r16
     762:	31 96       	adiw	r30, 0x01	; 1
     764:	ee 0d       	add	r30, r14
     766:	ff 1d       	adc	r31, r15
     768:	80 81       	ld	r24, Z
     76a:	85 33       	cpi	r24, 0x35	; 53
     76c:	c9 f4       	brne	.+50     	; 0x7a0 <decodeCommands+0x316>
     76e:	0e 5f       	subi	r16, 0xFE	; 254
			i = i + 2;
     770:	1f 4f       	sbci	r17, 0xFF	; 255
     772:	67 01       	movw	r12, r14
			if(commands[i] == 'Y')
     774:	c0 0e       	add	r12, r16
     776:	d1 1e       	adc	r13, r17
     778:	f6 01       	movw	r30, r12
     77a:	80 81       	ld	r24, Z
     77c:	89 35       	cpi	r24, 0x59	; 89
     77e:	31 f4       	brne	.+12     	; 0x78c <decodeCommands+0x302>
     780:	d3 01       	movw	r26, r6
			{
				VALVES.openV6();
     782:	1a 96       	adiw	r26, 0x0a	; 10
     784:	ed 91       	ld	r30, X+
     786:	fc 91       	ld	r31, X
     788:	1b 97       	sbiw	r26, 0x0b	; 11
     78a:	19 95       	eicall
     78c:	f6 01       	movw	r30, r12
			}
			if(commands[i] == 'N'){
     78e:	80 81       	ld	r24, Z
     790:	8e 34       	cpi	r24, 0x4E	; 78
     792:	31 f4       	brne	.+12     	; 0x7a0 <decodeCommands+0x316>
     794:	d3 01       	movw	r26, r6
				VALVES.closeV6();
     796:	5a 96       	adiw	r26, 0x1a	; 26
     798:	ed 91       	ld	r30, X+
     79a:	fc 91       	ld	r31, X
     79c:	5b 97       	sbiw	r26, 0x1b	; 27
     79e:	19 95       	eicall
     7a0:	f7 01       	movw	r30, r14
			}
		}
		if(commands[i] == 'V' && commands[i + 1] == '6') {
     7a2:	e0 0f       	add	r30, r16
     7a4:	f1 1f       	adc	r31, r17
     7a6:	80 81       	ld	r24, Z
     7a8:	86 35       	cpi	r24, 0x56	; 86
     7aa:	b1 f4       	brne	.+44     	; 0x7d8 <decodeCommands+0x34e>
     7ac:	f8 01       	movw	r30, r16
     7ae:	31 96       	adiw	r30, 0x01	; 1
     7b0:	ee 0d       	add	r30, r14
     7b2:	ff 1d       	adc	r31, r15
     7b4:	80 81       	ld	r24, Z
     7b6:	86 33       	cpi	r24, 0x36	; 54
     7b8:	79 f4       	brne	.+30     	; 0x7d8 <decodeCommands+0x34e>
     7ba:	0e 5f       	subi	r16, 0xFE	; 254
			i = i + 2;
     7bc:	1f 4f       	sbci	r17, 0xFF	; 255
     7be:	67 01       	movw	r12, r14
			if(commands[i] == 'Y')
     7c0:	c0 0e       	add	r12, r16
     7c2:	d1 1e       	adc	r13, r17
     7c4:	f6 01       	movw	r30, r12
     7c6:	80 81       	ld	r24, Z
     7c8:	89 35       	cpi	r24, 0x59	; 89
     7ca:	09 f4       	brne	.+2      	; 0x7ce <decodeCommands+0x344>
			{
				openValve_0();
     7cc:	ce d2       	rcall	.+1436   	; 0xd6a <openValve_0>
     7ce:	d6 01       	movw	r26, r12
			}
			if(commands[i] == 'N'){
     7d0:	8c 91       	ld	r24, X
     7d2:	8e 34       	cpi	r24, 0x4E	; 78
     7d4:	09 f4       	brne	.+2      	; 0x7d8 <decodeCommands+0x34e>
				closeValve_0();
     7d6:	c0 d2       	rcall	.+1408   	; 0xd58 <closeValve_0>
     7d8:	f7 01       	movw	r30, r14
			}
		}
		if(commands[i] == 'V' && commands[i + 1] == '7') {
     7da:	e0 0f       	add	r30, r16
     7dc:	f1 1f       	adc	r31, r17
     7de:	80 81       	ld	r24, Z
     7e0:	86 35       	cpi	r24, 0x56	; 86
     7e2:	b1 f4       	brne	.+44     	; 0x810 <decodeCommands+0x386>
     7e4:	f8 01       	movw	r30, r16
     7e6:	31 96       	adiw	r30, 0x01	; 1
     7e8:	ee 0d       	add	r30, r14
     7ea:	ff 1d       	adc	r31, r15
     7ec:	80 81       	ld	r24, Z
     7ee:	87 33       	cpi	r24, 0x37	; 55
     7f0:	79 f4       	brne	.+30     	; 0x810 <decodeCommands+0x386>
     7f2:	0e 5f       	subi	r16, 0xFE	; 254
			i = i + 2;
     7f4:	1f 4f       	sbci	r17, 0xFF	; 255
     7f6:	67 01       	movw	r12, r14
			if(commands[i] == 'Y')
     7f8:	c0 0e       	add	r12, r16
     7fa:	d1 1e       	adc	r13, r17
     7fc:	f6 01       	movw	r30, r12
     7fe:	80 81       	ld	r24, Z
     800:	89 35       	cpi	r24, 0x59	; 89
     802:	09 f4       	brne	.+2      	; 0x806 <decodeCommands+0x37c>
			{
				openValve_1();
     804:	e2 d2       	rcall	.+1476   	; 0xdca <openValve_1>
			}
			if(commands[i] == 'N'){
     806:	d6 01       	movw	r26, r12
     808:	8c 91       	ld	r24, X
     80a:	8e 34       	cpi	r24, 0x4E	; 78
     80c:	09 f4       	brne	.+2      	; 0x810 <decodeCommands+0x386>
				closeValve_1();
     80e:	d4 d2       	rcall	.+1448   	; 0xdb8 <closeValve_1>
     810:	f7 01       	movw	r30, r14
			}
		}
		if(commands[i] == 'V' && commands[i + 1] == '8') {
     812:	e0 0f       	add	r30, r16
     814:	f1 1f       	adc	r31, r17
     816:	80 81       	ld	r24, Z
     818:	86 35       	cpi	r24, 0x56	; 86
     81a:	b1 f4       	brne	.+44     	; 0x848 <decodeCommands+0x3be>
     81c:	f8 01       	movw	r30, r16
     81e:	31 96       	adiw	r30, 0x01	; 1
     820:	ee 0d       	add	r30, r14
     822:	ff 1d       	adc	r31, r15
     824:	80 81       	ld	r24, Z
     826:	88 33       	cpi	r24, 0x38	; 56
     828:	79 f4       	brne	.+30     	; 0x848 <decodeCommands+0x3be>
     82a:	0e 5f       	subi	r16, 0xFE	; 254
			i = i + 2;
     82c:	1f 4f       	sbci	r17, 0xFF	; 255
     82e:	67 01       	movw	r12, r14
			if(commands[i] == 'Y')
     830:	c0 0e       	add	r12, r16
     832:	d1 1e       	adc	r13, r17
     834:	f6 01       	movw	r30, r12
     836:	80 81       	ld	r24, Z
     838:	89 35       	cpi	r24, 0x59	; 89
			{
				openValve_2();
     83a:	09 f4       	brne	.+2      	; 0x83e <decodeCommands+0x3b4>
     83c:	f8 d2       	rcall	.+1520   	; 0xe2e <openValve_2>
			}
			if(commands[i] == 'N'){
     83e:	d6 01       	movw	r26, r12
     840:	8c 91       	ld	r24, X
     842:	8e 34       	cpi	r24, 0x4E	; 78
     844:	09 f4       	brne	.+2      	; 0x848 <decodeCommands+0x3be>
				closeValve_2();
     846:	e7 d2       	rcall	.+1486   	; 0xe16 <closeValve_2>
     848:	0f 5f       	subi	r16, 0xFF	; 255
			}
		}
		i++;
     84a:	1f 4f       	sbci	r17, 0xFF	; 255
     84c:	67 01       	movw	r12, r14
{
	unsigned int i = 0;
	unsigned int j = 0;
	unsigned char tempBuf[10];
	unsigned int extractedValue;
	while(commands[i] != '\n') {
     84e:	c0 0e       	add	r12, r16
     850:	d1 1e       	adc	r13, r17
     852:	f6 01       	movw	r30, r12
     854:	80 81       	ld	r24, Z
     856:	8a 30       	cpi	r24, 0x0A	; 10
     858:	09 f0       	breq	.+2      	; 0x85c <decodeCommands+0x3d2>
     85a:	4f ce       	rjmp	.-866    	; 0x4fa <decodeCommands+0x70>
     85c:	2c 96       	adiw	r28, 0x0c	; 12
				closeValve_2();
			}
		}
		i++;
	}
}
     85e:	0f b6       	in	r0, 0x3f	; 63
     860:	f8 94       	cli
     862:	de bf       	out	0x3e, r29	; 62
     864:	0f be       	out	0x3f, r0	; 63
     866:	cd bf       	out	0x3d, r28	; 61
     868:	df 91       	pop	r29
     86a:	cf 91       	pop	r28
     86c:	1f 91       	pop	r17
     86e:	0f 91       	pop	r16
     870:	ff 90       	pop	r15
     872:	ef 90       	pop	r14
     874:	df 90       	pop	r13
     876:	cf 90       	pop	r12
     878:	bf 90       	pop	r11
     87a:	af 90       	pop	r10
     87c:	9f 90       	pop	r9
     87e:	8f 90       	pop	r8
     880:	7f 90       	pop	r7
     882:	6f 90       	pop	r6
     884:	5f 90       	pop	r5
     886:	4f 90       	pop	r4
     888:	3f 90       	pop	r3
     88a:	2f 90       	pop	r2
     88c:	08 95       	ret

0000088e <main>:
     88e:	09 9a       	sbi	0x01, 1	; 1

int main(void)
{
	
	DDRA |= (1 << PA1);
	DDRF |= (1 << DDF2);
     890:	82 9a       	sbi	0x10, 2	; 16
	
	DDRH |= (1 << DDH4);
     892:	e1 e0       	ldi	r30, 0x01	; 1
     894:	f1 e0       	ldi	r31, 0x01	; 1
     896:	80 81       	ld	r24, Z
     898:	80 61       	ori	r24, 0x10	; 16
     89a:	80 83       	st	Z, r24
	
	
	
 	TIMSK0 |= (1 << TOIE0);
     89c:	ee e6       	ldi	r30, 0x6E	; 110
     89e:	f0 e0       	ldi	r31, 0x00	; 0
     8a0:	80 81       	ld	r24, Z
     8a2:	81 60       	ori	r24, 0x01	; 1
     8a4:	80 83       	st	Z, r24
 	TCCR0B |= (1 << CS02) | (1 << CS00);
     8a6:	85 b5       	in	r24, 0x25	; 37
     8a8:	85 60       	ori	r24, 0x05	; 5
     8aa:	85 bd       	out	0x25, r24	; 37

	//TCNT0 = 130;
	////
	EICRA |= (0 << ISC31) | (1 << ISC30);
     8ac:	e9 e6       	ldi	r30, 0x69	; 105
     8ae:	f0 e0       	ldi	r31, 0x00	; 0
     8b0:	80 81       	ld	r24, Z
     8b2:	80 64       	ori	r24, 0x40	; 64
     8b4:	80 83       	st	Z, r24
	EIMSK |= (1 << INT3);
     8b6:	eb 9a       	sbi	0x1d, 3	; 29

	sei();
     8b8:	78 94       	sei
	
 	initializeTimerCounter_5();
     8ba:	d8 dd       	rcall	.-1104   	; 0x46c <initializeTimerCounter_5>
 	InitializeServo_0();
     8bc:	5e d2       	rcall	.+1212   	; 0xd7a <InitializeServo_0>
 	InitializeServo_1();
     8be:	8d d2       	rcall	.+1306   	; 0xdda <InitializeServo_1>
     8c0:	c1 d2       	rcall	.+1410   	; 0xe44 <InitializeServo_2>
 	InitializeServo_2();
     8c2:	e1 2c       	mov	r14, r1
     8c4:	00 e0       	ldi	r16, 0x00	; 0
 	InitializeUART0(500000, 0, 8, 0, 0);
     8c6:	28 e0       	ldi	r18, 0x08	; 8
     8c8:	40 e0       	ldi	r20, 0x00	; 0
     8ca:	60 e2       	ldi	r22, 0x20	; 32
     8cc:	71 ea       	ldi	r23, 0xA1	; 161
     8ce:	87 e0       	ldi	r24, 0x07	; 7
     8d0:	90 e0       	ldi	r25, 0x00	; 0
     8d2:	77 dc       	rcall	.-1810   	; 0x1c2 <InitializeUART0>
     8d4:	e8 e0       	ldi	r30, 0x08	; 8
     8d6:	f2 e0       	ldi	r31, 0x02	; 2
 	InitializePWM_4C(PWM4C.pwmFrequency, PWM4C.pwmValue);
     8d8:	22 81       	ldd	r18, Z+2	; 0x02
     8da:	33 81       	ldd	r19, Z+3	; 0x03
     8dc:	44 81       	ldd	r20, Z+4	; 0x04
     8de:	55 81       	ldd	r21, Z+5	; 0x05
     8e0:	60 81       	ld	r22, Z
     8e2:	71 81       	ldd	r23, Z+1	; 0x01
     8e4:	80 e0       	ldi	r24, 0x00	; 0
     8e6:	90 e0       	ldi	r25, 0x00	; 0
     8e8:	fb dc       	rcall	.-1546   	; 0x2e0 <InitializePWM_4C>
     8ea:	a8 d3       	rcall	.+1872   	; 0x103c <initValves>
	//TCCR4B |= ( 1 << WGM43) | ( 1 << WGM42 ) ;
	//TCCR4B |= ( 1 << CS42 ) | ( 1 << CS40 ); 
	//ICR4 = (uint16_t) (F_CPU/1000 / 1024 + 1);
	//OCR4A=3;

	initValves();
     8ec:	ff cf       	rjmp	.-2      	; 0x8ec <main+0x5e>

000008ee <__vector_4>:
     8ee:	1f 92       	push	r1
     8f0:	0f 92       	push	r0
	//}
//}


ISR(INT3_vect)
{
     8f2:	0f b6       	in	r0, 0x3f	; 63
     8f4:	0f 92       	push	r0
     8f6:	11 24       	eor	r1, r1
     8f8:	0b b6       	in	r0, 0x3b	; 59
     8fa:	0f 92       	push	r0
     8fc:	cf 92       	push	r12
     8fe:	df 92       	push	r13
     900:	ef 92       	push	r14
     902:	ff 92       	push	r15
     904:	0f 93       	push	r16
     906:	1f 93       	push	r17
     908:	2f 93       	push	r18
     90a:	3f 93       	push	r19
     90c:	4f 93       	push	r20
     90e:	5f 93       	push	r21
     910:	6f 93       	push	r22
     912:	7f 93       	push	r23
     914:	8f 93       	push	r24
     916:	9f 93       	push	r25
     918:	af 93       	push	r26
     91a:	bf 93       	push	r27
     91c:	cf 93       	push	r28
     91e:	df 93       	push	r29
     920:	ef 93       	push	r30
     922:	ff 93       	push	r31
	
	//PORTH ^= (1 << PH4);
	RPM_1.counter++;
     924:	e0 e0       	ldi	r30, 0x00	; 0
     926:	f2 e0       	ldi	r31, 0x02	; 2
     928:	84 81       	ldd	r24, Z+4	; 0x04
     92a:	95 81       	ldd	r25, Z+5	; 0x05
     92c:	01 96       	adiw	r24, 0x01	; 1
     92e:	95 83       	std	Z+5, r25	; 0x05
     930:	84 83       	std	Z+4, r24	; 0x04
	if(RPM_1.counter >= RPM_1.interruptionCounter) {
     932:	24 81       	ldd	r18, Z+4	; 0x04
     934:	35 81       	ldd	r19, Z+5	; 0x05
     936:	86 81       	ldd	r24, Z+6	; 0x06
     938:	97 81       	ldd	r25, Z+7	; 0x07
     93a:	28 17       	cp	r18, r24
     93c:	39 07       	cpc	r19, r25
     93e:	e0 f1       	brcs	.+120    	; 0x9b8 <__vector_4+0xca>
		//send_int_Uart(Timer5_1.counter);
		Timer5_1.totalTicks += Timer5_1.counter * 64000 + TCNT5;
     940:	c7 e3       	ldi	r28, 0x37	; 55
     942:	d2 e0       	ldi	r29, 0x02	; 2
     944:	28 81       	ld	r18, Y
     946:	39 81       	ldd	r19, Y+1	; 0x01
     948:	4a 81       	ldd	r20, Y+2	; 0x02
     94a:	5b 81       	ldd	r21, Y+3	; 0x03
     94c:	04 e2       	ldi	r16, 0x24	; 36
     94e:	11 e0       	ldi	r17, 0x01	; 1
     950:	d8 01       	movw	r26, r16
     952:	ed 91       	ld	r30, X+
     954:	fc 91       	ld	r31, X
     956:	c8 88       	ldd	r12, Y+16	; 0x10
     958:	d9 88       	ldd	r13, Y+17	; 0x11
     95a:	ea 88       	ldd	r14, Y+18	; 0x12
     95c:	fb 88       	ldd	r15, Y+19	; 0x13
     95e:	a0 e0       	ldi	r26, 0x00	; 0
     960:	ba ef       	ldi	r27, 0xFA	; 250
     962:	b9 d5       	rcall	.+2930   	; 0x14d6 <__muluhisi3>
     964:	dc 01       	movw	r26, r24
     966:	cb 01       	movw	r24, r22
     968:	8e 0f       	add	r24, r30
     96a:	9f 1f       	adc	r25, r31
     96c:	a1 1d       	adc	r26, r1
     96e:	b1 1d       	adc	r27, r1
     970:	c8 0e       	add	r12, r24
     972:	d9 1e       	adc	r13, r25
     974:	ea 1e       	adc	r14, r26
     976:	fb 1e       	adc	r15, r27
     978:	c8 8a       	std	Y+16, r12	; 0x10
     97a:	d9 8a       	std	Y+17, r13	; 0x11
     97c:	ea 8a       	std	Y+18, r14	; 0x12
     97e:	fb 8a       	std	Y+19, r15	; 0x13
		multiply by 60 - per minute
		division by 4 - number of poles on engine - 8 => real revolution = 4 magnetic field revolutions
										(so, hall sensors will be detect it 4 times per real(mechanical) revolution) 
		division by 4 - interruption works on rise and fall => 10 * 60 / 4 / 2 = 75
		\****************/
		RPM_1.currentRPM = F_CPU * 75 /* 10 */ / Timer5_1.totalTicks /* * 60 / 4 / 2 */ ;
     980:	28 89       	ldd	r18, Y+16	; 0x10
     982:	39 89       	ldd	r19, Y+17	; 0x11
     984:	4a 89       	ldd	r20, Y+18	; 0x12
     986:	5b 89       	ldd	r21, Y+19	; 0x13
     988:	60 e0       	ldi	r22, 0x00	; 0
     98a:	7c e8       	ldi	r23, 0x8C	; 140
     98c:	86 e8       	ldi	r24, 0x86	; 134
     98e:	97 e4       	ldi	r25, 0x47	; 71
     990:	80 d5       	rcall	.+2816   	; 0x1492 <__udivmodsi4>
     992:	e0 e0       	ldi	r30, 0x00	; 0
     994:	f2 e0       	ldi	r31, 0x02	; 2
     996:	31 83       	std	Z+1, r19	; 0x01
     998:	20 83       	st	Z, r18
		RPM_1.counter = 0;
     99a:	15 82       	std	Z+5, r1	; 0x05
     99c:	14 82       	std	Z+4, r1	; 0x04
		Timer5_1.counter = 0;
     99e:	18 82       	st	Y, r1
     9a0:	19 82       	std	Y+1, r1	; 0x01
     9a2:	1a 82       	std	Y+2, r1	; 0x02
     9a4:	1b 82       	std	Y+3, r1	; 0x03
		Timer5_1.totalTicks = 0;
     9a6:	18 8a       	std	Y+16, r1	; 0x10
     9a8:	19 8a       	std	Y+17, r1	; 0x11
     9aa:	1a 8a       	std	Y+18, r1	; 0x12
     9ac:	1b 8a       	std	Y+19, r1	; 0x13
		TCNT5 = 1535;
     9ae:	8f ef       	ldi	r24, 0xFF	; 255
     9b0:	95 e0       	ldi	r25, 0x05	; 5
     9b2:	f8 01       	movw	r30, r16
     9b4:	91 83       	std	Z+1, r25	; 0x01
     9b6:	80 83       	st	Z, r24
	}
	
}
     9b8:	ff 91       	pop	r31
     9ba:	ef 91       	pop	r30
     9bc:	df 91       	pop	r29
     9be:	cf 91       	pop	r28
     9c0:	bf 91       	pop	r27
     9c2:	af 91       	pop	r26
     9c4:	9f 91       	pop	r25
     9c6:	8f 91       	pop	r24
     9c8:	7f 91       	pop	r23
     9ca:	6f 91       	pop	r22
     9cc:	5f 91       	pop	r21
     9ce:	4f 91       	pop	r20
     9d0:	3f 91       	pop	r19
     9d2:	2f 91       	pop	r18
     9d4:	1f 91       	pop	r17
     9d6:	0f 91       	pop	r16
     9d8:	ff 90       	pop	r15
     9da:	ef 90       	pop	r14
     9dc:	df 90       	pop	r13
     9de:	cf 90       	pop	r12
     9e0:	0f 90       	pop	r0
     9e2:	0b be       	out	0x3b, r0	; 59
     9e4:	0f 90       	pop	r0
     9e6:	0f be       	out	0x3f, r0	; 63
     9e8:	0f 90       	pop	r0
     9ea:	1f 90       	pop	r1
     9ec:	18 95       	reti

000009ee <__vector_50>:

ISR(TIMER5_OVF_vect)
{
     9ee:	1f 92       	push	r1
     9f0:	0f 92       	push	r0
     9f2:	0f b6       	in	r0, 0x3f	; 63
     9f4:	0f 92       	push	r0
     9f6:	11 24       	eor	r1, r1
     9f8:	0b b6       	in	r0, 0x3b	; 59
     9fa:	0f 92       	push	r0
     9fc:	2f 93       	push	r18
     9fe:	3f 93       	push	r19
     a00:	4f 93       	push	r20
     a02:	5f 93       	push	r21
     a04:	6f 93       	push	r22
     a06:	7f 93       	push	r23
     a08:	8f 93       	push	r24
     a0a:	9f 93       	push	r25
     a0c:	af 93       	push	r26
     a0e:	bf 93       	push	r27
     a10:	ef 93       	push	r30
     a12:	ff 93       	push	r31
	//PORTA ^= (1<<PA1);
	if(sendinComands == 1)
     a14:	80 91 36 02 	lds	r24, 0x0236	; 0x800236 <sendinComands>
     a18:	81 30       	cpi	r24, 0x01	; 1
     a1a:	29 f4       	brne	.+10     	; 0xa26 <__vector_50+0x38>
	{
		decodeCommands(UART0.data_in);
     a1c:	8b e4       	ldi	r24, 0x4B	; 75
     a1e:	92 e0       	ldi	r25, 0x02	; 2
     a20:	34 dd       	rcall	.-1432   	; 0x48a <decodeCommands>
		sendinComands = 0;
     a22:	10 92 36 02 	sts	0x0236, r1	; 0x800236 <sendinComands>
	}
	//TCNT5_startingValue(1535);
	TCNT5 = 1535;
     a26:	8f ef       	ldi	r24, 0xFF	; 255
     a28:	95 e0       	ldi	r25, 0x05	; 5
     a2a:	90 93 25 01 	sts	0x0125, r25	; 0x800125 <__TEXT_REGION_LENGTH__+0x700125>
     a2e:	80 93 24 01 	sts	0x0124, r24	; 0x800124 <__TEXT_REGION_LENGTH__+0x700124>
	Timer5_1.counter++;
     a32:	e7 e3       	ldi	r30, 0x37	; 55
     a34:	f2 e0       	ldi	r31, 0x02	; 2
     a36:	80 81       	ld	r24, Z
     a38:	91 81       	ldd	r25, Z+1	; 0x01
     a3a:	a2 81       	ldd	r26, Z+2	; 0x02
     a3c:	b3 81       	ldd	r27, Z+3	; 0x03
     a3e:	01 96       	adiw	r24, 0x01	; 1
     a40:	a1 1d       	adc	r26, r1
     a42:	b1 1d       	adc	r27, r1
     a44:	80 83       	st	Z, r24
     a46:	91 83       	std	Z+1, r25	; 0x01
     a48:	a2 83       	std	Z+2, r26	; 0x02
     a4a:	b3 83       	std	Z+3, r27	; 0x03
}
     a4c:	ff 91       	pop	r31
     a4e:	ef 91       	pop	r30
     a50:	bf 91       	pop	r27
     a52:	af 91       	pop	r26
     a54:	9f 91       	pop	r25
     a56:	8f 91       	pop	r24
     a58:	7f 91       	pop	r23
     a5a:	6f 91       	pop	r22
     a5c:	5f 91       	pop	r21
     a5e:	4f 91       	pop	r20
     a60:	3f 91       	pop	r19
     a62:	2f 91       	pop	r18
     a64:	0f 90       	pop	r0
     a66:	0b be       	out	0x3b, r0	; 59
     a68:	0f 90       	pop	r0
     a6a:	0f be       	out	0x3f, r0	; 63
     a6c:	0f 90       	pop	r0
     a6e:	1f 90       	pop	r1
     a70:	18 95       	reti

00000a72 <__vector_23>:

int connected = 0;
unsigned int countsec = 0;
ISR(TIMER0_OVF_vect){
     a72:	1f 92       	push	r1
     a74:	0f 92       	push	r0
     a76:	0f b6       	in	r0, 0x3f	; 63
     a78:	0f 92       	push	r0
     a7a:	11 24       	eor	r1, r1
     a7c:	0b b6       	in	r0, 0x3b	; 59
     a7e:	0f 92       	push	r0
     a80:	cf 92       	push	r12
     a82:	df 92       	push	r13
     a84:	ef 92       	push	r14
     a86:	ff 92       	push	r15
     a88:	0f 93       	push	r16
     a8a:	1f 93       	push	r17
     a8c:	2f 93       	push	r18
     a8e:	3f 93       	push	r19
     a90:	4f 93       	push	r20
     a92:	5f 93       	push	r21
     a94:	6f 93       	push	r22
     a96:	7f 93       	push	r23
     a98:	8f 93       	push	r24
     a9a:	9f 93       	push	r25
     a9c:	af 93       	push	r26
     a9e:	bf 93       	push	r27
     aa0:	cf 93       	push	r28
     aa2:	df 93       	push	r29
     aa4:	ef 93       	push	r30
     aa6:	ff 93       	push	r31
	//PORTH ^= (1 << PH4);

	TCNT0 = 131;
     aa8:	83 e8       	ldi	r24, 0x83	; 131
     aaa:	86 bd       	out	0x26, r24	; 38


	if(++countsec >= 125 && connected == 0){
     aac:	80 91 32 02 	lds	r24, 0x0232	; 0x800232 <__data_end>
     ab0:	90 91 33 02 	lds	r25, 0x0233	; 0x800233 <__data_end+0x1>
     ab4:	01 96       	adiw	r24, 0x01	; 1
     ab6:	90 93 33 02 	sts	0x0233, r25	; 0x800233 <__data_end+0x1>
     aba:	80 93 32 02 	sts	0x0232, r24	; 0x800232 <__data_end>
     abe:	8d 37       	cpi	r24, 0x7D	; 125
     ac0:	91 05       	cpc	r25, r1
     ac2:	98 f0       	brcs	.+38     	; 0xaea <__vector_23+0x78>
     ac4:	80 91 34 02 	lds	r24, 0x0234	; 0x800234 <connected>
     ac8:	90 91 35 02 	lds	r25, 0x0235	; 0x800235 <connected+0x1>
     acc:	89 2b       	or	r24, r25
     ace:	69 f4       	brne	.+26     	; 0xaea <__vector_23+0x78>
		//send_int_Uart(RPM_1.currentRPM);
		TransmitString("CONNECTED");
     ad0:	84 e2       	ldi	r24, 0x24	; 36
     ad2:	92 e0       	ldi	r25, 0x02	; 2
     ad4:	3b db       	rcall	.-2442   	; 0x14c <TransmitString>
		countsec=0;
     ad6:	10 92 33 02 	sts	0x0233, r1	; 0x800233 <__data_end+0x1>
     ada:	10 92 32 02 	sts	0x0232, r1	; 0x800232 <__data_end>
		connected=1;
     ade:	81 e0       	ldi	r24, 0x01	; 1
     ae0:	90 e0       	ldi	r25, 0x00	; 0
     ae2:	90 93 35 02 	sts	0x0235, r25	; 0x800235 <connected+0x1>
     ae6:	80 93 34 02 	sts	0x0234, r24	; 0x800234 <connected>
	}
	

	if(++Timer5_1.seconds >= 25 && connected == 1){
     aea:	e7 e3       	ldi	r30, 0x37	; 55
     aec:	f2 e0       	ldi	r31, 0x02	; 2
     aee:	84 85       	ldd	r24, Z+12	; 0x0c
     af0:	95 85       	ldd	r25, Z+13	; 0x0d
     af2:	a6 85       	ldd	r26, Z+14	; 0x0e
     af4:	b7 85       	ldd	r27, Z+15	; 0x0f
     af6:	01 96       	adiw	r24, 0x01	; 1
     af8:	a1 1d       	adc	r26, r1
     afa:	b1 1d       	adc	r27, r1
     afc:	84 87       	std	Z+12, r24	; 0x0c
     afe:	95 87       	std	Z+13, r25	; 0x0d
     b00:	a6 87       	std	Z+14, r26	; 0x0e
     b02:	b7 87       	std	Z+15, r27	; 0x0f
     b04:	49 97       	sbiw	r24, 0x19	; 25
     b06:	a1 05       	cpc	r26, r1
     b08:	b1 05       	cpc	r27, r1
     b0a:	08 f4       	brcc	.+2      	; 0xb0e <__vector_23+0x9c>
     b0c:	bb c0       	rjmp	.+374    	; 0xc84 <__vector_23+0x212>
     b0e:	80 91 34 02 	lds	r24, 0x0234	; 0x800234 <connected>
     b12:	90 91 35 02 	lds	r25, 0x0235	; 0x800235 <connected+0x1>
     b16:	01 97       	sbiw	r24, 0x01	; 1
     b18:	09 f0       	breq	.+2      	; 0xb1c <__vector_23+0xaa>
     b1a:	b4 c0       	rjmp	.+360    	; 0xc84 <__vector_23+0x212>
		//TransmitString("CON");
		Timer5_1.seconds = 0;
     b1c:	10 92 43 02 	sts	0x0243, r1	; 0x800243 <Timer5_1+0xc>
     b20:	10 92 44 02 	sts	0x0244, r1	; 0x800244 <Timer5_1+0xd>
     b24:	10 92 45 02 	sts	0x0245, r1	; 0x800245 <Timer5_1+0xe>
     b28:	10 92 46 02 	sts	0x0246, r1	; 0x800246 <Timer5_1+0xf>
		if(RPM_1.setRPM <= 10 && RPM_1.currentRPM != 0){
     b2c:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <RPM_1+0x2>
     b30:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <RPM_1+0x3>
     b34:	0b 97       	sbiw	r24, 0x0b	; 11
     b36:	d4 f4       	brge	.+52     	; 0xb6c <__vector_23+0xfa>
     b38:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <RPM_1>
     b3c:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <RPM_1+0x1>
     b40:	89 2b       	or	r24, r25
     b42:	a1 f0       	breq	.+40     	; 0xb6c <__vector_23+0xfa>
			send_int_Uart("COM");
     b44:	8e e2       	ldi	r24, 0x2E	; 46
     b46:	92 e0       	ldi	r25, 0x02	; 2
     b48:	10 db       	rcall	.-2528   	; 0x16a <send_int_Uart>
			setPwm(0);
     b4a:	60 e0       	ldi	r22, 0x00	; 0
     b4c:	70 e0       	ldi	r23, 0x00	; 0
     b4e:	cb 01       	movw	r24, r22
     b50:	83 db       	rcall	.-2298   	; 0x258 <setPwm>
			RPM_1.currentRPM = 0;
     b52:	10 92 01 02 	sts	0x0201, r1	; 0x800201 <RPM_1+0x1>
     b56:	10 92 00 02 	sts	0x0200, r1	; 0x800200 <RPM_1>
			PWM4C.pwmValue = 0;
     b5a:	10 92 0a 02 	sts	0x020A, r1	; 0x80020a <PWM4C+0x2>
     b5e:	10 92 0b 02 	sts	0x020B, r1	; 0x80020b <PWM4C+0x3>
     b62:	10 92 0c 02 	sts	0x020C, r1	; 0x80020c <PWM4C+0x4>
     b66:	10 92 0d 02 	sts	0x020D, r1	; 0x80020d <PWM4C+0x5>
     b6a:	8c c0       	rjmp	.+280    	; 0xc84 <__vector_23+0x212>
		} else if (RPM_1.setRPM > 10) {
     b6c:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <RPM_1+0x2>
     b70:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <RPM_1+0x3>
     b74:	0b 97       	sbiw	r24, 0x0b	; 11
     b76:	0c f4       	brge	.+2      	; 0xb7a <__vector_23+0x108>
     b78:	85 c0       	rjmp	.+266    	; 0xc84 <__vector_23+0x212>
			
			send_int_Uart(RPM_1.currentRPM);
     b7a:	c0 e0       	ldi	r28, 0x00	; 0
     b7c:	d2 e0       	ldi	r29, 0x02	; 2
     b7e:	88 81       	ld	r24, Y
     b80:	99 81       	ldd	r25, Y+1	; 0x01
     b82:	f3 da       	rcall	.-2586   	; 0x16a <send_int_Uart>
		
			setPwm(PWM4C.pwmValue += (RPM_1.setRPM - RPM_1.currentRPM) * 0.001);
     b84:	6a 81       	ldd	r22, Y+2	; 0x02
     b86:	7b 81       	ldd	r23, Y+3	; 0x03
     b88:	88 81       	ld	r24, Y
     b8a:	99 81       	ldd	r25, Y+1	; 0x01
     b8c:	08 e0       	ldi	r16, 0x08	; 8
     b8e:	12 e0       	ldi	r17, 0x02	; 2
     b90:	f8 01       	movw	r30, r16
     b92:	c2 80       	ldd	r12, Z+2	; 0x02
     b94:	d3 80       	ldd	r13, Z+3	; 0x03
     b96:	e4 80       	ldd	r14, Z+4	; 0x04
     b98:	f5 80       	ldd	r15, Z+5	; 0x05
     b9a:	68 1b       	sub	r22, r24
     b9c:	79 0b       	sbc	r23, r25
     b9e:	07 2e       	mov	r0, r23
     ba0:	00 0c       	add	r0, r0
     ba2:	88 0b       	sbc	r24, r24
     ba4:	99 0b       	sbc	r25, r25
     ba6:	24 d3       	rcall	.+1608   	; 0x11f0 <__floatsisf>
     ba8:	2f e6       	ldi	r18, 0x6F	; 111
     baa:	32 e1       	ldi	r19, 0x12	; 18
     bac:	43 e8       	ldi	r20, 0x83	; 131
     bae:	5a e3       	ldi	r21, 0x3A	; 58
     bb0:	0d d4       	rcall	.+2074   	; 0x13cc <__mulsf3>
     bb2:	a7 01       	movw	r20, r14
     bb4:	96 01       	movw	r18, r12
     bb6:	86 d2       	rcall	.+1292   	; 0x10c4 <__addsf3>
     bb8:	f8 01       	movw	r30, r16
     bba:	62 83       	std	Z+2, r22	; 0x02
     bbc:	73 83       	std	Z+3, r23	; 0x03
     bbe:	84 83       	std	Z+4, r24	; 0x04
     bc0:	95 83       	std	Z+5, r25	; 0x05
     bc2:	4a db       	rcall	.-2412   	; 0x258 <setPwm>
			
			if (RPM_1.currentRPM < RPM_1.setRPM)
     bc4:	28 81       	ld	r18, Y
     bc6:	39 81       	ldd	r19, Y+1	; 0x01
     bc8:	8a 81       	ldd	r24, Y+2	; 0x02
     bca:	9b 81       	ldd	r25, Y+3	; 0x03
     bcc:	28 17       	cp	r18, r24
     bce:	39 07       	cpc	r19, r25
     bd0:	5c f5       	brge	.+86     	; 0xc28 <__vector_23+0x1b6>
			{
				setPwm(PWM4C.pwmValue += (abs(RPM_1.setRPM - RPM_1.currentRPM)) * 0.0005);
     bd2:	8a 81       	ldd	r24, Y+2	; 0x02
     bd4:	9b 81       	ldd	r25, Y+3	; 0x03
     bd6:	28 81       	ld	r18, Y
     bd8:	39 81       	ldd	r19, Y+1	; 0x01
     bda:	c0 90 0a 02 	lds	r12, 0x020A	; 0x80020a <PWM4C+0x2>
     bde:	d0 90 0b 02 	lds	r13, 0x020B	; 0x80020b <PWM4C+0x3>
     be2:	e0 90 0c 02 	lds	r14, 0x020C	; 0x80020c <PWM4C+0x4>
     be6:	f0 90 0d 02 	lds	r15, 0x020D	; 0x80020d <PWM4C+0x5>
     bea:	82 1b       	sub	r24, r18
     bec:	93 0b       	sbc	r25, r19
     bee:	bc 01       	movw	r22, r24
     bf0:	22 f4       	brpl	.+8      	; 0xbfa <__vector_23+0x188>
     bf2:	66 27       	eor	r22, r22
     bf4:	77 27       	eor	r23, r23
     bf6:	68 1b       	sub	r22, r24
     bf8:	79 0b       	sbc	r23, r25
     bfa:	07 2e       	mov	r0, r23
     bfc:	00 0c       	add	r0, r0
     bfe:	88 0b       	sbc	r24, r24
     c00:	99 0b       	sbc	r25, r25
     c02:	f6 d2       	rcall	.+1516   	; 0x11f0 <__floatsisf>
     c04:	2f e6       	ldi	r18, 0x6F	; 111
     c06:	32 e1       	ldi	r19, 0x12	; 18
     c08:	43 e0       	ldi	r20, 0x03	; 3
     c0a:	5a e3       	ldi	r21, 0x3A	; 58
     c0c:	df d3       	rcall	.+1982   	; 0x13cc <__mulsf3>
     c0e:	a7 01       	movw	r20, r14
     c10:	96 01       	movw	r18, r12
     c12:	58 d2       	rcall	.+1200   	; 0x10c4 <__addsf3>
     c14:	60 93 0a 02 	sts	0x020A, r22	; 0x80020a <PWM4C+0x2>
     c18:	70 93 0b 02 	sts	0x020B, r23	; 0x80020b <PWM4C+0x3>
     c1c:	80 93 0c 02 	sts	0x020C, r24	; 0x80020c <PWM4C+0x4>
     c20:	90 93 0d 02 	sts	0x020D, r25	; 0x80020d <PWM4C+0x5>
     c24:	19 db       	rcall	.-2510   	; 0x258 <setPwm>
     c26:	2e c0       	rjmp	.+92     	; 0xc84 <__vector_23+0x212>
			}
			else
			{
				setPwm(PWM4C.pwmValue -= (abs(RPM_1.setRPM - RPM_1.currentRPM)) * 0.0005);
     c28:	e0 e0       	ldi	r30, 0x00	; 0
     c2a:	f2 e0       	ldi	r31, 0x02	; 2
     c2c:	82 81       	ldd	r24, Z+2	; 0x02
     c2e:	93 81       	ldd	r25, Z+3	; 0x03
     c30:	20 81       	ld	r18, Z
     c32:	31 81       	ldd	r19, Z+1	; 0x01
     c34:	c0 90 0a 02 	lds	r12, 0x020A	; 0x80020a <PWM4C+0x2>
     c38:	d0 90 0b 02 	lds	r13, 0x020B	; 0x80020b <PWM4C+0x3>
     c3c:	e0 90 0c 02 	lds	r14, 0x020C	; 0x80020c <PWM4C+0x4>
     c40:	f0 90 0d 02 	lds	r15, 0x020D	; 0x80020d <PWM4C+0x5>
     c44:	82 1b       	sub	r24, r18
     c46:	93 0b       	sbc	r25, r19
     c48:	bc 01       	movw	r22, r24
     c4a:	22 f4       	brpl	.+8      	; 0xc54 <__vector_23+0x1e2>
     c4c:	66 27       	eor	r22, r22
     c4e:	77 27       	eor	r23, r23
     c50:	68 1b       	sub	r22, r24
     c52:	79 0b       	sbc	r23, r25
     c54:	07 2e       	mov	r0, r23
     c56:	00 0c       	add	r0, r0
     c58:	88 0b       	sbc	r24, r24
     c5a:	99 0b       	sbc	r25, r25
     c5c:	c9 d2       	rcall	.+1426   	; 0x11f0 <__floatsisf>
     c5e:	2f e6       	ldi	r18, 0x6F	; 111
     c60:	32 e1       	ldi	r19, 0x12	; 18
     c62:	43 e0       	ldi	r20, 0x03	; 3
     c64:	5a e3       	ldi	r21, 0x3A	; 58
     c66:	b2 d3       	rcall	.+1892   	; 0x13cc <__mulsf3>
     c68:	9b 01       	movw	r18, r22
     c6a:	ac 01       	movw	r20, r24
     c6c:	c7 01       	movw	r24, r14
     c6e:	b6 01       	movw	r22, r12
     c70:	28 d2       	rcall	.+1104   	; 0x10c2 <__subsf3>
     c72:	60 93 0a 02 	sts	0x020A, r22	; 0x80020a <PWM4C+0x2>
     c76:	70 93 0b 02 	sts	0x020B, r23	; 0x80020b <PWM4C+0x3>
     c7a:	80 93 0c 02 	sts	0x020C, r24	; 0x80020c <PWM4C+0x4>
     c7e:	90 93 0d 02 	sts	0x020D, r25	; 0x80020d <PWM4C+0x5>
     c82:	ea da       	rcall	.-2604   	; 0x258 <setPwm>
			}
		}
	}
}
     c84:	ff 91       	pop	r31
     c86:	ef 91       	pop	r30
     c88:	df 91       	pop	r29
     c8a:	cf 91       	pop	r28
     c8c:	bf 91       	pop	r27
     c8e:	af 91       	pop	r26
     c90:	9f 91       	pop	r25
     c92:	8f 91       	pop	r24
     c94:	7f 91       	pop	r23
     c96:	6f 91       	pop	r22
     c98:	5f 91       	pop	r21
     c9a:	4f 91       	pop	r20
     c9c:	3f 91       	pop	r19
     c9e:	2f 91       	pop	r18
     ca0:	1f 91       	pop	r17
     ca2:	0f 91       	pop	r16
     ca4:	ff 90       	pop	r15
     ca6:	ef 90       	pop	r14
     ca8:	df 90       	pop	r13
     caa:	cf 90       	pop	r12
     cac:	0f 90       	pop	r0
     cae:	0b be       	out	0x3b, r0	; 59
     cb0:	0f 90       	pop	r0
     cb2:	0f be       	out	0x3f, r0	; 63
     cb4:	0f 90       	pop	r0
     cb6:	1f 90       	pop	r1
     cb8:	18 95       	reti

00000cba <__vector_25>:


ISR (USART0_RX_vect)
{
     cba:	1f 92       	push	r1
     cbc:	0f 92       	push	r0
     cbe:	0f b6       	in	r0, 0x3f	; 63
     cc0:	0f 92       	push	r0
     cc2:	11 24       	eor	r1, r1
     cc4:	0b b6       	in	r0, 0x3b	; 59
     cc6:	0f 92       	push	r0
     cc8:	8f 93       	push	r24
     cca:	af 93       	push	r26
     ccc:	bf 93       	push	r27
     cce:	ef 93       	push	r30
     cd0:	ff 93       	push	r31
	//cli();
	//TIMSK0 &= ~(1 << TOIE0);
	UART0.data_in[UART0.dataCount] = UDR0;
     cd2:	ab e4       	ldi	r26, 0x4B	; 75
     cd4:	b2 e0       	ldi	r27, 0x02	; 2
     cd6:	d5 96       	adiw	r26, 0x35	; 53
     cd8:	ec 91       	ld	r30, X
     cda:	d5 97       	sbiw	r26, 0x35	; 53
     cdc:	f0 e0       	ldi	r31, 0x00	; 0
     cde:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
     ce2:	e5 5b       	subi	r30, 0xB5	; 181
     ce4:	fd 4f       	sbci	r31, 0xFD	; 253
     ce6:	80 83       	st	Z, r24
	if(UART0.data_in[UART0.dataCount] == '\n') {
     ce8:	d5 96       	adiw	r26, 0x35	; 53
     cea:	ec 91       	ld	r30, X
     cec:	f0 e0       	ldi	r31, 0x00	; 0
     cee:	e5 5b       	subi	r30, 0xB5	; 181
     cf0:	fd 4f       	sbci	r31, 0xFD	; 253
     cf2:	80 81       	ld	r24, Z
     cf4:	8a 30       	cpi	r24, 0x0A	; 10
     cf6:	31 f4       	brne	.+12     	; 0xd04 <__vector_25+0x4a>
		UART0.dataCount = 0;
     cf8:	10 92 80 02 	sts	0x0280, r1	; 0x800280 <UART0+0x35>
		sendinComands = 1;
     cfc:	81 e0       	ldi	r24, 0x01	; 1
     cfe:	80 93 36 02 	sts	0x0236, r24	; 0x800236 <sendinComands>
     d02:	09 c0       	rjmp	.+18     	; 0xd16 <__vector_25+0x5c>
		//sei();
		//TIMSK0 = (1 << TOIE0);
		//UART0.dataCount = 0;
		//UART0.sendingTrue=1;
	} else {
		if(++UART0.dataCount >= UART_data_in_length){
     d04:	eb e4       	ldi	r30, 0x4B	; 75
     d06:	f2 e0       	ldi	r31, 0x02	; 2
     d08:	85 a9       	ldd	r24, Z+53	; 0x35
     d0a:	8f 5f       	subi	r24, 0xFF	; 255
     d0c:	85 ab       	std	Z+53, r24	; 0x35
     d0e:	8d 32       	cpi	r24, 0x2D	; 45
     d10:	10 f0       	brcs	.+4      	; 0xd16 <__vector_25+0x5c>
			 UART0.dataCount = 0;
     d12:	10 92 80 02 	sts	0x0280, r1	; 0x800280 <UART0+0x35>
		} 
		//++UART0.dataCount;
	}
}
     d16:	ff 91       	pop	r31
     d18:	ef 91       	pop	r30
     d1a:	bf 91       	pop	r27
     d1c:	af 91       	pop	r26
     d1e:	8f 91       	pop	r24
     d20:	0f 90       	pop	r0
     d22:	0b be       	out	0x3b, r0	; 59
     d24:	0f 90       	pop	r0
     d26:	0f be       	out	0x3f, r0	; 63
     d28:	0f 90       	pop	r0
     d2a:	1f 90       	pop	r1
     d2c:	18 95       	reti

00000d2e <StopServo_0>:
	launch_timer_1_for2_seconds();
}

void button_interruption_3_init(){
	PCICR |= (1 << PCIE0);
	PCMSK0 |= (1 << PCINT7);
     d2e:	e1 e0       	ldi	r30, 0x01	; 1
     d30:	f1 e0       	ldi	r31, 0x01	; 1
     d32:	80 81       	ld	r24, Z
     d34:	8f 7b       	andi	r24, 0xBF	; 191
     d36:	80 83       	st	Z, r24
     d38:	08 95       	ret

00000d3a <_launchServo_0>:
     d3a:	e1 e0       	ldi	r30, 0x01	; 1
     d3c:	f1 e0       	ldi	r31, 0x01	; 1
     d3e:	80 81       	ld	r24, Z
     d40:	80 64       	ori	r24, 0x40	; 64
     d42:	80 83       	st	Z, r24
     d44:	08 95       	ret

00000d46 <_setToOpenPosition_0>:
     d46:	8e e0       	ldi	r24, 0x0E	; 14
     d48:	80 93 b4 00 	sts	0x00B4, r24	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7000b4>
     d4c:	f6 df       	rcall	.-20     	; 0xd3a <_launchServo_0>
     d4e:	82 e0       	ldi	r24, 0x02	; 2
     d50:	80 93 a2 02 	sts	0x02A2, r24	; 0x8002a2 <servo_0_state>
     d54:	84 c0       	rjmp	.+264    	; 0xe5e <launch_timer_1>
     d56:	08 95       	ret

00000d58 <closeValve_0>:
     d58:	80 e2       	ldi	r24, 0x20	; 32
     d5a:	80 93 b4 00 	sts	0x00B4, r24	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7000b4>
     d5e:	81 e0       	ldi	r24, 0x01	; 1
     d60:	80 93 a2 02 	sts	0x02A2, r24	; 0x8002a2 <servo_0_state>
     d64:	ea df       	rcall	.-44     	; 0xd3a <_launchServo_0>
     d66:	8d c0       	rjmp	.+282    	; 0xe82 <launch_timer_1_for2_seconds>
     d68:	08 95       	ret

00000d6a <openValve_0>:
     d6a:	8e e0       	ldi	r24, 0x0E	; 14
     d6c:	80 93 b4 00 	sts	0x00B4, r24	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7000b4>
     d70:	10 92 a2 02 	sts	0x02A2, r1	; 0x8002a2 <servo_0_state>
     d74:	e2 df       	rcall	.-60     	; 0xd3a <_launchServo_0>
     d76:	85 c0       	rjmp	.+266    	; 0xe82 <launch_timer_1_for2_seconds>
     d78:	08 95       	ret

00000d7a <InitializeServo_0>:
}

void InitializeServo_0()
{
	//// need using interruption to detect shaft positions
	DDRB &= ~(1 << PB7);
     d7a:	27 98       	cbi	0x04, 7	; 4
	
	DDRH &= ~( 1 << PH6 );
     d7c:	e1 e0       	ldi	r30, 0x01	; 1
     d7e:	f1 e0       	ldi	r31, 0x01	; 1
     d80:	80 81       	ld	r24, Z
     d82:	8f 7b       	andi	r24, 0xBF	; 191
     d84:	80 83       	st	Z, r24
	TCCR2A |= ( 1 << COM2B1 ) | ( 1 << WGM21) | ( 1 << WGM20) ;
     d86:	e0 eb       	ldi	r30, 0xB0	; 176
     d88:	f0 e0       	ldi	r31, 0x00	; 0
     d8a:	80 81       	ld	r24, Z
     d8c:	83 62       	ori	r24, 0x23	; 35
     d8e:	80 83       	st	Z, r24
	TCCR2B |=  ( 1 << CS20 ) | ( 1 << CS21 )  | (1 << CS22) ;
     d90:	e1 eb       	ldi	r30, 0xB1	; 177
     d92:	f0 e0       	ldi	r31, 0x00	; 0
     d94:	80 81       	ld	r24, Z
     d96:	87 60       	ori	r24, 0x07	; 7
     d98:	80 83       	st	Z, r24
	_setToOpenPosition_0();
     d9a:	d5 cf       	rjmp	.-86     	; 0xd46 <_setToOpenPosition_0>
     d9c:	08 95       	ret

00000d9e <StopServo_1>:
	launch_timer_1_for2_seconds();
}

void button_interruption_1_init(){
	PCICR |= (1 << PCIE0);
	PCMSK0 |= (1 << PCINT6);
     d9e:	24 98       	cbi	0x04, 4	; 4
     da0:	08 95       	ret

00000da2 <_launchServo_1>:
     da2:	24 9a       	sbi	0x04, 4	; 4
     da4:	08 95       	ret

00000da6 <_setToOpenPosition_1>:
     da6:	8e e0       	ldi	r24, 0x0E	; 14
     da8:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7000b3>
     dac:	fa df       	rcall	.-12     	; 0xda2 <_launchServo_1>
     dae:	82 e0       	ldi	r24, 0x02	; 2
     db0:	80 93 a3 02 	sts	0x02A3, r24	; 0x8002a3 <servo_1_state>
     db4:	54 c0       	rjmp	.+168    	; 0xe5e <launch_timer_1>
     db6:	08 95       	ret

00000db8 <closeValve_1>:
     db8:	80 e2       	ldi	r24, 0x20	; 32
     dba:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7000b3>
     dbe:	f1 df       	rcall	.-30     	; 0xda2 <_launchServo_1>
     dc0:	81 e0       	ldi	r24, 0x01	; 1
     dc2:	80 93 a3 02 	sts	0x02A3, r24	; 0x8002a3 <servo_1_state>
     dc6:	5d c0       	rjmp	.+186    	; 0xe82 <launch_timer_1_for2_seconds>
     dc8:	08 95       	ret

00000dca <openValve_1>:
     dca:	8e e0       	ldi	r24, 0x0E	; 14
     dcc:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7000b3>
     dd0:	10 92 a3 02 	sts	0x02A3, r1	; 0x8002a3 <servo_1_state>
     dd4:	e6 df       	rcall	.-52     	; 0xda2 <_launchServo_1>
     dd6:	55 c0       	rjmp	.+170    	; 0xe82 <launch_timer_1_for2_seconds>
     dd8:	08 95       	ret

00000dda <InitializeServo_1>:
}

void InitializeServo_1()
{
	DDRB &= ~(1 << PB6);
     dda:	26 98       	cbi	0x04, 6	; 4
	
 	DDRB &= ~( 1 << DDB4 );
     ddc:	24 98       	cbi	0x04, 4	; 4
 	TCCR2A |= ( 1 << COM2A1 ) | ( 1 << WGM21) | ( 1 << WGM20) ;
     dde:	e0 eb       	ldi	r30, 0xB0	; 176
     de0:	f0 e0       	ldi	r31, 0x00	; 0
     de2:	80 81       	ld	r24, Z
     de4:	83 68       	ori	r24, 0x83	; 131
     de6:	80 83       	st	Z, r24
 	TCCR2B |=  ( 1 << CS20 ) | ( 1 << CS21 )  | (1 << CS22) ;
     de8:	e1 eb       	ldi	r30, 0xB1	; 177
     dea:	f0 e0       	ldi	r31, 0x00	; 0
     dec:	80 81       	ld	r24, Z
     dee:	87 60       	ori	r24, 0x07	; 7
     df0:	80 83       	st	Z, r24
	 
 	_setToOpenPosition_1();
     df2:	d9 cf       	rjmp	.-78     	; 0xda6 <_setToOpenPosition_1>
     df4:	08 95       	ret

00000df6 <StopServo_2>:
}

bool checkServo_2_ForMoving() { //remove this shit
	_NOP();
	return PINB & (1<<PB4);
}
     df6:	6b 98       	cbi	0x0d, 3	; 13
     df8:	08 95       	ret

00000dfa <_launchServo_2>:
     dfa:	6b 9a       	sbi	0x0d, 3	; 13
     dfc:	08 95       	ret

00000dfe <_setToOpenPosition_2>:
     dfe:	8e e0       	ldi	r24, 0x0E	; 14
     e00:	90 e0       	ldi	r25, 0x00	; 0
     e02:	90 93 99 00 	sts	0x0099, r25	; 0x800099 <__TEXT_REGION_LENGTH__+0x700099>
     e06:	80 93 98 00 	sts	0x0098, r24	; 0x800098 <__TEXT_REGION_LENGTH__+0x700098>
     e0a:	f7 df       	rcall	.-18     	; 0xdfa <_launchServo_2>
     e0c:	82 e0       	ldi	r24, 0x02	; 2
     e0e:	80 93 a4 02 	sts	0x02A4, r24	; 0x8002a4 <servo_2_state>
     e12:	25 c0       	rjmp	.+74     	; 0xe5e <launch_timer_1>
     e14:	08 95       	ret

00000e16 <closeValve_2>:

void closeValve_2() {
	OCR3A = SERVO_2_CLOSE;
     e16:	80 e2       	ldi	r24, 0x20	; 32
     e18:	90 e0       	ldi	r25, 0x00	; 0
     e1a:	90 93 99 00 	sts	0x0099, r25	; 0x800099 <__TEXT_REGION_LENGTH__+0x700099>
     e1e:	80 93 98 00 	sts	0x0098, r24	; 0x800098 <__TEXT_REGION_LENGTH__+0x700098>
	_launchServo_2();
     e22:	eb df       	rcall	.-42     	; 0xdfa <_launchServo_2>
	servo_2_state = CLOSED_2_SERVO;
     e24:	81 e0       	ldi	r24, 0x01	; 1
     e26:	80 93 a4 02 	sts	0x02A4, r24	; 0x8002a4 <servo_2_state>
	launch_timer_1_for2_seconds();
     e2a:	2b c0       	rjmp	.+86     	; 0xe82 <launch_timer_1_for2_seconds>
     e2c:	08 95       	ret

00000e2e <openValve_2>:
}

void openValve_2() {
	OCR3A = SERVO_2_OPEN; // was 45
     e2e:	8e e0       	ldi	r24, 0x0E	; 14
     e30:	90 e0       	ldi	r25, 0x00	; 0
     e32:	90 93 99 00 	sts	0x0099, r25	; 0x800099 <__TEXT_REGION_LENGTH__+0x700099>
     e36:	80 93 98 00 	sts	0x0098, r24	; 0x800098 <__TEXT_REGION_LENGTH__+0x700098>
	servo_2_state = OPEN_2_SERVO;
     e3a:	10 92 a4 02 	sts	0x02A4, r1	; 0x8002a4 <servo_2_state>
	_launchServo_2();
     e3e:	dd df       	rcall	.-70     	; 0xdfa <_launchServo_2>
	launch_timer_1_for2_seconds();
     e40:	20 c0       	rjmp	.+64     	; 0xe82 <launch_timer_1_for2_seconds>
     e42:	08 95       	ret

00000e44 <InitializeServo_2>:
     e44:	6b 98       	cbi	0x0d, 3	; 13
}

void InitializeServo_2()
{
	DDRE &= ~( 1 << PE3 );
	TCCR3A |= ( 1 << COM3A1 ) | ( 1 << WGM30) ;
     e46:	e0 e9       	ldi	r30, 0x90	; 144
     e48:	f0 e0       	ldi	r31, 0x00	; 0
     e4a:	80 81       	ld	r24, Z
     e4c:	81 68       	ori	r24, 0x81	; 129
     e4e:	80 83       	st	Z, r24
	TCCR3B |=  ( 1 << CS30 ) | ( 0 << CS31 )  | (1 << CS32)| ( 1 << WGM32) ; // clkI/O/1024 (From prescaler)
     e50:	e1 e9       	ldi	r30, 0x91	; 145
     e52:	f0 e0       	ldi	r31, 0x00	; 0
     e54:	80 81       	ld	r24, Z
     e56:	8d 60       	ori	r24, 0x0D	; 13
     e58:	80 83       	st	Z, r24
	_setToOpenPosition_2();
     e5a:	d1 cf       	rjmp	.-94     	; 0xdfe <_setToOpenPosition_2>
     e5c:	08 95       	ret

00000e5e <launch_timer_1>:
	TCNT1 = 34286; // with such a prescaler and starting TCNT3 we get 2HZ
	//TCNT1 = 17143; //with such a prescaler and starting TCNT3 we get 1HZ
}

void launch_timer_1(){
	PORTA |= (1<<PA1);
     e5e:	11 9a       	sbi	0x02, 1	; 2
#include "../Servo_init/Servo_1.h"
#include "../Servo_init/Servo_2.h"

static void reset_timer1_to_starting_value(){
	//TCNT1 = 0; // with such a prescaler and starting TCNT3 we get 0.5HZ
	TCNT1 = 34286; // with such a prescaler and starting TCNT3 we get 2HZ
     e60:	8e ee       	ldi	r24, 0xEE	; 238
     e62:	95 e8       	ldi	r25, 0x85	; 133
     e64:	90 93 85 00 	sts	0x0085, r25	; 0x800085 <__TEXT_REGION_LENGTH__+0x700085>
     e68:	80 93 84 00 	sts	0x0084, r24	; 0x800084 <__TEXT_REGION_LENGTH__+0x700084>
}

void launch_timer_1(){
	PORTA |= (1<<PA1);
	reset_timer1_to_starting_value();
	TIMSK1 |= (1 << TOIE1);
     e6c:	ef e6       	ldi	r30, 0x6F	; 111
     e6e:	f0 e0       	ldi	r31, 0x00	; 0
     e70:	80 81       	ld	r24, Z
     e72:	81 60       	ori	r24, 0x01	; 1
     e74:	80 83       	st	Z, r24
	TCCR1B |= (1 << CS12);
     e76:	e1 e8       	ldi	r30, 0x81	; 129
     e78:	f0 e0       	ldi	r31, 0x00	; 0
     e7a:	80 81       	ld	r24, Z
     e7c:	84 60       	ori	r24, 0x04	; 4
     e7e:	80 83       	st	Z, r24
     e80:	08 95       	ret

00000e82 <launch_timer_1_for2_seconds>:
#include "../Servo_init/Servo_1.h"
#include "../Servo_init/Servo_2.h"

static void reset_timer1_to_starting_value(){
	//TCNT1 = 0; // with such a prescaler and starting TCNT3 we get 0.5HZ
	TCNT1 = 34286; // with such a prescaler and starting TCNT3 we get 2HZ
     e82:	8e ee       	ldi	r24, 0xEE	; 238
     e84:	95 e8       	ldi	r25, 0x85	; 133
     e86:	90 93 85 00 	sts	0x0085, r25	; 0x800085 <__TEXT_REGION_LENGTH__+0x700085>
     e8a:	80 93 84 00 	sts	0x0084, r24	; 0x800084 <__TEXT_REGION_LENGTH__+0x700084>
}

void launch_timer_1_for2_seconds() {
	reset_timer1_to_starting_value();
	//TCNT1 = 0;// with such a prescaler and starting TCNT3 we get 0.5HZ
	TIMSK1 |= (1 << TOIE1);
     e8e:	ef e6       	ldi	r30, 0x6F	; 111
     e90:	f0 e0       	ldi	r31, 0x00	; 0
     e92:	80 81       	ld	r24, Z
     e94:	81 60       	ori	r24, 0x01	; 1
     e96:	80 83       	st	Z, r24
	TCCR1B |= (1 << CS12);
     e98:	e1 e8       	ldi	r30, 0x81	; 129
     e9a:	f0 e0       	ldi	r31, 0x00	; 0
     e9c:	80 81       	ld	r24, Z
     e9e:	84 60       	ori	r24, 0x04	; 4
     ea0:	80 83       	st	Z, r24
     ea2:	08 95       	ret

00000ea4 <stop_timer_1>:
}

void stop_timer_1(){
	TIMSK1 &= ~(1 << TOIE1);
     ea4:	ef e6       	ldi	r30, 0x6F	; 111
     ea6:	f0 e0       	ldi	r31, 0x00	; 0
     ea8:	80 81       	ld	r24, Z
     eaa:	8e 7f       	andi	r24, 0xFE	; 254
     eac:	80 83       	st	Z, r24
	TCCR1B &= ~(1 << CS12);
     eae:	e1 e8       	ldi	r30, 0x81	; 129
     eb0:	f0 e0       	ldi	r31, 0x00	; 0
     eb2:	80 81       	ld	r24, Z
     eb4:	8b 7f       	andi	r24, 0xFB	; 251
     eb6:	80 83       	st	Z, r24
     eb8:	08 95       	ret

00000eba <__vector_20>:
}

ISR(TIMER1_OVF_vect){
     eba:	1f 92       	push	r1
     ebc:	0f 92       	push	r0
     ebe:	0f b6       	in	r0, 0x3f	; 63
     ec0:	0f 92       	push	r0
     ec2:	11 24       	eor	r1, r1
     ec4:	0b b6       	in	r0, 0x3b	; 59
     ec6:	0f 92       	push	r0
     ec8:	2f 93       	push	r18
     eca:	3f 93       	push	r19
     ecc:	4f 93       	push	r20
     ece:	5f 93       	push	r21
     ed0:	6f 93       	push	r22
     ed2:	7f 93       	push	r23
     ed4:	8f 93       	push	r24
     ed6:	9f 93       	push	r25
     ed8:	af 93       	push	r26
     eda:	bf 93       	push	r27
     edc:	ef 93       	push	r30
     ede:	ff 93       	push	r31
	//PORTA ^= (1<<PA1);
	if (servo_1_state == INITIAL_1_SERVO) {
     ee0:	80 91 a3 02 	lds	r24, 0x02A3	; 0x8002a3 <servo_1_state>
     ee4:	82 30       	cpi	r24, 0x02	; 2
     ee6:	19 f4       	brne	.+6      	; 0xeee <__vector_20+0x34>
		stop_timer_1();
     ee8:	dd df       	rcall	.-70     	; 0xea4 <stop_timer_1>
		openValve_1();
     eea:	6f df       	rcall	.-290    	; 0xdca <openValve_1>
     eec:	02 c0       	rjmp	.+4      	; 0xef2 <__vector_20+0x38>
	} else {
		stop_timer_1();
     eee:	da df       	rcall	.-76     	; 0xea4 <stop_timer_1>
     ef0:	56 df       	rcall	.-340    	; 0xd9e <StopServo_1>
		StopServo_1();
     ef2:	80 91 a2 02 	lds	r24, 0x02A2	; 0x8002a2 <servo_0_state>
	}
	if (servo_0_state == INITIAL_0_SERVO) {
     ef6:	82 30       	cpi	r24, 0x02	; 2
     ef8:	19 f4       	brne	.+6      	; 0xf00 <__vector_20+0x46>
		stop_timer_1();
     efa:	d4 df       	rcall	.-88     	; 0xea4 <stop_timer_1>
		openValve_0();
     efc:	36 df       	rcall	.-404    	; 0xd6a <openValve_0>
     efe:	02 c0       	rjmp	.+4      	; 0xf04 <__vector_20+0x4a>
     f00:	d1 df       	rcall	.-94     	; 0xea4 <stop_timer_1>
	} else {
		stop_timer_1();
     f02:	15 df       	rcall	.-470    	; 0xd2e <StopServo_0>
		StopServo_0();
     f04:	80 91 a4 02 	lds	r24, 0x02A4	; 0x8002a4 <servo_2_state>
	}
	if (servo_2_state == INITIAL_2_SERVO) {
     f08:	82 30       	cpi	r24, 0x02	; 2
     f0a:	19 f4       	brne	.+6      	; 0xf12 <__vector_20+0x58>
		stop_timer_1();
     f0c:	cb df       	rcall	.-106    	; 0xea4 <stop_timer_1>
     f0e:	8f df       	rcall	.-226    	; 0xe2e <openValve_2>
		openValve_2();
     f10:	02 c0       	rjmp	.+4      	; 0xf16 <__vector_20+0x5c>
     f12:	c8 df       	rcall	.-112    	; 0xea4 <stop_timer_1>
     f14:	70 df       	rcall	.-288    	; 0xdf6 <StopServo_2>
	} else {
		stop_timer_1();
     f16:	ff 91       	pop	r31
     f18:	ef 91       	pop	r30
		StopServo_2();
     f1a:	bf 91       	pop	r27
     f1c:	af 91       	pop	r26
	}
	//button_interruption_1_init();

     f1e:	9f 91       	pop	r25
     f20:	8f 91       	pop	r24
     f22:	7f 91       	pop	r23
     f24:	6f 91       	pop	r22
     f26:	5f 91       	pop	r21
     f28:	4f 91       	pop	r20
     f2a:	3f 91       	pop	r19
     f2c:	2f 91       	pop	r18
     f2e:	0f 90       	pop	r0
     f30:	0b be       	out	0x3b, r0	; 59
     f32:	0f 90       	pop	r0
     f34:	0f be       	out	0x3f, r0	; 63
     f36:	0f 90       	pop	r0
     f38:	1f 90       	pop	r1
     f3a:	18 95       	reti

00000f3c <openValve1>:
 *  Author: DR
 */ 
#include <avr/io.h>

static void openValve1(){
	DDRF |= (1 << DDF0);
     f3c:	80 9a       	sbi	0x10, 0	; 16
	PORTF |= (1 << PF0);
     f3e:	88 9a       	sbi	0x11, 0	; 17
     f40:	08 95       	ret

00000f42 <openValve2>:
}

static void openValve2(){
	DDRF |= (1 << DDF1);
     f42:	81 9a       	sbi	0x10, 1	; 16
	PORTF |= (1 << PF1);
     f44:	89 9a       	sbi	0x11, 1	; 17
     f46:	08 95       	ret

00000f48 <openValve3>:
}

static void openValve3(){
	DDRF |= (1 << DDF4);
     f48:	84 9a       	sbi	0x10, 4	; 16
	PORTF |= (1 << PF4);
     f4a:	8c 9a       	sbi	0x11, 4	; 17
     f4c:	08 95       	ret

00000f4e <openValve4>:
}

static void openValve4(){
	DDRK |= (1 << DDK0);
     f4e:	e7 e0       	ldi	r30, 0x07	; 7
     f50:	f1 e0       	ldi	r31, 0x01	; 1
     f52:	80 81       	ld	r24, Z
     f54:	81 60       	ori	r24, 0x01	; 1
     f56:	80 83       	st	Z, r24
	PORTK |= (1 << PK0);
     f58:	e8 e0       	ldi	r30, 0x08	; 8
     f5a:	f1 e0       	ldi	r31, 0x01	; 1
     f5c:	80 81       	ld	r24, Z
     f5e:	81 60       	ori	r24, 0x01	; 1
     f60:	80 83       	st	Z, r24
     f62:	08 95       	ret

00000f64 <openValve5>:
}

static void openValve5(){
	DDRK |= (1 << DDK6);
     f64:	e7 e0       	ldi	r30, 0x07	; 7
     f66:	f1 e0       	ldi	r31, 0x01	; 1
     f68:	80 81       	ld	r24, Z
     f6a:	80 64       	ori	r24, 0x40	; 64
     f6c:	80 83       	st	Z, r24
	PORTK |= (1 << PF6);
     f6e:	e8 e0       	ldi	r30, 0x08	; 8
     f70:	f1 e0       	ldi	r31, 0x01	; 1
     f72:	80 81       	ld	r24, Z
     f74:	80 64       	ori	r24, 0x40	; 64
     f76:	80 83       	st	Z, r24
     f78:	08 95       	ret

00000f7a <openValve6>:
}

static void openValve6(){
	DDRK |= (1 << DDK7);
     f7a:	e7 e0       	ldi	r30, 0x07	; 7
     f7c:	f1 e0       	ldi	r31, 0x01	; 1
     f7e:	80 81       	ld	r24, Z
     f80:	80 68       	ori	r24, 0x80	; 128
     f82:	80 83       	st	Z, r24
	PORTK |= (1 << PK7);
     f84:	e8 e0       	ldi	r30, 0x08	; 8
     f86:	f1 e0       	ldi	r31, 0x01	; 1
     f88:	80 81       	ld	r24, Z
     f8a:	80 68       	ori	r24, 0x80	; 128
     f8c:	80 83       	st	Z, r24
     f8e:	08 95       	ret

00000f90 <openValve7>:
}

static void openValve7(){
	DDRK |= (1 << DDK4);
     f90:	e7 e0       	ldi	r30, 0x07	; 7
     f92:	f1 e0       	ldi	r31, 0x01	; 1
     f94:	80 81       	ld	r24, Z
     f96:	80 61       	ori	r24, 0x10	; 16
     f98:	80 83       	st	Z, r24
	PORTK |= (1 << PF4);
     f9a:	e8 e0       	ldi	r30, 0x08	; 8
     f9c:	f1 e0       	ldi	r31, 0x01	; 1
     f9e:	80 81       	ld	r24, Z
     fa0:	80 61       	ori	r24, 0x10	; 16
     fa2:	80 83       	st	Z, r24
     fa4:	08 95       	ret

00000fa6 <openValve8>:
}

static void openValve8(){
	DDRK |= (1 << DDK5);
     fa6:	e7 e0       	ldi	r30, 0x07	; 7
     fa8:	f1 e0       	ldi	r31, 0x01	; 1
     faa:	80 81       	ld	r24, Z
     fac:	80 62       	ori	r24, 0x20	; 32
     fae:	80 83       	st	Z, r24
	PORTK |= (1 << PK5);
     fb0:	e8 e0       	ldi	r30, 0x08	; 8
     fb2:	f1 e0       	ldi	r31, 0x01	; 1
     fb4:	80 81       	ld	r24, Z
     fb6:	80 62       	ori	r24, 0x20	; 32
     fb8:	80 83       	st	Z, r24
     fba:	08 95       	ret

00000fbc <closeValve1>:
}

static void closeValve1(){
	DDRF &= ~(1 << DDF0);
     fbc:	80 98       	cbi	0x10, 0	; 16
	PORTF &= ~(1 << PF0);
     fbe:	88 98       	cbi	0x11, 0	; 17
     fc0:	08 95       	ret

00000fc2 <closeValve2>:
}

static void closeValve2(){
	DDRF &= ~(1 << DDF1);
     fc2:	81 98       	cbi	0x10, 1	; 16
	PORTF &= ~(1 << PF1);
     fc4:	89 98       	cbi	0x11, 1	; 17
     fc6:	08 95       	ret

00000fc8 <closeValve3>:
}

static void closeValve3(){
	DDRF &= ~(1 << DDF4);
     fc8:	84 98       	cbi	0x10, 4	; 16
	PORTF &= ~(1 << PF4);
     fca:	8c 98       	cbi	0x11, 4	; 17
     fcc:	08 95       	ret

00000fce <closeValve4>:
}

static void closeValve4(){
	DDRK &= ~(1 << DDK0);
     fce:	e7 e0       	ldi	r30, 0x07	; 7
     fd0:	f1 e0       	ldi	r31, 0x01	; 1
     fd2:	80 81       	ld	r24, Z
     fd4:	8e 7f       	andi	r24, 0xFE	; 254
     fd6:	80 83       	st	Z, r24
	PORTK &= ~(1 << PK0);
     fd8:	e8 e0       	ldi	r30, 0x08	; 8
     fda:	f1 e0       	ldi	r31, 0x01	; 1
     fdc:	80 81       	ld	r24, Z
     fde:	8e 7f       	andi	r24, 0xFE	; 254
     fe0:	80 83       	st	Z, r24
     fe2:	08 95       	ret

00000fe4 <closeValve5>:
}

static void closeValve5(){
	DDRK &= ~(1 << DDK6);
     fe4:	e7 e0       	ldi	r30, 0x07	; 7
     fe6:	f1 e0       	ldi	r31, 0x01	; 1
     fe8:	80 81       	ld	r24, Z
     fea:	8f 7b       	andi	r24, 0xBF	; 191
     fec:	80 83       	st	Z, r24
	PORTK &= ~(1 << PF6);
     fee:	e8 e0       	ldi	r30, 0x08	; 8
     ff0:	f1 e0       	ldi	r31, 0x01	; 1
     ff2:	80 81       	ld	r24, Z
     ff4:	8f 7b       	andi	r24, 0xBF	; 191
     ff6:	80 83       	st	Z, r24
     ff8:	08 95       	ret

00000ffa <closeValve6>:
}

static void closeValve6(){
	DDRK &= ~(1 << DDK7);
     ffa:	e7 e0       	ldi	r30, 0x07	; 7
     ffc:	f1 e0       	ldi	r31, 0x01	; 1
     ffe:	80 81       	ld	r24, Z
    1000:	8f 77       	andi	r24, 0x7F	; 127
    1002:	80 83       	st	Z, r24
	PORTK &= ~(1 << PK7);
    1004:	e8 e0       	ldi	r30, 0x08	; 8
    1006:	f1 e0       	ldi	r31, 0x01	; 1
    1008:	80 81       	ld	r24, Z
    100a:	8f 77       	andi	r24, 0x7F	; 127
    100c:	80 83       	st	Z, r24
    100e:	08 95       	ret

00001010 <closeValve7>:
}

static void closeValve7(){
	DDRK &= ~(1 << DDK4);
    1010:	e7 e0       	ldi	r30, 0x07	; 7
    1012:	f1 e0       	ldi	r31, 0x01	; 1
    1014:	80 81       	ld	r24, Z
    1016:	8f 7e       	andi	r24, 0xEF	; 239
    1018:	80 83       	st	Z, r24
	PORTK &= ~(1 << PF4);
    101a:	e8 e0       	ldi	r30, 0x08	; 8
    101c:	f1 e0       	ldi	r31, 0x01	; 1
    101e:	80 81       	ld	r24, Z
    1020:	8f 7e       	andi	r24, 0xEF	; 239
    1022:	80 83       	st	Z, r24
    1024:	08 95       	ret

00001026 <closeValve8>:
}

static void closeValve8(){
	DDRK &= ~(1 << DDK5);
    1026:	e7 e0       	ldi	r30, 0x07	; 7
    1028:	f1 e0       	ldi	r31, 0x01	; 1
    102a:	80 81       	ld	r24, Z
    102c:	8f 7d       	andi	r24, 0xDF	; 223
    102e:	80 83       	st	Z, r24
	PORTK &= ~(1 << PK5);
    1030:	e8 e0       	ldi	r30, 0x08	; 8
    1032:	f1 e0       	ldi	r31, 0x01	; 1
    1034:	80 81       	ld	r24, Z
    1036:	8f 7d       	andi	r24, 0xDF	; 223
    1038:	80 83       	st	Z, r24
    103a:	08 95       	ret

0000103c <initValves>:
	void (*closeV7)();
	void (*closeV8)();
} VALVES;

int initValves(void){
	VALVES.openV1 = openValve1;
    103c:	e2 e8       	ldi	r30, 0x82	; 130
    103e:	f2 e0       	ldi	r31, 0x02	; 2
    1040:	8e e9       	ldi	r24, 0x9E	; 158
    1042:	97 e0       	ldi	r25, 0x07	; 7
    1044:	91 83       	std	Z+1, r25	; 0x01
    1046:	80 83       	st	Z, r24
	VALVES.openV2 = openValve2;
    1048:	81 ea       	ldi	r24, 0xA1	; 161
    104a:	97 e0       	ldi	r25, 0x07	; 7
    104c:	93 83       	std	Z+3, r25	; 0x03
    104e:	82 83       	std	Z+2, r24	; 0x02
	VALVES.openV3 = openValve3;
    1050:	84 ea       	ldi	r24, 0xA4	; 164
    1052:	97 e0       	ldi	r25, 0x07	; 7
    1054:	95 83       	std	Z+5, r25	; 0x05
    1056:	84 83       	std	Z+4, r24	; 0x04
	VALVES.openV4 = openValve4;
    1058:	87 ea       	ldi	r24, 0xA7	; 167
    105a:	97 e0       	ldi	r25, 0x07	; 7
    105c:	97 83       	std	Z+7, r25	; 0x07
    105e:	86 83       	std	Z+6, r24	; 0x06
	VALVES.openV5 = openValve5;
    1060:	82 eb       	ldi	r24, 0xB2	; 178
    1062:	97 e0       	ldi	r25, 0x07	; 7
    1064:	91 87       	std	Z+9, r25	; 0x09
    1066:	80 87       	std	Z+8, r24	; 0x08
	VALVES.openV6 = openValve6;
    1068:	8d eb       	ldi	r24, 0xBD	; 189
    106a:	97 e0       	ldi	r25, 0x07	; 7
    106c:	93 87       	std	Z+11, r25	; 0x0b
    106e:	82 87       	std	Z+10, r24	; 0x0a
	VALVES.openV7 = openValve7;
    1070:	88 ec       	ldi	r24, 0xC8	; 200
    1072:	97 e0       	ldi	r25, 0x07	; 7
    1074:	95 87       	std	Z+13, r25	; 0x0d
    1076:	84 87       	std	Z+12, r24	; 0x0c
	VALVES.openV8 = openValve8;
    1078:	83 ed       	ldi	r24, 0xD3	; 211
    107a:	97 e0       	ldi	r25, 0x07	; 7
    107c:	97 87       	std	Z+15, r25	; 0x0f
    107e:	86 87       	std	Z+14, r24	; 0x0e
	VALVES.closeV1 = closeValve1;
    1080:	8e ed       	ldi	r24, 0xDE	; 222
    1082:	97 e0       	ldi	r25, 0x07	; 7
    1084:	91 8b       	std	Z+17, r25	; 0x11
    1086:	80 8b       	std	Z+16, r24	; 0x10
	VALVES.closeV2 = closeValve2;
    1088:	81 ee       	ldi	r24, 0xE1	; 225
    108a:	97 e0       	ldi	r25, 0x07	; 7
    108c:	93 8b       	std	Z+19, r25	; 0x13
    108e:	82 8b       	std	Z+18, r24	; 0x12
	VALVES.closeV3 = closeValve3;
    1090:	84 ee       	ldi	r24, 0xE4	; 228
    1092:	97 e0       	ldi	r25, 0x07	; 7
    1094:	95 8b       	std	Z+21, r25	; 0x15
    1096:	84 8b       	std	Z+20, r24	; 0x14
	VALVES.closeV4 = closeValve4;
    1098:	87 ee       	ldi	r24, 0xE7	; 231
    109a:	97 e0       	ldi	r25, 0x07	; 7
    109c:	97 8b       	std	Z+23, r25	; 0x17
    109e:	86 8b       	std	Z+22, r24	; 0x16
	VALVES.closeV5 = closeValve5;
    10a0:	82 ef       	ldi	r24, 0xF2	; 242
    10a2:	97 e0       	ldi	r25, 0x07	; 7
    10a4:	91 8f       	std	Z+25, r25	; 0x19
    10a6:	80 8f       	std	Z+24, r24	; 0x18
	VALVES.closeV6 = closeValve6;
    10a8:	8d ef       	ldi	r24, 0xFD	; 253
    10aa:	97 e0       	ldi	r25, 0x07	; 7
    10ac:	93 8f       	std	Z+27, r25	; 0x1b
    10ae:	82 8f       	std	Z+26, r24	; 0x1a
	VALVES.closeV7 = closeValve7;
    10b0:	88 e0       	ldi	r24, 0x08	; 8
    10b2:	98 e0       	ldi	r25, 0x08	; 8
    10b4:	95 8f       	std	Z+29, r25	; 0x1d
    10b6:	84 8f       	std	Z+28, r24	; 0x1c
	VALVES.closeV8 = closeValve8;
    10b8:	83 e1       	ldi	r24, 0x13	; 19
    10ba:	98 e0       	ldi	r25, 0x08	; 8
    10bc:	97 8f       	std	Z+31, r25	; 0x1f
    10be:	86 8f       	std	Z+30, r24	; 0x1e
}
    10c0:	08 95       	ret

000010c2 <__subsf3>:
    10c2:	50 58       	subi	r21, 0x80	; 128

000010c4 <__addsf3>:
    10c4:	bb 27       	eor	r27, r27
    10c6:	aa 27       	eor	r26, r26
    10c8:	0e d0       	rcall	.+28     	; 0x10e6 <__addsf3x>
    10ca:	08 c1       	rjmp	.+528    	; 0x12dc <__fp_round>
    10cc:	f9 d0       	rcall	.+498    	; 0x12c0 <__fp_pscA>
    10ce:	30 f0       	brcs	.+12     	; 0x10dc <__addsf3+0x18>
    10d0:	fe d0       	rcall	.+508    	; 0x12ce <__fp_pscB>
    10d2:	20 f0       	brcs	.+8      	; 0x10dc <__addsf3+0x18>
    10d4:	31 f4       	brne	.+12     	; 0x10e2 <__addsf3+0x1e>
    10d6:	9f 3f       	cpi	r25, 0xFF	; 255
    10d8:	11 f4       	brne	.+4      	; 0x10de <__addsf3+0x1a>
    10da:	1e f4       	brtc	.+6      	; 0x10e2 <__addsf3+0x1e>
    10dc:	ee c0       	rjmp	.+476    	; 0x12ba <__fp_nan>
    10de:	0e f4       	brtc	.+2      	; 0x10e2 <__addsf3+0x1e>
    10e0:	e0 95       	com	r30
    10e2:	e7 fb       	bst	r30, 7
    10e4:	e4 c0       	rjmp	.+456    	; 0x12ae <__fp_inf>

000010e6 <__addsf3x>:
    10e6:	e9 2f       	mov	r30, r25
    10e8:	0a d1       	rcall	.+532    	; 0x12fe <__fp_split3>
    10ea:	80 f3       	brcs	.-32     	; 0x10cc <__addsf3+0x8>
    10ec:	ba 17       	cp	r27, r26
    10ee:	62 07       	cpc	r22, r18
    10f0:	73 07       	cpc	r23, r19
    10f2:	84 07       	cpc	r24, r20
    10f4:	95 07       	cpc	r25, r21
    10f6:	18 f0       	brcs	.+6      	; 0x10fe <__addsf3x+0x18>
    10f8:	71 f4       	brne	.+28     	; 0x1116 <__addsf3x+0x30>
    10fa:	9e f5       	brtc	.+102    	; 0x1162 <__addsf3x+0x7c>
    10fc:	22 c1       	rjmp	.+580    	; 0x1342 <__fp_zero>
    10fe:	0e f4       	brtc	.+2      	; 0x1102 <__addsf3x+0x1c>
    1100:	e0 95       	com	r30
    1102:	0b 2e       	mov	r0, r27
    1104:	ba 2f       	mov	r27, r26
    1106:	a0 2d       	mov	r26, r0
    1108:	0b 01       	movw	r0, r22
    110a:	b9 01       	movw	r22, r18
    110c:	90 01       	movw	r18, r0
    110e:	0c 01       	movw	r0, r24
    1110:	ca 01       	movw	r24, r20
    1112:	a0 01       	movw	r20, r0
    1114:	11 24       	eor	r1, r1
    1116:	ff 27       	eor	r31, r31
    1118:	59 1b       	sub	r21, r25
    111a:	99 f0       	breq	.+38     	; 0x1142 <__addsf3x+0x5c>
    111c:	59 3f       	cpi	r21, 0xF9	; 249
    111e:	50 f4       	brcc	.+20     	; 0x1134 <__addsf3x+0x4e>
    1120:	50 3e       	cpi	r21, 0xE0	; 224
    1122:	68 f1       	brcs	.+90     	; 0x117e <__addsf3x+0x98>
    1124:	1a 16       	cp	r1, r26
    1126:	f0 40       	sbci	r31, 0x00	; 0
    1128:	a2 2f       	mov	r26, r18
    112a:	23 2f       	mov	r18, r19
    112c:	34 2f       	mov	r19, r20
    112e:	44 27       	eor	r20, r20
    1130:	58 5f       	subi	r21, 0xF8	; 248
    1132:	f3 cf       	rjmp	.-26     	; 0x111a <__addsf3x+0x34>
    1134:	46 95       	lsr	r20
    1136:	37 95       	ror	r19
    1138:	27 95       	ror	r18
    113a:	a7 95       	ror	r26
    113c:	f0 40       	sbci	r31, 0x00	; 0
    113e:	53 95       	inc	r21
    1140:	c9 f7       	brne	.-14     	; 0x1134 <__addsf3x+0x4e>
    1142:	7e f4       	brtc	.+30     	; 0x1162 <__addsf3x+0x7c>
    1144:	1f 16       	cp	r1, r31
    1146:	ba 0b       	sbc	r27, r26
    1148:	62 0b       	sbc	r22, r18
    114a:	73 0b       	sbc	r23, r19
    114c:	84 0b       	sbc	r24, r20
    114e:	ba f0       	brmi	.+46     	; 0x117e <__addsf3x+0x98>
    1150:	91 50       	subi	r25, 0x01	; 1
    1152:	a1 f0       	breq	.+40     	; 0x117c <__addsf3x+0x96>
    1154:	ff 0f       	add	r31, r31
    1156:	bb 1f       	adc	r27, r27
    1158:	66 1f       	adc	r22, r22
    115a:	77 1f       	adc	r23, r23
    115c:	88 1f       	adc	r24, r24
    115e:	c2 f7       	brpl	.-16     	; 0x1150 <__addsf3x+0x6a>
    1160:	0e c0       	rjmp	.+28     	; 0x117e <__addsf3x+0x98>
    1162:	ba 0f       	add	r27, r26
    1164:	62 1f       	adc	r22, r18
    1166:	73 1f       	adc	r23, r19
    1168:	84 1f       	adc	r24, r20
    116a:	48 f4       	brcc	.+18     	; 0x117e <__addsf3x+0x98>
    116c:	87 95       	ror	r24
    116e:	77 95       	ror	r23
    1170:	67 95       	ror	r22
    1172:	b7 95       	ror	r27
    1174:	f7 95       	ror	r31
    1176:	9e 3f       	cpi	r25, 0xFE	; 254
    1178:	08 f0       	brcs	.+2      	; 0x117c <__addsf3x+0x96>
    117a:	b3 cf       	rjmp	.-154    	; 0x10e2 <__addsf3+0x1e>
    117c:	93 95       	inc	r25
    117e:	88 0f       	add	r24, r24
    1180:	08 f0       	brcs	.+2      	; 0x1184 <__addsf3x+0x9e>
    1182:	99 27       	eor	r25, r25
    1184:	ee 0f       	add	r30, r30
    1186:	97 95       	ror	r25
    1188:	87 95       	ror	r24
    118a:	08 95       	ret

0000118c <__cmpsf2>:
    118c:	6c d0       	rcall	.+216    	; 0x1266 <__fp_cmp>
    118e:	08 f4       	brcc	.+2      	; 0x1192 <__cmpsf2+0x6>
    1190:	81 e0       	ldi	r24, 0x01	; 1
    1192:	08 95       	ret

00001194 <__fixunssfsi>:
    1194:	bc d0       	rcall	.+376    	; 0x130e <__fp_splitA>
    1196:	88 f0       	brcs	.+34     	; 0x11ba <__fixunssfsi+0x26>
    1198:	9f 57       	subi	r25, 0x7F	; 127
    119a:	90 f0       	brcs	.+36     	; 0x11c0 <__fixunssfsi+0x2c>
    119c:	b9 2f       	mov	r27, r25
    119e:	99 27       	eor	r25, r25
    11a0:	b7 51       	subi	r27, 0x17	; 23
    11a2:	a0 f0       	brcs	.+40     	; 0x11cc <__fixunssfsi+0x38>
    11a4:	d1 f0       	breq	.+52     	; 0x11da <__fixunssfsi+0x46>
    11a6:	66 0f       	add	r22, r22
    11a8:	77 1f       	adc	r23, r23
    11aa:	88 1f       	adc	r24, r24
    11ac:	99 1f       	adc	r25, r25
    11ae:	1a f0       	brmi	.+6      	; 0x11b6 <__fixunssfsi+0x22>
    11b0:	ba 95       	dec	r27
    11b2:	c9 f7       	brne	.-14     	; 0x11a6 <__fixunssfsi+0x12>
    11b4:	12 c0       	rjmp	.+36     	; 0x11da <__fixunssfsi+0x46>
    11b6:	b1 30       	cpi	r27, 0x01	; 1
    11b8:	81 f0       	breq	.+32     	; 0x11da <__fixunssfsi+0x46>
    11ba:	c3 d0       	rcall	.+390    	; 0x1342 <__fp_zero>
    11bc:	b1 e0       	ldi	r27, 0x01	; 1
    11be:	08 95       	ret
    11c0:	c0 c0       	rjmp	.+384    	; 0x1342 <__fp_zero>
    11c2:	67 2f       	mov	r22, r23
    11c4:	78 2f       	mov	r23, r24
    11c6:	88 27       	eor	r24, r24
    11c8:	b8 5f       	subi	r27, 0xF8	; 248
    11ca:	39 f0       	breq	.+14     	; 0x11da <__fixunssfsi+0x46>
    11cc:	b9 3f       	cpi	r27, 0xF9	; 249
    11ce:	cc f3       	brlt	.-14     	; 0x11c2 <__fixunssfsi+0x2e>
    11d0:	86 95       	lsr	r24
    11d2:	77 95       	ror	r23
    11d4:	67 95       	ror	r22
    11d6:	b3 95       	inc	r27
    11d8:	d9 f7       	brne	.-10     	; 0x11d0 <__fixunssfsi+0x3c>
    11da:	3e f4       	brtc	.+14     	; 0x11ea <__fixunssfsi+0x56>
    11dc:	90 95       	com	r25
    11de:	80 95       	com	r24
    11e0:	70 95       	com	r23
    11e2:	61 95       	neg	r22
    11e4:	7f 4f       	sbci	r23, 0xFF	; 255
    11e6:	8f 4f       	sbci	r24, 0xFF	; 255
    11e8:	9f 4f       	sbci	r25, 0xFF	; 255
    11ea:	08 95       	ret

000011ec <__floatunsisf>:
    11ec:	e8 94       	clt
    11ee:	09 c0       	rjmp	.+18     	; 0x1202 <__floatsisf+0x12>

000011f0 <__floatsisf>:
    11f0:	97 fb       	bst	r25, 7
    11f2:	3e f4       	brtc	.+14     	; 0x1202 <__floatsisf+0x12>
    11f4:	90 95       	com	r25
    11f6:	80 95       	com	r24
    11f8:	70 95       	com	r23
    11fa:	61 95       	neg	r22
    11fc:	7f 4f       	sbci	r23, 0xFF	; 255
    11fe:	8f 4f       	sbci	r24, 0xFF	; 255
    1200:	9f 4f       	sbci	r25, 0xFF	; 255
    1202:	99 23       	and	r25, r25
    1204:	a9 f0       	breq	.+42     	; 0x1230 <__floatsisf+0x40>
    1206:	f9 2f       	mov	r31, r25
    1208:	96 e9       	ldi	r25, 0x96	; 150
    120a:	bb 27       	eor	r27, r27
    120c:	93 95       	inc	r25
    120e:	f6 95       	lsr	r31
    1210:	87 95       	ror	r24
    1212:	77 95       	ror	r23
    1214:	67 95       	ror	r22
    1216:	b7 95       	ror	r27
    1218:	f1 11       	cpse	r31, r1
    121a:	f8 cf       	rjmp	.-16     	; 0x120c <__floatsisf+0x1c>
    121c:	fa f4       	brpl	.+62     	; 0x125c <__floatsisf+0x6c>
    121e:	bb 0f       	add	r27, r27
    1220:	11 f4       	brne	.+4      	; 0x1226 <__floatsisf+0x36>
    1222:	60 ff       	sbrs	r22, 0
    1224:	1b c0       	rjmp	.+54     	; 0x125c <__floatsisf+0x6c>
    1226:	6f 5f       	subi	r22, 0xFF	; 255
    1228:	7f 4f       	sbci	r23, 0xFF	; 255
    122a:	8f 4f       	sbci	r24, 0xFF	; 255
    122c:	9f 4f       	sbci	r25, 0xFF	; 255
    122e:	16 c0       	rjmp	.+44     	; 0x125c <__floatsisf+0x6c>
    1230:	88 23       	and	r24, r24
    1232:	11 f0       	breq	.+4      	; 0x1238 <__floatsisf+0x48>
    1234:	96 e9       	ldi	r25, 0x96	; 150
    1236:	11 c0       	rjmp	.+34     	; 0x125a <__floatsisf+0x6a>
    1238:	77 23       	and	r23, r23
    123a:	21 f0       	breq	.+8      	; 0x1244 <__floatsisf+0x54>
    123c:	9e e8       	ldi	r25, 0x8E	; 142
    123e:	87 2f       	mov	r24, r23
    1240:	76 2f       	mov	r23, r22
    1242:	05 c0       	rjmp	.+10     	; 0x124e <__floatsisf+0x5e>
    1244:	66 23       	and	r22, r22
    1246:	71 f0       	breq	.+28     	; 0x1264 <__floatsisf+0x74>
    1248:	96 e8       	ldi	r25, 0x86	; 134
    124a:	86 2f       	mov	r24, r22
    124c:	70 e0       	ldi	r23, 0x00	; 0
    124e:	60 e0       	ldi	r22, 0x00	; 0
    1250:	2a f0       	brmi	.+10     	; 0x125c <__floatsisf+0x6c>
    1252:	9a 95       	dec	r25
    1254:	66 0f       	add	r22, r22
    1256:	77 1f       	adc	r23, r23
    1258:	88 1f       	adc	r24, r24
    125a:	da f7       	brpl	.-10     	; 0x1252 <__floatsisf+0x62>
    125c:	88 0f       	add	r24, r24
    125e:	96 95       	lsr	r25
    1260:	87 95       	ror	r24
    1262:	97 f9       	bld	r25, 7
    1264:	08 95       	ret

00001266 <__fp_cmp>:
    1266:	99 0f       	add	r25, r25
    1268:	00 08       	sbc	r0, r0
    126a:	55 0f       	add	r21, r21
    126c:	aa 0b       	sbc	r26, r26
    126e:	e0 e8       	ldi	r30, 0x80	; 128
    1270:	fe ef       	ldi	r31, 0xFE	; 254
    1272:	16 16       	cp	r1, r22
    1274:	17 06       	cpc	r1, r23
    1276:	e8 07       	cpc	r30, r24
    1278:	f9 07       	cpc	r31, r25
    127a:	c0 f0       	brcs	.+48     	; 0x12ac <__fp_cmp+0x46>
    127c:	12 16       	cp	r1, r18
    127e:	13 06       	cpc	r1, r19
    1280:	e4 07       	cpc	r30, r20
    1282:	f5 07       	cpc	r31, r21
    1284:	98 f0       	brcs	.+38     	; 0x12ac <__fp_cmp+0x46>
    1286:	62 1b       	sub	r22, r18
    1288:	73 0b       	sbc	r23, r19
    128a:	84 0b       	sbc	r24, r20
    128c:	95 0b       	sbc	r25, r21
    128e:	39 f4       	brne	.+14     	; 0x129e <__fp_cmp+0x38>
    1290:	0a 26       	eor	r0, r26
    1292:	61 f0       	breq	.+24     	; 0x12ac <__fp_cmp+0x46>
    1294:	23 2b       	or	r18, r19
    1296:	24 2b       	or	r18, r20
    1298:	25 2b       	or	r18, r21
    129a:	21 f4       	brne	.+8      	; 0x12a4 <__fp_cmp+0x3e>
    129c:	08 95       	ret
    129e:	0a 26       	eor	r0, r26
    12a0:	09 f4       	brne	.+2      	; 0x12a4 <__fp_cmp+0x3e>
    12a2:	a1 40       	sbci	r26, 0x01	; 1
    12a4:	a6 95       	lsr	r26
    12a6:	8f ef       	ldi	r24, 0xFF	; 255
    12a8:	81 1d       	adc	r24, r1
    12aa:	81 1d       	adc	r24, r1
    12ac:	08 95       	ret

000012ae <__fp_inf>:
    12ae:	97 f9       	bld	r25, 7
    12b0:	9f 67       	ori	r25, 0x7F	; 127
    12b2:	80 e8       	ldi	r24, 0x80	; 128
    12b4:	70 e0       	ldi	r23, 0x00	; 0
    12b6:	60 e0       	ldi	r22, 0x00	; 0
    12b8:	08 95       	ret

000012ba <__fp_nan>:
    12ba:	9f ef       	ldi	r25, 0xFF	; 255
    12bc:	80 ec       	ldi	r24, 0xC0	; 192
    12be:	08 95       	ret

000012c0 <__fp_pscA>:
    12c0:	00 24       	eor	r0, r0
    12c2:	0a 94       	dec	r0
    12c4:	16 16       	cp	r1, r22
    12c6:	17 06       	cpc	r1, r23
    12c8:	18 06       	cpc	r1, r24
    12ca:	09 06       	cpc	r0, r25
    12cc:	08 95       	ret

000012ce <__fp_pscB>:
    12ce:	00 24       	eor	r0, r0
    12d0:	0a 94       	dec	r0
    12d2:	12 16       	cp	r1, r18
    12d4:	13 06       	cpc	r1, r19
    12d6:	14 06       	cpc	r1, r20
    12d8:	05 06       	cpc	r0, r21
    12da:	08 95       	ret

000012dc <__fp_round>:
    12dc:	09 2e       	mov	r0, r25
    12de:	03 94       	inc	r0
    12e0:	00 0c       	add	r0, r0
    12e2:	11 f4       	brne	.+4      	; 0x12e8 <__fp_round+0xc>
    12e4:	88 23       	and	r24, r24
    12e6:	52 f0       	brmi	.+20     	; 0x12fc <__fp_round+0x20>
    12e8:	bb 0f       	add	r27, r27
    12ea:	40 f4       	brcc	.+16     	; 0x12fc <__fp_round+0x20>
    12ec:	bf 2b       	or	r27, r31
    12ee:	11 f4       	brne	.+4      	; 0x12f4 <__fp_round+0x18>
    12f0:	60 ff       	sbrs	r22, 0
    12f2:	04 c0       	rjmp	.+8      	; 0x12fc <__fp_round+0x20>
    12f4:	6f 5f       	subi	r22, 0xFF	; 255
    12f6:	7f 4f       	sbci	r23, 0xFF	; 255
    12f8:	8f 4f       	sbci	r24, 0xFF	; 255
    12fa:	9f 4f       	sbci	r25, 0xFF	; 255
    12fc:	08 95       	ret

000012fe <__fp_split3>:
    12fe:	57 fd       	sbrc	r21, 7
    1300:	90 58       	subi	r25, 0x80	; 128
    1302:	44 0f       	add	r20, r20
    1304:	55 1f       	adc	r21, r21
    1306:	59 f0       	breq	.+22     	; 0x131e <__fp_splitA+0x10>
    1308:	5f 3f       	cpi	r21, 0xFF	; 255
    130a:	71 f0       	breq	.+28     	; 0x1328 <__fp_splitA+0x1a>
    130c:	47 95       	ror	r20

0000130e <__fp_splitA>:
    130e:	88 0f       	add	r24, r24
    1310:	97 fb       	bst	r25, 7
    1312:	99 1f       	adc	r25, r25
    1314:	61 f0       	breq	.+24     	; 0x132e <__fp_splitA+0x20>
    1316:	9f 3f       	cpi	r25, 0xFF	; 255
    1318:	79 f0       	breq	.+30     	; 0x1338 <__fp_splitA+0x2a>
    131a:	87 95       	ror	r24
    131c:	08 95       	ret
    131e:	12 16       	cp	r1, r18
    1320:	13 06       	cpc	r1, r19
    1322:	14 06       	cpc	r1, r20
    1324:	55 1f       	adc	r21, r21
    1326:	f2 cf       	rjmp	.-28     	; 0x130c <__fp_split3+0xe>
    1328:	46 95       	lsr	r20
    132a:	f1 df       	rcall	.-30     	; 0x130e <__fp_splitA>
    132c:	08 c0       	rjmp	.+16     	; 0x133e <__fp_splitA+0x30>
    132e:	16 16       	cp	r1, r22
    1330:	17 06       	cpc	r1, r23
    1332:	18 06       	cpc	r1, r24
    1334:	99 1f       	adc	r25, r25
    1336:	f1 cf       	rjmp	.-30     	; 0x131a <__fp_splitA+0xc>
    1338:	86 95       	lsr	r24
    133a:	71 05       	cpc	r23, r1
    133c:	61 05       	cpc	r22, r1
    133e:	08 94       	sec
    1340:	08 95       	ret

00001342 <__fp_zero>:
    1342:	e8 94       	clt

00001344 <__fp_szero>:
    1344:	bb 27       	eor	r27, r27
    1346:	66 27       	eor	r22, r22
    1348:	77 27       	eor	r23, r23
    134a:	cb 01       	movw	r24, r22
    134c:	97 f9       	bld	r25, 7
    134e:	08 95       	ret

00001350 <__gesf2>:
    1350:	8a df       	rcall	.-236    	; 0x1266 <__fp_cmp>
    1352:	08 f4       	brcc	.+2      	; 0x1356 <__gesf2+0x6>
    1354:	8f ef       	ldi	r24, 0xFF	; 255
    1356:	08 95       	ret

00001358 <lrint>:
    1358:	da df       	rcall	.-76     	; 0x130e <__fp_splitA>
    135a:	a8 f1       	brcs	.+106    	; 0x13c6 <lrint+0x6e>
    135c:	9e 57       	subi	r25, 0x7E	; 126
    135e:	a8 f1       	brcs	.+106    	; 0x13ca <lrint+0x72>
    1360:	98 51       	subi	r25, 0x18	; 24
    1362:	60 f0       	brcs	.+24     	; 0x137c <lrint+0x24>
    1364:	39 f1       	breq	.+78     	; 0x13b4 <lrint+0x5c>
    1366:	98 30       	cpi	r25, 0x08	; 8
    1368:	70 f5       	brcc	.+92     	; 0x13c6 <lrint+0x6e>
    136a:	09 2e       	mov	r0, r25
    136c:	99 27       	eor	r25, r25
    136e:	66 0f       	add	r22, r22
    1370:	77 1f       	adc	r23, r23
    1372:	88 1f       	adc	r24, r24
    1374:	99 1f       	adc	r25, r25
    1376:	0a 94       	dec	r0
    1378:	d1 f7       	brne	.-12     	; 0x136e <lrint+0x16>
    137a:	1c c0       	rjmp	.+56     	; 0x13b4 <lrint+0x5c>
    137c:	bb 27       	eor	r27, r27
    137e:	99 3f       	cpi	r25, 0xF9	; 249
    1380:	4c f4       	brge	.+18     	; 0x1394 <lrint+0x3c>
    1382:	b1 11       	cpse	r27, r1
    1384:	b1 e0       	ldi	r27, 0x01	; 1
    1386:	b6 2b       	or	r27, r22
    1388:	67 2f       	mov	r22, r23
    138a:	78 2f       	mov	r23, r24
    138c:	88 27       	eor	r24, r24
    138e:	98 5f       	subi	r25, 0xF8	; 248
    1390:	b1 f7       	brne	.-20     	; 0x137e <lrint+0x26>
    1392:	08 c0       	rjmp	.+16     	; 0x13a4 <lrint+0x4c>
    1394:	86 95       	lsr	r24
    1396:	77 95       	ror	r23
    1398:	67 95       	ror	r22
    139a:	b7 95       	ror	r27
    139c:	08 f4       	brcc	.+2      	; 0x13a0 <lrint+0x48>
    139e:	b1 60       	ori	r27, 0x01	; 1
    13a0:	93 95       	inc	r25
    13a2:	c1 f7       	brne	.-16     	; 0x1394 <lrint+0x3c>
    13a4:	bb 0f       	add	r27, r27
    13a6:	30 f4       	brcc	.+12     	; 0x13b4 <lrint+0x5c>
    13a8:	11 f4       	brne	.+4      	; 0x13ae <lrint+0x56>
    13aa:	60 ff       	sbrs	r22, 0
    13ac:	03 c0       	rjmp	.+6      	; 0x13b4 <lrint+0x5c>
    13ae:	6f 5f       	subi	r22, 0xFF	; 255
    13b0:	7f 4f       	sbci	r23, 0xFF	; 255
    13b2:	8f 4f       	sbci	r24, 0xFF	; 255
    13b4:	3e f4       	brtc	.+14     	; 0x13c4 <lrint+0x6c>
    13b6:	90 95       	com	r25
    13b8:	80 95       	com	r24
    13ba:	70 95       	com	r23
    13bc:	61 95       	neg	r22
    13be:	7f 4f       	sbci	r23, 0xFF	; 255
    13c0:	8f 4f       	sbci	r24, 0xFF	; 255
    13c2:	9f 4f       	sbci	r25, 0xFF	; 255
    13c4:	08 95       	ret
    13c6:	68 94       	set
    13c8:	bd cf       	rjmp	.-134    	; 0x1344 <__fp_szero>
    13ca:	bb cf       	rjmp	.-138    	; 0x1342 <__fp_zero>

000013cc <__mulsf3>:
    13cc:	0b d0       	rcall	.+22     	; 0x13e4 <__mulsf3x>
    13ce:	86 cf       	rjmp	.-244    	; 0x12dc <__fp_round>
    13d0:	77 df       	rcall	.-274    	; 0x12c0 <__fp_pscA>
    13d2:	28 f0       	brcs	.+10     	; 0x13de <__mulsf3+0x12>
    13d4:	7c df       	rcall	.-264    	; 0x12ce <__fp_pscB>
    13d6:	18 f0       	brcs	.+6      	; 0x13de <__mulsf3+0x12>
    13d8:	95 23       	and	r25, r21
    13da:	09 f0       	breq	.+2      	; 0x13de <__mulsf3+0x12>
    13dc:	68 cf       	rjmp	.-304    	; 0x12ae <__fp_inf>
    13de:	6d cf       	rjmp	.-294    	; 0x12ba <__fp_nan>
    13e0:	11 24       	eor	r1, r1
    13e2:	b0 cf       	rjmp	.-160    	; 0x1344 <__fp_szero>

000013e4 <__mulsf3x>:
    13e4:	8c df       	rcall	.-232    	; 0x12fe <__fp_split3>
    13e6:	a0 f3       	brcs	.-24     	; 0x13d0 <__mulsf3+0x4>

000013e8 <__mulsf3_pse>:
    13e8:	95 9f       	mul	r25, r21
    13ea:	d1 f3       	breq	.-12     	; 0x13e0 <__mulsf3+0x14>
    13ec:	95 0f       	add	r25, r21
    13ee:	50 e0       	ldi	r21, 0x00	; 0
    13f0:	55 1f       	adc	r21, r21
    13f2:	62 9f       	mul	r22, r18
    13f4:	f0 01       	movw	r30, r0
    13f6:	72 9f       	mul	r23, r18
    13f8:	bb 27       	eor	r27, r27
    13fa:	f0 0d       	add	r31, r0
    13fc:	b1 1d       	adc	r27, r1
    13fe:	63 9f       	mul	r22, r19
    1400:	aa 27       	eor	r26, r26
    1402:	f0 0d       	add	r31, r0
    1404:	b1 1d       	adc	r27, r1
    1406:	aa 1f       	adc	r26, r26
    1408:	64 9f       	mul	r22, r20
    140a:	66 27       	eor	r22, r22
    140c:	b0 0d       	add	r27, r0
    140e:	a1 1d       	adc	r26, r1
    1410:	66 1f       	adc	r22, r22
    1412:	82 9f       	mul	r24, r18
    1414:	22 27       	eor	r18, r18
    1416:	b0 0d       	add	r27, r0
    1418:	a1 1d       	adc	r26, r1
    141a:	62 1f       	adc	r22, r18
    141c:	73 9f       	mul	r23, r19
    141e:	b0 0d       	add	r27, r0
    1420:	a1 1d       	adc	r26, r1
    1422:	62 1f       	adc	r22, r18
    1424:	83 9f       	mul	r24, r19
    1426:	a0 0d       	add	r26, r0
    1428:	61 1d       	adc	r22, r1
    142a:	22 1f       	adc	r18, r18
    142c:	74 9f       	mul	r23, r20
    142e:	33 27       	eor	r19, r19
    1430:	a0 0d       	add	r26, r0
    1432:	61 1d       	adc	r22, r1
    1434:	23 1f       	adc	r18, r19
    1436:	84 9f       	mul	r24, r20
    1438:	60 0d       	add	r22, r0
    143a:	21 1d       	adc	r18, r1
    143c:	82 2f       	mov	r24, r18
    143e:	76 2f       	mov	r23, r22
    1440:	6a 2f       	mov	r22, r26
    1442:	11 24       	eor	r1, r1
    1444:	9f 57       	subi	r25, 0x7F	; 127
    1446:	50 40       	sbci	r21, 0x00	; 0
    1448:	8a f0       	brmi	.+34     	; 0x146c <__mulsf3_pse+0x84>
    144a:	e1 f0       	breq	.+56     	; 0x1484 <__mulsf3_pse+0x9c>
    144c:	88 23       	and	r24, r24
    144e:	4a f0       	brmi	.+18     	; 0x1462 <__mulsf3_pse+0x7a>
    1450:	ee 0f       	add	r30, r30
    1452:	ff 1f       	adc	r31, r31
    1454:	bb 1f       	adc	r27, r27
    1456:	66 1f       	adc	r22, r22
    1458:	77 1f       	adc	r23, r23
    145a:	88 1f       	adc	r24, r24
    145c:	91 50       	subi	r25, 0x01	; 1
    145e:	50 40       	sbci	r21, 0x00	; 0
    1460:	a9 f7       	brne	.-22     	; 0x144c <__mulsf3_pse+0x64>
    1462:	9e 3f       	cpi	r25, 0xFE	; 254
    1464:	51 05       	cpc	r21, r1
    1466:	70 f0       	brcs	.+28     	; 0x1484 <__mulsf3_pse+0x9c>
    1468:	22 cf       	rjmp	.-444    	; 0x12ae <__fp_inf>
    146a:	6c cf       	rjmp	.-296    	; 0x1344 <__fp_szero>
    146c:	5f 3f       	cpi	r21, 0xFF	; 255
    146e:	ec f3       	brlt	.-6      	; 0x146a <__mulsf3_pse+0x82>
    1470:	98 3e       	cpi	r25, 0xE8	; 232
    1472:	dc f3       	brlt	.-10     	; 0x146a <__mulsf3_pse+0x82>
    1474:	86 95       	lsr	r24
    1476:	77 95       	ror	r23
    1478:	67 95       	ror	r22
    147a:	b7 95       	ror	r27
    147c:	f7 95       	ror	r31
    147e:	e7 95       	ror	r30
    1480:	9f 5f       	subi	r25, 0xFF	; 255
    1482:	c1 f7       	brne	.-16     	; 0x1474 <__mulsf3_pse+0x8c>
    1484:	fe 2b       	or	r31, r30
    1486:	88 0f       	add	r24, r24
    1488:	91 1d       	adc	r25, r1
    148a:	96 95       	lsr	r25
    148c:	87 95       	ror	r24
    148e:	97 f9       	bld	r25, 7
    1490:	08 95       	ret

00001492 <__udivmodsi4>:
    1492:	a1 e2       	ldi	r26, 0x21	; 33
    1494:	1a 2e       	mov	r1, r26
    1496:	aa 1b       	sub	r26, r26
    1498:	bb 1b       	sub	r27, r27
    149a:	fd 01       	movw	r30, r26
    149c:	0d c0       	rjmp	.+26     	; 0x14b8 <__udivmodsi4_ep>

0000149e <__udivmodsi4_loop>:
    149e:	aa 1f       	adc	r26, r26
    14a0:	bb 1f       	adc	r27, r27
    14a2:	ee 1f       	adc	r30, r30
    14a4:	ff 1f       	adc	r31, r31
    14a6:	a2 17       	cp	r26, r18
    14a8:	b3 07       	cpc	r27, r19
    14aa:	e4 07       	cpc	r30, r20
    14ac:	f5 07       	cpc	r31, r21
    14ae:	20 f0       	brcs	.+8      	; 0x14b8 <__udivmodsi4_ep>
    14b0:	a2 1b       	sub	r26, r18
    14b2:	b3 0b       	sbc	r27, r19
    14b4:	e4 0b       	sbc	r30, r20
    14b6:	f5 0b       	sbc	r31, r21

000014b8 <__udivmodsi4_ep>:
    14b8:	66 1f       	adc	r22, r22
    14ba:	77 1f       	adc	r23, r23
    14bc:	88 1f       	adc	r24, r24
    14be:	99 1f       	adc	r25, r25
    14c0:	1a 94       	dec	r1
    14c2:	69 f7       	brne	.-38     	; 0x149e <__udivmodsi4_loop>
    14c4:	60 95       	com	r22
    14c6:	70 95       	com	r23
    14c8:	80 95       	com	r24
    14ca:	90 95       	com	r25
    14cc:	9b 01       	movw	r18, r22
    14ce:	ac 01       	movw	r20, r24
    14d0:	bd 01       	movw	r22, r26
    14d2:	cf 01       	movw	r24, r30
    14d4:	08 95       	ret

000014d6 <__muluhisi3>:
    14d6:	09 d0       	rcall	.+18     	; 0x14ea <__umulhisi3>
    14d8:	a5 9f       	mul	r26, r21
    14da:	90 0d       	add	r25, r0
    14dc:	b4 9f       	mul	r27, r20
    14de:	90 0d       	add	r25, r0
    14e0:	a4 9f       	mul	r26, r20
    14e2:	80 0d       	add	r24, r0
    14e4:	91 1d       	adc	r25, r1
    14e6:	11 24       	eor	r1, r1
    14e8:	08 95       	ret

000014ea <__umulhisi3>:
    14ea:	a2 9f       	mul	r26, r18
    14ec:	b0 01       	movw	r22, r0
    14ee:	b3 9f       	mul	r27, r19
    14f0:	c0 01       	movw	r24, r0
    14f2:	a3 9f       	mul	r26, r19
    14f4:	70 0d       	add	r23, r0
    14f6:	81 1d       	adc	r24, r1
    14f8:	11 24       	eor	r1, r1
    14fa:	91 1d       	adc	r25, r1
    14fc:	b2 9f       	mul	r27, r18
    14fe:	70 0d       	add	r23, r0
    1500:	81 1d       	adc	r24, r1
    1502:	11 24       	eor	r1, r1
    1504:	91 1d       	adc	r25, r1
    1506:	08 95       	ret

00001508 <sprintf>:
    1508:	0f 93       	push	r16
    150a:	1f 93       	push	r17
    150c:	cf 93       	push	r28
    150e:	df 93       	push	r29
    1510:	cd b7       	in	r28, 0x3d	; 61
    1512:	de b7       	in	r29, 0x3e	; 62
    1514:	2e 97       	sbiw	r28, 0x0e	; 14
    1516:	0f b6       	in	r0, 0x3f	; 63
    1518:	f8 94       	cli
    151a:	de bf       	out	0x3e, r29	; 62
    151c:	0f be       	out	0x3f, r0	; 63
    151e:	cd bf       	out	0x3d, r28	; 61
    1520:	0e 89       	ldd	r16, Y+22	; 0x16
    1522:	1f 89       	ldd	r17, Y+23	; 0x17
    1524:	86 e0       	ldi	r24, 0x06	; 6
    1526:	8c 83       	std	Y+4, r24	; 0x04
    1528:	1a 83       	std	Y+2, r17	; 0x02
    152a:	09 83       	std	Y+1, r16	; 0x01
    152c:	8f ef       	ldi	r24, 0xFF	; 255
    152e:	9f e7       	ldi	r25, 0x7F	; 127
    1530:	9e 83       	std	Y+6, r25	; 0x06
    1532:	8d 83       	std	Y+5, r24	; 0x05
    1534:	ae 01       	movw	r20, r28
    1536:	46 5e       	subi	r20, 0xE6	; 230
    1538:	5f 4f       	sbci	r21, 0xFF	; 255
    153a:	68 8d       	ldd	r22, Y+24	; 0x18
    153c:	79 8d       	ldd	r23, Y+25	; 0x19
    153e:	ce 01       	movw	r24, r28
    1540:	01 96       	adiw	r24, 0x01	; 1
    1542:	31 d0       	rcall	.+98     	; 0x15a6 <vfprintf>
    1544:	ef 81       	ldd	r30, Y+7	; 0x07
    1546:	f8 85       	ldd	r31, Y+8	; 0x08
    1548:	e0 0f       	add	r30, r16
    154a:	f1 1f       	adc	r31, r17
    154c:	10 82       	st	Z, r1
    154e:	2e 96       	adiw	r28, 0x0e	; 14
    1550:	0f b6       	in	r0, 0x3f	; 63
    1552:	f8 94       	cli
    1554:	de bf       	out	0x3e, r29	; 62
    1556:	0f be       	out	0x3f, r0	; 63
    1558:	cd bf       	out	0x3d, r28	; 61
    155a:	df 91       	pop	r29
    155c:	cf 91       	pop	r28
    155e:	1f 91       	pop	r17
    1560:	0f 91       	pop	r16
    1562:	08 95       	ret

00001564 <sscanf>:
    1564:	cf 93       	push	r28
    1566:	df 93       	push	r29
    1568:	cd b7       	in	r28, 0x3d	; 61
    156a:	de b7       	in	r29, 0x3e	; 62
    156c:	2e 97       	sbiw	r28, 0x0e	; 14
    156e:	0f b6       	in	r0, 0x3f	; 63
    1570:	f8 94       	cli
    1572:	de bf       	out	0x3e, r29	; 62
    1574:	0f be       	out	0x3f, r0	; 63
    1576:	cd bf       	out	0x3d, r28	; 61
    1578:	85 e0       	ldi	r24, 0x05	; 5
    157a:	8c 83       	std	Y+4, r24	; 0x04
    157c:	8c 89       	ldd	r24, Y+20	; 0x14
    157e:	9d 89       	ldd	r25, Y+21	; 0x15
    1580:	9a 83       	std	Y+2, r25	; 0x02
    1582:	89 83       	std	Y+1, r24	; 0x01
    1584:	ae 01       	movw	r20, r28
    1586:	48 5e       	subi	r20, 0xE8	; 232
    1588:	5f 4f       	sbci	r21, 0xFF	; 255
    158a:	6e 89       	ldd	r22, Y+22	; 0x16
    158c:	7f 89       	ldd	r23, Y+23	; 0x17
    158e:	ce 01       	movw	r24, r28
    1590:	01 96       	adiw	r24, 0x01	; 1
    1592:	b8 d3       	rcall	.+1904   	; 0x1d04 <vfscanf>
    1594:	2e 96       	adiw	r28, 0x0e	; 14
    1596:	0f b6       	in	r0, 0x3f	; 63
    1598:	f8 94       	cli
    159a:	de bf       	out	0x3e, r29	; 62
    159c:	0f be       	out	0x3f, r0	; 63
    159e:	cd bf       	out	0x3d, r28	; 61
    15a0:	df 91       	pop	r29
    15a2:	cf 91       	pop	r28
    15a4:	08 95       	ret

000015a6 <vfprintf>:
    15a6:	2f 92       	push	r2
    15a8:	3f 92       	push	r3
    15aa:	4f 92       	push	r4
    15ac:	5f 92       	push	r5
    15ae:	6f 92       	push	r6
    15b0:	7f 92       	push	r7
    15b2:	8f 92       	push	r8
    15b4:	9f 92       	push	r9
    15b6:	af 92       	push	r10
    15b8:	bf 92       	push	r11
    15ba:	cf 92       	push	r12
    15bc:	df 92       	push	r13
    15be:	ef 92       	push	r14
    15c0:	ff 92       	push	r15
    15c2:	0f 93       	push	r16
    15c4:	1f 93       	push	r17
    15c6:	cf 93       	push	r28
    15c8:	df 93       	push	r29
    15ca:	cd b7       	in	r28, 0x3d	; 61
    15cc:	de b7       	in	r29, 0x3e	; 62
    15ce:	2b 97       	sbiw	r28, 0x0b	; 11
    15d0:	0f b6       	in	r0, 0x3f	; 63
    15d2:	f8 94       	cli
    15d4:	de bf       	out	0x3e, r29	; 62
    15d6:	0f be       	out	0x3f, r0	; 63
    15d8:	cd bf       	out	0x3d, r28	; 61
    15da:	6c 01       	movw	r12, r24
    15dc:	7b 01       	movw	r14, r22
    15de:	8a 01       	movw	r16, r20
    15e0:	fc 01       	movw	r30, r24
    15e2:	17 82       	std	Z+7, r1	; 0x07
    15e4:	16 82       	std	Z+6, r1	; 0x06
    15e6:	83 81       	ldd	r24, Z+3	; 0x03
    15e8:	81 ff       	sbrs	r24, 1
    15ea:	bf c1       	rjmp	.+894    	; 0x196a <vfprintf+0x3c4>
    15ec:	ce 01       	movw	r24, r28
    15ee:	01 96       	adiw	r24, 0x01	; 1
    15f0:	3c 01       	movw	r6, r24
    15f2:	f6 01       	movw	r30, r12
    15f4:	93 81       	ldd	r25, Z+3	; 0x03
    15f6:	f7 01       	movw	r30, r14
    15f8:	93 fd       	sbrc	r25, 3
    15fa:	85 91       	lpm	r24, Z+
    15fc:	93 ff       	sbrs	r25, 3
    15fe:	81 91       	ld	r24, Z+
    1600:	7f 01       	movw	r14, r30
    1602:	88 23       	and	r24, r24
    1604:	09 f4       	brne	.+2      	; 0x1608 <vfprintf+0x62>
    1606:	ad c1       	rjmp	.+858    	; 0x1962 <vfprintf+0x3bc>
    1608:	85 32       	cpi	r24, 0x25	; 37
    160a:	39 f4       	brne	.+14     	; 0x161a <vfprintf+0x74>
    160c:	93 fd       	sbrc	r25, 3
    160e:	85 91       	lpm	r24, Z+
    1610:	93 ff       	sbrs	r25, 3
    1612:	81 91       	ld	r24, Z+
    1614:	7f 01       	movw	r14, r30
    1616:	85 32       	cpi	r24, 0x25	; 37
    1618:	21 f4       	brne	.+8      	; 0x1622 <vfprintf+0x7c>
    161a:	b6 01       	movw	r22, r12
    161c:	90 e0       	ldi	r25, 0x00	; 0
    161e:	f0 d4       	rcall	.+2528   	; 0x2000 <fputc>
    1620:	e8 cf       	rjmp	.-48     	; 0x15f2 <vfprintf+0x4c>
    1622:	91 2c       	mov	r9, r1
    1624:	21 2c       	mov	r2, r1
    1626:	31 2c       	mov	r3, r1
    1628:	ff e1       	ldi	r31, 0x1F	; 31
    162a:	f3 15       	cp	r31, r3
    162c:	d8 f0       	brcs	.+54     	; 0x1664 <vfprintf+0xbe>
    162e:	8b 32       	cpi	r24, 0x2B	; 43
    1630:	79 f0       	breq	.+30     	; 0x1650 <vfprintf+0xaa>
    1632:	38 f4       	brcc	.+14     	; 0x1642 <vfprintf+0x9c>
    1634:	80 32       	cpi	r24, 0x20	; 32
    1636:	79 f0       	breq	.+30     	; 0x1656 <vfprintf+0xb0>
    1638:	83 32       	cpi	r24, 0x23	; 35
    163a:	a1 f4       	brne	.+40     	; 0x1664 <vfprintf+0xbe>
    163c:	23 2d       	mov	r18, r3
    163e:	20 61       	ori	r18, 0x10	; 16
    1640:	1d c0       	rjmp	.+58     	; 0x167c <vfprintf+0xd6>
    1642:	8d 32       	cpi	r24, 0x2D	; 45
    1644:	61 f0       	breq	.+24     	; 0x165e <vfprintf+0xb8>
    1646:	80 33       	cpi	r24, 0x30	; 48
    1648:	69 f4       	brne	.+26     	; 0x1664 <vfprintf+0xbe>
    164a:	23 2d       	mov	r18, r3
    164c:	21 60       	ori	r18, 0x01	; 1
    164e:	16 c0       	rjmp	.+44     	; 0x167c <vfprintf+0xd6>
    1650:	83 2d       	mov	r24, r3
    1652:	82 60       	ori	r24, 0x02	; 2
    1654:	38 2e       	mov	r3, r24
    1656:	e3 2d       	mov	r30, r3
    1658:	e4 60       	ori	r30, 0x04	; 4
    165a:	3e 2e       	mov	r3, r30
    165c:	2a c0       	rjmp	.+84     	; 0x16b2 <vfprintf+0x10c>
    165e:	f3 2d       	mov	r31, r3
    1660:	f8 60       	ori	r31, 0x08	; 8
    1662:	1d c0       	rjmp	.+58     	; 0x169e <vfprintf+0xf8>
    1664:	37 fc       	sbrc	r3, 7
    1666:	2d c0       	rjmp	.+90     	; 0x16c2 <vfprintf+0x11c>
    1668:	20 ed       	ldi	r18, 0xD0	; 208
    166a:	28 0f       	add	r18, r24
    166c:	2a 30       	cpi	r18, 0x0A	; 10
    166e:	40 f0       	brcs	.+16     	; 0x1680 <vfprintf+0xda>
    1670:	8e 32       	cpi	r24, 0x2E	; 46
    1672:	b9 f4       	brne	.+46     	; 0x16a2 <vfprintf+0xfc>
    1674:	36 fc       	sbrc	r3, 6
    1676:	75 c1       	rjmp	.+746    	; 0x1962 <vfprintf+0x3bc>
    1678:	23 2d       	mov	r18, r3
    167a:	20 64       	ori	r18, 0x40	; 64
    167c:	32 2e       	mov	r3, r18
    167e:	19 c0       	rjmp	.+50     	; 0x16b2 <vfprintf+0x10c>
    1680:	36 fe       	sbrs	r3, 6
    1682:	06 c0       	rjmp	.+12     	; 0x1690 <vfprintf+0xea>
    1684:	8a e0       	ldi	r24, 0x0A	; 10
    1686:	98 9e       	mul	r9, r24
    1688:	20 0d       	add	r18, r0
    168a:	11 24       	eor	r1, r1
    168c:	92 2e       	mov	r9, r18
    168e:	11 c0       	rjmp	.+34     	; 0x16b2 <vfprintf+0x10c>
    1690:	ea e0       	ldi	r30, 0x0A	; 10
    1692:	2e 9e       	mul	r2, r30
    1694:	20 0d       	add	r18, r0
    1696:	11 24       	eor	r1, r1
    1698:	22 2e       	mov	r2, r18
    169a:	f3 2d       	mov	r31, r3
    169c:	f0 62       	ori	r31, 0x20	; 32
    169e:	3f 2e       	mov	r3, r31
    16a0:	08 c0       	rjmp	.+16     	; 0x16b2 <vfprintf+0x10c>
    16a2:	8c 36       	cpi	r24, 0x6C	; 108
    16a4:	21 f4       	brne	.+8      	; 0x16ae <vfprintf+0x108>
    16a6:	83 2d       	mov	r24, r3
    16a8:	80 68       	ori	r24, 0x80	; 128
    16aa:	38 2e       	mov	r3, r24
    16ac:	02 c0       	rjmp	.+4      	; 0x16b2 <vfprintf+0x10c>
    16ae:	88 36       	cpi	r24, 0x68	; 104
    16b0:	41 f4       	brne	.+16     	; 0x16c2 <vfprintf+0x11c>
    16b2:	f7 01       	movw	r30, r14
    16b4:	93 fd       	sbrc	r25, 3
    16b6:	85 91       	lpm	r24, Z+
    16b8:	93 ff       	sbrs	r25, 3
    16ba:	81 91       	ld	r24, Z+
    16bc:	7f 01       	movw	r14, r30
    16be:	81 11       	cpse	r24, r1
    16c0:	b3 cf       	rjmp	.-154    	; 0x1628 <vfprintf+0x82>
    16c2:	98 2f       	mov	r25, r24
    16c4:	9f 7d       	andi	r25, 0xDF	; 223
    16c6:	95 54       	subi	r25, 0x45	; 69
    16c8:	93 30       	cpi	r25, 0x03	; 3
    16ca:	28 f4       	brcc	.+10     	; 0x16d6 <vfprintf+0x130>
    16cc:	0c 5f       	subi	r16, 0xFC	; 252
    16ce:	1f 4f       	sbci	r17, 0xFF	; 255
    16d0:	9f e3       	ldi	r25, 0x3F	; 63
    16d2:	99 83       	std	Y+1, r25	; 0x01
    16d4:	0d c0       	rjmp	.+26     	; 0x16f0 <vfprintf+0x14a>
    16d6:	83 36       	cpi	r24, 0x63	; 99
    16d8:	31 f0       	breq	.+12     	; 0x16e6 <vfprintf+0x140>
    16da:	83 37       	cpi	r24, 0x73	; 115
    16dc:	71 f0       	breq	.+28     	; 0x16fa <vfprintf+0x154>
    16de:	83 35       	cpi	r24, 0x53	; 83
    16e0:	09 f0       	breq	.+2      	; 0x16e4 <vfprintf+0x13e>
    16e2:	55 c0       	rjmp	.+170    	; 0x178e <vfprintf+0x1e8>
    16e4:	20 c0       	rjmp	.+64     	; 0x1726 <vfprintf+0x180>
    16e6:	f8 01       	movw	r30, r16
    16e8:	80 81       	ld	r24, Z
    16ea:	89 83       	std	Y+1, r24	; 0x01
    16ec:	0e 5f       	subi	r16, 0xFE	; 254
    16ee:	1f 4f       	sbci	r17, 0xFF	; 255
    16f0:	88 24       	eor	r8, r8
    16f2:	83 94       	inc	r8
    16f4:	91 2c       	mov	r9, r1
    16f6:	53 01       	movw	r10, r6
    16f8:	12 c0       	rjmp	.+36     	; 0x171e <vfprintf+0x178>
    16fa:	28 01       	movw	r4, r16
    16fc:	f2 e0       	ldi	r31, 0x02	; 2
    16fe:	4f 0e       	add	r4, r31
    1700:	51 1c       	adc	r5, r1
    1702:	f8 01       	movw	r30, r16
    1704:	a0 80       	ld	r10, Z
    1706:	b1 80       	ldd	r11, Z+1	; 0x01
    1708:	36 fe       	sbrs	r3, 6
    170a:	03 c0       	rjmp	.+6      	; 0x1712 <vfprintf+0x16c>
    170c:	69 2d       	mov	r22, r9
    170e:	70 e0       	ldi	r23, 0x00	; 0
    1710:	02 c0       	rjmp	.+4      	; 0x1716 <vfprintf+0x170>
    1712:	6f ef       	ldi	r22, 0xFF	; 255
    1714:	7f ef       	ldi	r23, 0xFF	; 255
    1716:	c5 01       	movw	r24, r10
    1718:	2a d4       	rcall	.+2132   	; 0x1f6e <strnlen>
    171a:	4c 01       	movw	r8, r24
    171c:	82 01       	movw	r16, r4
    171e:	f3 2d       	mov	r31, r3
    1720:	ff 77       	andi	r31, 0x7F	; 127
    1722:	3f 2e       	mov	r3, r31
    1724:	15 c0       	rjmp	.+42     	; 0x1750 <vfprintf+0x1aa>
    1726:	28 01       	movw	r4, r16
    1728:	22 e0       	ldi	r18, 0x02	; 2
    172a:	42 0e       	add	r4, r18
    172c:	51 1c       	adc	r5, r1
    172e:	f8 01       	movw	r30, r16
    1730:	a0 80       	ld	r10, Z
    1732:	b1 80       	ldd	r11, Z+1	; 0x01
    1734:	36 fe       	sbrs	r3, 6
    1736:	03 c0       	rjmp	.+6      	; 0x173e <vfprintf+0x198>
    1738:	69 2d       	mov	r22, r9
    173a:	70 e0       	ldi	r23, 0x00	; 0
    173c:	02 c0       	rjmp	.+4      	; 0x1742 <vfprintf+0x19c>
    173e:	6f ef       	ldi	r22, 0xFF	; 255
    1740:	7f ef       	ldi	r23, 0xFF	; 255
    1742:	c5 01       	movw	r24, r10
    1744:	09 d4       	rcall	.+2066   	; 0x1f58 <strnlen_P>
    1746:	4c 01       	movw	r8, r24
    1748:	f3 2d       	mov	r31, r3
    174a:	f0 68       	ori	r31, 0x80	; 128
    174c:	3f 2e       	mov	r3, r31
    174e:	82 01       	movw	r16, r4
    1750:	33 fc       	sbrc	r3, 3
    1752:	19 c0       	rjmp	.+50     	; 0x1786 <vfprintf+0x1e0>
    1754:	82 2d       	mov	r24, r2
    1756:	90 e0       	ldi	r25, 0x00	; 0
    1758:	88 16       	cp	r8, r24
    175a:	99 06       	cpc	r9, r25
    175c:	a0 f4       	brcc	.+40     	; 0x1786 <vfprintf+0x1e0>
    175e:	b6 01       	movw	r22, r12
    1760:	80 e2       	ldi	r24, 0x20	; 32
    1762:	90 e0       	ldi	r25, 0x00	; 0
    1764:	4d d4       	rcall	.+2202   	; 0x2000 <fputc>
    1766:	2a 94       	dec	r2
    1768:	f5 cf       	rjmp	.-22     	; 0x1754 <vfprintf+0x1ae>
    176a:	f5 01       	movw	r30, r10
    176c:	37 fc       	sbrc	r3, 7
    176e:	85 91       	lpm	r24, Z+
    1770:	37 fe       	sbrs	r3, 7
    1772:	81 91       	ld	r24, Z+
    1774:	5f 01       	movw	r10, r30
    1776:	b6 01       	movw	r22, r12
    1778:	90 e0       	ldi	r25, 0x00	; 0
    177a:	42 d4       	rcall	.+2180   	; 0x2000 <fputc>
    177c:	21 10       	cpse	r2, r1
    177e:	2a 94       	dec	r2
    1780:	21 e0       	ldi	r18, 0x01	; 1
    1782:	82 1a       	sub	r8, r18
    1784:	91 08       	sbc	r9, r1
    1786:	81 14       	cp	r8, r1
    1788:	91 04       	cpc	r9, r1
    178a:	79 f7       	brne	.-34     	; 0x176a <vfprintf+0x1c4>
    178c:	e1 c0       	rjmp	.+450    	; 0x1950 <vfprintf+0x3aa>
    178e:	84 36       	cpi	r24, 0x64	; 100
    1790:	11 f0       	breq	.+4      	; 0x1796 <vfprintf+0x1f0>
    1792:	89 36       	cpi	r24, 0x69	; 105
    1794:	39 f5       	brne	.+78     	; 0x17e4 <vfprintf+0x23e>
    1796:	f8 01       	movw	r30, r16
    1798:	37 fe       	sbrs	r3, 7
    179a:	07 c0       	rjmp	.+14     	; 0x17aa <vfprintf+0x204>
    179c:	60 81       	ld	r22, Z
    179e:	71 81       	ldd	r23, Z+1	; 0x01
    17a0:	82 81       	ldd	r24, Z+2	; 0x02
    17a2:	93 81       	ldd	r25, Z+3	; 0x03
    17a4:	0c 5f       	subi	r16, 0xFC	; 252
    17a6:	1f 4f       	sbci	r17, 0xFF	; 255
    17a8:	08 c0       	rjmp	.+16     	; 0x17ba <vfprintf+0x214>
    17aa:	60 81       	ld	r22, Z
    17ac:	71 81       	ldd	r23, Z+1	; 0x01
    17ae:	07 2e       	mov	r0, r23
    17b0:	00 0c       	add	r0, r0
    17b2:	88 0b       	sbc	r24, r24
    17b4:	99 0b       	sbc	r25, r25
    17b6:	0e 5f       	subi	r16, 0xFE	; 254
    17b8:	1f 4f       	sbci	r17, 0xFF	; 255
    17ba:	f3 2d       	mov	r31, r3
    17bc:	ff 76       	andi	r31, 0x6F	; 111
    17be:	3f 2e       	mov	r3, r31
    17c0:	97 ff       	sbrs	r25, 7
    17c2:	09 c0       	rjmp	.+18     	; 0x17d6 <vfprintf+0x230>
    17c4:	90 95       	com	r25
    17c6:	80 95       	com	r24
    17c8:	70 95       	com	r23
    17ca:	61 95       	neg	r22
    17cc:	7f 4f       	sbci	r23, 0xFF	; 255
    17ce:	8f 4f       	sbci	r24, 0xFF	; 255
    17d0:	9f 4f       	sbci	r25, 0xFF	; 255
    17d2:	f0 68       	ori	r31, 0x80	; 128
    17d4:	3f 2e       	mov	r3, r31
    17d6:	2a e0       	ldi	r18, 0x0A	; 10
    17d8:	30 e0       	ldi	r19, 0x00	; 0
    17da:	a3 01       	movw	r20, r6
    17dc:	66 d4       	rcall	.+2252   	; 0x20aa <__ultoa_invert>
    17de:	88 2e       	mov	r8, r24
    17e0:	86 18       	sub	r8, r6
    17e2:	44 c0       	rjmp	.+136    	; 0x186c <vfprintf+0x2c6>
    17e4:	85 37       	cpi	r24, 0x75	; 117
    17e6:	31 f4       	brne	.+12     	; 0x17f4 <vfprintf+0x24e>
    17e8:	23 2d       	mov	r18, r3
    17ea:	2f 7e       	andi	r18, 0xEF	; 239
    17ec:	b2 2e       	mov	r11, r18
    17ee:	2a e0       	ldi	r18, 0x0A	; 10
    17f0:	30 e0       	ldi	r19, 0x00	; 0
    17f2:	25 c0       	rjmp	.+74     	; 0x183e <vfprintf+0x298>
    17f4:	93 2d       	mov	r25, r3
    17f6:	99 7f       	andi	r25, 0xF9	; 249
    17f8:	b9 2e       	mov	r11, r25
    17fa:	8f 36       	cpi	r24, 0x6F	; 111
    17fc:	c1 f0       	breq	.+48     	; 0x182e <vfprintf+0x288>
    17fe:	18 f4       	brcc	.+6      	; 0x1806 <vfprintf+0x260>
    1800:	88 35       	cpi	r24, 0x58	; 88
    1802:	79 f0       	breq	.+30     	; 0x1822 <vfprintf+0x27c>
    1804:	ae c0       	rjmp	.+348    	; 0x1962 <vfprintf+0x3bc>
    1806:	80 37       	cpi	r24, 0x70	; 112
    1808:	19 f0       	breq	.+6      	; 0x1810 <vfprintf+0x26a>
    180a:	88 37       	cpi	r24, 0x78	; 120
    180c:	21 f0       	breq	.+8      	; 0x1816 <vfprintf+0x270>
    180e:	a9 c0       	rjmp	.+338    	; 0x1962 <vfprintf+0x3bc>
    1810:	e9 2f       	mov	r30, r25
    1812:	e0 61       	ori	r30, 0x10	; 16
    1814:	be 2e       	mov	r11, r30
    1816:	b4 fe       	sbrs	r11, 4
    1818:	0d c0       	rjmp	.+26     	; 0x1834 <vfprintf+0x28e>
    181a:	fb 2d       	mov	r31, r11
    181c:	f4 60       	ori	r31, 0x04	; 4
    181e:	bf 2e       	mov	r11, r31
    1820:	09 c0       	rjmp	.+18     	; 0x1834 <vfprintf+0x28e>
    1822:	34 fe       	sbrs	r3, 4
    1824:	0a c0       	rjmp	.+20     	; 0x183a <vfprintf+0x294>
    1826:	29 2f       	mov	r18, r25
    1828:	26 60       	ori	r18, 0x06	; 6
    182a:	b2 2e       	mov	r11, r18
    182c:	06 c0       	rjmp	.+12     	; 0x183a <vfprintf+0x294>
    182e:	28 e0       	ldi	r18, 0x08	; 8
    1830:	30 e0       	ldi	r19, 0x00	; 0
    1832:	05 c0       	rjmp	.+10     	; 0x183e <vfprintf+0x298>
    1834:	20 e1       	ldi	r18, 0x10	; 16
    1836:	30 e0       	ldi	r19, 0x00	; 0
    1838:	02 c0       	rjmp	.+4      	; 0x183e <vfprintf+0x298>
    183a:	20 e1       	ldi	r18, 0x10	; 16
    183c:	32 e0       	ldi	r19, 0x02	; 2
    183e:	f8 01       	movw	r30, r16
    1840:	b7 fe       	sbrs	r11, 7
    1842:	07 c0       	rjmp	.+14     	; 0x1852 <vfprintf+0x2ac>
    1844:	60 81       	ld	r22, Z
    1846:	71 81       	ldd	r23, Z+1	; 0x01
    1848:	82 81       	ldd	r24, Z+2	; 0x02
    184a:	93 81       	ldd	r25, Z+3	; 0x03
    184c:	0c 5f       	subi	r16, 0xFC	; 252
    184e:	1f 4f       	sbci	r17, 0xFF	; 255
    1850:	06 c0       	rjmp	.+12     	; 0x185e <vfprintf+0x2b8>
    1852:	60 81       	ld	r22, Z
    1854:	71 81       	ldd	r23, Z+1	; 0x01
    1856:	80 e0       	ldi	r24, 0x00	; 0
    1858:	90 e0       	ldi	r25, 0x00	; 0
    185a:	0e 5f       	subi	r16, 0xFE	; 254
    185c:	1f 4f       	sbci	r17, 0xFF	; 255
    185e:	a3 01       	movw	r20, r6
    1860:	24 d4       	rcall	.+2120   	; 0x20aa <__ultoa_invert>
    1862:	88 2e       	mov	r8, r24
    1864:	86 18       	sub	r8, r6
    1866:	fb 2d       	mov	r31, r11
    1868:	ff 77       	andi	r31, 0x7F	; 127
    186a:	3f 2e       	mov	r3, r31
    186c:	36 fe       	sbrs	r3, 6
    186e:	0d c0       	rjmp	.+26     	; 0x188a <vfprintf+0x2e4>
    1870:	23 2d       	mov	r18, r3
    1872:	2e 7f       	andi	r18, 0xFE	; 254
    1874:	a2 2e       	mov	r10, r18
    1876:	89 14       	cp	r8, r9
    1878:	58 f4       	brcc	.+22     	; 0x1890 <vfprintf+0x2ea>
    187a:	34 fe       	sbrs	r3, 4
    187c:	0b c0       	rjmp	.+22     	; 0x1894 <vfprintf+0x2ee>
    187e:	32 fc       	sbrc	r3, 2
    1880:	09 c0       	rjmp	.+18     	; 0x1894 <vfprintf+0x2ee>
    1882:	83 2d       	mov	r24, r3
    1884:	8e 7e       	andi	r24, 0xEE	; 238
    1886:	a8 2e       	mov	r10, r24
    1888:	05 c0       	rjmp	.+10     	; 0x1894 <vfprintf+0x2ee>
    188a:	b8 2c       	mov	r11, r8
    188c:	a3 2c       	mov	r10, r3
    188e:	03 c0       	rjmp	.+6      	; 0x1896 <vfprintf+0x2f0>
    1890:	b8 2c       	mov	r11, r8
    1892:	01 c0       	rjmp	.+2      	; 0x1896 <vfprintf+0x2f0>
    1894:	b9 2c       	mov	r11, r9
    1896:	a4 fe       	sbrs	r10, 4
    1898:	0f c0       	rjmp	.+30     	; 0x18b8 <vfprintf+0x312>
    189a:	fe 01       	movw	r30, r28
    189c:	e8 0d       	add	r30, r8
    189e:	f1 1d       	adc	r31, r1
    18a0:	80 81       	ld	r24, Z
    18a2:	80 33       	cpi	r24, 0x30	; 48
    18a4:	21 f4       	brne	.+8      	; 0x18ae <vfprintf+0x308>
    18a6:	9a 2d       	mov	r25, r10
    18a8:	99 7e       	andi	r25, 0xE9	; 233
    18aa:	a9 2e       	mov	r10, r25
    18ac:	09 c0       	rjmp	.+18     	; 0x18c0 <vfprintf+0x31a>
    18ae:	a2 fe       	sbrs	r10, 2
    18b0:	06 c0       	rjmp	.+12     	; 0x18be <vfprintf+0x318>
    18b2:	b3 94       	inc	r11
    18b4:	b3 94       	inc	r11
    18b6:	04 c0       	rjmp	.+8      	; 0x18c0 <vfprintf+0x31a>
    18b8:	8a 2d       	mov	r24, r10
    18ba:	86 78       	andi	r24, 0x86	; 134
    18bc:	09 f0       	breq	.+2      	; 0x18c0 <vfprintf+0x31a>
    18be:	b3 94       	inc	r11
    18c0:	a3 fc       	sbrc	r10, 3
    18c2:	10 c0       	rjmp	.+32     	; 0x18e4 <vfprintf+0x33e>
    18c4:	a0 fe       	sbrs	r10, 0
    18c6:	06 c0       	rjmp	.+12     	; 0x18d4 <vfprintf+0x32e>
    18c8:	b2 14       	cp	r11, r2
    18ca:	80 f4       	brcc	.+32     	; 0x18ec <vfprintf+0x346>
    18cc:	28 0c       	add	r2, r8
    18ce:	92 2c       	mov	r9, r2
    18d0:	9b 18       	sub	r9, r11
    18d2:	0d c0       	rjmp	.+26     	; 0x18ee <vfprintf+0x348>
    18d4:	b2 14       	cp	r11, r2
    18d6:	58 f4       	brcc	.+22     	; 0x18ee <vfprintf+0x348>
    18d8:	b6 01       	movw	r22, r12
    18da:	80 e2       	ldi	r24, 0x20	; 32
    18dc:	90 e0       	ldi	r25, 0x00	; 0
    18de:	90 d3       	rcall	.+1824   	; 0x2000 <fputc>
    18e0:	b3 94       	inc	r11
    18e2:	f8 cf       	rjmp	.-16     	; 0x18d4 <vfprintf+0x32e>
    18e4:	b2 14       	cp	r11, r2
    18e6:	18 f4       	brcc	.+6      	; 0x18ee <vfprintf+0x348>
    18e8:	2b 18       	sub	r2, r11
    18ea:	02 c0       	rjmp	.+4      	; 0x18f0 <vfprintf+0x34a>
    18ec:	98 2c       	mov	r9, r8
    18ee:	21 2c       	mov	r2, r1
    18f0:	a4 fe       	sbrs	r10, 4
    18f2:	0f c0       	rjmp	.+30     	; 0x1912 <vfprintf+0x36c>
    18f4:	b6 01       	movw	r22, r12
    18f6:	80 e3       	ldi	r24, 0x30	; 48
    18f8:	90 e0       	ldi	r25, 0x00	; 0
    18fa:	82 d3       	rcall	.+1796   	; 0x2000 <fputc>
    18fc:	a2 fe       	sbrs	r10, 2
    18fe:	16 c0       	rjmp	.+44     	; 0x192c <vfprintf+0x386>
    1900:	a1 fc       	sbrc	r10, 1
    1902:	03 c0       	rjmp	.+6      	; 0x190a <vfprintf+0x364>
    1904:	88 e7       	ldi	r24, 0x78	; 120
    1906:	90 e0       	ldi	r25, 0x00	; 0
    1908:	02 c0       	rjmp	.+4      	; 0x190e <vfprintf+0x368>
    190a:	88 e5       	ldi	r24, 0x58	; 88
    190c:	90 e0       	ldi	r25, 0x00	; 0
    190e:	b6 01       	movw	r22, r12
    1910:	0c c0       	rjmp	.+24     	; 0x192a <vfprintf+0x384>
    1912:	8a 2d       	mov	r24, r10
    1914:	86 78       	andi	r24, 0x86	; 134
    1916:	51 f0       	breq	.+20     	; 0x192c <vfprintf+0x386>
    1918:	a1 fe       	sbrs	r10, 1
    191a:	02 c0       	rjmp	.+4      	; 0x1920 <vfprintf+0x37a>
    191c:	8b e2       	ldi	r24, 0x2B	; 43
    191e:	01 c0       	rjmp	.+2      	; 0x1922 <vfprintf+0x37c>
    1920:	80 e2       	ldi	r24, 0x20	; 32
    1922:	a7 fc       	sbrc	r10, 7
    1924:	8d e2       	ldi	r24, 0x2D	; 45
    1926:	b6 01       	movw	r22, r12
    1928:	90 e0       	ldi	r25, 0x00	; 0
    192a:	6a d3       	rcall	.+1748   	; 0x2000 <fputc>
    192c:	89 14       	cp	r8, r9
    192e:	30 f4       	brcc	.+12     	; 0x193c <vfprintf+0x396>
    1930:	b6 01       	movw	r22, r12
    1932:	80 e3       	ldi	r24, 0x30	; 48
    1934:	90 e0       	ldi	r25, 0x00	; 0
    1936:	64 d3       	rcall	.+1736   	; 0x2000 <fputc>
    1938:	9a 94       	dec	r9
    193a:	f8 cf       	rjmp	.-16     	; 0x192c <vfprintf+0x386>
    193c:	8a 94       	dec	r8
    193e:	f3 01       	movw	r30, r6
    1940:	e8 0d       	add	r30, r8
    1942:	f1 1d       	adc	r31, r1
    1944:	80 81       	ld	r24, Z
    1946:	b6 01       	movw	r22, r12
    1948:	90 e0       	ldi	r25, 0x00	; 0
    194a:	5a d3       	rcall	.+1716   	; 0x2000 <fputc>
    194c:	81 10       	cpse	r8, r1
    194e:	f6 cf       	rjmp	.-20     	; 0x193c <vfprintf+0x396>
    1950:	22 20       	and	r2, r2
    1952:	09 f4       	brne	.+2      	; 0x1956 <vfprintf+0x3b0>
    1954:	4e ce       	rjmp	.-868    	; 0x15f2 <vfprintf+0x4c>
    1956:	b6 01       	movw	r22, r12
    1958:	80 e2       	ldi	r24, 0x20	; 32
    195a:	90 e0       	ldi	r25, 0x00	; 0
    195c:	51 d3       	rcall	.+1698   	; 0x2000 <fputc>
    195e:	2a 94       	dec	r2
    1960:	f7 cf       	rjmp	.-18     	; 0x1950 <vfprintf+0x3aa>
    1962:	f6 01       	movw	r30, r12
    1964:	86 81       	ldd	r24, Z+6	; 0x06
    1966:	97 81       	ldd	r25, Z+7	; 0x07
    1968:	02 c0       	rjmp	.+4      	; 0x196e <vfprintf+0x3c8>
    196a:	8f ef       	ldi	r24, 0xFF	; 255
    196c:	9f ef       	ldi	r25, 0xFF	; 255
    196e:	2b 96       	adiw	r28, 0x0b	; 11
    1970:	0f b6       	in	r0, 0x3f	; 63
    1972:	f8 94       	cli
    1974:	de bf       	out	0x3e, r29	; 62
    1976:	0f be       	out	0x3f, r0	; 63
    1978:	cd bf       	out	0x3d, r28	; 61
    197a:	df 91       	pop	r29
    197c:	cf 91       	pop	r28
    197e:	1f 91       	pop	r17
    1980:	0f 91       	pop	r16
    1982:	ff 90       	pop	r15
    1984:	ef 90       	pop	r14
    1986:	df 90       	pop	r13
    1988:	cf 90       	pop	r12
    198a:	bf 90       	pop	r11
    198c:	af 90       	pop	r10
    198e:	9f 90       	pop	r9
    1990:	8f 90       	pop	r8
    1992:	7f 90       	pop	r7
    1994:	6f 90       	pop	r6
    1996:	5f 90       	pop	r5
    1998:	4f 90       	pop	r4
    199a:	3f 90       	pop	r3
    199c:	2f 90       	pop	r2
    199e:	08 95       	ret

000019a0 <putval>:
    19a0:	20 fd       	sbrc	r18, 0
    19a2:	09 c0       	rjmp	.+18     	; 0x19b6 <putval+0x16>
    19a4:	fc 01       	movw	r30, r24
    19a6:	23 fd       	sbrc	r18, 3
    19a8:	05 c0       	rjmp	.+10     	; 0x19b4 <putval+0x14>
    19aa:	22 ff       	sbrs	r18, 2
    19ac:	02 c0       	rjmp	.+4      	; 0x19b2 <putval+0x12>
    19ae:	73 83       	std	Z+3, r23	; 0x03
    19b0:	62 83       	std	Z+2, r22	; 0x02
    19b2:	51 83       	std	Z+1, r21	; 0x01
    19b4:	40 83       	st	Z, r20
    19b6:	08 95       	ret

000019b8 <mulacc>:
    19b8:	44 fd       	sbrc	r20, 4
    19ba:	17 c0       	rjmp	.+46     	; 0x19ea <mulacc+0x32>
    19bc:	46 fd       	sbrc	r20, 6
    19be:	17 c0       	rjmp	.+46     	; 0x19ee <mulacc+0x36>
    19c0:	ab 01       	movw	r20, r22
    19c2:	bc 01       	movw	r22, r24
    19c4:	da 01       	movw	r26, r20
    19c6:	fb 01       	movw	r30, r22
    19c8:	aa 0f       	add	r26, r26
    19ca:	bb 1f       	adc	r27, r27
    19cc:	ee 1f       	adc	r30, r30
    19ce:	ff 1f       	adc	r31, r31
    19d0:	10 94       	com	r1
    19d2:	d1 f7       	brne	.-12     	; 0x19c8 <mulacc+0x10>
    19d4:	4a 0f       	add	r20, r26
    19d6:	5b 1f       	adc	r21, r27
    19d8:	6e 1f       	adc	r22, r30
    19da:	7f 1f       	adc	r23, r31
    19dc:	cb 01       	movw	r24, r22
    19de:	ba 01       	movw	r22, r20
    19e0:	66 0f       	add	r22, r22
    19e2:	77 1f       	adc	r23, r23
    19e4:	88 1f       	adc	r24, r24
    19e6:	99 1f       	adc	r25, r25
    19e8:	09 c0       	rjmp	.+18     	; 0x19fc <mulacc+0x44>
    19ea:	33 e0       	ldi	r19, 0x03	; 3
    19ec:	01 c0       	rjmp	.+2      	; 0x19f0 <mulacc+0x38>
    19ee:	34 e0       	ldi	r19, 0x04	; 4
    19f0:	66 0f       	add	r22, r22
    19f2:	77 1f       	adc	r23, r23
    19f4:	88 1f       	adc	r24, r24
    19f6:	99 1f       	adc	r25, r25
    19f8:	31 50       	subi	r19, 0x01	; 1
    19fa:	d1 f7       	brne	.-12     	; 0x19f0 <mulacc+0x38>
    19fc:	62 0f       	add	r22, r18
    19fe:	71 1d       	adc	r23, r1
    1a00:	81 1d       	adc	r24, r1
    1a02:	91 1d       	adc	r25, r1
    1a04:	08 95       	ret

00001a06 <skip_spaces>:
    1a06:	0f 93       	push	r16
    1a08:	1f 93       	push	r17
    1a0a:	cf 93       	push	r28
    1a0c:	df 93       	push	r29
    1a0e:	8c 01       	movw	r16, r24
    1a10:	c8 01       	movw	r24, r16
    1a12:	b8 d2       	rcall	.+1392   	; 0x1f84 <fgetc>
    1a14:	ec 01       	movw	r28, r24
    1a16:	97 fd       	sbrc	r25, 7
    1a18:	06 c0       	rjmp	.+12     	; 0x1a26 <skip_spaces+0x20>
    1a1a:	8b d2       	rcall	.+1302   	; 0x1f32 <isspace>
    1a1c:	89 2b       	or	r24, r25
    1a1e:	c1 f7       	brne	.-16     	; 0x1a10 <skip_spaces+0xa>
    1a20:	b8 01       	movw	r22, r16
    1a22:	ce 01       	movw	r24, r28
    1a24:	29 d3       	rcall	.+1618   	; 0x2078 <ungetc>
    1a26:	ce 01       	movw	r24, r28
    1a28:	df 91       	pop	r29
    1a2a:	cf 91       	pop	r28
    1a2c:	1f 91       	pop	r17
    1a2e:	0f 91       	pop	r16
    1a30:	08 95       	ret

00001a32 <conv_int>:
    1a32:	8f 92       	push	r8
    1a34:	9f 92       	push	r9
    1a36:	af 92       	push	r10
    1a38:	bf 92       	push	r11
    1a3a:	ef 92       	push	r14
    1a3c:	ff 92       	push	r15
    1a3e:	0f 93       	push	r16
    1a40:	1f 93       	push	r17
    1a42:	cf 93       	push	r28
    1a44:	df 93       	push	r29
    1a46:	8c 01       	movw	r16, r24
    1a48:	d6 2f       	mov	r29, r22
    1a4a:	7a 01       	movw	r14, r20
    1a4c:	b2 2e       	mov	r11, r18
    1a4e:	9a d2       	rcall	.+1332   	; 0x1f84 <fgetc>
    1a50:	9c 01       	movw	r18, r24
    1a52:	33 27       	eor	r19, r19
    1a54:	2b 32       	cpi	r18, 0x2B	; 43
    1a56:	31 05       	cpc	r19, r1
    1a58:	31 f0       	breq	.+12     	; 0x1a66 <conv_int+0x34>
    1a5a:	2d 32       	cpi	r18, 0x2D	; 45
    1a5c:	31 05       	cpc	r19, r1
    1a5e:	59 f4       	brne	.+22     	; 0x1a76 <conv_int+0x44>
    1a60:	8b 2d       	mov	r24, r11
    1a62:	80 68       	ori	r24, 0x80	; 128
    1a64:	b8 2e       	mov	r11, r24
    1a66:	d1 50       	subi	r29, 0x01	; 1
    1a68:	11 f4       	brne	.+4      	; 0x1a6e <conv_int+0x3c>
    1a6a:	80 e0       	ldi	r24, 0x00	; 0
    1a6c:	61 c0       	rjmp	.+194    	; 0x1b30 <conv_int+0xfe>
    1a6e:	c8 01       	movw	r24, r16
    1a70:	89 d2       	rcall	.+1298   	; 0x1f84 <fgetc>
    1a72:	97 fd       	sbrc	r25, 7
    1a74:	fa cf       	rjmp	.-12     	; 0x1a6a <conv_int+0x38>
    1a76:	cb 2d       	mov	r28, r11
    1a78:	cd 7f       	andi	r28, 0xFD	; 253
    1a7a:	2b 2d       	mov	r18, r11
    1a7c:	20 73       	andi	r18, 0x30	; 48
    1a7e:	f9 f4       	brne	.+62     	; 0x1abe <conv_int+0x8c>
    1a80:	80 33       	cpi	r24, 0x30	; 48
    1a82:	e9 f4       	brne	.+58     	; 0x1abe <conv_int+0x8c>
    1a84:	aa 24       	eor	r10, r10
    1a86:	aa 94       	dec	r10
    1a88:	ad 0e       	add	r10, r29
    1a8a:	09 f4       	brne	.+2      	; 0x1a8e <conv_int+0x5c>
    1a8c:	3e c0       	rjmp	.+124    	; 0x1b0a <conv_int+0xd8>
    1a8e:	c8 01       	movw	r24, r16
    1a90:	79 d2       	rcall	.+1266   	; 0x1f84 <fgetc>
    1a92:	97 fd       	sbrc	r25, 7
    1a94:	3a c0       	rjmp	.+116    	; 0x1b0a <conv_int+0xd8>
    1a96:	9c 01       	movw	r18, r24
    1a98:	2f 7d       	andi	r18, 0xDF	; 223
    1a9a:	33 27       	eor	r19, r19
    1a9c:	28 35       	cpi	r18, 0x58	; 88
    1a9e:	31 05       	cpc	r19, r1
    1aa0:	41 f4       	brne	.+16     	; 0x1ab2 <conv_int+0x80>
    1aa2:	c2 64       	ori	r28, 0x42	; 66
    1aa4:	d2 50       	subi	r29, 0x02	; 2
    1aa6:	89 f1       	breq	.+98     	; 0x1b0a <conv_int+0xd8>
    1aa8:	c8 01       	movw	r24, r16
    1aaa:	6c d2       	rcall	.+1240   	; 0x1f84 <fgetc>
    1aac:	97 ff       	sbrs	r25, 7
    1aae:	07 c0       	rjmp	.+14     	; 0x1abe <conv_int+0x8c>
    1ab0:	2c c0       	rjmp	.+88     	; 0x1b0a <conv_int+0xd8>
    1ab2:	b6 fe       	sbrs	r11, 6
    1ab4:	02 c0       	rjmp	.+4      	; 0x1aba <conv_int+0x88>
    1ab6:	c2 60       	ori	r28, 0x02	; 2
    1ab8:	01 c0       	rjmp	.+2      	; 0x1abc <conv_int+0x8a>
    1aba:	c2 61       	ori	r28, 0x12	; 18
    1abc:	da 2d       	mov	r29, r10
    1abe:	81 2c       	mov	r8, r1
    1ac0:	91 2c       	mov	r9, r1
    1ac2:	54 01       	movw	r10, r8
    1ac4:	20 ed       	ldi	r18, 0xD0	; 208
    1ac6:	28 0f       	add	r18, r24
    1ac8:	28 30       	cpi	r18, 0x08	; 8
    1aca:	78 f0       	brcs	.+30     	; 0x1aea <conv_int+0xb8>
    1acc:	c4 ff       	sbrs	r28, 4
    1ace:	03 c0       	rjmp	.+6      	; 0x1ad6 <conv_int+0xa4>
    1ad0:	b8 01       	movw	r22, r16
    1ad2:	d2 d2       	rcall	.+1444   	; 0x2078 <ungetc>
    1ad4:	17 c0       	rjmp	.+46     	; 0x1b04 <conv_int+0xd2>
    1ad6:	2a 30       	cpi	r18, 0x0A	; 10
    1ad8:	40 f0       	brcs	.+16     	; 0x1aea <conv_int+0xb8>
    1ada:	c6 ff       	sbrs	r28, 6
    1adc:	f9 cf       	rjmp	.-14     	; 0x1ad0 <conv_int+0x9e>
    1ade:	2f 7d       	andi	r18, 0xDF	; 223
    1ae0:	3f ee       	ldi	r19, 0xEF	; 239
    1ae2:	32 0f       	add	r19, r18
    1ae4:	36 30       	cpi	r19, 0x06	; 6
    1ae6:	a0 f7       	brcc	.-24     	; 0x1ad0 <conv_int+0x9e>
    1ae8:	27 50       	subi	r18, 0x07	; 7
    1aea:	4c 2f       	mov	r20, r28
    1aec:	c5 01       	movw	r24, r10
    1aee:	b4 01       	movw	r22, r8
    1af0:	63 df       	rcall	.-314    	; 0x19b8 <mulacc>
    1af2:	4b 01       	movw	r8, r22
    1af4:	5c 01       	movw	r10, r24
    1af6:	c2 60       	ori	r28, 0x02	; 2
    1af8:	d1 50       	subi	r29, 0x01	; 1
    1afa:	51 f0       	breq	.+20     	; 0x1b10 <conv_int+0xde>
    1afc:	c8 01       	movw	r24, r16
    1afe:	42 d2       	rcall	.+1156   	; 0x1f84 <fgetc>
    1b00:	97 ff       	sbrs	r25, 7
    1b02:	e0 cf       	rjmp	.-64     	; 0x1ac4 <conv_int+0x92>
    1b04:	c1 fd       	sbrc	r28, 1
    1b06:	04 c0       	rjmp	.+8      	; 0x1b10 <conv_int+0xde>
    1b08:	b0 cf       	rjmp	.-160    	; 0x1a6a <conv_int+0x38>
    1b0a:	81 2c       	mov	r8, r1
    1b0c:	91 2c       	mov	r9, r1
    1b0e:	54 01       	movw	r10, r8
    1b10:	c7 ff       	sbrs	r28, 7
    1b12:	08 c0       	rjmp	.+16     	; 0x1b24 <conv_int+0xf2>
    1b14:	b0 94       	com	r11
    1b16:	a0 94       	com	r10
    1b18:	90 94       	com	r9
    1b1a:	80 94       	com	r8
    1b1c:	81 1c       	adc	r8, r1
    1b1e:	91 1c       	adc	r9, r1
    1b20:	a1 1c       	adc	r10, r1
    1b22:	b1 1c       	adc	r11, r1
    1b24:	2c 2f       	mov	r18, r28
    1b26:	b5 01       	movw	r22, r10
    1b28:	a4 01       	movw	r20, r8
    1b2a:	c7 01       	movw	r24, r14
    1b2c:	39 df       	rcall	.-398    	; 0x19a0 <putval>
    1b2e:	81 e0       	ldi	r24, 0x01	; 1
    1b30:	df 91       	pop	r29
    1b32:	cf 91       	pop	r28
    1b34:	1f 91       	pop	r17
    1b36:	0f 91       	pop	r16
    1b38:	ff 90       	pop	r15
    1b3a:	ef 90       	pop	r14
    1b3c:	bf 90       	pop	r11
    1b3e:	af 90       	pop	r10
    1b40:	9f 90       	pop	r9
    1b42:	8f 90       	pop	r8
    1b44:	08 95       	ret

00001b46 <conv_brk>:
    1b46:	5f 92       	push	r5
    1b48:	6f 92       	push	r6
    1b4a:	7f 92       	push	r7
    1b4c:	8f 92       	push	r8
    1b4e:	9f 92       	push	r9
    1b50:	af 92       	push	r10
    1b52:	bf 92       	push	r11
    1b54:	cf 92       	push	r12
    1b56:	df 92       	push	r13
    1b58:	ef 92       	push	r14
    1b5a:	ff 92       	push	r15
    1b5c:	0f 93       	push	r16
    1b5e:	1f 93       	push	r17
    1b60:	cf 93       	push	r28
    1b62:	df 93       	push	r29
    1b64:	cd b7       	in	r28, 0x3d	; 61
    1b66:	de b7       	in	r29, 0x3e	; 62
    1b68:	a0 97       	sbiw	r28, 0x20	; 32
    1b6a:	0f b6       	in	r0, 0x3f	; 63
    1b6c:	f8 94       	cli
    1b6e:	de bf       	out	0x3e, r29	; 62
    1b70:	0f be       	out	0x3f, r0	; 63
    1b72:	cd bf       	out	0x3d, r28	; 61
    1b74:	5c 01       	movw	r10, r24
    1b76:	96 2e       	mov	r9, r22
    1b78:	7a 01       	movw	r14, r20
    1b7a:	f9 01       	movw	r30, r18
    1b7c:	8e 01       	movw	r16, r28
    1b7e:	0f 5f       	subi	r16, 0xFF	; 255
    1b80:	1f 4f       	sbci	r17, 0xFF	; 255
    1b82:	68 01       	movw	r12, r16
    1b84:	80 e2       	ldi	r24, 0x20	; 32
    1b86:	d8 01       	movw	r26, r16
    1b88:	1d 92       	st	X+, r1
    1b8a:	8a 95       	dec	r24
    1b8c:	e9 f7       	brne	.-6      	; 0x1b88 <conv_brk+0x42>
    1b8e:	d5 01       	movw	r26, r10
    1b90:	13 96       	adiw	r26, 0x03	; 3
    1b92:	8c 90       	ld	r8, X
    1b94:	80 e0       	ldi	r24, 0x00	; 0
    1b96:	90 e0       	ldi	r25, 0x00	; 0
    1b98:	61 2c       	mov	r6, r1
    1b9a:	71 2c       	mov	r7, r1
    1b9c:	30 e0       	ldi	r19, 0x00	; 0
    1b9e:	61 e0       	ldi	r22, 0x01	; 1
    1ba0:	70 e0       	ldi	r23, 0x00	; 0
    1ba2:	83 fc       	sbrc	r8, 3
    1ba4:	25 91       	lpm	r18, Z+
    1ba6:	83 fe       	sbrs	r8, 3
    1ba8:	21 91       	ld	r18, Z+
    1baa:	8f 01       	movw	r16, r30
    1bac:	52 2e       	mov	r5, r18
    1bae:	21 11       	cpse	r18, r1
    1bb0:	03 c0       	rjmp	.+6      	; 0x1bb8 <conv_brk+0x72>
    1bb2:	80 e0       	ldi	r24, 0x00	; 0
    1bb4:	90 e0       	ldi	r25, 0x00	; 0
    1bb6:	90 c0       	rjmp	.+288    	; 0x1cd8 <conv_brk+0x192>
    1bb8:	2e 35       	cpi	r18, 0x5E	; 94
    1bba:	11 f4       	brne	.+4      	; 0x1bc0 <conv_brk+0x7a>
    1bbc:	00 97       	sbiw	r24, 0x00	; 0
    1bbe:	51 f1       	breq	.+84     	; 0x1c14 <conv_brk+0xce>
    1bc0:	43 2f       	mov	r20, r19
    1bc2:	50 e0       	ldi	r21, 0x00	; 0
    1bc4:	48 17       	cp	r20, r24
    1bc6:	59 07       	cpc	r21, r25
    1bc8:	3c f4       	brge	.+14     	; 0x1bd8 <conv_brk+0x92>
    1bca:	2d 35       	cpi	r18, 0x5D	; 93
    1bcc:	59 f1       	breq	.+86     	; 0x1c24 <conv_brk+0xde>
    1bce:	2d 32       	cpi	r18, 0x2D	; 45
    1bd0:	19 f4       	brne	.+6      	; 0x1bd8 <conv_brk+0x92>
    1bd2:	77 20       	and	r7, r7
    1bd4:	09 f1       	breq	.+66     	; 0x1c18 <conv_brk+0xd2>
    1bd6:	03 c0       	rjmp	.+6      	; 0x1bde <conv_brk+0x98>
    1bd8:	77 20       	and	r7, r7
    1bda:	09 f4       	brne	.+2      	; 0x1bde <conv_brk+0x98>
    1bdc:	68 c0       	rjmp	.+208    	; 0x1cae <conv_brk+0x168>
    1bde:	45 2d       	mov	r20, r5
    1be0:	46 95       	lsr	r20
    1be2:	46 95       	lsr	r20
    1be4:	46 95       	lsr	r20
    1be6:	d6 01       	movw	r26, r12
    1be8:	a4 0f       	add	r26, r20
    1bea:	b1 1d       	adc	r27, r1
    1bec:	45 2d       	mov	r20, r5
    1bee:	47 70       	andi	r20, 0x07	; 7
    1bf0:	8b 01       	movw	r16, r22
    1bf2:	02 c0       	rjmp	.+4      	; 0x1bf8 <conv_brk+0xb2>
    1bf4:	00 0f       	add	r16, r16
    1bf6:	11 1f       	adc	r17, r17
    1bf8:	4a 95       	dec	r20
    1bfa:	e2 f7       	brpl	.-8      	; 0x1bf4 <conv_brk+0xae>
    1bfc:	a8 01       	movw	r20, r16
    1bfe:	5c 91       	ld	r21, X
    1c00:	45 2b       	or	r20, r21
    1c02:	4c 93       	st	X, r20
    1c04:	65 14       	cp	r6, r5
    1c06:	59 f0       	breq	.+22     	; 0x1c1e <conv_brk+0xd8>
    1c08:	56 14       	cp	r5, r6
    1c0a:	10 f4       	brcc	.+4      	; 0x1c10 <conv_brk+0xca>
    1c0c:	53 94       	inc	r5
    1c0e:	e7 cf       	rjmp	.-50     	; 0x1bde <conv_brk+0x98>
    1c10:	5a 94       	dec	r5
    1c12:	e5 cf       	rjmp	.-54     	; 0x1bde <conv_brk+0x98>
    1c14:	31 e0       	ldi	r19, 0x01	; 1
    1c16:	04 c0       	rjmp	.+8      	; 0x1c20 <conv_brk+0xda>
    1c18:	77 24       	eor	r7, r7
    1c1a:	73 94       	inc	r7
    1c1c:	01 c0       	rjmp	.+2      	; 0x1c20 <conv_brk+0xda>
    1c1e:	71 2c       	mov	r7, r1
    1c20:	01 96       	adiw	r24, 0x01	; 1
    1c22:	bf cf       	rjmp	.-130    	; 0x1ba2 <conv_brk+0x5c>
    1c24:	77 20       	and	r7, r7
    1c26:	19 f0       	breq	.+6      	; 0x1c2e <conv_brk+0xe8>
    1c28:	8e 81       	ldd	r24, Y+6	; 0x06
    1c2a:	80 62       	ori	r24, 0x20	; 32
    1c2c:	8e 83       	std	Y+6, r24	; 0x06
    1c2e:	31 11       	cpse	r19, r1
    1c30:	03 c0       	rjmp	.+6      	; 0x1c38 <conv_brk+0xf2>
    1c32:	88 24       	eor	r8, r8
    1c34:	83 94       	inc	r8
    1c36:	17 c0       	rjmp	.+46     	; 0x1c66 <conv_brk+0x120>
    1c38:	f6 01       	movw	r30, r12
    1c3a:	9e 01       	movw	r18, r28
    1c3c:	2f 5d       	subi	r18, 0xDF	; 223
    1c3e:	3f 4f       	sbci	r19, 0xFF	; 255
    1c40:	80 81       	ld	r24, Z
    1c42:	80 95       	com	r24
    1c44:	81 93       	st	Z+, r24
    1c46:	2e 17       	cp	r18, r30
    1c48:	3f 07       	cpc	r19, r31
    1c4a:	d1 f7       	brne	.-12     	; 0x1c40 <conv_brk+0xfa>
    1c4c:	f2 cf       	rjmp	.-28     	; 0x1c32 <conv_brk+0xec>
    1c4e:	e1 14       	cp	r14, r1
    1c50:	f1 04       	cpc	r15, r1
    1c52:	29 f0       	breq	.+10     	; 0x1c5e <conv_brk+0x118>
    1c54:	d7 01       	movw	r26, r14
    1c56:	8c 93       	st	X, r24
    1c58:	f7 01       	movw	r30, r14
    1c5a:	31 96       	adiw	r30, 0x01	; 1
    1c5c:	7f 01       	movw	r14, r30
    1c5e:	9a 94       	dec	r9
    1c60:	81 2c       	mov	r8, r1
    1c62:	99 20       	and	r9, r9
    1c64:	e9 f0       	breq	.+58     	; 0x1ca0 <conv_brk+0x15a>
    1c66:	c5 01       	movw	r24, r10
    1c68:	8d d1       	rcall	.+794    	; 0x1f84 <fgetc>
    1c6a:	97 fd       	sbrc	r25, 7
    1c6c:	17 c0       	rjmp	.+46     	; 0x1c9c <conv_brk+0x156>
    1c6e:	fc 01       	movw	r30, r24
    1c70:	ff 27       	eor	r31, r31
    1c72:	23 e0       	ldi	r18, 0x03	; 3
    1c74:	f5 95       	asr	r31
    1c76:	e7 95       	ror	r30
    1c78:	2a 95       	dec	r18
    1c7a:	e1 f7       	brne	.-8      	; 0x1c74 <conv_brk+0x12e>
    1c7c:	ec 0d       	add	r30, r12
    1c7e:	fd 1d       	adc	r31, r13
    1c80:	20 81       	ld	r18, Z
    1c82:	30 e0       	ldi	r19, 0x00	; 0
    1c84:	ac 01       	movw	r20, r24
    1c86:	47 70       	andi	r20, 0x07	; 7
    1c88:	55 27       	eor	r21, r21
    1c8a:	02 c0       	rjmp	.+4      	; 0x1c90 <conv_brk+0x14a>
    1c8c:	35 95       	asr	r19
    1c8e:	27 95       	ror	r18
    1c90:	4a 95       	dec	r20
    1c92:	e2 f7       	brpl	.-8      	; 0x1c8c <conv_brk+0x146>
    1c94:	20 fd       	sbrc	r18, 0
    1c96:	db cf       	rjmp	.-74     	; 0x1c4e <conv_brk+0x108>
    1c98:	b5 01       	movw	r22, r10
    1c9a:	ee d1       	rcall	.+988    	; 0x2078 <ungetc>
    1c9c:	81 10       	cpse	r8, r1
    1c9e:	89 cf       	rjmp	.-238    	; 0x1bb2 <conv_brk+0x6c>
    1ca0:	e1 14       	cp	r14, r1
    1ca2:	f1 04       	cpc	r15, r1
    1ca4:	11 f0       	breq	.+4      	; 0x1caa <conv_brk+0x164>
    1ca6:	d7 01       	movw	r26, r14
    1ca8:	1c 92       	st	X, r1
    1caa:	c8 01       	movw	r24, r16
    1cac:	15 c0       	rjmp	.+42     	; 0x1cd8 <conv_brk+0x192>
    1cae:	42 2f       	mov	r20, r18
    1cb0:	46 95       	lsr	r20
    1cb2:	46 95       	lsr	r20
    1cb4:	46 95       	lsr	r20
    1cb6:	d6 01       	movw	r26, r12
    1cb8:	a4 0f       	add	r26, r20
    1cba:	b1 1d       	adc	r27, r1
    1cbc:	42 2f       	mov	r20, r18
    1cbe:	47 70       	andi	r20, 0x07	; 7
    1cc0:	8b 01       	movw	r16, r22
    1cc2:	02 c0       	rjmp	.+4      	; 0x1cc8 <conv_brk+0x182>
    1cc4:	00 0f       	add	r16, r16
    1cc6:	11 1f       	adc	r17, r17
    1cc8:	4a 95       	dec	r20
    1cca:	e2 f7       	brpl	.-8      	; 0x1cc4 <conv_brk+0x17e>
    1ccc:	a8 01       	movw	r20, r16
    1cce:	5c 91       	ld	r21, X
    1cd0:	45 2b       	or	r20, r21
    1cd2:	4c 93       	st	X, r20
    1cd4:	62 2e       	mov	r6, r18
    1cd6:	a4 cf       	rjmp	.-184    	; 0x1c20 <conv_brk+0xda>
    1cd8:	a0 96       	adiw	r28, 0x20	; 32
    1cda:	0f b6       	in	r0, 0x3f	; 63
    1cdc:	f8 94       	cli
    1cde:	de bf       	out	0x3e, r29	; 62
    1ce0:	0f be       	out	0x3f, r0	; 63
    1ce2:	cd bf       	out	0x3d, r28	; 61
    1ce4:	df 91       	pop	r29
    1ce6:	cf 91       	pop	r28
    1ce8:	1f 91       	pop	r17
    1cea:	0f 91       	pop	r16
    1cec:	ff 90       	pop	r15
    1cee:	ef 90       	pop	r14
    1cf0:	df 90       	pop	r13
    1cf2:	cf 90       	pop	r12
    1cf4:	bf 90       	pop	r11
    1cf6:	af 90       	pop	r10
    1cf8:	9f 90       	pop	r9
    1cfa:	8f 90       	pop	r8
    1cfc:	7f 90       	pop	r7
    1cfe:	6f 90       	pop	r6
    1d00:	5f 90       	pop	r5
    1d02:	08 95       	ret

00001d04 <vfscanf>:
    1d04:	5f 92       	push	r5
    1d06:	6f 92       	push	r6
    1d08:	7f 92       	push	r7
    1d0a:	8f 92       	push	r8
    1d0c:	9f 92       	push	r9
    1d0e:	af 92       	push	r10
    1d10:	bf 92       	push	r11
    1d12:	cf 92       	push	r12
    1d14:	df 92       	push	r13
    1d16:	ef 92       	push	r14
    1d18:	ff 92       	push	r15
    1d1a:	0f 93       	push	r16
    1d1c:	1f 93       	push	r17
    1d1e:	cf 93       	push	r28
    1d20:	df 93       	push	r29
    1d22:	6c 01       	movw	r12, r24
    1d24:	eb 01       	movw	r28, r22
    1d26:	5a 01       	movw	r10, r20
    1d28:	fc 01       	movw	r30, r24
    1d2a:	17 82       	std	Z+7, r1	; 0x07
    1d2c:	16 82       	std	Z+6, r1	; 0x06
    1d2e:	51 2c       	mov	r5, r1
    1d30:	f6 01       	movw	r30, r12
    1d32:	e3 80       	ldd	r14, Z+3	; 0x03
    1d34:	fe 01       	movw	r30, r28
    1d36:	e3 fc       	sbrc	r14, 3
    1d38:	85 91       	lpm	r24, Z+
    1d3a:	e3 fe       	sbrs	r14, 3
    1d3c:	81 91       	ld	r24, Z+
    1d3e:	18 2f       	mov	r17, r24
    1d40:	ef 01       	movw	r28, r30
    1d42:	88 23       	and	r24, r24
    1d44:	09 f4       	brne	.+2      	; 0x1d48 <vfscanf+0x44>
    1d46:	e0 c0       	rjmp	.+448    	; 0x1f08 <vfscanf+0x204>
    1d48:	90 e0       	ldi	r25, 0x00	; 0
    1d4a:	f3 d0       	rcall	.+486    	; 0x1f32 <isspace>
    1d4c:	89 2b       	or	r24, r25
    1d4e:	19 f0       	breq	.+6      	; 0x1d56 <vfscanf+0x52>
    1d50:	c6 01       	movw	r24, r12
    1d52:	59 de       	rcall	.-846    	; 0x1a06 <skip_spaces>
    1d54:	ed cf       	rjmp	.-38     	; 0x1d30 <vfscanf+0x2c>
    1d56:	15 32       	cpi	r17, 0x25	; 37
    1d58:	41 f4       	brne	.+16     	; 0x1d6a <vfscanf+0x66>
    1d5a:	fe 01       	movw	r30, r28
    1d5c:	e3 fc       	sbrc	r14, 3
    1d5e:	15 91       	lpm	r17, Z+
    1d60:	e3 fe       	sbrs	r14, 3
    1d62:	11 91       	ld	r17, Z+
    1d64:	ef 01       	movw	r28, r30
    1d66:	15 32       	cpi	r17, 0x25	; 37
    1d68:	71 f4       	brne	.+28     	; 0x1d86 <vfscanf+0x82>
    1d6a:	c6 01       	movw	r24, r12
    1d6c:	0b d1       	rcall	.+534    	; 0x1f84 <fgetc>
    1d6e:	97 fd       	sbrc	r25, 7
    1d70:	c9 c0       	rjmp	.+402    	; 0x1f04 <vfscanf+0x200>
    1d72:	41 2f       	mov	r20, r17
    1d74:	50 e0       	ldi	r21, 0x00	; 0
    1d76:	9c 01       	movw	r18, r24
    1d78:	33 27       	eor	r19, r19
    1d7a:	24 17       	cp	r18, r20
    1d7c:	35 07       	cpc	r19, r21
    1d7e:	c1 f2       	breq	.-80     	; 0x1d30 <vfscanf+0x2c>
    1d80:	b6 01       	movw	r22, r12
    1d82:	7a d1       	rcall	.+756    	; 0x2078 <ungetc>
    1d84:	c1 c0       	rjmp	.+386    	; 0x1f08 <vfscanf+0x204>
    1d86:	1a 32       	cpi	r17, 0x2A	; 42
    1d88:	39 f4       	brne	.+14     	; 0x1d98 <vfscanf+0x94>
    1d8a:	e3 fc       	sbrc	r14, 3
    1d8c:	15 91       	lpm	r17, Z+
    1d8e:	e3 fe       	sbrs	r14, 3
    1d90:	11 91       	ld	r17, Z+
    1d92:	ef 01       	movw	r28, r30
    1d94:	01 e0       	ldi	r16, 0x01	; 1
    1d96:	01 c0       	rjmp	.+2      	; 0x1d9a <vfscanf+0x96>
    1d98:	00 e0       	ldi	r16, 0x00	; 0
    1d9a:	f1 2c       	mov	r15, r1
    1d9c:	20 ed       	ldi	r18, 0xD0	; 208
    1d9e:	21 0f       	add	r18, r17
    1da0:	2a 30       	cpi	r18, 0x0A	; 10
    1da2:	78 f4       	brcc	.+30     	; 0x1dc2 <vfscanf+0xbe>
    1da4:	02 60       	ori	r16, 0x02	; 2
    1da6:	6f 2d       	mov	r22, r15
    1da8:	70 e0       	ldi	r23, 0x00	; 0
    1daa:	80 e0       	ldi	r24, 0x00	; 0
    1dac:	90 e0       	ldi	r25, 0x00	; 0
    1dae:	40 e2       	ldi	r20, 0x20	; 32
    1db0:	03 de       	rcall	.-1018   	; 0x19b8 <mulacc>
    1db2:	f6 2e       	mov	r15, r22
    1db4:	fe 01       	movw	r30, r28
    1db6:	e3 fc       	sbrc	r14, 3
    1db8:	15 91       	lpm	r17, Z+
    1dba:	e3 fe       	sbrs	r14, 3
    1dbc:	11 91       	ld	r17, Z+
    1dbe:	ef 01       	movw	r28, r30
    1dc0:	ed cf       	rjmp	.-38     	; 0x1d9c <vfscanf+0x98>
    1dc2:	01 ff       	sbrs	r16, 1
    1dc4:	03 c0       	rjmp	.+6      	; 0x1dcc <vfscanf+0xc8>
    1dc6:	f1 10       	cpse	r15, r1
    1dc8:	03 c0       	rjmp	.+6      	; 0x1dd0 <vfscanf+0xcc>
    1dca:	9e c0       	rjmp	.+316    	; 0x1f08 <vfscanf+0x204>
    1dcc:	ff 24       	eor	r15, r15
    1dce:	fa 94       	dec	r15
    1dd0:	18 36       	cpi	r17, 0x68	; 104
    1dd2:	19 f0       	breq	.+6      	; 0x1dda <vfscanf+0xd6>
    1dd4:	1c 36       	cpi	r17, 0x6C	; 108
    1dd6:	51 f0       	breq	.+20     	; 0x1dec <vfscanf+0xe8>
    1dd8:	10 c0       	rjmp	.+32     	; 0x1dfa <vfscanf+0xf6>
    1dda:	fe 01       	movw	r30, r28
    1ddc:	e3 fc       	sbrc	r14, 3
    1dde:	15 91       	lpm	r17, Z+
    1de0:	e3 fe       	sbrs	r14, 3
    1de2:	11 91       	ld	r17, Z+
    1de4:	ef 01       	movw	r28, r30
    1de6:	18 36       	cpi	r17, 0x68	; 104
    1de8:	41 f4       	brne	.+16     	; 0x1dfa <vfscanf+0xf6>
    1dea:	08 60       	ori	r16, 0x08	; 8
    1dec:	04 60       	ori	r16, 0x04	; 4
    1dee:	fe 01       	movw	r30, r28
    1df0:	e3 fc       	sbrc	r14, 3
    1df2:	15 91       	lpm	r17, Z+
    1df4:	e3 fe       	sbrs	r14, 3
    1df6:	11 91       	ld	r17, Z+
    1df8:	ef 01       	movw	r28, r30
    1dfa:	11 23       	and	r17, r17
    1dfc:	09 f4       	brne	.+2      	; 0x1e00 <vfscanf+0xfc>
    1dfe:	84 c0       	rjmp	.+264    	; 0x1f08 <vfscanf+0x204>
    1e00:	61 2f       	mov	r22, r17
    1e02:	70 e0       	ldi	r23, 0x00	; 0
    1e04:	84 ee       	ldi	r24, 0xE4	; 228
    1e06:	90 e0       	ldi	r25, 0x00	; 0
    1e08:	9c d0       	rcall	.+312    	; 0x1f42 <strchr_P>
    1e0a:	89 2b       	or	r24, r25
    1e0c:	09 f4       	brne	.+2      	; 0x1e10 <vfscanf+0x10c>
    1e0e:	7c c0       	rjmp	.+248    	; 0x1f08 <vfscanf+0x204>
    1e10:	00 fd       	sbrc	r16, 0
    1e12:	07 c0       	rjmp	.+14     	; 0x1e22 <vfscanf+0x11e>
    1e14:	f5 01       	movw	r30, r10
    1e16:	80 80       	ld	r8, Z
    1e18:	91 80       	ldd	r9, Z+1	; 0x01
    1e1a:	c5 01       	movw	r24, r10
    1e1c:	02 96       	adiw	r24, 0x02	; 2
    1e1e:	5c 01       	movw	r10, r24
    1e20:	02 c0       	rjmp	.+4      	; 0x1e26 <vfscanf+0x122>
    1e22:	81 2c       	mov	r8, r1
    1e24:	91 2c       	mov	r9, r1
    1e26:	1e 36       	cpi	r17, 0x6E	; 110
    1e28:	49 f4       	brne	.+18     	; 0x1e3c <vfscanf+0x138>
    1e2a:	f6 01       	movw	r30, r12
    1e2c:	46 81       	ldd	r20, Z+6	; 0x06
    1e2e:	57 81       	ldd	r21, Z+7	; 0x07
    1e30:	60 e0       	ldi	r22, 0x00	; 0
    1e32:	70 e0       	ldi	r23, 0x00	; 0
    1e34:	20 2f       	mov	r18, r16
    1e36:	c4 01       	movw	r24, r8
    1e38:	b3 dd       	rcall	.-1178   	; 0x19a0 <putval>
    1e3a:	7a cf       	rjmp	.-268    	; 0x1d30 <vfscanf+0x2c>
    1e3c:	13 36       	cpi	r17, 0x63	; 99
    1e3e:	a1 f4       	brne	.+40     	; 0x1e68 <vfscanf+0x164>
    1e40:	01 fd       	sbrc	r16, 1
    1e42:	02 c0       	rjmp	.+4      	; 0x1e48 <vfscanf+0x144>
    1e44:	ff 24       	eor	r15, r15
    1e46:	f3 94       	inc	r15
    1e48:	c6 01       	movw	r24, r12
    1e4a:	9c d0       	rcall	.+312    	; 0x1f84 <fgetc>
    1e4c:	97 fd       	sbrc	r25, 7
    1e4e:	5a c0       	rjmp	.+180    	; 0x1f04 <vfscanf+0x200>
    1e50:	81 14       	cp	r8, r1
    1e52:	91 04       	cpc	r9, r1
    1e54:	29 f0       	breq	.+10     	; 0x1e60 <vfscanf+0x15c>
    1e56:	f4 01       	movw	r30, r8
    1e58:	80 83       	st	Z, r24
    1e5a:	c4 01       	movw	r24, r8
    1e5c:	01 96       	adiw	r24, 0x01	; 1
    1e5e:	4c 01       	movw	r8, r24
    1e60:	fa 94       	dec	r15
    1e62:	f1 10       	cpse	r15, r1
    1e64:	f1 cf       	rjmp	.-30     	; 0x1e48 <vfscanf+0x144>
    1e66:	4a c0       	rjmp	.+148    	; 0x1efc <vfscanf+0x1f8>
    1e68:	1b 35       	cpi	r17, 0x5B	; 91
    1e6a:	51 f4       	brne	.+20     	; 0x1e80 <vfscanf+0x17c>
    1e6c:	9e 01       	movw	r18, r28
    1e6e:	a4 01       	movw	r20, r8
    1e70:	6f 2d       	mov	r22, r15
    1e72:	c6 01       	movw	r24, r12
    1e74:	68 de       	rcall	.-816    	; 0x1b46 <conv_brk>
    1e76:	ec 01       	movw	r28, r24
    1e78:	89 2b       	or	r24, r25
    1e7a:	09 f0       	breq	.+2      	; 0x1e7e <vfscanf+0x17a>
    1e7c:	3f c0       	rjmp	.+126    	; 0x1efc <vfscanf+0x1f8>
    1e7e:	39 c0       	rjmp	.+114    	; 0x1ef2 <vfscanf+0x1ee>
    1e80:	c6 01       	movw	r24, r12
    1e82:	c1 dd       	rcall	.-1150   	; 0x1a06 <skip_spaces>
    1e84:	97 fd       	sbrc	r25, 7
    1e86:	3e c0       	rjmp	.+124    	; 0x1f04 <vfscanf+0x200>
    1e88:	1f 36       	cpi	r17, 0x6F	; 111
    1e8a:	49 f1       	breq	.+82     	; 0x1ede <vfscanf+0x1da>
    1e8c:	28 f4       	brcc	.+10     	; 0x1e98 <vfscanf+0x194>
    1e8e:	14 36       	cpi	r17, 0x64	; 100
    1e90:	21 f1       	breq	.+72     	; 0x1eda <vfscanf+0x1d6>
    1e92:	19 36       	cpi	r17, 0x69	; 105
    1e94:	39 f1       	breq	.+78     	; 0x1ee4 <vfscanf+0x1e0>
    1e96:	25 c0       	rjmp	.+74     	; 0x1ee2 <vfscanf+0x1de>
    1e98:	13 37       	cpi	r17, 0x73	; 115
    1e9a:	71 f0       	breq	.+28     	; 0x1eb8 <vfscanf+0x1b4>
    1e9c:	15 37       	cpi	r17, 0x75	; 117
    1e9e:	e9 f0       	breq	.+58     	; 0x1eda <vfscanf+0x1d6>
    1ea0:	20 c0       	rjmp	.+64     	; 0x1ee2 <vfscanf+0x1de>
    1ea2:	81 14       	cp	r8, r1
    1ea4:	91 04       	cpc	r9, r1
    1ea6:	29 f0       	breq	.+10     	; 0x1eb2 <vfscanf+0x1ae>
    1ea8:	f4 01       	movw	r30, r8
    1eaa:	60 82       	st	Z, r6
    1eac:	c4 01       	movw	r24, r8
    1eae:	01 96       	adiw	r24, 0x01	; 1
    1eb0:	4c 01       	movw	r8, r24
    1eb2:	fa 94       	dec	r15
    1eb4:	ff 20       	and	r15, r15
    1eb6:	59 f0       	breq	.+22     	; 0x1ece <vfscanf+0x1ca>
    1eb8:	c6 01       	movw	r24, r12
    1eba:	64 d0       	rcall	.+200    	; 0x1f84 <fgetc>
    1ebc:	3c 01       	movw	r6, r24
    1ebe:	97 fd       	sbrc	r25, 7
    1ec0:	06 c0       	rjmp	.+12     	; 0x1ece <vfscanf+0x1ca>
    1ec2:	37 d0       	rcall	.+110    	; 0x1f32 <isspace>
    1ec4:	89 2b       	or	r24, r25
    1ec6:	69 f3       	breq	.-38     	; 0x1ea2 <vfscanf+0x19e>
    1ec8:	b6 01       	movw	r22, r12
    1eca:	c3 01       	movw	r24, r6
    1ecc:	d5 d0       	rcall	.+426    	; 0x2078 <ungetc>
    1ece:	81 14       	cp	r8, r1
    1ed0:	91 04       	cpc	r9, r1
    1ed2:	a1 f0       	breq	.+40     	; 0x1efc <vfscanf+0x1f8>
    1ed4:	f4 01       	movw	r30, r8
    1ed6:	10 82       	st	Z, r1
    1ed8:	11 c0       	rjmp	.+34     	; 0x1efc <vfscanf+0x1f8>
    1eda:	00 62       	ori	r16, 0x20	; 32
    1edc:	03 c0       	rjmp	.+6      	; 0x1ee4 <vfscanf+0x1e0>
    1ede:	00 61       	ori	r16, 0x10	; 16
    1ee0:	01 c0       	rjmp	.+2      	; 0x1ee4 <vfscanf+0x1e0>
    1ee2:	00 64       	ori	r16, 0x40	; 64
    1ee4:	20 2f       	mov	r18, r16
    1ee6:	a4 01       	movw	r20, r8
    1ee8:	6f 2d       	mov	r22, r15
    1eea:	c6 01       	movw	r24, r12
    1eec:	a2 dd       	rcall	.-1212   	; 0x1a32 <conv_int>
    1eee:	81 11       	cpse	r24, r1
    1ef0:	05 c0       	rjmp	.+10     	; 0x1efc <vfscanf+0x1f8>
    1ef2:	f6 01       	movw	r30, r12
    1ef4:	83 81       	ldd	r24, Z+3	; 0x03
    1ef6:	80 73       	andi	r24, 0x30	; 48
    1ef8:	29 f4       	brne	.+10     	; 0x1f04 <vfscanf+0x200>
    1efa:	06 c0       	rjmp	.+12     	; 0x1f08 <vfscanf+0x204>
    1efc:	00 fd       	sbrc	r16, 0
    1efe:	18 cf       	rjmp	.-464    	; 0x1d30 <vfscanf+0x2c>
    1f00:	53 94       	inc	r5
    1f02:	16 cf       	rjmp	.-468    	; 0x1d30 <vfscanf+0x2c>
    1f04:	55 20       	and	r5, r5
    1f06:	19 f0       	breq	.+6      	; 0x1f0e <vfscanf+0x20a>
    1f08:	85 2d       	mov	r24, r5
    1f0a:	90 e0       	ldi	r25, 0x00	; 0
    1f0c:	02 c0       	rjmp	.+4      	; 0x1f12 <vfscanf+0x20e>
    1f0e:	8f ef       	ldi	r24, 0xFF	; 255
    1f10:	9f ef       	ldi	r25, 0xFF	; 255
    1f12:	df 91       	pop	r29
    1f14:	cf 91       	pop	r28
    1f16:	1f 91       	pop	r17
    1f18:	0f 91       	pop	r16
    1f1a:	ff 90       	pop	r15
    1f1c:	ef 90       	pop	r14
    1f1e:	df 90       	pop	r13
    1f20:	cf 90       	pop	r12
    1f22:	bf 90       	pop	r11
    1f24:	af 90       	pop	r10
    1f26:	9f 90       	pop	r9
    1f28:	8f 90       	pop	r8
    1f2a:	7f 90       	pop	r7
    1f2c:	6f 90       	pop	r6
    1f2e:	5f 90       	pop	r5
    1f30:	08 95       	ret

00001f32 <isspace>:
    1f32:	91 11       	cpse	r25, r1
    1f34:	18 c1       	rjmp	.+560    	; 0x2166 <__ctype_isfalse>
    1f36:	80 32       	cpi	r24, 0x20	; 32
    1f38:	19 f0       	breq	.+6      	; 0x1f40 <isspace+0xe>
    1f3a:	89 50       	subi	r24, 0x09	; 9
    1f3c:	85 50       	subi	r24, 0x05	; 5
    1f3e:	d0 f7       	brcc	.-12     	; 0x1f34 <isspace+0x2>
    1f40:	08 95       	ret

00001f42 <strchr_P>:
    1f42:	fc 01       	movw	r30, r24
    1f44:	05 90       	lpm	r0, Z+
    1f46:	06 16       	cp	r0, r22
    1f48:	21 f0       	breq	.+8      	; 0x1f52 <strchr_P+0x10>
    1f4a:	00 20       	and	r0, r0
    1f4c:	d9 f7       	brne	.-10     	; 0x1f44 <strchr_P+0x2>
    1f4e:	c0 01       	movw	r24, r0
    1f50:	08 95       	ret
    1f52:	31 97       	sbiw	r30, 0x01	; 1
    1f54:	cf 01       	movw	r24, r30
    1f56:	08 95       	ret

00001f58 <strnlen_P>:
    1f58:	fc 01       	movw	r30, r24
    1f5a:	05 90       	lpm	r0, Z+
    1f5c:	61 50       	subi	r22, 0x01	; 1
    1f5e:	70 40       	sbci	r23, 0x00	; 0
    1f60:	01 10       	cpse	r0, r1
    1f62:	d8 f7       	brcc	.-10     	; 0x1f5a <strnlen_P+0x2>
    1f64:	80 95       	com	r24
    1f66:	90 95       	com	r25
    1f68:	8e 0f       	add	r24, r30
    1f6a:	9f 1f       	adc	r25, r31
    1f6c:	08 95       	ret

00001f6e <strnlen>:
    1f6e:	fc 01       	movw	r30, r24
    1f70:	61 50       	subi	r22, 0x01	; 1
    1f72:	70 40       	sbci	r23, 0x00	; 0
    1f74:	01 90       	ld	r0, Z+
    1f76:	01 10       	cpse	r0, r1
    1f78:	d8 f7       	brcc	.-10     	; 0x1f70 <strnlen+0x2>
    1f7a:	80 95       	com	r24
    1f7c:	90 95       	com	r25
    1f7e:	8e 0f       	add	r24, r30
    1f80:	9f 1f       	adc	r25, r31
    1f82:	08 95       	ret

00001f84 <fgetc>:
    1f84:	cf 93       	push	r28
    1f86:	df 93       	push	r29
    1f88:	ec 01       	movw	r28, r24
    1f8a:	2b 81       	ldd	r18, Y+3	; 0x03
    1f8c:	20 ff       	sbrs	r18, 0
    1f8e:	33 c0       	rjmp	.+102    	; 0x1ff6 <fgetc+0x72>
    1f90:	26 ff       	sbrs	r18, 6
    1f92:	0a c0       	rjmp	.+20     	; 0x1fa8 <fgetc+0x24>
    1f94:	2f 7b       	andi	r18, 0xBF	; 191
    1f96:	2b 83       	std	Y+3, r18	; 0x03
    1f98:	8e 81       	ldd	r24, Y+6	; 0x06
    1f9a:	9f 81       	ldd	r25, Y+7	; 0x07
    1f9c:	01 96       	adiw	r24, 0x01	; 1
    1f9e:	9f 83       	std	Y+7, r25	; 0x07
    1fa0:	8e 83       	std	Y+6, r24	; 0x06
    1fa2:	8a 81       	ldd	r24, Y+2	; 0x02
    1fa4:	90 e0       	ldi	r25, 0x00	; 0
    1fa6:	29 c0       	rjmp	.+82     	; 0x1ffa <fgetc+0x76>
    1fa8:	22 ff       	sbrs	r18, 2
    1faa:	0f c0       	rjmp	.+30     	; 0x1fca <fgetc+0x46>
    1fac:	e8 81       	ld	r30, Y
    1fae:	f9 81       	ldd	r31, Y+1	; 0x01
    1fb0:	80 81       	ld	r24, Z
    1fb2:	08 2e       	mov	r0, r24
    1fb4:	00 0c       	add	r0, r0
    1fb6:	99 0b       	sbc	r25, r25
    1fb8:	00 97       	sbiw	r24, 0x00	; 0
    1fba:	19 f4       	brne	.+6      	; 0x1fc2 <fgetc+0x3e>
    1fbc:	20 62       	ori	r18, 0x20	; 32
    1fbe:	2b 83       	std	Y+3, r18	; 0x03
    1fc0:	1a c0       	rjmp	.+52     	; 0x1ff6 <fgetc+0x72>
    1fc2:	31 96       	adiw	r30, 0x01	; 1
    1fc4:	f9 83       	std	Y+1, r31	; 0x01
    1fc6:	e8 83       	st	Y, r30
    1fc8:	0e c0       	rjmp	.+28     	; 0x1fe6 <fgetc+0x62>
    1fca:	ea 85       	ldd	r30, Y+10	; 0x0a
    1fcc:	fb 85       	ldd	r31, Y+11	; 0x0b
    1fce:	19 95       	eicall
    1fd0:	97 ff       	sbrs	r25, 7
    1fd2:	09 c0       	rjmp	.+18     	; 0x1fe6 <fgetc+0x62>
    1fd4:	2b 81       	ldd	r18, Y+3	; 0x03
    1fd6:	01 96       	adiw	r24, 0x01	; 1
    1fd8:	11 f0       	breq	.+4      	; 0x1fde <fgetc+0x5a>
    1fda:	80 e2       	ldi	r24, 0x20	; 32
    1fdc:	01 c0       	rjmp	.+2      	; 0x1fe0 <fgetc+0x5c>
    1fde:	80 e1       	ldi	r24, 0x10	; 16
    1fe0:	82 2b       	or	r24, r18
    1fe2:	8b 83       	std	Y+3, r24	; 0x03
    1fe4:	08 c0       	rjmp	.+16     	; 0x1ff6 <fgetc+0x72>
    1fe6:	2e 81       	ldd	r18, Y+6	; 0x06
    1fe8:	3f 81       	ldd	r19, Y+7	; 0x07
    1fea:	2f 5f       	subi	r18, 0xFF	; 255
    1fec:	3f 4f       	sbci	r19, 0xFF	; 255
    1fee:	3f 83       	std	Y+7, r19	; 0x07
    1ff0:	2e 83       	std	Y+6, r18	; 0x06
    1ff2:	99 27       	eor	r25, r25
    1ff4:	02 c0       	rjmp	.+4      	; 0x1ffa <fgetc+0x76>
    1ff6:	8f ef       	ldi	r24, 0xFF	; 255
    1ff8:	9f ef       	ldi	r25, 0xFF	; 255
    1ffa:	df 91       	pop	r29
    1ffc:	cf 91       	pop	r28
    1ffe:	08 95       	ret

00002000 <fputc>:
    2000:	0f 93       	push	r16
    2002:	1f 93       	push	r17
    2004:	cf 93       	push	r28
    2006:	df 93       	push	r29
    2008:	fb 01       	movw	r30, r22
    200a:	23 81       	ldd	r18, Z+3	; 0x03
    200c:	21 fd       	sbrc	r18, 1
    200e:	03 c0       	rjmp	.+6      	; 0x2016 <fputc+0x16>
    2010:	8f ef       	ldi	r24, 0xFF	; 255
    2012:	9f ef       	ldi	r25, 0xFF	; 255
    2014:	2c c0       	rjmp	.+88     	; 0x206e <fputc+0x6e>
    2016:	22 ff       	sbrs	r18, 2
    2018:	16 c0       	rjmp	.+44     	; 0x2046 <fputc+0x46>
    201a:	46 81       	ldd	r20, Z+6	; 0x06
    201c:	57 81       	ldd	r21, Z+7	; 0x07
    201e:	24 81       	ldd	r18, Z+4	; 0x04
    2020:	35 81       	ldd	r19, Z+5	; 0x05
    2022:	42 17       	cp	r20, r18
    2024:	53 07       	cpc	r21, r19
    2026:	44 f4       	brge	.+16     	; 0x2038 <fputc+0x38>
    2028:	a0 81       	ld	r26, Z
    202a:	b1 81       	ldd	r27, Z+1	; 0x01
    202c:	9d 01       	movw	r18, r26
    202e:	2f 5f       	subi	r18, 0xFF	; 255
    2030:	3f 4f       	sbci	r19, 0xFF	; 255
    2032:	31 83       	std	Z+1, r19	; 0x01
    2034:	20 83       	st	Z, r18
    2036:	8c 93       	st	X, r24
    2038:	26 81       	ldd	r18, Z+6	; 0x06
    203a:	37 81       	ldd	r19, Z+7	; 0x07
    203c:	2f 5f       	subi	r18, 0xFF	; 255
    203e:	3f 4f       	sbci	r19, 0xFF	; 255
    2040:	37 83       	std	Z+7, r19	; 0x07
    2042:	26 83       	std	Z+6, r18	; 0x06
    2044:	14 c0       	rjmp	.+40     	; 0x206e <fputc+0x6e>
    2046:	8b 01       	movw	r16, r22
    2048:	ec 01       	movw	r28, r24
    204a:	fb 01       	movw	r30, r22
    204c:	00 84       	ldd	r0, Z+8	; 0x08
    204e:	f1 85       	ldd	r31, Z+9	; 0x09
    2050:	e0 2d       	mov	r30, r0
    2052:	19 95       	eicall
    2054:	89 2b       	or	r24, r25
    2056:	e1 f6       	brne	.-72     	; 0x2010 <fputc+0x10>
    2058:	d8 01       	movw	r26, r16
    205a:	16 96       	adiw	r26, 0x06	; 6
    205c:	8d 91       	ld	r24, X+
    205e:	9c 91       	ld	r25, X
    2060:	17 97       	sbiw	r26, 0x07	; 7
    2062:	01 96       	adiw	r24, 0x01	; 1
    2064:	17 96       	adiw	r26, 0x07	; 7
    2066:	9c 93       	st	X, r25
    2068:	8e 93       	st	-X, r24
    206a:	16 97       	sbiw	r26, 0x06	; 6
    206c:	ce 01       	movw	r24, r28
    206e:	df 91       	pop	r29
    2070:	cf 91       	pop	r28
    2072:	1f 91       	pop	r17
    2074:	0f 91       	pop	r16
    2076:	08 95       	ret

00002078 <ungetc>:
    2078:	fb 01       	movw	r30, r22
    207a:	23 81       	ldd	r18, Z+3	; 0x03
    207c:	20 ff       	sbrs	r18, 0
    207e:	12 c0       	rjmp	.+36     	; 0x20a4 <ungetc+0x2c>
    2080:	26 fd       	sbrc	r18, 6
    2082:	10 c0       	rjmp	.+32     	; 0x20a4 <ungetc+0x2c>
    2084:	8f 3f       	cpi	r24, 0xFF	; 255
    2086:	3f ef       	ldi	r19, 0xFF	; 255
    2088:	93 07       	cpc	r25, r19
    208a:	61 f0       	breq	.+24     	; 0x20a4 <ungetc+0x2c>
    208c:	82 83       	std	Z+2, r24	; 0x02
    208e:	2f 7d       	andi	r18, 0xDF	; 223
    2090:	20 64       	ori	r18, 0x40	; 64
    2092:	23 83       	std	Z+3, r18	; 0x03
    2094:	26 81       	ldd	r18, Z+6	; 0x06
    2096:	37 81       	ldd	r19, Z+7	; 0x07
    2098:	21 50       	subi	r18, 0x01	; 1
    209a:	31 09       	sbc	r19, r1
    209c:	37 83       	std	Z+7, r19	; 0x07
    209e:	26 83       	std	Z+6, r18	; 0x06
    20a0:	99 27       	eor	r25, r25
    20a2:	08 95       	ret
    20a4:	8f ef       	ldi	r24, 0xFF	; 255
    20a6:	9f ef       	ldi	r25, 0xFF	; 255
    20a8:	08 95       	ret

000020aa <__ultoa_invert>:
    20aa:	fa 01       	movw	r30, r20
    20ac:	aa 27       	eor	r26, r26
    20ae:	28 30       	cpi	r18, 0x08	; 8
    20b0:	51 f1       	breq	.+84     	; 0x2106 <__ultoa_invert+0x5c>
    20b2:	20 31       	cpi	r18, 0x10	; 16
    20b4:	81 f1       	breq	.+96     	; 0x2116 <__ultoa_invert+0x6c>
    20b6:	e8 94       	clt
    20b8:	6f 93       	push	r22
    20ba:	6e 7f       	andi	r22, 0xFE	; 254
    20bc:	6e 5f       	subi	r22, 0xFE	; 254
    20be:	7f 4f       	sbci	r23, 0xFF	; 255
    20c0:	8f 4f       	sbci	r24, 0xFF	; 255
    20c2:	9f 4f       	sbci	r25, 0xFF	; 255
    20c4:	af 4f       	sbci	r26, 0xFF	; 255
    20c6:	b1 e0       	ldi	r27, 0x01	; 1
    20c8:	3e d0       	rcall	.+124    	; 0x2146 <__ultoa_invert+0x9c>
    20ca:	b4 e0       	ldi	r27, 0x04	; 4
    20cc:	3c d0       	rcall	.+120    	; 0x2146 <__ultoa_invert+0x9c>
    20ce:	67 0f       	add	r22, r23
    20d0:	78 1f       	adc	r23, r24
    20d2:	89 1f       	adc	r24, r25
    20d4:	9a 1f       	adc	r25, r26
    20d6:	a1 1d       	adc	r26, r1
    20d8:	68 0f       	add	r22, r24
    20da:	79 1f       	adc	r23, r25
    20dc:	8a 1f       	adc	r24, r26
    20de:	91 1d       	adc	r25, r1
    20e0:	a1 1d       	adc	r26, r1
    20e2:	6a 0f       	add	r22, r26
    20e4:	71 1d       	adc	r23, r1
    20e6:	81 1d       	adc	r24, r1
    20e8:	91 1d       	adc	r25, r1
    20ea:	a1 1d       	adc	r26, r1
    20ec:	20 d0       	rcall	.+64     	; 0x212e <__ultoa_invert+0x84>
    20ee:	09 f4       	brne	.+2      	; 0x20f2 <__ultoa_invert+0x48>
    20f0:	68 94       	set
    20f2:	3f 91       	pop	r19
    20f4:	2a e0       	ldi	r18, 0x0A	; 10
    20f6:	26 9f       	mul	r18, r22
    20f8:	11 24       	eor	r1, r1
    20fa:	30 19       	sub	r19, r0
    20fc:	30 5d       	subi	r19, 0xD0	; 208
    20fe:	31 93       	st	Z+, r19
    2100:	de f6       	brtc	.-74     	; 0x20b8 <__ultoa_invert+0xe>
    2102:	cf 01       	movw	r24, r30
    2104:	08 95       	ret
    2106:	46 2f       	mov	r20, r22
    2108:	47 70       	andi	r20, 0x07	; 7
    210a:	40 5d       	subi	r20, 0xD0	; 208
    210c:	41 93       	st	Z+, r20
    210e:	b3 e0       	ldi	r27, 0x03	; 3
    2110:	0f d0       	rcall	.+30     	; 0x2130 <__ultoa_invert+0x86>
    2112:	c9 f7       	brne	.-14     	; 0x2106 <__ultoa_invert+0x5c>
    2114:	f6 cf       	rjmp	.-20     	; 0x2102 <__ultoa_invert+0x58>
    2116:	46 2f       	mov	r20, r22
    2118:	4f 70       	andi	r20, 0x0F	; 15
    211a:	40 5d       	subi	r20, 0xD0	; 208
    211c:	4a 33       	cpi	r20, 0x3A	; 58
    211e:	18 f0       	brcs	.+6      	; 0x2126 <__ultoa_invert+0x7c>
    2120:	49 5d       	subi	r20, 0xD9	; 217
    2122:	31 fd       	sbrc	r19, 1
    2124:	40 52       	subi	r20, 0x20	; 32
    2126:	41 93       	st	Z+, r20
    2128:	02 d0       	rcall	.+4      	; 0x212e <__ultoa_invert+0x84>
    212a:	a9 f7       	brne	.-22     	; 0x2116 <__ultoa_invert+0x6c>
    212c:	ea cf       	rjmp	.-44     	; 0x2102 <__ultoa_invert+0x58>
    212e:	b4 e0       	ldi	r27, 0x04	; 4
    2130:	a6 95       	lsr	r26
    2132:	97 95       	ror	r25
    2134:	87 95       	ror	r24
    2136:	77 95       	ror	r23
    2138:	67 95       	ror	r22
    213a:	ba 95       	dec	r27
    213c:	c9 f7       	brne	.-14     	; 0x2130 <__ultoa_invert+0x86>
    213e:	00 97       	sbiw	r24, 0x00	; 0
    2140:	61 05       	cpc	r22, r1
    2142:	71 05       	cpc	r23, r1
    2144:	08 95       	ret
    2146:	9b 01       	movw	r18, r22
    2148:	ac 01       	movw	r20, r24
    214a:	0a 2e       	mov	r0, r26
    214c:	06 94       	lsr	r0
    214e:	57 95       	ror	r21
    2150:	47 95       	ror	r20
    2152:	37 95       	ror	r19
    2154:	27 95       	ror	r18
    2156:	ba 95       	dec	r27
    2158:	c9 f7       	brne	.-14     	; 0x214c <__ultoa_invert+0xa2>
    215a:	62 0f       	add	r22, r18
    215c:	73 1f       	adc	r23, r19
    215e:	84 1f       	adc	r24, r20
    2160:	95 1f       	adc	r25, r21
    2162:	a0 1d       	adc	r26, r0
    2164:	08 95       	ret

00002166 <__ctype_isfalse>:
    2166:	99 27       	eor	r25, r25
    2168:	88 27       	eor	r24, r24

0000216a <__ctype_istrue>:
    216a:	08 95       	ret

0000216c <_exit>:
    216c:	f8 94       	cli

0000216e <__stop_program>:
    216e:	ff cf       	rjmp	.-2      	; 0x216e <__stop_program>
