
UniProject.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000002e  00800200  00001a98  00001b2c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001a98  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000071  0080022e  0080022e  00001b5a  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001b5a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001bb8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000278  00000000  00000000  00001bf8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002043  00000000  00000000  00001e70  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000011f0  00000000  00000000  00003eb3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001218  00000000  00000000  000050a3  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000714  00000000  00000000  000062bc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000c5c  00000000  00000000  000069d0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000d9d  00000000  00000000  0000762c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000218  00000000  00000000  000083c9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	77 c0       	rjmp	.+238    	; 0xf0 <__ctors_end>
       2:	00 00       	nop
       4:	95 c0       	rjmp	.+298    	; 0x130 <__bad_interrupt>
       6:	00 00       	nop
       8:	93 c0       	rjmp	.+294    	; 0x130 <__bad_interrupt>
       a:	00 00       	nop
       c:	91 c0       	rjmp	.+290    	; 0x130 <__bad_interrupt>
       e:	00 00       	nop
      10:	0d c4       	rjmp	.+2074   	; 0x82c <__vector_4>
      12:	00 00       	nop
      14:	8d c0       	rjmp	.+282    	; 0x130 <__bad_interrupt>
      16:	00 00       	nop
      18:	8b c0       	rjmp	.+278    	; 0x130 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	89 c0       	rjmp	.+274    	; 0x130 <__bad_interrupt>
      1e:	00 00       	nop
      20:	87 c0       	rjmp	.+270    	; 0x130 <__bad_interrupt>
      22:	00 00       	nop
      24:	85 c0       	rjmp	.+266    	; 0x130 <__bad_interrupt>
      26:	00 00       	nop
      28:	83 c0       	rjmp	.+262    	; 0x130 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	81 c0       	rjmp	.+258    	; 0x130 <__bad_interrupt>
      2e:	00 00       	nop
      30:	7f c0       	rjmp	.+254    	; 0x130 <__bad_interrupt>
      32:	00 00       	nop
      34:	7d c0       	rjmp	.+250    	; 0x130 <__bad_interrupt>
      36:	00 00       	nop
      38:	7b c0       	rjmp	.+246    	; 0x130 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	79 c0       	rjmp	.+242    	; 0x130 <__bad_interrupt>
      3e:	00 00       	nop
      40:	77 c0       	rjmp	.+238    	; 0x130 <__bad_interrupt>
      42:	00 00       	nop
      44:	75 c0       	rjmp	.+234    	; 0x130 <__bad_interrupt>
      46:	00 00       	nop
      48:	73 c0       	rjmp	.+230    	; 0x130 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	71 c0       	rjmp	.+226    	; 0x130 <__bad_interrupt>
      4e:	00 00       	nop
      50:	a3 c6       	rjmp	.+3398   	; 0xd98 <__vector_20>
      52:	00 00       	nop
      54:	6d c0       	rjmp	.+218    	; 0x130 <__bad_interrupt>
      56:	00 00       	nop
      58:	6b c0       	rjmp	.+214    	; 0x130 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	a9 c4       	rjmp	.+2386   	; 0x9b0 <__vector_23>
      5e:	00 00       	nop
      60:	67 c0       	rjmp	.+206    	; 0x130 <__bad_interrupt>
      62:	00 00       	nop
      64:	9b c5       	rjmp	.+2870   	; 0xb9c <__vector_25>
      66:	00 00       	nop
      68:	63 c0       	rjmp	.+198    	; 0x130 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	61 c0       	rjmp	.+194    	; 0x130 <__bad_interrupt>
      6e:	00 00       	nop
      70:	5f c0       	rjmp	.+190    	; 0x130 <__bad_interrupt>
      72:	00 00       	nop
      74:	5d c0       	rjmp	.+186    	; 0x130 <__bad_interrupt>
      76:	00 00       	nop
      78:	5b c0       	rjmp	.+182    	; 0x130 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	59 c0       	rjmp	.+178    	; 0x130 <__bad_interrupt>
      7e:	00 00       	nop
      80:	57 c0       	rjmp	.+174    	; 0x130 <__bad_interrupt>
      82:	00 00       	nop
      84:	55 c0       	rjmp	.+170    	; 0x130 <__bad_interrupt>
      86:	00 00       	nop
      88:	53 c0       	rjmp	.+166    	; 0x130 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	51 c0       	rjmp	.+162    	; 0x130 <__bad_interrupt>
      8e:	00 00       	nop
      90:	4f c0       	rjmp	.+158    	; 0x130 <__bad_interrupt>
      92:	00 00       	nop
      94:	4d c0       	rjmp	.+154    	; 0x130 <__bad_interrupt>
      96:	00 00       	nop
      98:	4b c0       	rjmp	.+150    	; 0x130 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	49 c0       	rjmp	.+146    	; 0x130 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	47 c0       	rjmp	.+142    	; 0x130 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	45 c0       	rjmp	.+138    	; 0x130 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	43 c0       	rjmp	.+134    	; 0x130 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	41 c0       	rjmp	.+130    	; 0x130 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	3f c0       	rjmp	.+126    	; 0x130 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	3d c0       	rjmp	.+122    	; 0x130 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	3b c0       	rjmp	.+118    	; 0x130 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	39 c0       	rjmp	.+114    	; 0x130 <__bad_interrupt>
      be:	00 00       	nop
      c0:	37 c0       	rjmp	.+110    	; 0x130 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	35 c0       	rjmp	.+106    	; 0x130 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	31 c4       	rjmp	.+2146   	; 0x92c <__vector_50>
      ca:	00 00       	nop
      cc:	31 c0       	rjmp	.+98     	; 0x130 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	2f c0       	rjmp	.+94     	; 0x130 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	2d c0       	rjmp	.+90     	; 0x130 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	2b c0       	rjmp	.+86     	; 0x130 <__bad_interrupt>
      da:	00 00       	nop
      dc:	29 c0       	rjmp	.+82     	; 0x130 <__bad_interrupt>
      de:	00 00       	nop
      e0:	27 c0       	rjmp	.+78     	; 0x130 <__bad_interrupt>
	...

000000e4 <__trampolines_end>:
      e4:	63 64       	ori	r22, 0x43	; 67
      e6:	69 6e       	ori	r22, 0xE9	; 233
      e8:	6f 70       	andi	r22, 0x0F	; 15
      ea:	73 75       	andi	r23, 0x53	; 83
      ec:	78 58       	subi	r23, 0x88	; 136
      ee:	5b 00       	.word	0x005b	; ????

000000f0 <__ctors_end>:
      f0:	11 24       	eor	r1, r1
      f2:	1f be       	out	0x3f, r1	; 63
      f4:	cf ef       	ldi	r28, 0xFF	; 255
      f6:	d1 e2       	ldi	r29, 0x21	; 33
      f8:	de bf       	out	0x3e, r29	; 62
      fa:	cd bf       	out	0x3d, r28	; 61
      fc:	00 e0       	ldi	r16, 0x00	; 0
      fe:	0c bf       	out	0x3c, r16	; 60

00000100 <__do_copy_data>:
     100:	12 e0       	ldi	r17, 0x02	; 2
     102:	a0 e0       	ldi	r26, 0x00	; 0
     104:	b2 e0       	ldi	r27, 0x02	; 2
     106:	e8 e9       	ldi	r30, 0x98	; 152
     108:	fa e1       	ldi	r31, 0x1A	; 26
     10a:	00 e0       	ldi	r16, 0x00	; 0
     10c:	0b bf       	out	0x3b, r16	; 59
     10e:	02 c0       	rjmp	.+4      	; 0x114 <__do_copy_data+0x14>
     110:	07 90       	elpm	r0, Z+
     112:	0d 92       	st	X+, r0
     114:	ae 32       	cpi	r26, 0x2E	; 46
     116:	b1 07       	cpc	r27, r17
     118:	d9 f7       	brne	.-10     	; 0x110 <__do_copy_data+0x10>

0000011a <__do_clear_bss>:
     11a:	22 e0       	ldi	r18, 0x02	; 2
     11c:	ae e2       	ldi	r26, 0x2E	; 46
     11e:	b2 e0       	ldi	r27, 0x02	; 2
     120:	01 c0       	rjmp	.+2      	; 0x124 <.do_clear_bss_start>

00000122 <.do_clear_bss_loop>:
     122:	1d 92       	st	X+, r1

00000124 <.do_clear_bss_start>:
     124:	af 39       	cpi	r26, 0x9F	; 159
     126:	b2 07       	cpc	r27, r18
     128:	e1 f7       	brne	.-8      	; 0x122 <.do_clear_bss_loop>
     12a:	50 d3       	rcall	.+1696   	; 0x7cc <main>
     12c:	0c 94 4a 0d 	jmp	0x1a94	; 0x1a94 <_exit>

00000130 <__bad_interrupt>:
     130:	67 cf       	rjmp	.-306    	; 0x0 <__vectors>

00000132 <TransmitUART0>:

#ifndef TIMER5_H_
#define TIMER5_H_

void TCNT5_startingValue(unsigned int value) {
	TCNT5 = value;
     132:	e0 ec       	ldi	r30, 0xC0	; 192
     134:	f0 e0       	ldi	r31, 0x00	; 0
     136:	90 81       	ld	r25, Z
     138:	95 ff       	sbrs	r25, 5
     13a:	fd cf       	rjmp	.-6      	; 0x136 <TransmitUART0+0x4>
     13c:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7c00c6>
     140:	08 95       	ret

00000142 <returnNewLine>:
     142:	8a e0       	ldi	r24, 0x0A	; 10
     144:	f6 df       	rcall	.-20     	; 0x132 <TransmitUART0>
     146:	8d e0       	ldi	r24, 0x0D	; 13
     148:	f4 cf       	rjmp	.-24     	; 0x132 <TransmitUART0>
     14a:	08 95       	ret

0000014c <TransmitString>:
     14c:	cf 93       	push	r28
     14e:	df 93       	push	r29
     150:	ec 01       	movw	r28, r24
     152:	88 81       	ld	r24, Y
     154:	88 23       	and	r24, r24
     156:	29 f0       	breq	.+10     	; 0x162 <TransmitString+0x16>
     158:	21 96       	adiw	r28, 0x01	; 1
     15a:	eb df       	rcall	.-42     	; 0x132 <TransmitUART0>
     15c:	89 91       	ld	r24, Y+
     15e:	81 11       	cpse	r24, r1
     160:	fc cf       	rjmp	.-8      	; 0x15a <TransmitString+0xe>
     162:	ef df       	rcall	.-34     	; 0x142 <returnNewLine>
     164:	df 91       	pop	r29
     166:	cf 91       	pop	r28
     168:	08 95       	ret

0000016a <InitializeUART0>:
     16a:	8f 92       	push	r8
     16c:	9f 92       	push	r9
     16e:	af 92       	push	r10
     170:	bf 92       	push	r11
     172:	ef 92       	push	r14
     174:	cf 93       	push	r28
     176:	df 93       	push	r29
     178:	4b 01       	movw	r8, r22
     17a:	5c 01       	movw	r10, r24
     17c:	d4 2f       	mov	r29, r20
     17e:	c2 2f       	mov	r28, r18
     180:	60 e4       	ldi	r22, 0x40	; 64
     182:	72 e4       	ldi	r23, 0x42	; 66
     184:	8f e0       	ldi	r24, 0x0F	; 15
     186:	90 e0       	ldi	r25, 0x00	; 0
     188:	a5 01       	movw	r20, r10
     18a:	94 01       	movw	r18, r8
     18c:	0e 94 b8 09 	call	0x1370	; 0x1370 <__udivmodsi4>
     190:	ca 01       	movw	r24, r20
     192:	b9 01       	movw	r22, r18
     194:	9a d7       	rcall	.+3892   	; 0x10ca <__floatunsisf>
     196:	0e 94 1b 09 	call	0x1236	; 0x1236 <lrint>
     19a:	61 50       	subi	r22, 0x01	; 1
     19c:	71 09       	sbc	r23, r1
     19e:	d1 30       	cpi	r29, 0x01	; 1
     1a0:	19 f4       	brne	.+6      	; 0x1a8 <InitializeUART0+0x3e>
     1a2:	82 e0       	ldi	r24, 0x02	; 2
     1a4:	80 93 c0 00 	sts	0x00C0, r24	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7c00c0>
     1a8:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7c00c5>
     1ac:	60 93 c4 00 	sts	0x00C4, r22	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7c00c4>
     1b0:	88 e9       	ldi	r24, 0x98	; 152
     1b2:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7c00c1>
     1b6:	82 e0       	ldi	r24, 0x02	; 2
     1b8:	e8 12       	cpse	r14, r24
     1ba:	03 c0       	rjmp	.+6      	; 0x1c2 <InitializeUART0+0x58>
     1bc:	88 e0       	ldi	r24, 0x08	; 8
     1be:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7c00c2>
     1c2:	c6 30       	cpi	r28, 0x06	; 6
     1c4:	31 f4       	brne	.+12     	; 0x1d2 <InitializeUART0+0x68>
     1c6:	e2 ec       	ldi	r30, 0xC2	; 194
     1c8:	f0 e0       	ldi	r31, 0x00	; 0
     1ca:	80 81       	ld	r24, Z
     1cc:	82 60       	ori	r24, 0x02	; 2
     1ce:	80 83       	st	Z, r24
     1d0:	0f c0       	rjmp	.+30     	; 0x1f0 <InitializeUART0+0x86>
     1d2:	c7 30       	cpi	r28, 0x07	; 7
     1d4:	31 f4       	brne	.+12     	; 0x1e2 <InitializeUART0+0x78>
     1d6:	e2 ec       	ldi	r30, 0xC2	; 194
     1d8:	f0 e0       	ldi	r31, 0x00	; 0
     1da:	80 81       	ld	r24, Z
     1dc:	84 60       	ori	r24, 0x04	; 4
     1de:	80 83       	st	Z, r24
     1e0:	07 c0       	rjmp	.+14     	; 0x1f0 <InitializeUART0+0x86>
     1e2:	c9 30       	cpi	r28, 0x09	; 9
     1e4:	29 f4       	brne	.+10     	; 0x1f0 <InitializeUART0+0x86>
     1e6:	e2 ec       	ldi	r30, 0xC2	; 194
     1e8:	f0 e0       	ldi	r31, 0x00	; 0
     1ea:	80 81       	ld	r24, Z
     1ec:	8e 60       	ori	r24, 0x0E	; 14
     1ee:	80 83       	st	Z, r24
     1f0:	df 91       	pop	r29
     1f2:	cf 91       	pop	r28
     1f4:	ef 90       	pop	r14
     1f6:	bf 90       	pop	r11
     1f8:	af 90       	pop	r10
     1fa:	9f 90       	pop	r9
     1fc:	8f 90       	pop	r8
     1fe:	08 95       	ret

00000200 <setPwm>:
     200:	cf 92       	push	r12
     202:	df 92       	push	r13
     204:	ef 92       	push	r14
     206:	ff 92       	push	r15
     208:	6b 01       	movw	r12, r22
     20a:	7c 01       	movw	r14, r24
     20c:	20 e0       	ldi	r18, 0x00	; 0
     20e:	30 e0       	ldi	r19, 0x00	; 0
     210:	48 ec       	ldi	r20, 0xC8	; 200
     212:	52 e4       	ldi	r21, 0x42	; 66
     214:	2a d7       	rcall	.+3668   	; 0x106a <__cmpsf2>
     216:	18 16       	cp	r1, r24
     218:	bc f0       	brlt	.+46     	; 0x248 <setPwm+0x48>
     21a:	60 91 a6 00 	lds	r22, 0x00A6	; 0x8000a6 <__TEXT_REGION_LENGTH__+0x7c00a6>
     21e:	70 91 a7 00 	lds	r23, 0x00A7	; 0x8000a7 <__TEXT_REGION_LENGTH__+0x7c00a7>
     222:	80 e0       	ldi	r24, 0x00	; 0
     224:	90 e0       	ldi	r25, 0x00	; 0
     226:	51 d7       	rcall	.+3746   	; 0x10ca <__floatunsisf>
     228:	2a e0       	ldi	r18, 0x0A	; 10
     22a:	37 ed       	ldi	r19, 0xD7	; 215
     22c:	43 e2       	ldi	r20, 0x23	; 35
     22e:	5c e3       	ldi	r21, 0x3C	; 60
     230:	0e 94 55 09 	call	0x12aa	; 0x12aa <__mulsf3>
     234:	a7 01       	movw	r20, r14
     236:	96 01       	movw	r18, r12
     238:	0e 94 55 09 	call	0x12aa	; 0x12aa <__mulsf3>
     23c:	1a d7       	rcall	.+3636   	; 0x1072 <__fixunssfsi>
     23e:	70 93 a9 00 	sts	0x00A9, r23	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7c00a9>
     242:	60 93 a8 00 	sts	0x00A8, r22	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7c00a8>
     246:	1a c0       	rjmp	.+52     	; 0x27c <setPwm+0x7c>
     248:	20 e0       	ldi	r18, 0x00	; 0
     24a:	30 e0       	ldi	r19, 0x00	; 0
     24c:	a9 01       	movw	r20, r18
     24e:	c7 01       	movw	r24, r14
     250:	b6 01       	movw	r22, r12
     252:	0b d7       	rcall	.+3606   	; 0x106a <__cmpsf2>
     254:	18 16       	cp	r1, r24
     256:	2c f0       	brlt	.+10     	; 0x262 <setPwm+0x62>
     258:	10 92 a9 00 	sts	0x00A9, r1	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7c00a9>
     25c:	10 92 a8 00 	sts	0x00A8, r1	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7c00a8>
     260:	0d c0       	rjmp	.+26     	; 0x27c <setPwm+0x7c>
     262:	20 e0       	ldi	r18, 0x00	; 0
     264:	30 e0       	ldi	r19, 0x00	; 0
     266:	48 ec       	ldi	r20, 0xC8	; 200
     268:	52 e4       	ldi	r21, 0x42	; 66
     26a:	c7 01       	movw	r24, r14
     26c:	b6 01       	movw	r22, r12
     26e:	df d7       	rcall	.+4030   	; 0x122e <__gesf2>
     270:	18 16       	cp	r1, r24
     272:	24 f4       	brge	.+8      	; 0x27c <setPwm+0x7c>
     274:	10 92 a9 00 	sts	0x00A9, r1	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7c00a9>
     278:	10 92 a8 00 	sts	0x00A8, r1	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7c00a8>
     27c:	ff 90       	pop	r15
     27e:	ef 90       	pop	r14
     280:	df 90       	pop	r13
     282:	cf 90       	pop	r12
     284:	08 95       	ret

00000286 <InitializePWM_4C>:
     286:	8f 92       	push	r8
     288:	9f 92       	push	r9
     28a:	af 92       	push	r10
     28c:	bf 92       	push	r11
     28e:	cf 92       	push	r12
     290:	df 92       	push	r13
     292:	ef 92       	push	r14
     294:	ff 92       	push	r15
     296:	0f 93       	push	r16
     298:	1f 93       	push	r17
     29a:	4b 01       	movw	r8, r22
     29c:	5c 01       	movw	r10, r24
     29e:	69 01       	movw	r12, r18
     2a0:	7a 01       	movw	r14, r20
     2a2:	e1 ea       	ldi	r30, 0xA1	; 161
     2a4:	f0 e0       	ldi	r31, 0x00	; 0
     2a6:	10 82       	st	Z, r1
     2a8:	a1 e0       	ldi	r26, 0x01	; 1
     2aa:	b1 e0       	ldi	r27, 0x01	; 1
     2ac:	8c 91       	ld	r24, X
     2ae:	88 60       	ori	r24, 0x08	; 8
     2b0:	8c 93       	st	X, r24
     2b2:	a0 ea       	ldi	r26, 0xA0	; 160
     2b4:	b0 e0       	ldi	r27, 0x00	; 0
     2b6:	8c 91       	ld	r24, X
     2b8:	82 68       	ori	r24, 0x82	; 130
     2ba:	8c 93       	st	X, r24
     2bc:	80 81       	ld	r24, Z
     2be:	88 61       	ori	r24, 0x18	; 24
     2c0:	80 83       	st	Z, r24
     2c2:	60 e0       	ldi	r22, 0x00	; 0
     2c4:	74 e2       	ldi	r23, 0x24	; 36
     2c6:	84 ef       	ldi	r24, 0xF4	; 244
     2c8:	90 e0       	ldi	r25, 0x00	; 0
     2ca:	a5 01       	movw	r20, r10
     2cc:	94 01       	movw	r18, r8
     2ce:	0e 94 b8 09 	call	0x1370	; 0x1370 <__udivmodsi4>
     2d2:	89 01       	movw	r16, r18
     2d4:	9a 01       	movw	r18, r20
     2d6:	01 15       	cp	r16, r1
     2d8:	11 05       	cpc	r17, r1
     2da:	61 e0       	ldi	r22, 0x01	; 1
     2dc:	26 07       	cpc	r18, r22
     2de:	31 05       	cpc	r19, r1
     2e0:	38 f1       	brcs	.+78     	; 0x330 <InitializePWM_4C+0xaa>
     2e2:	d9 01       	movw	r26, r18
     2e4:	c8 01       	movw	r24, r16
     2e6:	41 e0       	ldi	r20, 0x01	; 1
     2e8:	50 e0       	ldi	r21, 0x00	; 0
     2ea:	b6 95       	lsr	r27
     2ec:	a7 95       	ror	r26
     2ee:	97 95       	ror	r25
     2f0:	87 95       	ror	r24
     2f2:	4f 5f       	subi	r20, 0xFF	; 255
     2f4:	5f 4f       	sbci	r21, 0xFF	; 255
     2f6:	00 97       	sbiw	r24, 0x00	; 0
     2f8:	61 e0       	ldi	r22, 0x01	; 1
     2fa:	a6 07       	cpc	r26, r22
     2fc:	b1 05       	cpc	r27, r1
     2fe:	a8 f7       	brcc	.-22     	; 0x2ea <InitializePWM_4C+0x64>
     300:	46 30       	cpi	r20, 0x06	; 6
     302:	51 05       	cpc	r21, r1
     304:	14 f0       	brlt	.+4      	; 0x30a <InitializePWM_4C+0x84>
     306:	45 e0       	ldi	r20, 0x05	; 5
     308:	50 e0       	ldi	r21, 0x00	; 0
     30a:	43 30       	cpi	r20, 0x03	; 3
     30c:	51 05       	cpc	r21, r1
     30e:	81 f1       	breq	.+96     	; 0x370 <InitializePWM_4C+0xea>
     310:	3c f4       	brge	.+14     	; 0x320 <InitializePWM_4C+0x9a>
     312:	41 30       	cpi	r20, 0x01	; 1
     314:	51 05       	cpc	r21, r1
     316:	61 f0       	breq	.+24     	; 0x330 <InitializePWM_4C+0xaa>
     318:	42 30       	cpi	r20, 0x02	; 2
     31a:	51 05       	cpc	r21, r1
     31c:	a9 f0       	breq	.+42     	; 0x348 <InitializePWM_4C+0xc2>
     31e:	60 c0       	rjmp	.+192    	; 0x3e0 <InitializePWM_4C+0x15a>
     320:	44 30       	cpi	r20, 0x04	; 4
     322:	51 05       	cpc	r21, r1
     324:	c9 f1       	breq	.+114    	; 0x398 <InitializePWM_4C+0x112>
     326:	45 30       	cpi	r20, 0x05	; 5
     328:	51 05       	cpc	r21, r1
     32a:	09 f4       	brne	.+2      	; 0x32e <InitializePWM_4C+0xa8>
     32c:	45 c0       	rjmp	.+138    	; 0x3b8 <InitializePWM_4C+0x132>
     32e:	58 c0       	rjmp	.+176    	; 0x3e0 <InitializePWM_4C+0x15a>
     330:	e1 ea       	ldi	r30, 0xA1	; 161
     332:	f0 e0       	ldi	r31, 0x00	; 0
     334:	80 81       	ld	r24, Z
     336:	81 60       	ori	r24, 0x01	; 1
     338:	80 83       	st	Z, r24
     33a:	01 50       	subi	r16, 0x01	; 1
     33c:	11 09       	sbc	r17, r1
     33e:	10 93 a7 00 	sts	0x00A7, r17	; 0x8000a7 <__TEXT_REGION_LENGTH__+0x7c00a7>
     342:	00 93 a6 00 	sts	0x00A6, r16	; 0x8000a6 <__TEXT_REGION_LENGTH__+0x7c00a6>
     346:	4c c0       	rjmp	.+152    	; 0x3e0 <InitializePWM_4C+0x15a>
     348:	e1 ea       	ldi	r30, 0xA1	; 161
     34a:	f0 e0       	ldi	r31, 0x00	; 0
     34c:	80 81       	ld	r24, Z
     34e:	82 60       	ori	r24, 0x02	; 2
     350:	80 83       	st	Z, r24
     352:	68 94       	set
     354:	12 f8       	bld	r1, 2
     356:	36 95       	lsr	r19
     358:	27 95       	ror	r18
     35a:	17 95       	ror	r17
     35c:	07 95       	ror	r16
     35e:	16 94       	lsr	r1
     360:	d1 f7       	brne	.-12     	; 0x356 <InitializePWM_4C+0xd0>
     362:	01 50       	subi	r16, 0x01	; 1
     364:	11 09       	sbc	r17, r1
     366:	10 93 a7 00 	sts	0x00A7, r17	; 0x8000a7 <__TEXT_REGION_LENGTH__+0x7c00a7>
     36a:	00 93 a6 00 	sts	0x00A6, r16	; 0x8000a6 <__TEXT_REGION_LENGTH__+0x7c00a6>
     36e:	38 c0       	rjmp	.+112    	; 0x3e0 <InitializePWM_4C+0x15a>
     370:	e1 ea       	ldi	r30, 0xA1	; 161
     372:	f0 e0       	ldi	r31, 0x00	; 0
     374:	80 81       	ld	r24, Z
     376:	83 60       	ori	r24, 0x03	; 3
     378:	80 83       	st	Z, r24
     37a:	68 94       	set
     37c:	15 f8       	bld	r1, 5
     37e:	36 95       	lsr	r19
     380:	27 95       	ror	r18
     382:	17 95       	ror	r17
     384:	07 95       	ror	r16
     386:	16 94       	lsr	r1
     388:	d1 f7       	brne	.-12     	; 0x37e <InitializePWM_4C+0xf8>
     38a:	01 50       	subi	r16, 0x01	; 1
     38c:	11 09       	sbc	r17, r1
     38e:	10 93 a7 00 	sts	0x00A7, r17	; 0x8000a7 <__TEXT_REGION_LENGTH__+0x7c00a7>
     392:	00 93 a6 00 	sts	0x00A6, r16	; 0x8000a6 <__TEXT_REGION_LENGTH__+0x7c00a6>
     396:	24 c0       	rjmp	.+72     	; 0x3e0 <InitializePWM_4C+0x15a>
     398:	e1 ea       	ldi	r30, 0xA1	; 161
     39a:	f0 e0       	ldi	r31, 0x00	; 0
     39c:	80 81       	ld	r24, Z
     39e:	84 60       	ori	r24, 0x04	; 4
     3a0:	80 83       	st	Z, r24
     3a2:	01 2f       	mov	r16, r17
     3a4:	12 2f       	mov	r17, r18
     3a6:	23 2f       	mov	r18, r19
     3a8:	33 27       	eor	r19, r19
     3aa:	01 50       	subi	r16, 0x01	; 1
     3ac:	11 09       	sbc	r17, r1
     3ae:	10 93 a7 00 	sts	0x00A7, r17	; 0x8000a7 <__TEXT_REGION_LENGTH__+0x7c00a7>
     3b2:	00 93 a6 00 	sts	0x00A6, r16	; 0x8000a6 <__TEXT_REGION_LENGTH__+0x7c00a6>
     3b6:	14 c0       	rjmp	.+40     	; 0x3e0 <InitializePWM_4C+0x15a>
     3b8:	e1 ea       	ldi	r30, 0xA1	; 161
     3ba:	f0 e0       	ldi	r31, 0x00	; 0
     3bc:	80 81       	ld	r24, Z
     3be:	85 60       	ori	r24, 0x05	; 5
     3c0:	80 83       	st	Z, r24
     3c2:	0f 2e       	mov	r0, r31
     3c4:	fa e0       	ldi	r31, 0x0A	; 10
     3c6:	36 95       	lsr	r19
     3c8:	27 95       	ror	r18
     3ca:	17 95       	ror	r17
     3cc:	07 95       	ror	r16
     3ce:	fa 95       	dec	r31
     3d0:	d1 f7       	brne	.-12     	; 0x3c6 <InitializePWM_4C+0x140>
     3d2:	f0 2d       	mov	r31, r0
     3d4:	0f 5f       	subi	r16, 0xFF	; 255
     3d6:	1f 4f       	sbci	r17, 0xFF	; 255
     3d8:	10 93 a7 00 	sts	0x00A7, r17	; 0x8000a7 <__TEXT_REGION_LENGTH__+0x7c00a7>
     3dc:	00 93 a6 00 	sts	0x00A6, r16	; 0x8000a6 <__TEXT_REGION_LENGTH__+0x7c00a6>
     3e0:	80 91 a6 00 	lds	r24, 0x00A6	; 0x8000a6 <__TEXT_REGION_LENGTH__+0x7c00a6>
     3e4:	90 91 a7 00 	lds	r25, 0x00A7	; 0x8000a7 <__TEXT_REGION_LENGTH__+0x7c00a7>
     3e8:	89 2b       	or	r24, r25
     3ea:	29 f4       	brne	.+10     	; 0x3f6 <InitializePWM_4C+0x170>
     3ec:	10 92 a9 00 	sts	0x00A9, r1	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7c00a9>
     3f0:	10 92 a8 00 	sts	0x00A8, r1	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7c00a8>
     3f4:	03 c0       	rjmp	.+6      	; 0x3fc <InitializePWM_4C+0x176>
     3f6:	c7 01       	movw	r24, r14
     3f8:	b6 01       	movw	r22, r12
     3fa:	02 df       	rcall	.-508    	; 0x200 <setPwm>
     3fc:	1f 91       	pop	r17
     3fe:	0f 91       	pop	r16
     400:	ff 90       	pop	r15
     402:	ef 90       	pop	r14
     404:	df 90       	pop	r13
     406:	cf 90       	pop	r12
     408:	bf 90       	pop	r11
     40a:	af 90       	pop	r10
     40c:	9f 90       	pop	r9
     40e:	8f 90       	pop	r8
     410:	08 95       	ret

00000412 <initializeTimerCounter_5>:
}

void initializeTimerCounter_5()
{
	TIMSK5 |= (1 << TOIE5);
     412:	e3 e7       	ldi	r30, 0x73	; 115
     414:	f0 e0       	ldi	r31, 0x00	; 0
     416:	80 81       	ld	r24, Z
     418:	81 60       	ori	r24, 0x01	; 1
     41a:	80 83       	st	Z, r24
	TCCR5B = (1 << CS50); // doesnt increase countsec value - should change CS50 to CS51 or smth else 
     41c:	81 e0       	ldi	r24, 0x01	; 1
     41e:	80 93 21 01 	sts	0x0121, r24	; 0x800121 <__TEXT_REGION_LENGTH__+0x7c0121>

#ifndef TIMER5_H_
#define TIMER5_H_

void TCNT5_startingValue(unsigned int value) {
	TCNT5 = value;
     422:	8f ef       	ldi	r24, 0xFF	; 255
     424:	95 e0       	ldi	r25, 0x05	; 5
     426:	90 93 25 01 	sts	0x0125, r25	; 0x800125 <__TEXT_REGION_LENGTH__+0x7c0125>
     42a:	80 93 24 01 	sts	0x0124, r24	; 0x800124 <__TEXT_REGION_LENGTH__+0x7c0124>
     42e:	08 95       	ret

00000430 <decodeCommands>:
volatile struct RPM RPM_1 = {.currentRPM = 0, .setRPM = 0, .counter = 0, .interruptionCounter = 10};

char sendinComands = 0;

void decodeCommands(volatile unsigned char commands[])
{
     430:	2f 92       	push	r2
     432:	3f 92       	push	r3
     434:	4f 92       	push	r4
     436:	5f 92       	push	r5
     438:	6f 92       	push	r6
     43a:	7f 92       	push	r7
     43c:	8f 92       	push	r8
     43e:	9f 92       	push	r9
     440:	af 92       	push	r10
     442:	bf 92       	push	r11
     444:	cf 92       	push	r12
     446:	df 92       	push	r13
     448:	ef 92       	push	r14
     44a:	ff 92       	push	r15
     44c:	0f 93       	push	r16
     44e:	1f 93       	push	r17
     450:	cf 93       	push	r28
     452:	df 93       	push	r29
     454:	cd b7       	in	r28, 0x3d	; 61
     456:	de b7       	in	r29, 0x3e	; 62
     458:	2c 97       	sbiw	r28, 0x0c	; 12
     45a:	0f b6       	in	r0, 0x3f	; 63
     45c:	f8 94       	cli
     45e:	de bf       	out	0x3e, r29	; 62
     460:	0f be       	out	0x3f, r0	; 63
     462:	cd bf       	out	0x3d, r28	; 61
	unsigned int i = 0;
	unsigned int j = 0;
	unsigned char tempBuf[10];
	unsigned int extractedValue;
	while(commands[i] != '\n') {
     464:	dc 01       	movw	r26, r24
     466:	2c 91       	ld	r18, X
     468:	2a 30       	cpi	r18, 0x0A	; 10
     46a:	09 f4       	brne	.+2      	; 0x46e <decodeCommands+0x3e>
     46c:	96 c1       	rjmp	.+812    	; 0x79a <decodeCommands+0x36a>
     46e:	7c 01       	movw	r14, r24
     470:	fc 01       	movw	r30, r24
     472:	81 2c       	mov	r8, r1
     474:	91 2c       	mov	r9, r1
     476:	00 e0       	ldi	r16, 0x00	; 0
     478:	10 e0       	ldi	r17, 0x00	; 0
		// stop command from control program
		if (commands[i] == 'S'){
			RPM_1.setRPM = 0;
     47a:	0f 2e       	mov	r0, r31
     47c:	f0 e0       	ldi	r31, 0x00	; 0
     47e:	6f 2e       	mov	r6, r31
     480:	f2 e0       	ldi	r31, 0x02	; 2
     482:	7f 2e       	mov	r7, r31
     484:	f0 2d       	mov	r31, r0
			while(commands[i] != '|'){
				tempBuf[j] = commands[i];
				i++;
				j++;
			}
			sscanf(tempBuf, "%d", &extractedValue);
     486:	2e 01       	movw	r4, r28
     488:	bb e0       	ldi	r27, 0x0B	; 11
     48a:	4b 0e       	add	r4, r27
     48c:	51 1c       	adc	r5, r1
     48e:	0f 2e       	mov	r0, r31
     490:	f1 e2       	ldi	r31, 0x21	; 33
     492:	2f 2e       	mov	r2, r31
     494:	f2 e0       	ldi	r31, 0x02	; 2
     496:	3f 2e       	mov	r3, r31
     498:	f0 2d       	mov	r31, r0
     49a:	ce 01       	movw	r24, r28
     49c:	01 96       	adiw	r24, 0x01	; 1
     49e:	5c 01       	movw	r10, r24
	unsigned int j = 0;
	unsigned char tempBuf[10];
	unsigned int extractedValue;
	while(commands[i] != '\n') {
		// stop command from control program
		if (commands[i] == 'S'){
     4a0:	80 81       	ld	r24, Z
     4a2:	83 35       	cpi	r24, 0x53	; 83
     4a4:	29 f4       	brne	.+10     	; 0x4b0 <decodeCommands+0x80>
			RPM_1.setRPM = 0;
     4a6:	d3 01       	movw	r26, r6
     4a8:	13 96       	adiw	r26, 0x03	; 3
     4aa:	1c 92       	st	X, r1
     4ac:	1e 92       	st	-X, r1
     4ae:	12 97       	sbiw	r26, 0x02	; 2
		}
		if(commands[i] == 'R' && commands[i + 1] == '8') {
     4b0:	80 81       	ld	r24, Z
     4b2:	82 35       	cpi	r24, 0x52	; 82
     4b4:	e9 f5       	brne	.+122    	; 0x530 <decodeCommands+0x100>
     4b6:	f8 01       	movw	r30, r16
     4b8:	31 96       	adiw	r30, 0x01	; 1
     4ba:	ee 0d       	add	r30, r14
     4bc:	ff 1d       	adc	r31, r15
     4be:	80 81       	ld	r24, Z
     4c0:	88 33       	cpi	r24, 0x38	; 56
     4c2:	b1 f5       	brne	.+108    	; 0x530 <decodeCommands+0x100>
			i = i + 2;
     4c4:	68 01       	movw	r12, r16
     4c6:	b2 e0       	ldi	r27, 0x02	; 2
     4c8:	cb 0e       	add	r12, r27
     4ca:	d1 1c       	adc	r13, r1
			while(commands[i] != '|'){
     4cc:	c7 01       	movw	r24, r14
     4ce:	8c 0d       	add	r24, r12
     4d0:	9d 1d       	adc	r25, r13
     4d2:	fc 01       	movw	r30, r24
     4d4:	20 81       	ld	r18, Z
     4d6:	2c 37       	cpi	r18, 0x7C	; 124
     4d8:	b1 f0       	breq	.+44     	; 0x506 <decodeCommands+0xd6>
     4da:	d5 01       	movw	r26, r10
     4dc:	a8 0d       	add	r26, r8
     4de:	b9 1d       	adc	r27, r9
     4e0:	0d 5f       	subi	r16, 0xFD	; 253
     4e2:	1f 4f       	sbci	r17, 0xFF	; 255
     4e4:	08 1b       	sub	r16, r24
     4e6:	19 0b       	sbc	r17, r25
				tempBuf[j] = commands[i];
     4e8:	80 81       	ld	r24, Z
     4ea:	8d 93       	st	X+, r24
				i++;
     4ec:	8f ef       	ldi	r24, 0xFF	; 255
     4ee:	c8 1a       	sub	r12, r24
     4f0:	d8 0a       	sbc	r13, r24
     4f2:	4d 01       	movw	r8, r26
     4f4:	8a 18       	sub	r8, r10
     4f6:	9b 08       	sbc	r9, r11
     4f8:	e0 0f       	add	r30, r16
     4fa:	f1 1f       	adc	r31, r17
     4fc:	ee 0d       	add	r30, r14
     4fe:	ff 1d       	adc	r31, r15
		if (commands[i] == 'S'){
			RPM_1.setRPM = 0;
		}
		if(commands[i] == 'R' && commands[i + 1] == '8') {
			i = i + 2;
			while(commands[i] != '|'){
     500:	80 81       	ld	r24, Z
     502:	8c 37       	cpi	r24, 0x7C	; 124
     504:	89 f7       	brne	.-30     	; 0x4e8 <decodeCommands+0xb8>
				tempBuf[j] = commands[i];
				i++;
				j++;
			}
			sscanf(tempBuf, "%d", &extractedValue);
     506:	5f 92       	push	r5
     508:	4f 92       	push	r4
     50a:	3f 92       	push	r3
     50c:	2f 92       	push	r2
     50e:	bf 92       	push	r11
     510:	af 92       	push	r10
     512:	69 d7       	rcall	.+3794   	; 0x13e6 <sscanf>
			//send_int_Uart(extractedValue);
			RPM_1.setRPM = extractedValue;
     514:	8b 85       	ldd	r24, Y+11	; 0x0b
     516:	9c 85       	ldd	r25, Y+12	; 0x0c
     518:	d3 01       	movw	r26, r6
     51a:	13 96       	adiw	r26, 0x03	; 3
     51c:	9c 93       	st	X, r25
     51e:	8e 93       	st	-X, r24
     520:	12 97       	sbiw	r26, 0x02	; 2
     522:	0f 90       	pop	r0
     524:	0f 90       	pop	r0
     526:	0f 90       	pop	r0
     528:	0f 90       	pop	r0
     52a:	0f 90       	pop	r0
     52c:	0f 90       	pop	r0
     52e:	86 01       	movw	r16, r12
			//send_int_Uart();
			//TransmitString(commands);
			//extractValue(*commands++);
		}
		if(commands[i] == 'V' && commands[i + 1] == '0') {
     530:	f7 01       	movw	r30, r14
     532:	e0 0f       	add	r30, r16
     534:	f1 1f       	adc	r31, r17
     536:	80 81       	ld	r24, Z
     538:	86 35       	cpi	r24, 0x56	; 86
     53a:	f1 f4       	brne	.+60     	; 0x578 <decodeCommands+0x148>
     53c:	f8 01       	movw	r30, r16
     53e:	31 96       	adiw	r30, 0x01	; 1
     540:	ee 0d       	add	r30, r14
     542:	ff 1d       	adc	r31, r15
     544:	80 81       	ld	r24, Z
     546:	80 33       	cpi	r24, 0x30	; 48
     548:	b9 f4       	brne	.+46     	; 0x578 <decodeCommands+0x148>
			i = i + 2;
     54a:	0e 5f       	subi	r16, 0xFE	; 254
     54c:	1f 4f       	sbci	r17, 0xFF	; 255
			if(commands[i] == 'Y')
     54e:	67 01       	movw	r12, r14
     550:	c0 0e       	add	r12, r16
     552:	d1 1e       	adc	r13, r17
     554:	f6 01       	movw	r30, r12
     556:	80 81       	ld	r24, Z
     558:	89 35       	cpi	r24, 0x59	; 89
     55a:	29 f4       	brne	.+10     	; 0x566 <decodeCommands+0x136>
			{
				VALVES.openV1();
     55c:	ac e7       	ldi	r26, 0x7C	; 124
     55e:	b2 e0       	ldi	r27, 0x02	; 2
     560:	ed 91       	ld	r30, X+
     562:	fc 91       	ld	r31, X
     564:	19 95       	eicall
			}
			if(commands[i] == 'N'){
     566:	f6 01       	movw	r30, r12
     568:	80 81       	ld	r24, Z
     56a:	8e 34       	cpi	r24, 0x4E	; 78
     56c:	29 f4       	brne	.+10     	; 0x578 <decodeCommands+0x148>
				VALVES.closeV1();
     56e:	e0 91 8c 02 	lds	r30, 0x028C	; 0x80028c <VALVES+0x10>
     572:	f0 91 8d 02 	lds	r31, 0x028D	; 0x80028d <VALVES+0x11>
     576:	19 95       	eicall
			}
		}
		if(commands[i] == 'V' && commands[i + 1] == '1') {
     578:	f7 01       	movw	r30, r14
     57a:	e0 0f       	add	r30, r16
     57c:	f1 1f       	adc	r31, r17
     57e:	80 81       	ld	r24, Z
     580:	86 35       	cpi	r24, 0x56	; 86
     582:	f1 f4       	brne	.+60     	; 0x5c0 <decodeCommands+0x190>
     584:	f8 01       	movw	r30, r16
     586:	31 96       	adiw	r30, 0x01	; 1
     588:	ee 0d       	add	r30, r14
     58a:	ff 1d       	adc	r31, r15
     58c:	80 81       	ld	r24, Z
     58e:	81 33       	cpi	r24, 0x31	; 49
     590:	b9 f4       	brne	.+46     	; 0x5c0 <decodeCommands+0x190>
			i = i + 2;
     592:	0e 5f       	subi	r16, 0xFE	; 254
     594:	1f 4f       	sbci	r17, 0xFF	; 255
			if(commands[i] == 'Y')
     596:	67 01       	movw	r12, r14
     598:	c0 0e       	add	r12, r16
     59a:	d1 1e       	adc	r13, r17
     59c:	d6 01       	movw	r26, r12
     59e:	8c 91       	ld	r24, X
     5a0:	89 35       	cpi	r24, 0x59	; 89
     5a2:	29 f4       	brne	.+10     	; 0x5ae <decodeCommands+0x17e>
			{
				VALVES.openV2();
     5a4:	e0 91 7e 02 	lds	r30, 0x027E	; 0x80027e <VALVES+0x2>
     5a8:	f0 91 7f 02 	lds	r31, 0x027F	; 0x80027f <VALVES+0x3>
     5ac:	19 95       	eicall
			}
			if(commands[i] == 'N'){
     5ae:	f6 01       	movw	r30, r12
     5b0:	80 81       	ld	r24, Z
     5b2:	8e 34       	cpi	r24, 0x4E	; 78
     5b4:	29 f4       	brne	.+10     	; 0x5c0 <decodeCommands+0x190>
				VALVES.closeV2();
     5b6:	e0 91 8e 02 	lds	r30, 0x028E	; 0x80028e <VALVES+0x12>
     5ba:	f0 91 8f 02 	lds	r31, 0x028F	; 0x80028f <VALVES+0x13>
     5be:	19 95       	eicall
			}
		}
		if(commands[i] == 'V' && commands[i + 1] == '2') {
     5c0:	f7 01       	movw	r30, r14
     5c2:	e0 0f       	add	r30, r16
     5c4:	f1 1f       	adc	r31, r17
     5c6:	80 81       	ld	r24, Z
     5c8:	86 35       	cpi	r24, 0x56	; 86
     5ca:	f1 f4       	brne	.+60     	; 0x608 <decodeCommands+0x1d8>
     5cc:	f8 01       	movw	r30, r16
     5ce:	31 96       	adiw	r30, 0x01	; 1
     5d0:	ee 0d       	add	r30, r14
     5d2:	ff 1d       	adc	r31, r15
     5d4:	80 81       	ld	r24, Z
     5d6:	82 33       	cpi	r24, 0x32	; 50
     5d8:	b9 f4       	brne	.+46     	; 0x608 <decodeCommands+0x1d8>
			i = i + 2;
     5da:	0e 5f       	subi	r16, 0xFE	; 254
     5dc:	1f 4f       	sbci	r17, 0xFF	; 255
			if(commands[i] == 'Y')
     5de:	67 01       	movw	r12, r14
     5e0:	c0 0e       	add	r12, r16
     5e2:	d1 1e       	adc	r13, r17
     5e4:	d6 01       	movw	r26, r12
     5e6:	8c 91       	ld	r24, X
     5e8:	89 35       	cpi	r24, 0x59	; 89
     5ea:	29 f4       	brne	.+10     	; 0x5f6 <decodeCommands+0x1c6>
			{
				VALVES.openV3();
     5ec:	e0 91 80 02 	lds	r30, 0x0280	; 0x800280 <VALVES+0x4>
     5f0:	f0 91 81 02 	lds	r31, 0x0281	; 0x800281 <VALVES+0x5>
     5f4:	19 95       	eicall
			}
			if(commands[i] == 'N'){
     5f6:	f6 01       	movw	r30, r12
     5f8:	80 81       	ld	r24, Z
     5fa:	8e 34       	cpi	r24, 0x4E	; 78
     5fc:	29 f4       	brne	.+10     	; 0x608 <decodeCommands+0x1d8>
				VALVES.closeV3();
     5fe:	e0 91 90 02 	lds	r30, 0x0290	; 0x800290 <VALVES+0x14>
     602:	f0 91 91 02 	lds	r31, 0x0291	; 0x800291 <VALVES+0x15>
     606:	19 95       	eicall
			}
		}
		if(commands[i] == 'V' && commands[i + 1] == '3') {
     608:	f7 01       	movw	r30, r14
     60a:	e0 0f       	add	r30, r16
     60c:	f1 1f       	adc	r31, r17
     60e:	80 81       	ld	r24, Z
     610:	86 35       	cpi	r24, 0x56	; 86
     612:	f1 f4       	brne	.+60     	; 0x650 <decodeCommands+0x220>
     614:	f8 01       	movw	r30, r16
     616:	31 96       	adiw	r30, 0x01	; 1
     618:	ee 0d       	add	r30, r14
     61a:	ff 1d       	adc	r31, r15
     61c:	80 81       	ld	r24, Z
     61e:	83 33       	cpi	r24, 0x33	; 51
     620:	b9 f4       	brne	.+46     	; 0x650 <decodeCommands+0x220>
			i = i + 2;
     622:	0e 5f       	subi	r16, 0xFE	; 254
     624:	1f 4f       	sbci	r17, 0xFF	; 255
			if(commands[i] == 'Y')
     626:	67 01       	movw	r12, r14
     628:	c0 0e       	add	r12, r16
     62a:	d1 1e       	adc	r13, r17
     62c:	d6 01       	movw	r26, r12
     62e:	8c 91       	ld	r24, X
     630:	89 35       	cpi	r24, 0x59	; 89
     632:	29 f4       	brne	.+10     	; 0x63e <decodeCommands+0x20e>
			{
				VALVES.openV4();
     634:	e0 91 82 02 	lds	r30, 0x0282	; 0x800282 <VALVES+0x6>
     638:	f0 91 83 02 	lds	r31, 0x0283	; 0x800283 <VALVES+0x7>
     63c:	19 95       	eicall
			}
			if(commands[i] == 'N'){
     63e:	f6 01       	movw	r30, r12
     640:	80 81       	ld	r24, Z
     642:	8e 34       	cpi	r24, 0x4E	; 78
     644:	29 f4       	brne	.+10     	; 0x650 <decodeCommands+0x220>
				VALVES.closeV4();
     646:	e0 91 92 02 	lds	r30, 0x0292	; 0x800292 <VALVES+0x16>
     64a:	f0 91 93 02 	lds	r31, 0x0293	; 0x800293 <VALVES+0x17>
     64e:	19 95       	eicall
			}
		}
		if(commands[i] == 'V' && commands[i + 1] == '4') {
     650:	f7 01       	movw	r30, r14
     652:	e0 0f       	add	r30, r16
     654:	f1 1f       	adc	r31, r17
     656:	80 81       	ld	r24, Z
     658:	86 35       	cpi	r24, 0x56	; 86
     65a:	f1 f4       	brne	.+60     	; 0x698 <decodeCommands+0x268>
     65c:	f8 01       	movw	r30, r16
     65e:	31 96       	adiw	r30, 0x01	; 1
     660:	ee 0d       	add	r30, r14
     662:	ff 1d       	adc	r31, r15
     664:	80 81       	ld	r24, Z
     666:	84 33       	cpi	r24, 0x34	; 52
     668:	b9 f4       	brne	.+46     	; 0x698 <decodeCommands+0x268>
			i = i + 2;
     66a:	0e 5f       	subi	r16, 0xFE	; 254
     66c:	1f 4f       	sbci	r17, 0xFF	; 255
			if(commands[i] == 'Y')
     66e:	67 01       	movw	r12, r14
     670:	c0 0e       	add	r12, r16
     672:	d1 1e       	adc	r13, r17
     674:	d6 01       	movw	r26, r12
     676:	8c 91       	ld	r24, X
     678:	89 35       	cpi	r24, 0x59	; 89
     67a:	29 f4       	brne	.+10     	; 0x686 <decodeCommands+0x256>
			{
				VALVES.openV5();
     67c:	e0 91 84 02 	lds	r30, 0x0284	; 0x800284 <VALVES+0x8>
     680:	f0 91 85 02 	lds	r31, 0x0285	; 0x800285 <VALVES+0x9>
     684:	19 95       	eicall
			}
			if(commands[i] == 'N'){
     686:	f6 01       	movw	r30, r12
     688:	80 81       	ld	r24, Z
     68a:	8e 34       	cpi	r24, 0x4E	; 78
     68c:	29 f4       	brne	.+10     	; 0x698 <decodeCommands+0x268>
				VALVES.closeV5();
     68e:	e0 91 94 02 	lds	r30, 0x0294	; 0x800294 <VALVES+0x18>
     692:	f0 91 95 02 	lds	r31, 0x0295	; 0x800295 <VALVES+0x19>
     696:	19 95       	eicall
			}
		}
		if(commands[i] == 'V' && commands[i + 1] == '5') {
     698:	f7 01       	movw	r30, r14
     69a:	e0 0f       	add	r30, r16
     69c:	f1 1f       	adc	r31, r17
     69e:	80 81       	ld	r24, Z
     6a0:	86 35       	cpi	r24, 0x56	; 86
     6a2:	f1 f4       	brne	.+60     	; 0x6e0 <decodeCommands+0x2b0>
     6a4:	f8 01       	movw	r30, r16
     6a6:	31 96       	adiw	r30, 0x01	; 1
     6a8:	ee 0d       	add	r30, r14
     6aa:	ff 1d       	adc	r31, r15
     6ac:	80 81       	ld	r24, Z
     6ae:	85 33       	cpi	r24, 0x35	; 53
     6b0:	b9 f4       	brne	.+46     	; 0x6e0 <decodeCommands+0x2b0>
			i = i + 2;
     6b2:	0e 5f       	subi	r16, 0xFE	; 254
     6b4:	1f 4f       	sbci	r17, 0xFF	; 255
			if(commands[i] == 'Y')
     6b6:	67 01       	movw	r12, r14
     6b8:	c0 0e       	add	r12, r16
     6ba:	d1 1e       	adc	r13, r17
     6bc:	d6 01       	movw	r26, r12
     6be:	8c 91       	ld	r24, X
     6c0:	89 35       	cpi	r24, 0x59	; 89
     6c2:	29 f4       	brne	.+10     	; 0x6ce <decodeCommands+0x29e>
			{
				VALVES.openV6();
     6c4:	e0 91 86 02 	lds	r30, 0x0286	; 0x800286 <VALVES+0xa>
     6c8:	f0 91 87 02 	lds	r31, 0x0287	; 0x800287 <VALVES+0xb>
     6cc:	19 95       	eicall
			}
			if(commands[i] == 'N'){
     6ce:	f6 01       	movw	r30, r12
     6d0:	80 81       	ld	r24, Z
     6d2:	8e 34       	cpi	r24, 0x4E	; 78
     6d4:	29 f4       	brne	.+10     	; 0x6e0 <decodeCommands+0x2b0>
				VALVES.closeV6();
     6d6:	e0 91 96 02 	lds	r30, 0x0296	; 0x800296 <VALVES+0x1a>
     6da:	f0 91 97 02 	lds	r31, 0x0297	; 0x800297 <VALVES+0x1b>
     6de:	19 95       	eicall
			}
		}
		if(commands[i] == 'V' && commands[i + 1] == '6') {
     6e0:	f7 01       	movw	r30, r14
     6e2:	e0 0f       	add	r30, r16
     6e4:	f1 1f       	adc	r31, r17
     6e6:	80 81       	ld	r24, Z
     6e8:	86 35       	cpi	r24, 0x56	; 86
     6ea:	b1 f4       	brne	.+44     	; 0x718 <decodeCommands+0x2e8>
     6ec:	f8 01       	movw	r30, r16
     6ee:	31 96       	adiw	r30, 0x01	; 1
     6f0:	ee 0d       	add	r30, r14
     6f2:	ff 1d       	adc	r31, r15
     6f4:	80 81       	ld	r24, Z
     6f6:	86 33       	cpi	r24, 0x36	; 54
     6f8:	79 f4       	brne	.+30     	; 0x718 <decodeCommands+0x2e8>
			i = i + 2;
     6fa:	0e 5f       	subi	r16, 0xFE	; 254
     6fc:	1f 4f       	sbci	r17, 0xFF	; 255
			if(commands[i] == 'Y')
     6fe:	67 01       	movw	r12, r14
     700:	c0 0e       	add	r12, r16
     702:	d1 1e       	adc	r13, r17
     704:	d6 01       	movw	r26, r12
     706:	8c 91       	ld	r24, X
     708:	89 35       	cpi	r24, 0x59	; 89
			{
				openValve_0();
     70a:	09 f4       	brne	.+2      	; 0x70e <decodeCommands+0x2de>
     70c:	9f d2       	rcall	.+1342   	; 0xc4c <openValve_0>
			}
			if(commands[i] == 'N'){
     70e:	f6 01       	movw	r30, r12
     710:	80 81       	ld	r24, Z
     712:	8e 34       	cpi	r24, 0x4E	; 78
				closeValve_0();
     714:	09 f4       	brne	.+2      	; 0x718 <decodeCommands+0x2e8>
     716:	91 d2       	rcall	.+1314   	; 0xc3a <closeValve_0>
			}
		}
		if(commands[i] == 'V' && commands[i + 1] == '7') {
     718:	f7 01       	movw	r30, r14
     71a:	e0 0f       	add	r30, r16
     71c:	f1 1f       	adc	r31, r17
     71e:	80 81       	ld	r24, Z
     720:	86 35       	cpi	r24, 0x56	; 86
     722:	b1 f4       	brne	.+44     	; 0x750 <decodeCommands+0x320>
     724:	f8 01       	movw	r30, r16
     726:	31 96       	adiw	r30, 0x01	; 1
     728:	ee 0d       	add	r30, r14
     72a:	ff 1d       	adc	r31, r15
     72c:	80 81       	ld	r24, Z
     72e:	87 33       	cpi	r24, 0x37	; 55
     730:	79 f4       	brne	.+30     	; 0x750 <decodeCommands+0x320>
			i = i + 2;
     732:	0e 5f       	subi	r16, 0xFE	; 254
     734:	1f 4f       	sbci	r17, 0xFF	; 255
			if(commands[i] == 'Y')
     736:	67 01       	movw	r12, r14
     738:	c0 0e       	add	r12, r16
     73a:	d1 1e       	adc	r13, r17
     73c:	d6 01       	movw	r26, r12
     73e:	8c 91       	ld	r24, X
     740:	89 35       	cpi	r24, 0x59	; 89
			{
				openValve_1();
     742:	09 f4       	brne	.+2      	; 0x746 <decodeCommands+0x316>
     744:	b3 d2       	rcall	.+1382   	; 0xcac <openValve_1>
			}
			if(commands[i] == 'N'){
     746:	f6 01       	movw	r30, r12
     748:	80 81       	ld	r24, Z
     74a:	8e 34       	cpi	r24, 0x4E	; 78
				closeValve_1();
     74c:	09 f4       	brne	.+2      	; 0x750 <decodeCommands+0x320>
     74e:	a5 d2       	rcall	.+1354   	; 0xc9a <closeValve_1>
			}
		}
		if(commands[i] == 'V' && commands[i + 1] == '8') {
     750:	f7 01       	movw	r30, r14
     752:	e0 0f       	add	r30, r16
     754:	f1 1f       	adc	r31, r17
     756:	80 81       	ld	r24, Z
     758:	86 35       	cpi	r24, 0x56	; 86
     75a:	b1 f4       	brne	.+44     	; 0x788 <decodeCommands+0x358>
     75c:	f8 01       	movw	r30, r16
     75e:	31 96       	adiw	r30, 0x01	; 1
     760:	ee 0d       	add	r30, r14
     762:	ff 1d       	adc	r31, r15
     764:	80 81       	ld	r24, Z
     766:	88 33       	cpi	r24, 0x38	; 56
     768:	79 f4       	brne	.+30     	; 0x788 <decodeCommands+0x358>
			i = i + 2;
     76a:	0e 5f       	subi	r16, 0xFE	; 254
     76c:	1f 4f       	sbci	r17, 0xFF	; 255
			if(commands[i] == 'Y')
     76e:	67 01       	movw	r12, r14
     770:	c0 0e       	add	r12, r16
     772:	d1 1e       	adc	r13, r17
     774:	d6 01       	movw	r26, r12
     776:	8c 91       	ld	r24, X
     778:	89 35       	cpi	r24, 0x59	; 89
			{
				openValve_2();
     77a:	09 f4       	brne	.+2      	; 0x77e <decodeCommands+0x34e>
			}
			if(commands[i] == 'N'){
     77c:	c9 d2       	rcall	.+1426   	; 0xd10 <openValve_2>
     77e:	f6 01       	movw	r30, r12
     780:	80 81       	ld	r24, Z
     782:	8e 34       	cpi	r24, 0x4E	; 78
				closeValve_2();
     784:	09 f4       	brne	.+2      	; 0x788 <decodeCommands+0x358>
     786:	b8 d2       	rcall	.+1392   	; 0xcf8 <closeValve_2>
			}
		}
		i++;
     788:	0f 5f       	subi	r16, 0xFF	; 255
     78a:	1f 4f       	sbci	r17, 0xFF	; 255
{
	unsigned int i = 0;
	unsigned int j = 0;
	unsigned char tempBuf[10];
	unsigned int extractedValue;
	while(commands[i] != '\n') {
     78c:	f7 01       	movw	r30, r14
     78e:	e0 0f       	add	r30, r16
     790:	f1 1f       	adc	r31, r17
     792:	80 81       	ld	r24, Z
     794:	8a 30       	cpi	r24, 0x0A	; 10
     796:	09 f0       	breq	.+2      	; 0x79a <decodeCommands+0x36a>
     798:	83 ce       	rjmp	.-762    	; 0x4a0 <decodeCommands+0x70>
				closeValve_2();
			}
		}
		i++;
	}
}
     79a:	2c 96       	adiw	r28, 0x0c	; 12
     79c:	0f b6       	in	r0, 0x3f	; 63
     79e:	f8 94       	cli
     7a0:	de bf       	out	0x3e, r29	; 62
     7a2:	0f be       	out	0x3f, r0	; 63
     7a4:	cd bf       	out	0x3d, r28	; 61
     7a6:	df 91       	pop	r29
     7a8:	cf 91       	pop	r28
     7aa:	1f 91       	pop	r17
     7ac:	0f 91       	pop	r16
     7ae:	ff 90       	pop	r15
     7b0:	ef 90       	pop	r14
     7b2:	df 90       	pop	r13
     7b4:	cf 90       	pop	r12
     7b6:	bf 90       	pop	r11
     7b8:	af 90       	pop	r10
     7ba:	9f 90       	pop	r9
     7bc:	8f 90       	pop	r8
     7be:	7f 90       	pop	r7
     7c0:	6f 90       	pop	r6
     7c2:	5f 90       	pop	r5
     7c4:	4f 90       	pop	r4
     7c6:	3f 90       	pop	r3
     7c8:	2f 90       	pop	r2
     7ca:	08 95       	ret

000007cc <main>:

int main(void)
{

	DDRA |= (1 << PA1);
     7cc:	09 9a       	sbi	0x01, 1	; 1
	DDRF |= (1 << DDF2);
     7ce:	82 9a       	sbi	0x10, 2	; 16
	
	DDRH |= (1 << DDH4);
     7d0:	e1 e0       	ldi	r30, 0x01	; 1
     7d2:	f1 e0       	ldi	r31, 0x01	; 1
     7d4:	80 81       	ld	r24, Z
     7d6:	80 61       	ori	r24, 0x10	; 16
     7d8:	80 83       	st	Z, r24
	
	
	
 	TIMSK0 |= (1 << TOIE0);
     7da:	ee e6       	ldi	r30, 0x6E	; 110
     7dc:	f0 e0       	ldi	r31, 0x00	; 0
     7de:	80 81       	ld	r24, Z
     7e0:	81 60       	ori	r24, 0x01	; 1
     7e2:	80 83       	st	Z, r24
 	TCCR0B |= (1 << CS02) | (1 << CS00);
     7e4:	85 b5       	in	r24, 0x25	; 37
     7e6:	85 60       	ori	r24, 0x05	; 5
     7e8:	85 bd       	out	0x25, r24	; 37

	//TCNT0 = 130;
	////
	EICRA |= (0 << ISC31) | (1 << ISC30);
     7ea:	e9 e6       	ldi	r30, 0x69	; 105
     7ec:	f0 e0       	ldi	r31, 0x00	; 0
     7ee:	80 81       	ld	r24, Z
     7f0:	80 64       	ori	r24, 0x40	; 64
     7f2:	80 83       	st	Z, r24
	EIMSK |= (1 << INT3);
     7f4:	eb 9a       	sbi	0x1d, 3	; 29

	sei();
     7f6:	78 94       	sei
	
		
	initializeTimerCounter_5();
     7f8:	0c de       	rcall	.-1000   	; 0x412 <initializeTimerCounter_5>
	InitializeServo_0();
     7fa:	30 d2       	rcall	.+1120   	; 0xc5c <InitializeServo_0>
	InitializeServo_1();
     7fc:	5f d2       	rcall	.+1214   	; 0xcbc <InitializeServo_1>
     7fe:	93 d2       	rcall	.+1318   	; 0xd26 <InitializeServo_2>
	InitializeServo_2();
     800:	e1 2c       	mov	r14, r1
     802:	00 e0       	ldi	r16, 0x00	; 0
	InitializeUART0(500000, 0, 8, 0, 0);
     804:	28 e0       	ldi	r18, 0x08	; 8
     806:	40 e0       	ldi	r20, 0x00	; 0
     808:	60 e2       	ldi	r22, 0x20	; 32
     80a:	71 ea       	ldi	r23, 0xA1	; 161
     80c:	87 e0       	ldi	r24, 0x07	; 7
     80e:	90 e0       	ldi	r25, 0x00	; 0
     810:	ac dc       	rcall	.-1704   	; 0x16a <InitializeUART0>
     812:	e8 e0       	ldi	r30, 0x08	; 8
     814:	f2 e0       	ldi	r31, 0x02	; 2
	InitializePWM_4C(PWM4C.pwmFrequency, PWM4C.pwmValue);
     816:	22 81       	ldd	r18, Z+2	; 0x02
     818:	33 81       	ldd	r19, Z+3	; 0x03
     81a:	44 81       	ldd	r20, Z+4	; 0x04
     81c:	55 81       	ldd	r21, Z+5	; 0x05
     81e:	60 81       	ld	r22, Z
     820:	71 81       	ldd	r23, Z+1	; 0x01
     822:	80 e0       	ldi	r24, 0x00	; 0
     824:	90 e0       	ldi	r25, 0x00	; 0
     826:	2f dd       	rcall	.-1442   	; 0x286 <InitializePWM_4C>
     828:	78 d3       	rcall	.+1776   	; 0xf1a <initValves>
	//TCCR4B |= ( 1 << WGM43) | ( 1 << WGM42 ) ;
	//TCCR4B |= ( 1 << CS42 ) | ( 1 << CS40 ); 
	//ICR4 = (uint16_t) (F_CPU/1000 / 1024 + 1);
	//OCR4A=3;

	initValves();
     82a:	ff cf       	rjmp	.-2      	; 0x82a <main+0x5e>

0000082c <__vector_4>:
     82c:	1f 92       	push	r1
     82e:	0f 92       	push	r0
	//}
//}


ISR(INT3_vect)
{
     830:	0f b6       	in	r0, 0x3f	; 63
     832:	0f 92       	push	r0
     834:	11 24       	eor	r1, r1
     836:	0b b6       	in	r0, 0x3b	; 59
     838:	0f 92       	push	r0
     83a:	cf 92       	push	r12
     83c:	df 92       	push	r13
     83e:	ef 92       	push	r14
     840:	ff 92       	push	r15
     842:	0f 93       	push	r16
     844:	1f 93       	push	r17
     846:	2f 93       	push	r18
     848:	3f 93       	push	r19
     84a:	4f 93       	push	r20
     84c:	5f 93       	push	r21
     84e:	6f 93       	push	r22
     850:	7f 93       	push	r23
     852:	8f 93       	push	r24
     854:	9f 93       	push	r25
     856:	af 93       	push	r26
     858:	bf 93       	push	r27
     85a:	cf 93       	push	r28
     85c:	df 93       	push	r29
     85e:	ef 93       	push	r30
     860:	ff 93       	push	r31
	
	//PORTH ^= (1 << PH4);
	RPM_1.counter++;
     862:	e0 e0       	ldi	r30, 0x00	; 0
     864:	f2 e0       	ldi	r31, 0x02	; 2
     866:	84 81       	ldd	r24, Z+4	; 0x04
     868:	95 81       	ldd	r25, Z+5	; 0x05
     86a:	01 96       	adiw	r24, 0x01	; 1
     86c:	95 83       	std	Z+5, r25	; 0x05
     86e:	84 83       	std	Z+4, r24	; 0x04
	if(RPM_1.counter >= RPM_1.interruptionCounter) {
     870:	24 81       	ldd	r18, Z+4	; 0x04
     872:	35 81       	ldd	r19, Z+5	; 0x05
     874:	86 81       	ldd	r24, Z+6	; 0x06
     876:	97 81       	ldd	r25, Z+7	; 0x07
     878:	28 17       	cp	r18, r24
     87a:	39 07       	cpc	r19, r25
     87c:	e0 f1       	brcs	.+120    	; 0x8f6 <__vector_4+0xca>
		//send_int_Uart(Timer5_1.counter);
		Timer5_1.totalTicks += Timer5_1.counter * 64000 + TCNT5;
     87e:	c1 e3       	ldi	r28, 0x31	; 49
     880:	d2 e0       	ldi	r29, 0x02	; 2
     882:	28 81       	ld	r18, Y
     884:	39 81       	ldd	r19, Y+1	; 0x01
     886:	4a 81       	ldd	r20, Y+2	; 0x02
     888:	5b 81       	ldd	r21, Y+3	; 0x03
     88a:	04 e2       	ldi	r16, 0x24	; 36
     88c:	11 e0       	ldi	r17, 0x01	; 1
     88e:	d8 01       	movw	r26, r16
     890:	ed 91       	ld	r30, X+
     892:	fc 91       	ld	r31, X
     894:	c8 88       	ldd	r12, Y+16	; 0x10
     896:	d9 88       	ldd	r13, Y+17	; 0x11
     898:	ea 88       	ldd	r14, Y+18	; 0x12
     89a:	fb 88       	ldd	r15, Y+19	; 0x13
     89c:	a0 e0       	ldi	r26, 0x00	; 0
     89e:	ba ef       	ldi	r27, 0xFA	; 250
     8a0:	89 d5       	rcall	.+2834   	; 0x13b4 <__muluhisi3>
     8a2:	dc 01       	movw	r26, r24
     8a4:	cb 01       	movw	r24, r22
     8a6:	8e 0f       	add	r24, r30
     8a8:	9f 1f       	adc	r25, r31
     8aa:	a1 1d       	adc	r26, r1
     8ac:	b1 1d       	adc	r27, r1
     8ae:	c8 0e       	add	r12, r24
     8b0:	d9 1e       	adc	r13, r25
     8b2:	ea 1e       	adc	r14, r26
     8b4:	fb 1e       	adc	r15, r27
     8b6:	c8 8a       	std	Y+16, r12	; 0x10
     8b8:	d9 8a       	std	Y+17, r13	; 0x11
     8ba:	ea 8a       	std	Y+18, r14	; 0x12
     8bc:	fb 8a       	std	Y+19, r15	; 0x13
		multiply by 60 - per minute
		division by 4 - number of poles on engine - 8 => real revolution = 4 magnetic field revolutions
										(so, hall sensors will be detect it 4 times per real(mechanical) revolution) 
		division by 4 - interruption works on rise and fall => 10 * 60 / 4 / 2 = 75
		\****************/
		RPM_1.currentRPM = F_CPU * 75 /* 10 */ / Timer5_1.totalTicks /* * 60 / 4 / 2 */ ;
     8be:	28 89       	ldd	r18, Y+16	; 0x10
     8c0:	39 89       	ldd	r19, Y+17	; 0x11
     8c2:	4a 89       	ldd	r20, Y+18	; 0x12
     8c4:	5b 89       	ldd	r21, Y+19	; 0x13
     8c6:	60 e0       	ldi	r22, 0x00	; 0
     8c8:	7c e8       	ldi	r23, 0x8C	; 140
     8ca:	86 e8       	ldi	r24, 0x86	; 134
     8cc:	97 e4       	ldi	r25, 0x47	; 71
     8ce:	50 d5       	rcall	.+2720   	; 0x1370 <__udivmodsi4>
     8d0:	e0 e0       	ldi	r30, 0x00	; 0
     8d2:	f2 e0       	ldi	r31, 0x02	; 2
     8d4:	31 83       	std	Z+1, r19	; 0x01
     8d6:	20 83       	st	Z, r18
		RPM_1.counter = 0;
     8d8:	15 82       	std	Z+5, r1	; 0x05
     8da:	14 82       	std	Z+4, r1	; 0x04
		Timer5_1.counter = 0;
     8dc:	18 82       	st	Y, r1
     8de:	19 82       	std	Y+1, r1	; 0x01
     8e0:	1a 82       	std	Y+2, r1	; 0x02
     8e2:	1b 82       	std	Y+3, r1	; 0x03
		Timer5_1.totalTicks = 0;
     8e4:	18 8a       	std	Y+16, r1	; 0x10
     8e6:	19 8a       	std	Y+17, r1	; 0x11
     8e8:	1a 8a       	std	Y+18, r1	; 0x12
     8ea:	1b 8a       	std	Y+19, r1	; 0x13
		TCNT5 = 1535;
     8ec:	8f ef       	ldi	r24, 0xFF	; 255
     8ee:	95 e0       	ldi	r25, 0x05	; 5
     8f0:	f8 01       	movw	r30, r16
     8f2:	91 83       	std	Z+1, r25	; 0x01
     8f4:	80 83       	st	Z, r24
	}
	
}
     8f6:	ff 91       	pop	r31
     8f8:	ef 91       	pop	r30
     8fa:	df 91       	pop	r29
     8fc:	cf 91       	pop	r28
     8fe:	bf 91       	pop	r27
     900:	af 91       	pop	r26
     902:	9f 91       	pop	r25
     904:	8f 91       	pop	r24
     906:	7f 91       	pop	r23
     908:	6f 91       	pop	r22
     90a:	5f 91       	pop	r21
     90c:	4f 91       	pop	r20
     90e:	3f 91       	pop	r19
     910:	2f 91       	pop	r18
     912:	1f 91       	pop	r17
     914:	0f 91       	pop	r16
     916:	ff 90       	pop	r15
     918:	ef 90       	pop	r14
     91a:	df 90       	pop	r13
     91c:	cf 90       	pop	r12
     91e:	0f 90       	pop	r0
     920:	0b be       	out	0x3b, r0	; 59
     922:	0f 90       	pop	r0
     924:	0f be       	out	0x3f, r0	; 63
     926:	0f 90       	pop	r0
     928:	1f 90       	pop	r1
     92a:	18 95       	reti

0000092c <__vector_50>:

ISR(TIMER5_OVF_vect)
{
     92c:	1f 92       	push	r1
     92e:	0f 92       	push	r0
     930:	0f b6       	in	r0, 0x3f	; 63
     932:	0f 92       	push	r0
     934:	11 24       	eor	r1, r1
     936:	0b b6       	in	r0, 0x3b	; 59
     938:	0f 92       	push	r0
     93a:	2f 93       	push	r18
     93c:	3f 93       	push	r19
     93e:	4f 93       	push	r20
     940:	5f 93       	push	r21
     942:	6f 93       	push	r22
     944:	7f 93       	push	r23
     946:	8f 93       	push	r24
     948:	9f 93       	push	r25
     94a:	af 93       	push	r26
     94c:	bf 93       	push	r27
     94e:	ef 93       	push	r30
     950:	ff 93       	push	r31
	//PORTA ^= (1<<PA1);
	if(sendinComands == 1)
     952:	80 91 30 02 	lds	r24, 0x0230	; 0x800230 <sendinComands>
     956:	81 30       	cpi	r24, 0x01	; 1
     958:	29 f4       	brne	.+10     	; 0x964 <__vector_50+0x38>
	{
		decodeCommands(UART0.data_in);
     95a:	85 e4       	ldi	r24, 0x45	; 69
     95c:	92 e0       	ldi	r25, 0x02	; 2
     95e:	68 dd       	rcall	.-1328   	; 0x430 <decodeCommands>
		sendinComands = 0;
     960:	10 92 30 02 	sts	0x0230, r1	; 0x800230 <sendinComands>
	}
	//TCNT5_startingValue(1535);
	TCNT5 = 1535;
     964:	8f ef       	ldi	r24, 0xFF	; 255
     966:	95 e0       	ldi	r25, 0x05	; 5
     968:	90 93 25 01 	sts	0x0125, r25	; 0x800125 <__TEXT_REGION_LENGTH__+0x7c0125>
     96c:	80 93 24 01 	sts	0x0124, r24	; 0x800124 <__TEXT_REGION_LENGTH__+0x7c0124>
	Timer5_1.counter++;
     970:	e1 e3       	ldi	r30, 0x31	; 49
     972:	f2 e0       	ldi	r31, 0x02	; 2
     974:	80 81       	ld	r24, Z
     976:	91 81       	ldd	r25, Z+1	; 0x01
     978:	a2 81       	ldd	r26, Z+2	; 0x02
     97a:	b3 81       	ldd	r27, Z+3	; 0x03
     97c:	01 96       	adiw	r24, 0x01	; 1
     97e:	a1 1d       	adc	r26, r1
     980:	b1 1d       	adc	r27, r1
     982:	80 83       	st	Z, r24
     984:	91 83       	std	Z+1, r25	; 0x01
     986:	a2 83       	std	Z+2, r26	; 0x02
     988:	b3 83       	std	Z+3, r27	; 0x03
}
     98a:	ff 91       	pop	r31
     98c:	ef 91       	pop	r30
     98e:	bf 91       	pop	r27
     990:	af 91       	pop	r26
     992:	9f 91       	pop	r25
     994:	8f 91       	pop	r24
     996:	7f 91       	pop	r23
     998:	6f 91       	pop	r22
     99a:	5f 91       	pop	r21
     99c:	4f 91       	pop	r20
     99e:	3f 91       	pop	r19
     9a0:	2f 91       	pop	r18
     9a2:	0f 90       	pop	r0
     9a4:	0b be       	out	0x3b, r0	; 59
     9a6:	0f 90       	pop	r0
     9a8:	0f be       	out	0x3f, r0	; 63
     9aa:	0f 90       	pop	r0
     9ac:	1f 90       	pop	r1
     9ae:	18 95       	reti

000009b0 <__vector_23>:


unsigned int countsec = 0;
ISR(TIMER0_OVF_vect){
     9b0:	1f 92       	push	r1
     9b2:	0f 92       	push	r0
     9b4:	0f b6       	in	r0, 0x3f	; 63
     9b6:	0f 92       	push	r0
     9b8:	11 24       	eor	r1, r1
     9ba:	0b b6       	in	r0, 0x3b	; 59
     9bc:	0f 92       	push	r0
     9be:	cf 92       	push	r12
     9c0:	df 92       	push	r13
     9c2:	ef 92       	push	r14
     9c4:	ff 92       	push	r15
     9c6:	0f 93       	push	r16
     9c8:	1f 93       	push	r17
     9ca:	2f 93       	push	r18
     9cc:	3f 93       	push	r19
     9ce:	4f 93       	push	r20
     9d0:	5f 93       	push	r21
     9d2:	6f 93       	push	r22
     9d4:	7f 93       	push	r23
     9d6:	8f 93       	push	r24
     9d8:	9f 93       	push	r25
     9da:	af 93       	push	r26
     9dc:	bf 93       	push	r27
     9de:	cf 93       	push	r28
     9e0:	df 93       	push	r29
     9e2:	ef 93       	push	r30
     9e4:	ff 93       	push	r31
	//PORTH ^= (1 << PH4);

	TCNT0 = 131;
     9e6:	83 e8       	ldi	r24, 0x83	; 131
     9e8:	86 bd       	out	0x26, r24	; 38

	if(++countsec >= 125){
     9ea:	80 91 2e 02 	lds	r24, 0x022E	; 0x80022e <__data_end>
     9ee:	90 91 2f 02 	lds	r25, 0x022F	; 0x80022f <__data_end+0x1>
     9f2:	01 96       	adiw	r24, 0x01	; 1
     9f4:	90 93 2f 02 	sts	0x022F, r25	; 0x80022f <__data_end+0x1>
     9f8:	80 93 2e 02 	sts	0x022E, r24	; 0x80022e <__data_end>
     9fc:	8d 37       	cpi	r24, 0x7D	; 125
     9fe:	91 05       	cpc	r25, r1
     a00:	38 f0       	brcs	.+14     	; 0xa10 <__vector_23+0x60>
		//send_int_Uart(RPM_1.currentRPM);
		TransmitString("CONNECTED");
     a02:	84 e2       	ldi	r24, 0x24	; 36
     a04:	92 e0       	ldi	r25, 0x02	; 2
     a06:	a2 db       	rcall	.-2236   	; 0x14c <TransmitString>
		countsec=0;
     a08:	10 92 2f 02 	sts	0x022F, r1	; 0x80022f <__data_end+0x1>
     a0c:	10 92 2e 02 	sts	0x022E, r1	; 0x80022e <__data_end>
	}

	if(++Timer5_1.seconds >= 25){
     a10:	e1 e3       	ldi	r30, 0x31	; 49
     a12:	f2 e0       	ldi	r31, 0x02	; 2
     a14:	84 85       	ldd	r24, Z+12	; 0x0c
     a16:	95 85       	ldd	r25, Z+13	; 0x0d
     a18:	a6 85       	ldd	r26, Z+14	; 0x0e
     a1a:	b7 85       	ldd	r27, Z+15	; 0x0f
     a1c:	01 96       	adiw	r24, 0x01	; 1
     a1e:	a1 1d       	adc	r26, r1
     a20:	b1 1d       	adc	r27, r1
     a22:	84 87       	std	Z+12, r24	; 0x0c
     a24:	95 87       	std	Z+13, r25	; 0x0d
     a26:	a6 87       	std	Z+14, r26	; 0x0e
     a28:	b7 87       	std	Z+15, r27	; 0x0f
     a2a:	49 97       	sbiw	r24, 0x19	; 25
     a2c:	a1 05       	cpc	r26, r1
     a2e:	b1 05       	cpc	r27, r1
     a30:	08 f4       	brcc	.+2      	; 0xa34 <__vector_23+0x84>
     a32:	99 c0       	rjmp	.+306    	; 0xb66 <__vector_23+0x1b6>
		Timer5_1.seconds = 0;
     a34:	10 92 3d 02 	sts	0x023D, r1	; 0x80023d <Timer5_1+0xc>
     a38:	10 92 3e 02 	sts	0x023E, r1	; 0x80023e <Timer5_1+0xd>
     a3c:	10 92 3f 02 	sts	0x023F, r1	; 0x80023f <Timer5_1+0xe>
     a40:	10 92 40 02 	sts	0x0240, r1	; 0x800240 <Timer5_1+0xf>
		if(RPM_1.setRPM <= 10){
     a44:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <RPM_1+0x2>
     a48:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <RPM_1+0x3>
     a4c:	0b 97       	sbiw	r24, 0x0b	; 11
     a4e:	4c f4       	brge	.+18     	; 0xa62 <__vector_23+0xb2>
			setPwm(0);
     a50:	60 e0       	ldi	r22, 0x00	; 0
     a52:	70 e0       	ldi	r23, 0x00	; 0
     a54:	cb 01       	movw	r24, r22
     a56:	d4 db       	rcall	.-2136   	; 0x200 <setPwm>
			RPM_1.currentRPM=0;
     a58:	10 92 01 02 	sts	0x0201, r1	; 0x800201 <RPM_1+0x1>
     a5c:	10 92 00 02 	sts	0x0200, r1	; 0x800200 <RPM_1>
     a60:	82 c0       	rjmp	.+260    	; 0xb66 <__vector_23+0x1b6>
		} else {
			
		//send_int_Uart(RPM_1.currentRPM);
		
			setPwm(PWM4C.pwmValue += (RPM_1.setRPM - RPM_1.currentRPM) * 0.001);
     a62:	c0 e0       	ldi	r28, 0x00	; 0
     a64:	d2 e0       	ldi	r29, 0x02	; 2
     a66:	6a 81       	ldd	r22, Y+2	; 0x02
     a68:	7b 81       	ldd	r23, Y+3	; 0x03
     a6a:	88 81       	ld	r24, Y
     a6c:	99 81       	ldd	r25, Y+1	; 0x01
     a6e:	08 e0       	ldi	r16, 0x08	; 8
     a70:	12 e0       	ldi	r17, 0x02	; 2
     a72:	f8 01       	movw	r30, r16
     a74:	c2 80       	ldd	r12, Z+2	; 0x02
     a76:	d3 80       	ldd	r13, Z+3	; 0x03
     a78:	e4 80       	ldd	r14, Z+4	; 0x04
     a7a:	f5 80       	ldd	r15, Z+5	; 0x05
     a7c:	68 1b       	sub	r22, r24
     a7e:	79 0b       	sbc	r23, r25
     a80:	07 2e       	mov	r0, r23
     a82:	00 0c       	add	r0, r0
     a84:	88 0b       	sbc	r24, r24
     a86:	99 0b       	sbc	r25, r25
     a88:	22 d3       	rcall	.+1604   	; 0x10ce <__floatsisf>
     a8a:	2f e6       	ldi	r18, 0x6F	; 111
     a8c:	32 e1       	ldi	r19, 0x12	; 18
     a8e:	43 e8       	ldi	r20, 0x83	; 131
     a90:	5a e3       	ldi	r21, 0x3A	; 58
     a92:	0b d4       	rcall	.+2070   	; 0x12aa <__mulsf3>
     a94:	a7 01       	movw	r20, r14
     a96:	96 01       	movw	r18, r12
     a98:	84 d2       	rcall	.+1288   	; 0xfa2 <__addsf3>
     a9a:	f8 01       	movw	r30, r16
     a9c:	62 83       	std	Z+2, r22	; 0x02
     a9e:	73 83       	std	Z+3, r23	; 0x03
     aa0:	84 83       	std	Z+4, r24	; 0x04
     aa2:	95 83       	std	Z+5, r25	; 0x05
     aa4:	ad db       	rcall	.-2214   	; 0x200 <setPwm>
			
			if (RPM_1.currentRPM < RPM_1.setRPM)
     aa6:	28 81       	ld	r18, Y
     aa8:	39 81       	ldd	r19, Y+1	; 0x01
     aaa:	8a 81       	ldd	r24, Y+2	; 0x02
     aac:	9b 81       	ldd	r25, Y+3	; 0x03
     aae:	28 17       	cp	r18, r24
     ab0:	39 07       	cpc	r19, r25
     ab2:	5c f5       	brge	.+86     	; 0xb0a <__vector_23+0x15a>
			{
				setPwm(PWM4C.pwmValue += (abs(RPM_1.setRPM - RPM_1.currentRPM)) * 0.0005);
     ab4:	8a 81       	ldd	r24, Y+2	; 0x02
     ab6:	9b 81       	ldd	r25, Y+3	; 0x03
     ab8:	28 81       	ld	r18, Y
     aba:	39 81       	ldd	r19, Y+1	; 0x01
     abc:	c0 90 0a 02 	lds	r12, 0x020A	; 0x80020a <PWM4C+0x2>
     ac0:	d0 90 0b 02 	lds	r13, 0x020B	; 0x80020b <PWM4C+0x3>
     ac4:	e0 90 0c 02 	lds	r14, 0x020C	; 0x80020c <PWM4C+0x4>
     ac8:	f0 90 0d 02 	lds	r15, 0x020D	; 0x80020d <PWM4C+0x5>
     acc:	82 1b       	sub	r24, r18
     ace:	93 0b       	sbc	r25, r19
     ad0:	bc 01       	movw	r22, r24
     ad2:	22 f4       	brpl	.+8      	; 0xadc <__vector_23+0x12c>
     ad4:	66 27       	eor	r22, r22
     ad6:	77 27       	eor	r23, r23
     ad8:	68 1b       	sub	r22, r24
     ada:	79 0b       	sbc	r23, r25
     adc:	07 2e       	mov	r0, r23
     ade:	00 0c       	add	r0, r0
     ae0:	88 0b       	sbc	r24, r24
     ae2:	99 0b       	sbc	r25, r25
     ae4:	f4 d2       	rcall	.+1512   	; 0x10ce <__floatsisf>
     ae6:	2f e6       	ldi	r18, 0x6F	; 111
     ae8:	32 e1       	ldi	r19, 0x12	; 18
     aea:	43 e0       	ldi	r20, 0x03	; 3
     aec:	5a e3       	ldi	r21, 0x3A	; 58
     aee:	dd d3       	rcall	.+1978   	; 0x12aa <__mulsf3>
     af0:	a7 01       	movw	r20, r14
     af2:	96 01       	movw	r18, r12
     af4:	56 d2       	rcall	.+1196   	; 0xfa2 <__addsf3>
     af6:	60 93 0a 02 	sts	0x020A, r22	; 0x80020a <PWM4C+0x2>
     afa:	70 93 0b 02 	sts	0x020B, r23	; 0x80020b <PWM4C+0x3>
     afe:	80 93 0c 02 	sts	0x020C, r24	; 0x80020c <PWM4C+0x4>
     b02:	90 93 0d 02 	sts	0x020D, r25	; 0x80020d <PWM4C+0x5>
     b06:	7c db       	rcall	.-2312   	; 0x200 <setPwm>
     b08:	2e c0       	rjmp	.+92     	; 0xb66 <__vector_23+0x1b6>
			}
			else
			{
				setPwm(PWM4C.pwmValue -= (abs(RPM_1.setRPM - RPM_1.currentRPM)) * 0.0005);
     b0a:	e0 e0       	ldi	r30, 0x00	; 0
     b0c:	f2 e0       	ldi	r31, 0x02	; 2
     b0e:	82 81       	ldd	r24, Z+2	; 0x02
     b10:	93 81       	ldd	r25, Z+3	; 0x03
     b12:	20 81       	ld	r18, Z
     b14:	31 81       	ldd	r19, Z+1	; 0x01
     b16:	c0 90 0a 02 	lds	r12, 0x020A	; 0x80020a <PWM4C+0x2>
     b1a:	d0 90 0b 02 	lds	r13, 0x020B	; 0x80020b <PWM4C+0x3>
     b1e:	e0 90 0c 02 	lds	r14, 0x020C	; 0x80020c <PWM4C+0x4>
     b22:	f0 90 0d 02 	lds	r15, 0x020D	; 0x80020d <PWM4C+0x5>
     b26:	82 1b       	sub	r24, r18
     b28:	93 0b       	sbc	r25, r19
     b2a:	bc 01       	movw	r22, r24
     b2c:	22 f4       	brpl	.+8      	; 0xb36 <__vector_23+0x186>
     b2e:	66 27       	eor	r22, r22
     b30:	77 27       	eor	r23, r23
     b32:	68 1b       	sub	r22, r24
     b34:	79 0b       	sbc	r23, r25
     b36:	07 2e       	mov	r0, r23
     b38:	00 0c       	add	r0, r0
     b3a:	88 0b       	sbc	r24, r24
     b3c:	99 0b       	sbc	r25, r25
     b3e:	c7 d2       	rcall	.+1422   	; 0x10ce <__floatsisf>
     b40:	2f e6       	ldi	r18, 0x6F	; 111
     b42:	32 e1       	ldi	r19, 0x12	; 18
     b44:	43 e0       	ldi	r20, 0x03	; 3
     b46:	5a e3       	ldi	r21, 0x3A	; 58
     b48:	b0 d3       	rcall	.+1888   	; 0x12aa <__mulsf3>
     b4a:	9b 01       	movw	r18, r22
     b4c:	ac 01       	movw	r20, r24
     b4e:	c7 01       	movw	r24, r14
     b50:	b6 01       	movw	r22, r12
     b52:	26 d2       	rcall	.+1100   	; 0xfa0 <__subsf3>
     b54:	60 93 0a 02 	sts	0x020A, r22	; 0x80020a <PWM4C+0x2>
     b58:	70 93 0b 02 	sts	0x020B, r23	; 0x80020b <PWM4C+0x3>
     b5c:	80 93 0c 02 	sts	0x020C, r24	; 0x80020c <PWM4C+0x4>
     b60:	90 93 0d 02 	sts	0x020D, r25	; 0x80020d <PWM4C+0x5>
     b64:	4d db       	rcall	.-2406   	; 0x200 <setPwm>
			}
		}
	}
}
     b66:	ff 91       	pop	r31
     b68:	ef 91       	pop	r30
     b6a:	df 91       	pop	r29
     b6c:	cf 91       	pop	r28
     b6e:	bf 91       	pop	r27
     b70:	af 91       	pop	r26
     b72:	9f 91       	pop	r25
     b74:	8f 91       	pop	r24
     b76:	7f 91       	pop	r23
     b78:	6f 91       	pop	r22
     b7a:	5f 91       	pop	r21
     b7c:	4f 91       	pop	r20
     b7e:	3f 91       	pop	r19
     b80:	2f 91       	pop	r18
     b82:	1f 91       	pop	r17
     b84:	0f 91       	pop	r16
     b86:	ff 90       	pop	r15
     b88:	ef 90       	pop	r14
     b8a:	df 90       	pop	r13
     b8c:	cf 90       	pop	r12
     b8e:	0f 90       	pop	r0
     b90:	0b be       	out	0x3b, r0	; 59
     b92:	0f 90       	pop	r0
     b94:	0f be       	out	0x3f, r0	; 63
     b96:	0f 90       	pop	r0
     b98:	1f 90       	pop	r1
     b9a:	18 95       	reti

00000b9c <__vector_25>:


ISR (USART0_RX_vect)
{
     b9c:	1f 92       	push	r1
     b9e:	0f 92       	push	r0
     ba0:	0f b6       	in	r0, 0x3f	; 63
     ba2:	0f 92       	push	r0
     ba4:	11 24       	eor	r1, r1
     ba6:	0b b6       	in	r0, 0x3b	; 59
     ba8:	0f 92       	push	r0
     baa:	8f 93       	push	r24
     bac:	af 93       	push	r26
     bae:	bf 93       	push	r27
     bb0:	ef 93       	push	r30
     bb2:	ff 93       	push	r31
	//cli();
	//TIMSK0 &= ~(1 << TOIE0);
	UART0.data_in[UART0.dataCount] = UDR0;
     bb4:	a5 e4       	ldi	r26, 0x45	; 69
     bb6:	b2 e0       	ldi	r27, 0x02	; 2
     bb8:	d5 96       	adiw	r26, 0x35	; 53
     bba:	ec 91       	ld	r30, X
     bbc:	d5 97       	sbiw	r26, 0x35	; 53
     bbe:	f0 e0       	ldi	r31, 0x00	; 0
     bc0:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7c00c6>
     bc4:	eb 5b       	subi	r30, 0xBB	; 187
     bc6:	fd 4f       	sbci	r31, 0xFD	; 253
     bc8:	80 83       	st	Z, r24
	if(UART0.data_in[UART0.dataCount] == '\n') {
     bca:	d5 96       	adiw	r26, 0x35	; 53
     bcc:	ec 91       	ld	r30, X
     bce:	f0 e0       	ldi	r31, 0x00	; 0
     bd0:	eb 5b       	subi	r30, 0xBB	; 187
     bd2:	fd 4f       	sbci	r31, 0xFD	; 253
     bd4:	80 81       	ld	r24, Z
     bd6:	8a 30       	cpi	r24, 0x0A	; 10
     bd8:	31 f4       	brne	.+12     	; 0xbe6 <__vector_25+0x4a>
		UART0.dataCount = 0;
     bda:	10 92 7a 02 	sts	0x027A, r1	; 0x80027a <UART0+0x35>
		sendinComands = 1;
     bde:	81 e0       	ldi	r24, 0x01	; 1
     be0:	80 93 30 02 	sts	0x0230, r24	; 0x800230 <sendinComands>
     be4:	09 c0       	rjmp	.+18     	; 0xbf8 <__vector_25+0x5c>
		//sei();
		//TIMSK0 = (1 << TOIE0);
		//UART0.dataCount = 0;
		//UART0.sendingTrue=1;
	} else {
		if(++UART0.dataCount >= UART_data_in_length){
     be6:	e5 e4       	ldi	r30, 0x45	; 69
     be8:	f2 e0       	ldi	r31, 0x02	; 2
     bea:	85 a9       	ldd	r24, Z+53	; 0x35
     bec:	8f 5f       	subi	r24, 0xFF	; 255
     bee:	85 ab       	std	Z+53, r24	; 0x35
     bf0:	8d 32       	cpi	r24, 0x2D	; 45
     bf2:	10 f0       	brcs	.+4      	; 0xbf8 <__vector_25+0x5c>
			 UART0.dataCount = 0;
     bf4:	10 92 7a 02 	sts	0x027A, r1	; 0x80027a <UART0+0x35>
		} 
		//++UART0.dataCount;
	}
}
     bf8:	ff 91       	pop	r31
     bfa:	ef 91       	pop	r30
     bfc:	bf 91       	pop	r27
     bfe:	af 91       	pop	r26
     c00:	8f 91       	pop	r24
     c02:	0f 90       	pop	r0
     c04:	0b be       	out	0x3b, r0	; 59
     c06:	0f 90       	pop	r0
     c08:	0f be       	out	0x3f, r0	; 63
     c0a:	0f 90       	pop	r0
     c0c:	1f 90       	pop	r1
     c0e:	18 95       	reti

00000c10 <StopServo_0>:
	launch_timer_1_for2_seconds();
}

void button_interruption_3_init(){
	PCICR |= (1 << PCIE0);
	PCMSK0 |= (1 << PCINT7);
     c10:	e1 e0       	ldi	r30, 0x01	; 1
     c12:	f1 e0       	ldi	r31, 0x01	; 1
     c14:	80 81       	ld	r24, Z
     c16:	8f 7b       	andi	r24, 0xBF	; 191
     c18:	80 83       	st	Z, r24
     c1a:	08 95       	ret

00000c1c <_launchServo_0>:
     c1c:	e1 e0       	ldi	r30, 0x01	; 1
     c1e:	f1 e0       	ldi	r31, 0x01	; 1
     c20:	80 81       	ld	r24, Z
     c22:	80 64       	ori	r24, 0x40	; 64
     c24:	80 83       	st	Z, r24
     c26:	08 95       	ret

00000c28 <_setToOpenPosition_0>:
     c28:	8e e1       	ldi	r24, 0x1E	; 30
     c2a:	80 93 b4 00 	sts	0x00B4, r24	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7c00b4>
     c2e:	f6 df       	rcall	.-20     	; 0xc1c <_launchServo_0>
     c30:	82 e0       	ldi	r24, 0x02	; 2
     c32:	80 93 9c 02 	sts	0x029C, r24	; 0x80029c <servo_0_state>
     c36:	84 c0       	rjmp	.+264    	; 0xd40 <launch_timer_1>
     c38:	08 95       	ret

00000c3a <closeValve_0>:
     c3a:	88 e1       	ldi	r24, 0x18	; 24
     c3c:	80 93 b4 00 	sts	0x00B4, r24	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7c00b4>
     c40:	81 e0       	ldi	r24, 0x01	; 1
     c42:	80 93 9c 02 	sts	0x029C, r24	; 0x80029c <servo_0_state>
     c46:	ea df       	rcall	.-44     	; 0xc1c <_launchServo_0>
     c48:	8d c0       	rjmp	.+282    	; 0xd64 <launch_timer_1_for2_seconds>
     c4a:	08 95       	ret

00000c4c <openValve_0>:
     c4c:	87 e2       	ldi	r24, 0x27	; 39
     c4e:	80 93 b4 00 	sts	0x00B4, r24	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7c00b4>
     c52:	10 92 9c 02 	sts	0x029C, r1	; 0x80029c <servo_0_state>
     c56:	e2 df       	rcall	.-60     	; 0xc1c <_launchServo_0>
     c58:	85 c0       	rjmp	.+266    	; 0xd64 <launch_timer_1_for2_seconds>
     c5a:	08 95       	ret

00000c5c <InitializeServo_0>:
}

void InitializeServo_0()
{
	//// need using interruption to detect shaft positions
	DDRB &= ~(1 << PB7);
     c5c:	27 98       	cbi	0x04, 7	; 4
	
	DDRH &= ~( 1 << PH6 );
     c5e:	e1 e0       	ldi	r30, 0x01	; 1
     c60:	f1 e0       	ldi	r31, 0x01	; 1
     c62:	80 81       	ld	r24, Z
     c64:	8f 7b       	andi	r24, 0xBF	; 191
     c66:	80 83       	st	Z, r24
	TCCR2A |= ( 1 << COM2B1 ) | ( 1 << WGM21) | ( 1 << WGM20) ;
     c68:	e0 eb       	ldi	r30, 0xB0	; 176
     c6a:	f0 e0       	ldi	r31, 0x00	; 0
     c6c:	80 81       	ld	r24, Z
     c6e:	83 62       	ori	r24, 0x23	; 35
     c70:	80 83       	st	Z, r24
	TCCR2B |=  ( 1 << CS20 ) | ( 1 << CS21 )  | (1 << CS22) ;
     c72:	e1 eb       	ldi	r30, 0xB1	; 177
     c74:	f0 e0       	ldi	r31, 0x00	; 0
     c76:	80 81       	ld	r24, Z
     c78:	87 60       	ori	r24, 0x07	; 7
     c7a:	80 83       	st	Z, r24
	_setToOpenPosition_0();
     c7c:	d5 cf       	rjmp	.-86     	; 0xc28 <_setToOpenPosition_0>
     c7e:	08 95       	ret

00000c80 <StopServo_1>:
	launch_timer_1_for2_seconds();
}

void button_interruption_1_init(){
	PCICR |= (1 << PCIE0);
	PCMSK0 |= (1 << PCINT6);
     c80:	24 98       	cbi	0x04, 4	; 4
     c82:	08 95       	ret

00000c84 <_launchServo_1>:
     c84:	24 9a       	sbi	0x04, 4	; 4
     c86:	08 95       	ret

00000c88 <_setToOpenPosition_1>:
     c88:	8e e1       	ldi	r24, 0x1E	; 30
     c8a:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7c00b3>
     c8e:	fa df       	rcall	.-12     	; 0xc84 <_launchServo_1>
     c90:	82 e0       	ldi	r24, 0x02	; 2
     c92:	80 93 9d 02 	sts	0x029D, r24	; 0x80029d <servo_1_state>
     c96:	54 c0       	rjmp	.+168    	; 0xd40 <launch_timer_1>
     c98:	08 95       	ret

00000c9a <closeValve_1>:
     c9a:	88 e1       	ldi	r24, 0x18	; 24
     c9c:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7c00b3>
     ca0:	f1 df       	rcall	.-30     	; 0xc84 <_launchServo_1>
     ca2:	81 e0       	ldi	r24, 0x01	; 1
     ca4:	80 93 9d 02 	sts	0x029D, r24	; 0x80029d <servo_1_state>
     ca8:	5d c0       	rjmp	.+186    	; 0xd64 <launch_timer_1_for2_seconds>
     caa:	08 95       	ret

00000cac <openValve_1>:
     cac:	87 e2       	ldi	r24, 0x27	; 39
     cae:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7c00b3>
     cb2:	10 92 9d 02 	sts	0x029D, r1	; 0x80029d <servo_1_state>
     cb6:	e6 df       	rcall	.-52     	; 0xc84 <_launchServo_1>
     cb8:	55 c0       	rjmp	.+170    	; 0xd64 <launch_timer_1_for2_seconds>
     cba:	08 95       	ret

00000cbc <InitializeServo_1>:
}

void InitializeServo_1()
{
	DDRB &= ~(1 << PB6);
     cbc:	26 98       	cbi	0x04, 6	; 4
	
 	DDRB &= ~( 1 << DDB4 );
     cbe:	24 98       	cbi	0x04, 4	; 4
 	TCCR2A |= ( 1 << COM2A1 ) | ( 1 << WGM21) | ( 1 << WGM20) ;
     cc0:	e0 eb       	ldi	r30, 0xB0	; 176
     cc2:	f0 e0       	ldi	r31, 0x00	; 0
     cc4:	80 81       	ld	r24, Z
     cc6:	83 68       	ori	r24, 0x83	; 131
     cc8:	80 83       	st	Z, r24
 	TCCR2B |=  ( 1 << CS20 ) | ( 1 << CS21 )  | (1 << CS22) ;
     cca:	e1 eb       	ldi	r30, 0xB1	; 177
     ccc:	f0 e0       	ldi	r31, 0x00	; 0
     cce:	80 81       	ld	r24, Z
     cd0:	87 60       	ori	r24, 0x07	; 7
     cd2:	80 83       	st	Z, r24
 	_setToOpenPosition_1();
     cd4:	d9 cf       	rjmp	.-78     	; 0xc88 <_setToOpenPosition_1>
     cd6:	08 95       	ret

00000cd8 <StopServo_2>:
}

bool checkServo_2_ForMoving() { //remove this shit
	_NOP();
	return PINB & (1<<PB4);
}
     cd8:	6b 98       	cbi	0x0d, 3	; 13
     cda:	08 95       	ret

00000cdc <_launchServo_2>:
     cdc:	6b 9a       	sbi	0x0d, 3	; 13
     cde:	08 95       	ret

00000ce0 <_setToOpenPosition_2>:
     ce0:	8e e1       	ldi	r24, 0x1E	; 30
     ce2:	90 e0       	ldi	r25, 0x00	; 0
     ce4:	90 93 99 00 	sts	0x0099, r25	; 0x800099 <__TEXT_REGION_LENGTH__+0x7c0099>
     ce8:	80 93 98 00 	sts	0x0098, r24	; 0x800098 <__TEXT_REGION_LENGTH__+0x7c0098>
     cec:	f7 df       	rcall	.-18     	; 0xcdc <_launchServo_2>
     cee:	82 e0       	ldi	r24, 0x02	; 2
     cf0:	80 93 9e 02 	sts	0x029E, r24	; 0x80029e <servo_2_state>
     cf4:	25 c0       	rjmp	.+74     	; 0xd40 <launch_timer_1>
     cf6:	08 95       	ret

00000cf8 <closeValve_2>:

void closeValve_2() {
	OCR3A = SERVO_2_CLOSE;
     cf8:	88 e1       	ldi	r24, 0x18	; 24
     cfa:	90 e0       	ldi	r25, 0x00	; 0
     cfc:	90 93 99 00 	sts	0x0099, r25	; 0x800099 <__TEXT_REGION_LENGTH__+0x7c0099>
     d00:	80 93 98 00 	sts	0x0098, r24	; 0x800098 <__TEXT_REGION_LENGTH__+0x7c0098>
	_launchServo_2();
     d04:	eb df       	rcall	.-42     	; 0xcdc <_launchServo_2>
	servo_2_state = CLOSED_2_SERVO;
     d06:	81 e0       	ldi	r24, 0x01	; 1
     d08:	80 93 9e 02 	sts	0x029E, r24	; 0x80029e <servo_2_state>
	launch_timer_1_for2_seconds();
     d0c:	2b c0       	rjmp	.+86     	; 0xd64 <launch_timer_1_for2_seconds>
     d0e:	08 95       	ret

00000d10 <openValve_2>:
}

void openValve_2() {
	OCR3A = SERVO_2_OPEN; // was 45
     d10:	87 e2       	ldi	r24, 0x27	; 39
     d12:	90 e0       	ldi	r25, 0x00	; 0
     d14:	90 93 99 00 	sts	0x0099, r25	; 0x800099 <__TEXT_REGION_LENGTH__+0x7c0099>
     d18:	80 93 98 00 	sts	0x0098, r24	; 0x800098 <__TEXT_REGION_LENGTH__+0x7c0098>
	servo_2_state = OPEN_2_SERVO;
     d1c:	10 92 9e 02 	sts	0x029E, r1	; 0x80029e <servo_2_state>
	_launchServo_2();
     d20:	dd df       	rcall	.-70     	; 0xcdc <_launchServo_2>
	launch_timer_1_for2_seconds();
     d22:	20 c0       	rjmp	.+64     	; 0xd64 <launch_timer_1_for2_seconds>
     d24:	08 95       	ret

00000d26 <InitializeServo_2>:
     d26:	6b 98       	cbi	0x0d, 3	; 13
}

void InitializeServo_2()
{
	DDRE &= ~( 1 << PE3 );
	TCCR3A |= ( 1 << COM3A1 ) | ( 1 << WGM30) ;
     d28:	e0 e9       	ldi	r30, 0x90	; 144
     d2a:	f0 e0       	ldi	r31, 0x00	; 0
     d2c:	80 81       	ld	r24, Z
     d2e:	81 68       	ori	r24, 0x81	; 129
     d30:	80 83       	st	Z, r24
	TCCR3B |=  ( 1 << CS30 ) | ( 0 << CS31 )  | (1 << CS32)| ( 1 << WGM32) ; // clkI/O/1024 (From prescaler)
     d32:	e1 e9       	ldi	r30, 0x91	; 145
     d34:	f0 e0       	ldi	r31, 0x00	; 0
     d36:	80 81       	ld	r24, Z
     d38:	8d 60       	ori	r24, 0x0D	; 13
     d3a:	80 83       	st	Z, r24
	_setToOpenPosition_2();
     d3c:	d1 cf       	rjmp	.-94     	; 0xce0 <_setToOpenPosition_2>
     d3e:	08 95       	ret

00000d40 <launch_timer_1>:
	TCNT1 = 34286; // with such a prescaler and starting TCNT3 we get 2HZ
	//TCNT1 = 17143; //with such a prescaler and starting TCNT3 we get 1HZ
}

void launch_timer_1(){
	PORTA |= (1<<PA1);
     d40:	11 9a       	sbi	0x02, 1	; 2
#include "../Servo_init/Servo_1.h"
#include "../Servo_init/Servo_2.h"

static void reset_timer1_to_starting_value(){
	//TCNT1 = 0; // with such a prescaler and starting TCNT3 we get 0.5HZ
	TCNT1 = 34286; // with such a prescaler and starting TCNT3 we get 2HZ
     d42:	8e ee       	ldi	r24, 0xEE	; 238
     d44:	95 e8       	ldi	r25, 0x85	; 133
     d46:	90 93 85 00 	sts	0x0085, r25	; 0x800085 <__TEXT_REGION_LENGTH__+0x7c0085>
     d4a:	80 93 84 00 	sts	0x0084, r24	; 0x800084 <__TEXT_REGION_LENGTH__+0x7c0084>
}

void launch_timer_1(){
	PORTA |= (1<<PA1);
	reset_timer1_to_starting_value();
	TIMSK1 |= (1 << TOIE1);
     d4e:	ef e6       	ldi	r30, 0x6F	; 111
     d50:	f0 e0       	ldi	r31, 0x00	; 0
     d52:	80 81       	ld	r24, Z
     d54:	81 60       	ori	r24, 0x01	; 1
     d56:	80 83       	st	Z, r24
	TCCR1B |= (1 << CS12);
     d58:	e1 e8       	ldi	r30, 0x81	; 129
     d5a:	f0 e0       	ldi	r31, 0x00	; 0
     d5c:	80 81       	ld	r24, Z
     d5e:	84 60       	ori	r24, 0x04	; 4
     d60:	80 83       	st	Z, r24
     d62:	08 95       	ret

00000d64 <launch_timer_1_for2_seconds>:
}

void launch_timer_1_for2_seconds() {
	TCNT1 = 0;// with such a prescaler and starting TCNT3 we get 0.5HZ
     d64:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7c0085>
     d68:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7c0084>
	TIMSK1 |= (1 << TOIE1);
     d6c:	ef e6       	ldi	r30, 0x6F	; 111
     d6e:	f0 e0       	ldi	r31, 0x00	; 0
     d70:	80 81       	ld	r24, Z
     d72:	81 60       	ori	r24, 0x01	; 1
     d74:	80 83       	st	Z, r24
	TCCR1B |= (1 << CS12);
     d76:	e1 e8       	ldi	r30, 0x81	; 129
     d78:	f0 e0       	ldi	r31, 0x00	; 0
     d7a:	80 81       	ld	r24, Z
     d7c:	84 60       	ori	r24, 0x04	; 4
     d7e:	80 83       	st	Z, r24
     d80:	08 95       	ret

00000d82 <stop_timer_1>:
}

void stop_timer_1(){
	TIMSK1 &= ~(1 << TOIE1);
     d82:	ef e6       	ldi	r30, 0x6F	; 111
     d84:	f0 e0       	ldi	r31, 0x00	; 0
     d86:	80 81       	ld	r24, Z
     d88:	8e 7f       	andi	r24, 0xFE	; 254
     d8a:	80 83       	st	Z, r24
	TCCR1B &= ~(1 << CS12);
     d8c:	e1 e8       	ldi	r30, 0x81	; 129
     d8e:	f0 e0       	ldi	r31, 0x00	; 0
     d90:	80 81       	ld	r24, Z
     d92:	8b 7f       	andi	r24, 0xFB	; 251
     d94:	80 83       	st	Z, r24
     d96:	08 95       	ret

00000d98 <__vector_20>:
}

ISR(TIMER1_OVF_vect){
     d98:	1f 92       	push	r1
     d9a:	0f 92       	push	r0
     d9c:	0f b6       	in	r0, 0x3f	; 63
     d9e:	0f 92       	push	r0
     da0:	11 24       	eor	r1, r1
     da2:	0b b6       	in	r0, 0x3b	; 59
     da4:	0f 92       	push	r0
     da6:	2f 93       	push	r18
     da8:	3f 93       	push	r19
     daa:	4f 93       	push	r20
     dac:	5f 93       	push	r21
     dae:	6f 93       	push	r22
     db0:	7f 93       	push	r23
     db2:	8f 93       	push	r24
     db4:	9f 93       	push	r25
     db6:	af 93       	push	r26
     db8:	bf 93       	push	r27
     dba:	ef 93       	push	r30
     dbc:	ff 93       	push	r31
	//PORTA ^= (1<<PA1);
	if (servo_1_state == INITIAL_1_SERVO) {
     dbe:	80 91 9d 02 	lds	r24, 0x029D	; 0x80029d <servo_1_state>
     dc2:	82 30       	cpi	r24, 0x02	; 2
     dc4:	19 f4       	brne	.+6      	; 0xdcc <__vector_20+0x34>
		stop_timer_1();
     dc6:	dd df       	rcall	.-70     	; 0xd82 <stop_timer_1>
		openValve_1();
     dc8:	71 df       	rcall	.-286    	; 0xcac <openValve_1>
     dca:	02 c0       	rjmp	.+4      	; 0xdd0 <__vector_20+0x38>
	} else {
		stop_timer_1();
     dcc:	da df       	rcall	.-76     	; 0xd82 <stop_timer_1>
     dce:	58 df       	rcall	.-336    	; 0xc80 <StopServo_1>
		StopServo_1();
     dd0:	80 91 9c 02 	lds	r24, 0x029C	; 0x80029c <servo_0_state>
	}
	if (servo_0_state == INITIAL_0_SERVO) {
     dd4:	82 30       	cpi	r24, 0x02	; 2
     dd6:	19 f4       	brne	.+6      	; 0xdde <__vector_20+0x46>
		stop_timer_1();
     dd8:	d4 df       	rcall	.-88     	; 0xd82 <stop_timer_1>
		openValve_0();
     dda:	38 df       	rcall	.-400    	; 0xc4c <openValve_0>
     ddc:	02 c0       	rjmp	.+4      	; 0xde2 <__vector_20+0x4a>
     dde:	d1 df       	rcall	.-94     	; 0xd82 <stop_timer_1>
	} else {
		stop_timer_1();
     de0:	17 df       	rcall	.-466    	; 0xc10 <StopServo_0>
		StopServo_0();
     de2:	80 91 9e 02 	lds	r24, 0x029E	; 0x80029e <servo_2_state>
	}
	if (servo_2_state == INITIAL_2_SERVO) {
     de6:	82 30       	cpi	r24, 0x02	; 2
     de8:	19 f4       	brne	.+6      	; 0xdf0 <__vector_20+0x58>
		stop_timer_1();
     dea:	cb df       	rcall	.-106    	; 0xd82 <stop_timer_1>
     dec:	91 df       	rcall	.-222    	; 0xd10 <openValve_2>
		openValve_2();
     dee:	02 c0       	rjmp	.+4      	; 0xdf4 <__vector_20+0x5c>
     df0:	c8 df       	rcall	.-112    	; 0xd82 <stop_timer_1>
     df2:	72 df       	rcall	.-284    	; 0xcd8 <StopServo_2>
	} else {
		stop_timer_1();
     df4:	ff 91       	pop	r31
     df6:	ef 91       	pop	r30
		StopServo_2();
     df8:	bf 91       	pop	r27
     dfa:	af 91       	pop	r26
	}
	//button_interruption_1_init();

     dfc:	9f 91       	pop	r25
     dfe:	8f 91       	pop	r24
     e00:	7f 91       	pop	r23
     e02:	6f 91       	pop	r22
     e04:	5f 91       	pop	r21
     e06:	4f 91       	pop	r20
     e08:	3f 91       	pop	r19
     e0a:	2f 91       	pop	r18
     e0c:	0f 90       	pop	r0
     e0e:	0b be       	out	0x3b, r0	; 59
     e10:	0f 90       	pop	r0
     e12:	0f be       	out	0x3f, r0	; 63
     e14:	0f 90       	pop	r0
     e16:	1f 90       	pop	r1
     e18:	18 95       	reti

00000e1a <openValve1>:
 *  Author: DR
 */ 
#include <avr/io.h>

static void openValve1(){
	DDRF |= (1 << DDF0);
     e1a:	80 9a       	sbi	0x10, 0	; 16
	PORTF |= (1 << PF0);
     e1c:	88 9a       	sbi	0x11, 0	; 17
     e1e:	08 95       	ret

00000e20 <openValve2>:
}

static void openValve2(){
	DDRF |= (1 << DDF1);
     e20:	81 9a       	sbi	0x10, 1	; 16
	PORTF |= (1 << PF1);
     e22:	89 9a       	sbi	0x11, 1	; 17
     e24:	08 95       	ret

00000e26 <openValve3>:
}

static void openValve3(){
	DDRF |= (1 << DDF4);
     e26:	84 9a       	sbi	0x10, 4	; 16
	PORTF |= (1 << PF4);
     e28:	8c 9a       	sbi	0x11, 4	; 17
     e2a:	08 95       	ret

00000e2c <openValve4>:
}

static void openValve4(){
	DDRK |= (1 << DDK0);
     e2c:	e7 e0       	ldi	r30, 0x07	; 7
     e2e:	f1 e0       	ldi	r31, 0x01	; 1
     e30:	80 81       	ld	r24, Z
     e32:	81 60       	ori	r24, 0x01	; 1
     e34:	80 83       	st	Z, r24
	PORTK |= (1 << PK0);
     e36:	e8 e0       	ldi	r30, 0x08	; 8
     e38:	f1 e0       	ldi	r31, 0x01	; 1
     e3a:	80 81       	ld	r24, Z
     e3c:	81 60       	ori	r24, 0x01	; 1
     e3e:	80 83       	st	Z, r24
     e40:	08 95       	ret

00000e42 <openValve5>:
}

static void openValve5(){
	DDRK |= (1 << DDK6);
     e42:	e7 e0       	ldi	r30, 0x07	; 7
     e44:	f1 e0       	ldi	r31, 0x01	; 1
     e46:	80 81       	ld	r24, Z
     e48:	80 64       	ori	r24, 0x40	; 64
     e4a:	80 83       	st	Z, r24
	PORTK |= (1 << PF6);
     e4c:	e8 e0       	ldi	r30, 0x08	; 8
     e4e:	f1 e0       	ldi	r31, 0x01	; 1
     e50:	80 81       	ld	r24, Z
     e52:	80 64       	ori	r24, 0x40	; 64
     e54:	80 83       	st	Z, r24
     e56:	08 95       	ret

00000e58 <openValve6>:
}

static void openValve6(){
	DDRK |= (1 << DDK7);
     e58:	e7 e0       	ldi	r30, 0x07	; 7
     e5a:	f1 e0       	ldi	r31, 0x01	; 1
     e5c:	80 81       	ld	r24, Z
     e5e:	80 68       	ori	r24, 0x80	; 128
     e60:	80 83       	st	Z, r24
	PORTK |= (1 << PK7);
     e62:	e8 e0       	ldi	r30, 0x08	; 8
     e64:	f1 e0       	ldi	r31, 0x01	; 1
     e66:	80 81       	ld	r24, Z
     e68:	80 68       	ori	r24, 0x80	; 128
     e6a:	80 83       	st	Z, r24
     e6c:	08 95       	ret

00000e6e <openValve7>:
}

static void openValve7(){
	DDRK |= (1 << DDK4);
     e6e:	e7 e0       	ldi	r30, 0x07	; 7
     e70:	f1 e0       	ldi	r31, 0x01	; 1
     e72:	80 81       	ld	r24, Z
     e74:	80 61       	ori	r24, 0x10	; 16
     e76:	80 83       	st	Z, r24
	PORTK |= (1 << PF4);
     e78:	e8 e0       	ldi	r30, 0x08	; 8
     e7a:	f1 e0       	ldi	r31, 0x01	; 1
     e7c:	80 81       	ld	r24, Z
     e7e:	80 61       	ori	r24, 0x10	; 16
     e80:	80 83       	st	Z, r24
     e82:	08 95       	ret

00000e84 <openValve8>:
}

static void openValve8(){
	DDRK |= (1 << DDK5);
     e84:	e7 e0       	ldi	r30, 0x07	; 7
     e86:	f1 e0       	ldi	r31, 0x01	; 1
     e88:	80 81       	ld	r24, Z
     e8a:	80 62       	ori	r24, 0x20	; 32
     e8c:	80 83       	st	Z, r24
	PORTK |= (1 << PK5);
     e8e:	e8 e0       	ldi	r30, 0x08	; 8
     e90:	f1 e0       	ldi	r31, 0x01	; 1
     e92:	80 81       	ld	r24, Z
     e94:	80 62       	ori	r24, 0x20	; 32
     e96:	80 83       	st	Z, r24
     e98:	08 95       	ret

00000e9a <closeValve1>:
}

static void closeValve1(){
	DDRF &= ~(1 << DDF0);
     e9a:	80 98       	cbi	0x10, 0	; 16
	PORTF &= ~(1 << PF0);
     e9c:	88 98       	cbi	0x11, 0	; 17
     e9e:	08 95       	ret

00000ea0 <closeValve2>:
}

static void closeValve2(){
	DDRF &= ~(1 << DDF1);
     ea0:	81 98       	cbi	0x10, 1	; 16
	PORTF &= ~(1 << PF1);
     ea2:	89 98       	cbi	0x11, 1	; 17
     ea4:	08 95       	ret

00000ea6 <closeValve3>:
}

static void closeValve3(){
	DDRF &= ~(1 << DDF4);
     ea6:	84 98       	cbi	0x10, 4	; 16
	PORTF &= ~(1 << PF4);
     ea8:	8c 98       	cbi	0x11, 4	; 17
     eaa:	08 95       	ret

00000eac <closeValve4>:
}

static void closeValve4(){
	DDRK &= ~(1 << DDK0);
     eac:	e7 e0       	ldi	r30, 0x07	; 7
     eae:	f1 e0       	ldi	r31, 0x01	; 1
     eb0:	80 81       	ld	r24, Z
     eb2:	8e 7f       	andi	r24, 0xFE	; 254
     eb4:	80 83       	st	Z, r24
	PORTK &= ~(1 << PK0);
     eb6:	e8 e0       	ldi	r30, 0x08	; 8
     eb8:	f1 e0       	ldi	r31, 0x01	; 1
     eba:	80 81       	ld	r24, Z
     ebc:	8e 7f       	andi	r24, 0xFE	; 254
     ebe:	80 83       	st	Z, r24
     ec0:	08 95       	ret

00000ec2 <closeValve5>:
}

static void closeValve5(){
	DDRK &= ~(1 << DDK6);
     ec2:	e7 e0       	ldi	r30, 0x07	; 7
     ec4:	f1 e0       	ldi	r31, 0x01	; 1
     ec6:	80 81       	ld	r24, Z
     ec8:	8f 7b       	andi	r24, 0xBF	; 191
     eca:	80 83       	st	Z, r24
	PORTK &= ~(1 << PF6);
     ecc:	e8 e0       	ldi	r30, 0x08	; 8
     ece:	f1 e0       	ldi	r31, 0x01	; 1
     ed0:	80 81       	ld	r24, Z
     ed2:	8f 7b       	andi	r24, 0xBF	; 191
     ed4:	80 83       	st	Z, r24
     ed6:	08 95       	ret

00000ed8 <closeValve6>:
}

static void closeValve6(){
	DDRK &= ~(1 << DDK7);
     ed8:	e7 e0       	ldi	r30, 0x07	; 7
     eda:	f1 e0       	ldi	r31, 0x01	; 1
     edc:	80 81       	ld	r24, Z
     ede:	8f 77       	andi	r24, 0x7F	; 127
     ee0:	80 83       	st	Z, r24
	PORTK &= ~(1 << PK7);
     ee2:	e8 e0       	ldi	r30, 0x08	; 8
     ee4:	f1 e0       	ldi	r31, 0x01	; 1
     ee6:	80 81       	ld	r24, Z
     ee8:	8f 77       	andi	r24, 0x7F	; 127
     eea:	80 83       	st	Z, r24
     eec:	08 95       	ret

00000eee <closeValve7>:
}

static void closeValve7(){
	DDRK &= ~(1 << DDK4);
     eee:	e7 e0       	ldi	r30, 0x07	; 7
     ef0:	f1 e0       	ldi	r31, 0x01	; 1
     ef2:	80 81       	ld	r24, Z
     ef4:	8f 7e       	andi	r24, 0xEF	; 239
     ef6:	80 83       	st	Z, r24
	PORTK &= ~(1 << PF4);
     ef8:	e8 e0       	ldi	r30, 0x08	; 8
     efa:	f1 e0       	ldi	r31, 0x01	; 1
     efc:	80 81       	ld	r24, Z
     efe:	8f 7e       	andi	r24, 0xEF	; 239
     f00:	80 83       	st	Z, r24
     f02:	08 95       	ret

00000f04 <closeValve8>:
}

static void closeValve8(){
	DDRK &= ~(1 << DDK5);
     f04:	e7 e0       	ldi	r30, 0x07	; 7
     f06:	f1 e0       	ldi	r31, 0x01	; 1
     f08:	80 81       	ld	r24, Z
     f0a:	8f 7d       	andi	r24, 0xDF	; 223
     f0c:	80 83       	st	Z, r24
	PORTK &= ~(1 << PK5);
     f0e:	e8 e0       	ldi	r30, 0x08	; 8
     f10:	f1 e0       	ldi	r31, 0x01	; 1
     f12:	80 81       	ld	r24, Z
     f14:	8f 7d       	andi	r24, 0xDF	; 223
     f16:	80 83       	st	Z, r24
     f18:	08 95       	ret

00000f1a <initValves>:
	void (*closeV7)();
	void (*closeV8)();
} VALVES;

int initValves(void){
	VALVES.openV1 = openValve1;
     f1a:	ec e7       	ldi	r30, 0x7C	; 124
     f1c:	f2 e0       	ldi	r31, 0x02	; 2
     f1e:	8d e0       	ldi	r24, 0x0D	; 13
     f20:	97 e0       	ldi	r25, 0x07	; 7
     f22:	91 83       	std	Z+1, r25	; 0x01
     f24:	80 83       	st	Z, r24
	VALVES.openV2 = openValve2;
     f26:	80 e1       	ldi	r24, 0x10	; 16
     f28:	97 e0       	ldi	r25, 0x07	; 7
     f2a:	93 83       	std	Z+3, r25	; 0x03
     f2c:	82 83       	std	Z+2, r24	; 0x02
	VALVES.openV3 = openValve3;
     f2e:	83 e1       	ldi	r24, 0x13	; 19
     f30:	97 e0       	ldi	r25, 0x07	; 7
     f32:	95 83       	std	Z+5, r25	; 0x05
     f34:	84 83       	std	Z+4, r24	; 0x04
	VALVES.openV4 = openValve4;
     f36:	86 e1       	ldi	r24, 0x16	; 22
     f38:	97 e0       	ldi	r25, 0x07	; 7
     f3a:	97 83       	std	Z+7, r25	; 0x07
     f3c:	86 83       	std	Z+6, r24	; 0x06
	VALVES.openV5 = openValve5;
     f3e:	81 e2       	ldi	r24, 0x21	; 33
     f40:	97 e0       	ldi	r25, 0x07	; 7
     f42:	91 87       	std	Z+9, r25	; 0x09
     f44:	80 87       	std	Z+8, r24	; 0x08
	VALVES.openV6 = openValve6;
     f46:	8c e2       	ldi	r24, 0x2C	; 44
     f48:	97 e0       	ldi	r25, 0x07	; 7
     f4a:	93 87       	std	Z+11, r25	; 0x0b
     f4c:	82 87       	std	Z+10, r24	; 0x0a
	VALVES.openV7 = openValve7;
     f4e:	87 e3       	ldi	r24, 0x37	; 55
     f50:	97 e0       	ldi	r25, 0x07	; 7
     f52:	95 87       	std	Z+13, r25	; 0x0d
     f54:	84 87       	std	Z+12, r24	; 0x0c
	VALVES.openV8 = openValve8;
     f56:	82 e4       	ldi	r24, 0x42	; 66
     f58:	97 e0       	ldi	r25, 0x07	; 7
     f5a:	97 87       	std	Z+15, r25	; 0x0f
     f5c:	86 87       	std	Z+14, r24	; 0x0e
	VALVES.closeV1 = closeValve1;
     f5e:	8d e4       	ldi	r24, 0x4D	; 77
     f60:	97 e0       	ldi	r25, 0x07	; 7
     f62:	91 8b       	std	Z+17, r25	; 0x11
     f64:	80 8b       	std	Z+16, r24	; 0x10
	VALVES.closeV2 = closeValve2;
     f66:	80 e5       	ldi	r24, 0x50	; 80
     f68:	97 e0       	ldi	r25, 0x07	; 7
     f6a:	93 8b       	std	Z+19, r25	; 0x13
     f6c:	82 8b       	std	Z+18, r24	; 0x12
	VALVES.closeV3 = closeValve3;
     f6e:	83 e5       	ldi	r24, 0x53	; 83
     f70:	97 e0       	ldi	r25, 0x07	; 7
     f72:	95 8b       	std	Z+21, r25	; 0x15
     f74:	84 8b       	std	Z+20, r24	; 0x14
	VALVES.closeV4 = closeValve4;
     f76:	86 e5       	ldi	r24, 0x56	; 86
     f78:	97 e0       	ldi	r25, 0x07	; 7
     f7a:	97 8b       	std	Z+23, r25	; 0x17
     f7c:	86 8b       	std	Z+22, r24	; 0x16
	VALVES.closeV5 = closeValve5;
     f7e:	81 e6       	ldi	r24, 0x61	; 97
     f80:	97 e0       	ldi	r25, 0x07	; 7
     f82:	91 8f       	std	Z+25, r25	; 0x19
     f84:	80 8f       	std	Z+24, r24	; 0x18
	VALVES.closeV6 = closeValve6;
     f86:	8c e6       	ldi	r24, 0x6C	; 108
     f88:	97 e0       	ldi	r25, 0x07	; 7
     f8a:	93 8f       	std	Z+27, r25	; 0x1b
     f8c:	82 8f       	std	Z+26, r24	; 0x1a
	VALVES.closeV7 = closeValve7;
     f8e:	87 e7       	ldi	r24, 0x77	; 119
     f90:	97 e0       	ldi	r25, 0x07	; 7
     f92:	95 8f       	std	Z+29, r25	; 0x1d
     f94:	84 8f       	std	Z+28, r24	; 0x1c
	VALVES.closeV8 = closeValve8;
     f96:	82 e8       	ldi	r24, 0x82	; 130
     f98:	97 e0       	ldi	r25, 0x07	; 7
     f9a:	97 8f       	std	Z+31, r25	; 0x1f
     f9c:	86 8f       	std	Z+30, r24	; 0x1e
}
     f9e:	08 95       	ret

00000fa0 <__subsf3>:
     fa0:	50 58       	subi	r21, 0x80	; 128

00000fa2 <__addsf3>:
     fa2:	bb 27       	eor	r27, r27
     fa4:	aa 27       	eor	r26, r26
     fa6:	0e d0       	rcall	.+28     	; 0xfc4 <__addsf3x>
     fa8:	08 c1       	rjmp	.+528    	; 0x11ba <__fp_round>
     faa:	f9 d0       	rcall	.+498    	; 0x119e <__fp_pscA>
     fac:	30 f0       	brcs	.+12     	; 0xfba <__addsf3+0x18>
     fae:	fe d0       	rcall	.+508    	; 0x11ac <__fp_pscB>
     fb0:	20 f0       	brcs	.+8      	; 0xfba <__addsf3+0x18>
     fb2:	31 f4       	brne	.+12     	; 0xfc0 <__addsf3+0x1e>
     fb4:	9f 3f       	cpi	r25, 0xFF	; 255
     fb6:	11 f4       	brne	.+4      	; 0xfbc <__addsf3+0x1a>
     fb8:	1e f4       	brtc	.+6      	; 0xfc0 <__addsf3+0x1e>
     fba:	ee c0       	rjmp	.+476    	; 0x1198 <__fp_nan>
     fbc:	0e f4       	brtc	.+2      	; 0xfc0 <__addsf3+0x1e>
     fbe:	e0 95       	com	r30
     fc0:	e7 fb       	bst	r30, 7
     fc2:	e4 c0       	rjmp	.+456    	; 0x118c <__fp_inf>

00000fc4 <__addsf3x>:
     fc4:	e9 2f       	mov	r30, r25
     fc6:	0a d1       	rcall	.+532    	; 0x11dc <__fp_split3>
     fc8:	80 f3       	brcs	.-32     	; 0xfaa <__addsf3+0x8>
     fca:	ba 17       	cp	r27, r26
     fcc:	62 07       	cpc	r22, r18
     fce:	73 07       	cpc	r23, r19
     fd0:	84 07       	cpc	r24, r20
     fd2:	95 07       	cpc	r25, r21
     fd4:	18 f0       	brcs	.+6      	; 0xfdc <__addsf3x+0x18>
     fd6:	71 f4       	brne	.+28     	; 0xff4 <__addsf3x+0x30>
     fd8:	9e f5       	brtc	.+102    	; 0x1040 <__EEPROM_REGION_LENGTH__+0x40>
     fda:	22 c1       	rjmp	.+580    	; 0x1220 <__fp_zero>
     fdc:	0e f4       	brtc	.+2      	; 0xfe0 <__addsf3x+0x1c>
     fde:	e0 95       	com	r30
     fe0:	0b 2e       	mov	r0, r27
     fe2:	ba 2f       	mov	r27, r26
     fe4:	a0 2d       	mov	r26, r0
     fe6:	0b 01       	movw	r0, r22
     fe8:	b9 01       	movw	r22, r18
     fea:	90 01       	movw	r18, r0
     fec:	0c 01       	movw	r0, r24
     fee:	ca 01       	movw	r24, r20
     ff0:	a0 01       	movw	r20, r0
     ff2:	11 24       	eor	r1, r1
     ff4:	ff 27       	eor	r31, r31
     ff6:	59 1b       	sub	r21, r25
     ff8:	99 f0       	breq	.+38     	; 0x1020 <__EEPROM_REGION_LENGTH__+0x20>
     ffa:	59 3f       	cpi	r21, 0xF9	; 249
     ffc:	50 f4       	brcc	.+20     	; 0x1012 <__EEPROM_REGION_LENGTH__+0x12>
     ffe:	50 3e       	cpi	r21, 0xE0	; 224
    1000:	68 f1       	brcs	.+90     	; 0x105c <__EEPROM_REGION_LENGTH__+0x5c>
    1002:	1a 16       	cp	r1, r26
    1004:	f0 40       	sbci	r31, 0x00	; 0
    1006:	a2 2f       	mov	r26, r18
    1008:	23 2f       	mov	r18, r19
    100a:	34 2f       	mov	r19, r20
    100c:	44 27       	eor	r20, r20
    100e:	58 5f       	subi	r21, 0xF8	; 248
    1010:	f3 cf       	rjmp	.-26     	; 0xff8 <__addsf3x+0x34>
    1012:	46 95       	lsr	r20
    1014:	37 95       	ror	r19
    1016:	27 95       	ror	r18
    1018:	a7 95       	ror	r26
    101a:	f0 40       	sbci	r31, 0x00	; 0
    101c:	53 95       	inc	r21
    101e:	c9 f7       	brne	.-14     	; 0x1012 <__EEPROM_REGION_LENGTH__+0x12>
    1020:	7e f4       	brtc	.+30     	; 0x1040 <__EEPROM_REGION_LENGTH__+0x40>
    1022:	1f 16       	cp	r1, r31
    1024:	ba 0b       	sbc	r27, r26
    1026:	62 0b       	sbc	r22, r18
    1028:	73 0b       	sbc	r23, r19
    102a:	84 0b       	sbc	r24, r20
    102c:	ba f0       	brmi	.+46     	; 0x105c <__EEPROM_REGION_LENGTH__+0x5c>
    102e:	91 50       	subi	r25, 0x01	; 1
    1030:	a1 f0       	breq	.+40     	; 0x105a <__EEPROM_REGION_LENGTH__+0x5a>
    1032:	ff 0f       	add	r31, r31
    1034:	bb 1f       	adc	r27, r27
    1036:	66 1f       	adc	r22, r22
    1038:	77 1f       	adc	r23, r23
    103a:	88 1f       	adc	r24, r24
    103c:	c2 f7       	brpl	.-16     	; 0x102e <__EEPROM_REGION_LENGTH__+0x2e>
    103e:	0e c0       	rjmp	.+28     	; 0x105c <__EEPROM_REGION_LENGTH__+0x5c>
    1040:	ba 0f       	add	r27, r26
    1042:	62 1f       	adc	r22, r18
    1044:	73 1f       	adc	r23, r19
    1046:	84 1f       	adc	r24, r20
    1048:	48 f4       	brcc	.+18     	; 0x105c <__EEPROM_REGION_LENGTH__+0x5c>
    104a:	87 95       	ror	r24
    104c:	77 95       	ror	r23
    104e:	67 95       	ror	r22
    1050:	b7 95       	ror	r27
    1052:	f7 95       	ror	r31
    1054:	9e 3f       	cpi	r25, 0xFE	; 254
    1056:	08 f0       	brcs	.+2      	; 0x105a <__EEPROM_REGION_LENGTH__+0x5a>
    1058:	b3 cf       	rjmp	.-154    	; 0xfc0 <__addsf3+0x1e>
    105a:	93 95       	inc	r25
    105c:	88 0f       	add	r24, r24
    105e:	08 f0       	brcs	.+2      	; 0x1062 <__EEPROM_REGION_LENGTH__+0x62>
    1060:	99 27       	eor	r25, r25
    1062:	ee 0f       	add	r30, r30
    1064:	97 95       	ror	r25
    1066:	87 95       	ror	r24
    1068:	08 95       	ret

0000106a <__cmpsf2>:
    106a:	6c d0       	rcall	.+216    	; 0x1144 <__fp_cmp>
    106c:	08 f4       	brcc	.+2      	; 0x1070 <__cmpsf2+0x6>
    106e:	81 e0       	ldi	r24, 0x01	; 1
    1070:	08 95       	ret

00001072 <__fixunssfsi>:
    1072:	bc d0       	rcall	.+376    	; 0x11ec <__fp_splitA>
    1074:	88 f0       	brcs	.+34     	; 0x1098 <__fixunssfsi+0x26>
    1076:	9f 57       	subi	r25, 0x7F	; 127
    1078:	90 f0       	brcs	.+36     	; 0x109e <__fixunssfsi+0x2c>
    107a:	b9 2f       	mov	r27, r25
    107c:	99 27       	eor	r25, r25
    107e:	b7 51       	subi	r27, 0x17	; 23
    1080:	a0 f0       	brcs	.+40     	; 0x10aa <__fixunssfsi+0x38>
    1082:	d1 f0       	breq	.+52     	; 0x10b8 <__fixunssfsi+0x46>
    1084:	66 0f       	add	r22, r22
    1086:	77 1f       	adc	r23, r23
    1088:	88 1f       	adc	r24, r24
    108a:	99 1f       	adc	r25, r25
    108c:	1a f0       	brmi	.+6      	; 0x1094 <__fixunssfsi+0x22>
    108e:	ba 95       	dec	r27
    1090:	c9 f7       	brne	.-14     	; 0x1084 <__fixunssfsi+0x12>
    1092:	12 c0       	rjmp	.+36     	; 0x10b8 <__fixunssfsi+0x46>
    1094:	b1 30       	cpi	r27, 0x01	; 1
    1096:	81 f0       	breq	.+32     	; 0x10b8 <__fixunssfsi+0x46>
    1098:	c3 d0       	rcall	.+390    	; 0x1220 <__fp_zero>
    109a:	b1 e0       	ldi	r27, 0x01	; 1
    109c:	08 95       	ret
    109e:	c0 c0       	rjmp	.+384    	; 0x1220 <__fp_zero>
    10a0:	67 2f       	mov	r22, r23
    10a2:	78 2f       	mov	r23, r24
    10a4:	88 27       	eor	r24, r24
    10a6:	b8 5f       	subi	r27, 0xF8	; 248
    10a8:	39 f0       	breq	.+14     	; 0x10b8 <__fixunssfsi+0x46>
    10aa:	b9 3f       	cpi	r27, 0xF9	; 249
    10ac:	cc f3       	brlt	.-14     	; 0x10a0 <__fixunssfsi+0x2e>
    10ae:	86 95       	lsr	r24
    10b0:	77 95       	ror	r23
    10b2:	67 95       	ror	r22
    10b4:	b3 95       	inc	r27
    10b6:	d9 f7       	brne	.-10     	; 0x10ae <__fixunssfsi+0x3c>
    10b8:	3e f4       	brtc	.+14     	; 0x10c8 <__fixunssfsi+0x56>
    10ba:	90 95       	com	r25
    10bc:	80 95       	com	r24
    10be:	70 95       	com	r23
    10c0:	61 95       	neg	r22
    10c2:	7f 4f       	sbci	r23, 0xFF	; 255
    10c4:	8f 4f       	sbci	r24, 0xFF	; 255
    10c6:	9f 4f       	sbci	r25, 0xFF	; 255
    10c8:	08 95       	ret

000010ca <__floatunsisf>:
    10ca:	e8 94       	clt
    10cc:	09 c0       	rjmp	.+18     	; 0x10e0 <__floatsisf+0x12>

000010ce <__floatsisf>:
    10ce:	97 fb       	bst	r25, 7
    10d0:	3e f4       	brtc	.+14     	; 0x10e0 <__floatsisf+0x12>
    10d2:	90 95       	com	r25
    10d4:	80 95       	com	r24
    10d6:	70 95       	com	r23
    10d8:	61 95       	neg	r22
    10da:	7f 4f       	sbci	r23, 0xFF	; 255
    10dc:	8f 4f       	sbci	r24, 0xFF	; 255
    10de:	9f 4f       	sbci	r25, 0xFF	; 255
    10e0:	99 23       	and	r25, r25
    10e2:	a9 f0       	breq	.+42     	; 0x110e <__floatsisf+0x40>
    10e4:	f9 2f       	mov	r31, r25
    10e6:	96 e9       	ldi	r25, 0x96	; 150
    10e8:	bb 27       	eor	r27, r27
    10ea:	93 95       	inc	r25
    10ec:	f6 95       	lsr	r31
    10ee:	87 95       	ror	r24
    10f0:	77 95       	ror	r23
    10f2:	67 95       	ror	r22
    10f4:	b7 95       	ror	r27
    10f6:	f1 11       	cpse	r31, r1
    10f8:	f8 cf       	rjmp	.-16     	; 0x10ea <__floatsisf+0x1c>
    10fa:	fa f4       	brpl	.+62     	; 0x113a <__floatsisf+0x6c>
    10fc:	bb 0f       	add	r27, r27
    10fe:	11 f4       	brne	.+4      	; 0x1104 <__floatsisf+0x36>
    1100:	60 ff       	sbrs	r22, 0
    1102:	1b c0       	rjmp	.+54     	; 0x113a <__floatsisf+0x6c>
    1104:	6f 5f       	subi	r22, 0xFF	; 255
    1106:	7f 4f       	sbci	r23, 0xFF	; 255
    1108:	8f 4f       	sbci	r24, 0xFF	; 255
    110a:	9f 4f       	sbci	r25, 0xFF	; 255
    110c:	16 c0       	rjmp	.+44     	; 0x113a <__floatsisf+0x6c>
    110e:	88 23       	and	r24, r24
    1110:	11 f0       	breq	.+4      	; 0x1116 <__floatsisf+0x48>
    1112:	96 e9       	ldi	r25, 0x96	; 150
    1114:	11 c0       	rjmp	.+34     	; 0x1138 <__floatsisf+0x6a>
    1116:	77 23       	and	r23, r23
    1118:	21 f0       	breq	.+8      	; 0x1122 <__floatsisf+0x54>
    111a:	9e e8       	ldi	r25, 0x8E	; 142
    111c:	87 2f       	mov	r24, r23
    111e:	76 2f       	mov	r23, r22
    1120:	05 c0       	rjmp	.+10     	; 0x112c <__floatsisf+0x5e>
    1122:	66 23       	and	r22, r22
    1124:	71 f0       	breq	.+28     	; 0x1142 <__floatsisf+0x74>
    1126:	96 e8       	ldi	r25, 0x86	; 134
    1128:	86 2f       	mov	r24, r22
    112a:	70 e0       	ldi	r23, 0x00	; 0
    112c:	60 e0       	ldi	r22, 0x00	; 0
    112e:	2a f0       	brmi	.+10     	; 0x113a <__floatsisf+0x6c>
    1130:	9a 95       	dec	r25
    1132:	66 0f       	add	r22, r22
    1134:	77 1f       	adc	r23, r23
    1136:	88 1f       	adc	r24, r24
    1138:	da f7       	brpl	.-10     	; 0x1130 <__floatsisf+0x62>
    113a:	88 0f       	add	r24, r24
    113c:	96 95       	lsr	r25
    113e:	87 95       	ror	r24
    1140:	97 f9       	bld	r25, 7
    1142:	08 95       	ret

00001144 <__fp_cmp>:
    1144:	99 0f       	add	r25, r25
    1146:	00 08       	sbc	r0, r0
    1148:	55 0f       	add	r21, r21
    114a:	aa 0b       	sbc	r26, r26
    114c:	e0 e8       	ldi	r30, 0x80	; 128
    114e:	fe ef       	ldi	r31, 0xFE	; 254
    1150:	16 16       	cp	r1, r22
    1152:	17 06       	cpc	r1, r23
    1154:	e8 07       	cpc	r30, r24
    1156:	f9 07       	cpc	r31, r25
    1158:	c0 f0       	brcs	.+48     	; 0x118a <__fp_cmp+0x46>
    115a:	12 16       	cp	r1, r18
    115c:	13 06       	cpc	r1, r19
    115e:	e4 07       	cpc	r30, r20
    1160:	f5 07       	cpc	r31, r21
    1162:	98 f0       	brcs	.+38     	; 0x118a <__fp_cmp+0x46>
    1164:	62 1b       	sub	r22, r18
    1166:	73 0b       	sbc	r23, r19
    1168:	84 0b       	sbc	r24, r20
    116a:	95 0b       	sbc	r25, r21
    116c:	39 f4       	brne	.+14     	; 0x117c <__fp_cmp+0x38>
    116e:	0a 26       	eor	r0, r26
    1170:	61 f0       	breq	.+24     	; 0x118a <__fp_cmp+0x46>
    1172:	23 2b       	or	r18, r19
    1174:	24 2b       	or	r18, r20
    1176:	25 2b       	or	r18, r21
    1178:	21 f4       	brne	.+8      	; 0x1182 <__fp_cmp+0x3e>
    117a:	08 95       	ret
    117c:	0a 26       	eor	r0, r26
    117e:	09 f4       	brne	.+2      	; 0x1182 <__fp_cmp+0x3e>
    1180:	a1 40       	sbci	r26, 0x01	; 1
    1182:	a6 95       	lsr	r26
    1184:	8f ef       	ldi	r24, 0xFF	; 255
    1186:	81 1d       	adc	r24, r1
    1188:	81 1d       	adc	r24, r1
    118a:	08 95       	ret

0000118c <__fp_inf>:
    118c:	97 f9       	bld	r25, 7
    118e:	9f 67       	ori	r25, 0x7F	; 127
    1190:	80 e8       	ldi	r24, 0x80	; 128
    1192:	70 e0       	ldi	r23, 0x00	; 0
    1194:	60 e0       	ldi	r22, 0x00	; 0
    1196:	08 95       	ret

00001198 <__fp_nan>:
    1198:	9f ef       	ldi	r25, 0xFF	; 255
    119a:	80 ec       	ldi	r24, 0xC0	; 192
    119c:	08 95       	ret

0000119e <__fp_pscA>:
    119e:	00 24       	eor	r0, r0
    11a0:	0a 94       	dec	r0
    11a2:	16 16       	cp	r1, r22
    11a4:	17 06       	cpc	r1, r23
    11a6:	18 06       	cpc	r1, r24
    11a8:	09 06       	cpc	r0, r25
    11aa:	08 95       	ret

000011ac <__fp_pscB>:
    11ac:	00 24       	eor	r0, r0
    11ae:	0a 94       	dec	r0
    11b0:	12 16       	cp	r1, r18
    11b2:	13 06       	cpc	r1, r19
    11b4:	14 06       	cpc	r1, r20
    11b6:	05 06       	cpc	r0, r21
    11b8:	08 95       	ret

000011ba <__fp_round>:
    11ba:	09 2e       	mov	r0, r25
    11bc:	03 94       	inc	r0
    11be:	00 0c       	add	r0, r0
    11c0:	11 f4       	brne	.+4      	; 0x11c6 <__fp_round+0xc>
    11c2:	88 23       	and	r24, r24
    11c4:	52 f0       	brmi	.+20     	; 0x11da <__fp_round+0x20>
    11c6:	bb 0f       	add	r27, r27
    11c8:	40 f4       	brcc	.+16     	; 0x11da <__fp_round+0x20>
    11ca:	bf 2b       	or	r27, r31
    11cc:	11 f4       	brne	.+4      	; 0x11d2 <__fp_round+0x18>
    11ce:	60 ff       	sbrs	r22, 0
    11d0:	04 c0       	rjmp	.+8      	; 0x11da <__fp_round+0x20>
    11d2:	6f 5f       	subi	r22, 0xFF	; 255
    11d4:	7f 4f       	sbci	r23, 0xFF	; 255
    11d6:	8f 4f       	sbci	r24, 0xFF	; 255
    11d8:	9f 4f       	sbci	r25, 0xFF	; 255
    11da:	08 95       	ret

000011dc <__fp_split3>:
    11dc:	57 fd       	sbrc	r21, 7
    11de:	90 58       	subi	r25, 0x80	; 128
    11e0:	44 0f       	add	r20, r20
    11e2:	55 1f       	adc	r21, r21
    11e4:	59 f0       	breq	.+22     	; 0x11fc <__fp_splitA+0x10>
    11e6:	5f 3f       	cpi	r21, 0xFF	; 255
    11e8:	71 f0       	breq	.+28     	; 0x1206 <__fp_splitA+0x1a>
    11ea:	47 95       	ror	r20

000011ec <__fp_splitA>:
    11ec:	88 0f       	add	r24, r24
    11ee:	97 fb       	bst	r25, 7
    11f0:	99 1f       	adc	r25, r25
    11f2:	61 f0       	breq	.+24     	; 0x120c <__fp_splitA+0x20>
    11f4:	9f 3f       	cpi	r25, 0xFF	; 255
    11f6:	79 f0       	breq	.+30     	; 0x1216 <__fp_splitA+0x2a>
    11f8:	87 95       	ror	r24
    11fa:	08 95       	ret
    11fc:	12 16       	cp	r1, r18
    11fe:	13 06       	cpc	r1, r19
    1200:	14 06       	cpc	r1, r20
    1202:	55 1f       	adc	r21, r21
    1204:	f2 cf       	rjmp	.-28     	; 0x11ea <__fp_split3+0xe>
    1206:	46 95       	lsr	r20
    1208:	f1 df       	rcall	.-30     	; 0x11ec <__fp_splitA>
    120a:	08 c0       	rjmp	.+16     	; 0x121c <__fp_splitA+0x30>
    120c:	16 16       	cp	r1, r22
    120e:	17 06       	cpc	r1, r23
    1210:	18 06       	cpc	r1, r24
    1212:	99 1f       	adc	r25, r25
    1214:	f1 cf       	rjmp	.-30     	; 0x11f8 <__fp_splitA+0xc>
    1216:	86 95       	lsr	r24
    1218:	71 05       	cpc	r23, r1
    121a:	61 05       	cpc	r22, r1
    121c:	08 94       	sec
    121e:	08 95       	ret

00001220 <__fp_zero>:
    1220:	e8 94       	clt

00001222 <__fp_szero>:
    1222:	bb 27       	eor	r27, r27
    1224:	66 27       	eor	r22, r22
    1226:	77 27       	eor	r23, r23
    1228:	cb 01       	movw	r24, r22
    122a:	97 f9       	bld	r25, 7
    122c:	08 95       	ret

0000122e <__gesf2>:
    122e:	8a df       	rcall	.-236    	; 0x1144 <__fp_cmp>
    1230:	08 f4       	brcc	.+2      	; 0x1234 <__gesf2+0x6>
    1232:	8f ef       	ldi	r24, 0xFF	; 255
    1234:	08 95       	ret

00001236 <lrint>:
    1236:	da df       	rcall	.-76     	; 0x11ec <__fp_splitA>
    1238:	a8 f1       	brcs	.+106    	; 0x12a4 <lrint+0x6e>
    123a:	9e 57       	subi	r25, 0x7E	; 126
    123c:	a8 f1       	brcs	.+106    	; 0x12a8 <lrint+0x72>
    123e:	98 51       	subi	r25, 0x18	; 24
    1240:	60 f0       	brcs	.+24     	; 0x125a <lrint+0x24>
    1242:	39 f1       	breq	.+78     	; 0x1292 <lrint+0x5c>
    1244:	98 30       	cpi	r25, 0x08	; 8
    1246:	70 f5       	brcc	.+92     	; 0x12a4 <lrint+0x6e>
    1248:	09 2e       	mov	r0, r25
    124a:	99 27       	eor	r25, r25
    124c:	66 0f       	add	r22, r22
    124e:	77 1f       	adc	r23, r23
    1250:	88 1f       	adc	r24, r24
    1252:	99 1f       	adc	r25, r25
    1254:	0a 94       	dec	r0
    1256:	d1 f7       	brne	.-12     	; 0x124c <lrint+0x16>
    1258:	1c c0       	rjmp	.+56     	; 0x1292 <lrint+0x5c>
    125a:	bb 27       	eor	r27, r27
    125c:	99 3f       	cpi	r25, 0xF9	; 249
    125e:	4c f4       	brge	.+18     	; 0x1272 <lrint+0x3c>
    1260:	b1 11       	cpse	r27, r1
    1262:	b1 e0       	ldi	r27, 0x01	; 1
    1264:	b6 2b       	or	r27, r22
    1266:	67 2f       	mov	r22, r23
    1268:	78 2f       	mov	r23, r24
    126a:	88 27       	eor	r24, r24
    126c:	98 5f       	subi	r25, 0xF8	; 248
    126e:	b1 f7       	brne	.-20     	; 0x125c <lrint+0x26>
    1270:	08 c0       	rjmp	.+16     	; 0x1282 <lrint+0x4c>
    1272:	86 95       	lsr	r24
    1274:	77 95       	ror	r23
    1276:	67 95       	ror	r22
    1278:	b7 95       	ror	r27
    127a:	08 f4       	brcc	.+2      	; 0x127e <lrint+0x48>
    127c:	b1 60       	ori	r27, 0x01	; 1
    127e:	93 95       	inc	r25
    1280:	c1 f7       	brne	.-16     	; 0x1272 <lrint+0x3c>
    1282:	bb 0f       	add	r27, r27
    1284:	30 f4       	brcc	.+12     	; 0x1292 <lrint+0x5c>
    1286:	11 f4       	brne	.+4      	; 0x128c <lrint+0x56>
    1288:	60 ff       	sbrs	r22, 0
    128a:	03 c0       	rjmp	.+6      	; 0x1292 <lrint+0x5c>
    128c:	6f 5f       	subi	r22, 0xFF	; 255
    128e:	7f 4f       	sbci	r23, 0xFF	; 255
    1290:	8f 4f       	sbci	r24, 0xFF	; 255
    1292:	3e f4       	brtc	.+14     	; 0x12a2 <lrint+0x6c>
    1294:	90 95       	com	r25
    1296:	80 95       	com	r24
    1298:	70 95       	com	r23
    129a:	61 95       	neg	r22
    129c:	7f 4f       	sbci	r23, 0xFF	; 255
    129e:	8f 4f       	sbci	r24, 0xFF	; 255
    12a0:	9f 4f       	sbci	r25, 0xFF	; 255
    12a2:	08 95       	ret
    12a4:	68 94       	set
    12a6:	bd cf       	rjmp	.-134    	; 0x1222 <__fp_szero>
    12a8:	bb cf       	rjmp	.-138    	; 0x1220 <__fp_zero>

000012aa <__mulsf3>:
    12aa:	0b d0       	rcall	.+22     	; 0x12c2 <__mulsf3x>
    12ac:	86 cf       	rjmp	.-244    	; 0x11ba <__fp_round>
    12ae:	77 df       	rcall	.-274    	; 0x119e <__fp_pscA>
    12b0:	28 f0       	brcs	.+10     	; 0x12bc <__mulsf3+0x12>
    12b2:	7c df       	rcall	.-264    	; 0x11ac <__fp_pscB>
    12b4:	18 f0       	brcs	.+6      	; 0x12bc <__mulsf3+0x12>
    12b6:	95 23       	and	r25, r21
    12b8:	09 f0       	breq	.+2      	; 0x12bc <__mulsf3+0x12>
    12ba:	68 cf       	rjmp	.-304    	; 0x118c <__fp_inf>
    12bc:	6d cf       	rjmp	.-294    	; 0x1198 <__fp_nan>
    12be:	11 24       	eor	r1, r1
    12c0:	b0 cf       	rjmp	.-160    	; 0x1222 <__fp_szero>

000012c2 <__mulsf3x>:
    12c2:	8c df       	rcall	.-232    	; 0x11dc <__fp_split3>
    12c4:	a0 f3       	brcs	.-24     	; 0x12ae <__mulsf3+0x4>

000012c6 <__mulsf3_pse>:
    12c6:	95 9f       	mul	r25, r21
    12c8:	d1 f3       	breq	.-12     	; 0x12be <__mulsf3+0x14>
    12ca:	95 0f       	add	r25, r21
    12cc:	50 e0       	ldi	r21, 0x00	; 0
    12ce:	55 1f       	adc	r21, r21
    12d0:	62 9f       	mul	r22, r18
    12d2:	f0 01       	movw	r30, r0
    12d4:	72 9f       	mul	r23, r18
    12d6:	bb 27       	eor	r27, r27
    12d8:	f0 0d       	add	r31, r0
    12da:	b1 1d       	adc	r27, r1
    12dc:	63 9f       	mul	r22, r19
    12de:	aa 27       	eor	r26, r26
    12e0:	f0 0d       	add	r31, r0
    12e2:	b1 1d       	adc	r27, r1
    12e4:	aa 1f       	adc	r26, r26
    12e6:	64 9f       	mul	r22, r20
    12e8:	66 27       	eor	r22, r22
    12ea:	b0 0d       	add	r27, r0
    12ec:	a1 1d       	adc	r26, r1
    12ee:	66 1f       	adc	r22, r22
    12f0:	82 9f       	mul	r24, r18
    12f2:	22 27       	eor	r18, r18
    12f4:	b0 0d       	add	r27, r0
    12f6:	a1 1d       	adc	r26, r1
    12f8:	62 1f       	adc	r22, r18
    12fa:	73 9f       	mul	r23, r19
    12fc:	b0 0d       	add	r27, r0
    12fe:	a1 1d       	adc	r26, r1
    1300:	62 1f       	adc	r22, r18
    1302:	83 9f       	mul	r24, r19
    1304:	a0 0d       	add	r26, r0
    1306:	61 1d       	adc	r22, r1
    1308:	22 1f       	adc	r18, r18
    130a:	74 9f       	mul	r23, r20
    130c:	33 27       	eor	r19, r19
    130e:	a0 0d       	add	r26, r0
    1310:	61 1d       	adc	r22, r1
    1312:	23 1f       	adc	r18, r19
    1314:	84 9f       	mul	r24, r20
    1316:	60 0d       	add	r22, r0
    1318:	21 1d       	adc	r18, r1
    131a:	82 2f       	mov	r24, r18
    131c:	76 2f       	mov	r23, r22
    131e:	6a 2f       	mov	r22, r26
    1320:	11 24       	eor	r1, r1
    1322:	9f 57       	subi	r25, 0x7F	; 127
    1324:	50 40       	sbci	r21, 0x00	; 0
    1326:	8a f0       	brmi	.+34     	; 0x134a <__mulsf3_pse+0x84>
    1328:	e1 f0       	breq	.+56     	; 0x1362 <__mulsf3_pse+0x9c>
    132a:	88 23       	and	r24, r24
    132c:	4a f0       	brmi	.+18     	; 0x1340 <__mulsf3_pse+0x7a>
    132e:	ee 0f       	add	r30, r30
    1330:	ff 1f       	adc	r31, r31
    1332:	bb 1f       	adc	r27, r27
    1334:	66 1f       	adc	r22, r22
    1336:	77 1f       	adc	r23, r23
    1338:	88 1f       	adc	r24, r24
    133a:	91 50       	subi	r25, 0x01	; 1
    133c:	50 40       	sbci	r21, 0x00	; 0
    133e:	a9 f7       	brne	.-22     	; 0x132a <__mulsf3_pse+0x64>
    1340:	9e 3f       	cpi	r25, 0xFE	; 254
    1342:	51 05       	cpc	r21, r1
    1344:	70 f0       	brcs	.+28     	; 0x1362 <__mulsf3_pse+0x9c>
    1346:	22 cf       	rjmp	.-444    	; 0x118c <__fp_inf>
    1348:	6c cf       	rjmp	.-296    	; 0x1222 <__fp_szero>
    134a:	5f 3f       	cpi	r21, 0xFF	; 255
    134c:	ec f3       	brlt	.-6      	; 0x1348 <__mulsf3_pse+0x82>
    134e:	98 3e       	cpi	r25, 0xE8	; 232
    1350:	dc f3       	brlt	.-10     	; 0x1348 <__mulsf3_pse+0x82>
    1352:	86 95       	lsr	r24
    1354:	77 95       	ror	r23
    1356:	67 95       	ror	r22
    1358:	b7 95       	ror	r27
    135a:	f7 95       	ror	r31
    135c:	e7 95       	ror	r30
    135e:	9f 5f       	subi	r25, 0xFF	; 255
    1360:	c1 f7       	brne	.-16     	; 0x1352 <__mulsf3_pse+0x8c>
    1362:	fe 2b       	or	r31, r30
    1364:	88 0f       	add	r24, r24
    1366:	91 1d       	adc	r25, r1
    1368:	96 95       	lsr	r25
    136a:	87 95       	ror	r24
    136c:	97 f9       	bld	r25, 7
    136e:	08 95       	ret

00001370 <__udivmodsi4>:
    1370:	a1 e2       	ldi	r26, 0x21	; 33
    1372:	1a 2e       	mov	r1, r26
    1374:	aa 1b       	sub	r26, r26
    1376:	bb 1b       	sub	r27, r27
    1378:	fd 01       	movw	r30, r26
    137a:	0d c0       	rjmp	.+26     	; 0x1396 <__udivmodsi4_ep>

0000137c <__udivmodsi4_loop>:
    137c:	aa 1f       	adc	r26, r26
    137e:	bb 1f       	adc	r27, r27
    1380:	ee 1f       	adc	r30, r30
    1382:	ff 1f       	adc	r31, r31
    1384:	a2 17       	cp	r26, r18
    1386:	b3 07       	cpc	r27, r19
    1388:	e4 07       	cpc	r30, r20
    138a:	f5 07       	cpc	r31, r21
    138c:	20 f0       	brcs	.+8      	; 0x1396 <__udivmodsi4_ep>
    138e:	a2 1b       	sub	r26, r18
    1390:	b3 0b       	sbc	r27, r19
    1392:	e4 0b       	sbc	r30, r20
    1394:	f5 0b       	sbc	r31, r21

00001396 <__udivmodsi4_ep>:
    1396:	66 1f       	adc	r22, r22
    1398:	77 1f       	adc	r23, r23
    139a:	88 1f       	adc	r24, r24
    139c:	99 1f       	adc	r25, r25
    139e:	1a 94       	dec	r1
    13a0:	69 f7       	brne	.-38     	; 0x137c <__udivmodsi4_loop>
    13a2:	60 95       	com	r22
    13a4:	70 95       	com	r23
    13a6:	80 95       	com	r24
    13a8:	90 95       	com	r25
    13aa:	9b 01       	movw	r18, r22
    13ac:	ac 01       	movw	r20, r24
    13ae:	bd 01       	movw	r22, r26
    13b0:	cf 01       	movw	r24, r30
    13b2:	08 95       	ret

000013b4 <__muluhisi3>:
    13b4:	09 d0       	rcall	.+18     	; 0x13c8 <__umulhisi3>
    13b6:	a5 9f       	mul	r26, r21
    13b8:	90 0d       	add	r25, r0
    13ba:	b4 9f       	mul	r27, r20
    13bc:	90 0d       	add	r25, r0
    13be:	a4 9f       	mul	r26, r20
    13c0:	80 0d       	add	r24, r0
    13c2:	91 1d       	adc	r25, r1
    13c4:	11 24       	eor	r1, r1
    13c6:	08 95       	ret

000013c8 <__umulhisi3>:
    13c8:	a2 9f       	mul	r26, r18
    13ca:	b0 01       	movw	r22, r0
    13cc:	b3 9f       	mul	r27, r19
    13ce:	c0 01       	movw	r24, r0
    13d0:	a3 9f       	mul	r26, r19
    13d2:	70 0d       	add	r23, r0
    13d4:	81 1d       	adc	r24, r1
    13d6:	11 24       	eor	r1, r1
    13d8:	91 1d       	adc	r25, r1
    13da:	b2 9f       	mul	r27, r18
    13dc:	70 0d       	add	r23, r0
    13de:	81 1d       	adc	r24, r1
    13e0:	11 24       	eor	r1, r1
    13e2:	91 1d       	adc	r25, r1
    13e4:	08 95       	ret

000013e6 <sscanf>:
    13e6:	cf 93       	push	r28
    13e8:	df 93       	push	r29
    13ea:	cd b7       	in	r28, 0x3d	; 61
    13ec:	de b7       	in	r29, 0x3e	; 62
    13ee:	2e 97       	sbiw	r28, 0x0e	; 14
    13f0:	0f b6       	in	r0, 0x3f	; 63
    13f2:	f8 94       	cli
    13f4:	de bf       	out	0x3e, r29	; 62
    13f6:	0f be       	out	0x3f, r0	; 63
    13f8:	cd bf       	out	0x3d, r28	; 61
    13fa:	85 e0       	ldi	r24, 0x05	; 5
    13fc:	8c 83       	std	Y+4, r24	; 0x04
    13fe:	8c 89       	ldd	r24, Y+20	; 0x14
    1400:	9d 89       	ldd	r25, Y+21	; 0x15
    1402:	9a 83       	std	Y+2, r25	; 0x02
    1404:	89 83       	std	Y+1, r24	; 0x01
    1406:	ae 01       	movw	r20, r28
    1408:	48 5e       	subi	r20, 0xE8	; 232
    140a:	5f 4f       	sbci	r21, 0xFF	; 255
    140c:	6e 89       	ldd	r22, Y+22	; 0x16
    140e:	7f 89       	ldd	r23, Y+23	; 0x17
    1410:	ce 01       	movw	r24, r28
    1412:	01 96       	adiw	r24, 0x01	; 1
    1414:	bb d1       	rcall	.+886    	; 0x178c <vfscanf>
    1416:	2e 96       	adiw	r28, 0x0e	; 14
    1418:	0f b6       	in	r0, 0x3f	; 63
    141a:	f8 94       	cli
    141c:	de bf       	out	0x3e, r29	; 62
    141e:	0f be       	out	0x3f, r0	; 63
    1420:	cd bf       	out	0x3d, r28	; 61
    1422:	df 91       	pop	r29
    1424:	cf 91       	pop	r28
    1426:	08 95       	ret

00001428 <putval>:
    1428:	20 fd       	sbrc	r18, 0
    142a:	09 c0       	rjmp	.+18     	; 0x143e <putval+0x16>
    142c:	fc 01       	movw	r30, r24
    142e:	23 fd       	sbrc	r18, 3
    1430:	05 c0       	rjmp	.+10     	; 0x143c <putval+0x14>
    1432:	22 ff       	sbrs	r18, 2
    1434:	02 c0       	rjmp	.+4      	; 0x143a <putval+0x12>
    1436:	73 83       	std	Z+3, r23	; 0x03
    1438:	62 83       	std	Z+2, r22	; 0x02
    143a:	51 83       	std	Z+1, r21	; 0x01
    143c:	40 83       	st	Z, r20
    143e:	08 95       	ret

00001440 <mulacc>:
    1440:	44 fd       	sbrc	r20, 4
    1442:	17 c0       	rjmp	.+46     	; 0x1472 <mulacc+0x32>
    1444:	46 fd       	sbrc	r20, 6
    1446:	17 c0       	rjmp	.+46     	; 0x1476 <mulacc+0x36>
    1448:	ab 01       	movw	r20, r22
    144a:	bc 01       	movw	r22, r24
    144c:	da 01       	movw	r26, r20
    144e:	fb 01       	movw	r30, r22
    1450:	aa 0f       	add	r26, r26
    1452:	bb 1f       	adc	r27, r27
    1454:	ee 1f       	adc	r30, r30
    1456:	ff 1f       	adc	r31, r31
    1458:	10 94       	com	r1
    145a:	d1 f7       	brne	.-12     	; 0x1450 <mulacc+0x10>
    145c:	4a 0f       	add	r20, r26
    145e:	5b 1f       	adc	r21, r27
    1460:	6e 1f       	adc	r22, r30
    1462:	7f 1f       	adc	r23, r31
    1464:	cb 01       	movw	r24, r22
    1466:	ba 01       	movw	r22, r20
    1468:	66 0f       	add	r22, r22
    146a:	77 1f       	adc	r23, r23
    146c:	88 1f       	adc	r24, r24
    146e:	99 1f       	adc	r25, r25
    1470:	09 c0       	rjmp	.+18     	; 0x1484 <mulacc+0x44>
    1472:	33 e0       	ldi	r19, 0x03	; 3
    1474:	01 c0       	rjmp	.+2      	; 0x1478 <mulacc+0x38>
    1476:	34 e0       	ldi	r19, 0x04	; 4
    1478:	66 0f       	add	r22, r22
    147a:	77 1f       	adc	r23, r23
    147c:	88 1f       	adc	r24, r24
    147e:	99 1f       	adc	r25, r25
    1480:	31 50       	subi	r19, 0x01	; 1
    1482:	d1 f7       	brne	.-12     	; 0x1478 <mulacc+0x38>
    1484:	62 0f       	add	r22, r18
    1486:	71 1d       	adc	r23, r1
    1488:	81 1d       	adc	r24, r1
    148a:	91 1d       	adc	r25, r1
    148c:	08 95       	ret

0000148e <skip_spaces>:
    148e:	0f 93       	push	r16
    1490:	1f 93       	push	r17
    1492:	cf 93       	push	r28
    1494:	df 93       	push	r29
    1496:	8c 01       	movw	r16, r24
    1498:	c8 01       	movw	r24, r16
    149a:	a2 d2       	rcall	.+1348   	; 0x19e0 <fgetc>
    149c:	ec 01       	movw	r28, r24
    149e:	97 fd       	sbrc	r25, 7
    14a0:	06 c0       	rjmp	.+12     	; 0x14ae <skip_spaces+0x20>
    14a2:	8b d2       	rcall	.+1302   	; 0x19ba <isspace>
    14a4:	89 2b       	or	r24, r25
    14a6:	c1 f7       	brne	.-16     	; 0x1498 <skip_spaces+0xa>
    14a8:	b8 01       	movw	r22, r16
    14aa:	ce 01       	movw	r24, r28
    14ac:	d7 d2       	rcall	.+1454   	; 0x1a5c <ungetc>
    14ae:	ce 01       	movw	r24, r28
    14b0:	df 91       	pop	r29
    14b2:	cf 91       	pop	r28
    14b4:	1f 91       	pop	r17
    14b6:	0f 91       	pop	r16
    14b8:	08 95       	ret

000014ba <conv_int>:
    14ba:	8f 92       	push	r8
    14bc:	9f 92       	push	r9
    14be:	af 92       	push	r10
    14c0:	bf 92       	push	r11
    14c2:	ef 92       	push	r14
    14c4:	ff 92       	push	r15
    14c6:	0f 93       	push	r16
    14c8:	1f 93       	push	r17
    14ca:	cf 93       	push	r28
    14cc:	df 93       	push	r29
    14ce:	8c 01       	movw	r16, r24
    14d0:	d6 2f       	mov	r29, r22
    14d2:	7a 01       	movw	r14, r20
    14d4:	b2 2e       	mov	r11, r18
    14d6:	84 d2       	rcall	.+1288   	; 0x19e0 <fgetc>
    14d8:	9c 01       	movw	r18, r24
    14da:	33 27       	eor	r19, r19
    14dc:	2b 32       	cpi	r18, 0x2B	; 43
    14de:	31 05       	cpc	r19, r1
    14e0:	31 f0       	breq	.+12     	; 0x14ee <conv_int+0x34>
    14e2:	2d 32       	cpi	r18, 0x2D	; 45
    14e4:	31 05       	cpc	r19, r1
    14e6:	59 f4       	brne	.+22     	; 0x14fe <conv_int+0x44>
    14e8:	8b 2d       	mov	r24, r11
    14ea:	80 68       	ori	r24, 0x80	; 128
    14ec:	b8 2e       	mov	r11, r24
    14ee:	d1 50       	subi	r29, 0x01	; 1
    14f0:	11 f4       	brne	.+4      	; 0x14f6 <conv_int+0x3c>
    14f2:	80 e0       	ldi	r24, 0x00	; 0
    14f4:	61 c0       	rjmp	.+194    	; 0x15b8 <conv_int+0xfe>
    14f6:	c8 01       	movw	r24, r16
    14f8:	73 d2       	rcall	.+1254   	; 0x19e0 <fgetc>
    14fa:	97 fd       	sbrc	r25, 7
    14fc:	fa cf       	rjmp	.-12     	; 0x14f2 <conv_int+0x38>
    14fe:	cb 2d       	mov	r28, r11
    1500:	cd 7f       	andi	r28, 0xFD	; 253
    1502:	2b 2d       	mov	r18, r11
    1504:	20 73       	andi	r18, 0x30	; 48
    1506:	f9 f4       	brne	.+62     	; 0x1546 <conv_int+0x8c>
    1508:	80 33       	cpi	r24, 0x30	; 48
    150a:	e9 f4       	brne	.+58     	; 0x1546 <conv_int+0x8c>
    150c:	aa 24       	eor	r10, r10
    150e:	aa 94       	dec	r10
    1510:	ad 0e       	add	r10, r29
    1512:	09 f4       	brne	.+2      	; 0x1516 <conv_int+0x5c>
    1514:	3e c0       	rjmp	.+124    	; 0x1592 <conv_int+0xd8>
    1516:	c8 01       	movw	r24, r16
    1518:	63 d2       	rcall	.+1222   	; 0x19e0 <fgetc>
    151a:	97 fd       	sbrc	r25, 7
    151c:	3a c0       	rjmp	.+116    	; 0x1592 <conv_int+0xd8>
    151e:	9c 01       	movw	r18, r24
    1520:	2f 7d       	andi	r18, 0xDF	; 223
    1522:	33 27       	eor	r19, r19
    1524:	28 35       	cpi	r18, 0x58	; 88
    1526:	31 05       	cpc	r19, r1
    1528:	41 f4       	brne	.+16     	; 0x153a <conv_int+0x80>
    152a:	c2 64       	ori	r28, 0x42	; 66
    152c:	d2 50       	subi	r29, 0x02	; 2
    152e:	89 f1       	breq	.+98     	; 0x1592 <conv_int+0xd8>
    1530:	c8 01       	movw	r24, r16
    1532:	56 d2       	rcall	.+1196   	; 0x19e0 <fgetc>
    1534:	97 ff       	sbrs	r25, 7
    1536:	07 c0       	rjmp	.+14     	; 0x1546 <conv_int+0x8c>
    1538:	2c c0       	rjmp	.+88     	; 0x1592 <conv_int+0xd8>
    153a:	b6 fe       	sbrs	r11, 6
    153c:	02 c0       	rjmp	.+4      	; 0x1542 <conv_int+0x88>
    153e:	c2 60       	ori	r28, 0x02	; 2
    1540:	01 c0       	rjmp	.+2      	; 0x1544 <conv_int+0x8a>
    1542:	c2 61       	ori	r28, 0x12	; 18
    1544:	da 2d       	mov	r29, r10
    1546:	81 2c       	mov	r8, r1
    1548:	91 2c       	mov	r9, r1
    154a:	54 01       	movw	r10, r8
    154c:	20 ed       	ldi	r18, 0xD0	; 208
    154e:	28 0f       	add	r18, r24
    1550:	28 30       	cpi	r18, 0x08	; 8
    1552:	78 f0       	brcs	.+30     	; 0x1572 <conv_int+0xb8>
    1554:	c4 ff       	sbrs	r28, 4
    1556:	03 c0       	rjmp	.+6      	; 0x155e <conv_int+0xa4>
    1558:	b8 01       	movw	r22, r16
    155a:	80 d2       	rcall	.+1280   	; 0x1a5c <ungetc>
    155c:	17 c0       	rjmp	.+46     	; 0x158c <conv_int+0xd2>
    155e:	2a 30       	cpi	r18, 0x0A	; 10
    1560:	40 f0       	brcs	.+16     	; 0x1572 <conv_int+0xb8>
    1562:	c6 ff       	sbrs	r28, 6
    1564:	f9 cf       	rjmp	.-14     	; 0x1558 <conv_int+0x9e>
    1566:	2f 7d       	andi	r18, 0xDF	; 223
    1568:	3f ee       	ldi	r19, 0xEF	; 239
    156a:	32 0f       	add	r19, r18
    156c:	36 30       	cpi	r19, 0x06	; 6
    156e:	a0 f7       	brcc	.-24     	; 0x1558 <conv_int+0x9e>
    1570:	27 50       	subi	r18, 0x07	; 7
    1572:	4c 2f       	mov	r20, r28
    1574:	c5 01       	movw	r24, r10
    1576:	b4 01       	movw	r22, r8
    1578:	63 df       	rcall	.-314    	; 0x1440 <mulacc>
    157a:	4b 01       	movw	r8, r22
    157c:	5c 01       	movw	r10, r24
    157e:	c2 60       	ori	r28, 0x02	; 2
    1580:	d1 50       	subi	r29, 0x01	; 1
    1582:	51 f0       	breq	.+20     	; 0x1598 <conv_int+0xde>
    1584:	c8 01       	movw	r24, r16
    1586:	2c d2       	rcall	.+1112   	; 0x19e0 <fgetc>
    1588:	97 ff       	sbrs	r25, 7
    158a:	e0 cf       	rjmp	.-64     	; 0x154c <conv_int+0x92>
    158c:	c1 fd       	sbrc	r28, 1
    158e:	04 c0       	rjmp	.+8      	; 0x1598 <conv_int+0xde>
    1590:	b0 cf       	rjmp	.-160    	; 0x14f2 <conv_int+0x38>
    1592:	81 2c       	mov	r8, r1
    1594:	91 2c       	mov	r9, r1
    1596:	54 01       	movw	r10, r8
    1598:	c7 ff       	sbrs	r28, 7
    159a:	08 c0       	rjmp	.+16     	; 0x15ac <conv_int+0xf2>
    159c:	b0 94       	com	r11
    159e:	a0 94       	com	r10
    15a0:	90 94       	com	r9
    15a2:	80 94       	com	r8
    15a4:	81 1c       	adc	r8, r1
    15a6:	91 1c       	adc	r9, r1
    15a8:	a1 1c       	adc	r10, r1
    15aa:	b1 1c       	adc	r11, r1
    15ac:	2c 2f       	mov	r18, r28
    15ae:	b5 01       	movw	r22, r10
    15b0:	a4 01       	movw	r20, r8
    15b2:	c7 01       	movw	r24, r14
    15b4:	39 df       	rcall	.-398    	; 0x1428 <putval>
    15b6:	81 e0       	ldi	r24, 0x01	; 1
    15b8:	df 91       	pop	r29
    15ba:	cf 91       	pop	r28
    15bc:	1f 91       	pop	r17
    15be:	0f 91       	pop	r16
    15c0:	ff 90       	pop	r15
    15c2:	ef 90       	pop	r14
    15c4:	bf 90       	pop	r11
    15c6:	af 90       	pop	r10
    15c8:	9f 90       	pop	r9
    15ca:	8f 90       	pop	r8
    15cc:	08 95       	ret

000015ce <conv_brk>:
    15ce:	5f 92       	push	r5
    15d0:	6f 92       	push	r6
    15d2:	7f 92       	push	r7
    15d4:	8f 92       	push	r8
    15d6:	9f 92       	push	r9
    15d8:	af 92       	push	r10
    15da:	bf 92       	push	r11
    15dc:	cf 92       	push	r12
    15de:	df 92       	push	r13
    15e0:	ef 92       	push	r14
    15e2:	ff 92       	push	r15
    15e4:	0f 93       	push	r16
    15e6:	1f 93       	push	r17
    15e8:	cf 93       	push	r28
    15ea:	df 93       	push	r29
    15ec:	cd b7       	in	r28, 0x3d	; 61
    15ee:	de b7       	in	r29, 0x3e	; 62
    15f0:	a0 97       	sbiw	r28, 0x20	; 32
    15f2:	0f b6       	in	r0, 0x3f	; 63
    15f4:	f8 94       	cli
    15f6:	de bf       	out	0x3e, r29	; 62
    15f8:	0f be       	out	0x3f, r0	; 63
    15fa:	cd bf       	out	0x3d, r28	; 61
    15fc:	5c 01       	movw	r10, r24
    15fe:	96 2e       	mov	r9, r22
    1600:	7a 01       	movw	r14, r20
    1602:	f9 01       	movw	r30, r18
    1604:	8e 01       	movw	r16, r28
    1606:	0f 5f       	subi	r16, 0xFF	; 255
    1608:	1f 4f       	sbci	r17, 0xFF	; 255
    160a:	68 01       	movw	r12, r16
    160c:	80 e2       	ldi	r24, 0x20	; 32
    160e:	d8 01       	movw	r26, r16
    1610:	1d 92       	st	X+, r1
    1612:	8a 95       	dec	r24
    1614:	e9 f7       	brne	.-6      	; 0x1610 <conv_brk+0x42>
    1616:	d5 01       	movw	r26, r10
    1618:	13 96       	adiw	r26, 0x03	; 3
    161a:	8c 90       	ld	r8, X
    161c:	80 e0       	ldi	r24, 0x00	; 0
    161e:	90 e0       	ldi	r25, 0x00	; 0
    1620:	61 2c       	mov	r6, r1
    1622:	71 2c       	mov	r7, r1
    1624:	30 e0       	ldi	r19, 0x00	; 0
    1626:	61 e0       	ldi	r22, 0x01	; 1
    1628:	70 e0       	ldi	r23, 0x00	; 0
    162a:	83 fc       	sbrc	r8, 3
    162c:	25 91       	lpm	r18, Z+
    162e:	83 fe       	sbrs	r8, 3
    1630:	21 91       	ld	r18, Z+
    1632:	8f 01       	movw	r16, r30
    1634:	52 2e       	mov	r5, r18
    1636:	21 11       	cpse	r18, r1
    1638:	03 c0       	rjmp	.+6      	; 0x1640 <conv_brk+0x72>
    163a:	80 e0       	ldi	r24, 0x00	; 0
    163c:	90 e0       	ldi	r25, 0x00	; 0
    163e:	90 c0       	rjmp	.+288    	; 0x1760 <conv_brk+0x192>
    1640:	2e 35       	cpi	r18, 0x5E	; 94
    1642:	11 f4       	brne	.+4      	; 0x1648 <conv_brk+0x7a>
    1644:	00 97       	sbiw	r24, 0x00	; 0
    1646:	51 f1       	breq	.+84     	; 0x169c <conv_brk+0xce>
    1648:	43 2f       	mov	r20, r19
    164a:	50 e0       	ldi	r21, 0x00	; 0
    164c:	48 17       	cp	r20, r24
    164e:	59 07       	cpc	r21, r25
    1650:	3c f4       	brge	.+14     	; 0x1660 <conv_brk+0x92>
    1652:	2d 35       	cpi	r18, 0x5D	; 93
    1654:	59 f1       	breq	.+86     	; 0x16ac <conv_brk+0xde>
    1656:	2d 32       	cpi	r18, 0x2D	; 45
    1658:	19 f4       	brne	.+6      	; 0x1660 <conv_brk+0x92>
    165a:	77 20       	and	r7, r7
    165c:	09 f1       	breq	.+66     	; 0x16a0 <conv_brk+0xd2>
    165e:	03 c0       	rjmp	.+6      	; 0x1666 <conv_brk+0x98>
    1660:	77 20       	and	r7, r7
    1662:	09 f4       	brne	.+2      	; 0x1666 <conv_brk+0x98>
    1664:	68 c0       	rjmp	.+208    	; 0x1736 <conv_brk+0x168>
    1666:	45 2d       	mov	r20, r5
    1668:	46 95       	lsr	r20
    166a:	46 95       	lsr	r20
    166c:	46 95       	lsr	r20
    166e:	d6 01       	movw	r26, r12
    1670:	a4 0f       	add	r26, r20
    1672:	b1 1d       	adc	r27, r1
    1674:	45 2d       	mov	r20, r5
    1676:	47 70       	andi	r20, 0x07	; 7
    1678:	8b 01       	movw	r16, r22
    167a:	02 c0       	rjmp	.+4      	; 0x1680 <conv_brk+0xb2>
    167c:	00 0f       	add	r16, r16
    167e:	11 1f       	adc	r17, r17
    1680:	4a 95       	dec	r20
    1682:	e2 f7       	brpl	.-8      	; 0x167c <conv_brk+0xae>
    1684:	a8 01       	movw	r20, r16
    1686:	5c 91       	ld	r21, X
    1688:	45 2b       	or	r20, r21
    168a:	4c 93       	st	X, r20
    168c:	65 14       	cp	r6, r5
    168e:	59 f0       	breq	.+22     	; 0x16a6 <conv_brk+0xd8>
    1690:	56 14       	cp	r5, r6
    1692:	10 f4       	brcc	.+4      	; 0x1698 <conv_brk+0xca>
    1694:	53 94       	inc	r5
    1696:	e7 cf       	rjmp	.-50     	; 0x1666 <conv_brk+0x98>
    1698:	5a 94       	dec	r5
    169a:	e5 cf       	rjmp	.-54     	; 0x1666 <conv_brk+0x98>
    169c:	31 e0       	ldi	r19, 0x01	; 1
    169e:	04 c0       	rjmp	.+8      	; 0x16a8 <conv_brk+0xda>
    16a0:	77 24       	eor	r7, r7
    16a2:	73 94       	inc	r7
    16a4:	01 c0       	rjmp	.+2      	; 0x16a8 <conv_brk+0xda>
    16a6:	71 2c       	mov	r7, r1
    16a8:	01 96       	adiw	r24, 0x01	; 1
    16aa:	bf cf       	rjmp	.-130    	; 0x162a <conv_brk+0x5c>
    16ac:	77 20       	and	r7, r7
    16ae:	19 f0       	breq	.+6      	; 0x16b6 <conv_brk+0xe8>
    16b0:	8e 81       	ldd	r24, Y+6	; 0x06
    16b2:	80 62       	ori	r24, 0x20	; 32
    16b4:	8e 83       	std	Y+6, r24	; 0x06
    16b6:	31 11       	cpse	r19, r1
    16b8:	03 c0       	rjmp	.+6      	; 0x16c0 <conv_brk+0xf2>
    16ba:	88 24       	eor	r8, r8
    16bc:	83 94       	inc	r8
    16be:	17 c0       	rjmp	.+46     	; 0x16ee <conv_brk+0x120>
    16c0:	f6 01       	movw	r30, r12
    16c2:	9e 01       	movw	r18, r28
    16c4:	2f 5d       	subi	r18, 0xDF	; 223
    16c6:	3f 4f       	sbci	r19, 0xFF	; 255
    16c8:	80 81       	ld	r24, Z
    16ca:	80 95       	com	r24
    16cc:	81 93       	st	Z+, r24
    16ce:	2e 17       	cp	r18, r30
    16d0:	3f 07       	cpc	r19, r31
    16d2:	d1 f7       	brne	.-12     	; 0x16c8 <conv_brk+0xfa>
    16d4:	f2 cf       	rjmp	.-28     	; 0x16ba <conv_brk+0xec>
    16d6:	e1 14       	cp	r14, r1
    16d8:	f1 04       	cpc	r15, r1
    16da:	29 f0       	breq	.+10     	; 0x16e6 <conv_brk+0x118>
    16dc:	d7 01       	movw	r26, r14
    16de:	8c 93       	st	X, r24
    16e0:	f7 01       	movw	r30, r14
    16e2:	31 96       	adiw	r30, 0x01	; 1
    16e4:	7f 01       	movw	r14, r30
    16e6:	9a 94       	dec	r9
    16e8:	81 2c       	mov	r8, r1
    16ea:	99 20       	and	r9, r9
    16ec:	e9 f0       	breq	.+58     	; 0x1728 <conv_brk+0x15a>
    16ee:	c5 01       	movw	r24, r10
    16f0:	77 d1       	rcall	.+750    	; 0x19e0 <fgetc>
    16f2:	97 fd       	sbrc	r25, 7
    16f4:	17 c0       	rjmp	.+46     	; 0x1724 <conv_brk+0x156>
    16f6:	fc 01       	movw	r30, r24
    16f8:	ff 27       	eor	r31, r31
    16fa:	23 e0       	ldi	r18, 0x03	; 3
    16fc:	f5 95       	asr	r31
    16fe:	e7 95       	ror	r30
    1700:	2a 95       	dec	r18
    1702:	e1 f7       	brne	.-8      	; 0x16fc <conv_brk+0x12e>
    1704:	ec 0d       	add	r30, r12
    1706:	fd 1d       	adc	r31, r13
    1708:	20 81       	ld	r18, Z
    170a:	30 e0       	ldi	r19, 0x00	; 0
    170c:	ac 01       	movw	r20, r24
    170e:	47 70       	andi	r20, 0x07	; 7
    1710:	55 27       	eor	r21, r21
    1712:	02 c0       	rjmp	.+4      	; 0x1718 <conv_brk+0x14a>
    1714:	35 95       	asr	r19
    1716:	27 95       	ror	r18
    1718:	4a 95       	dec	r20
    171a:	e2 f7       	brpl	.-8      	; 0x1714 <conv_brk+0x146>
    171c:	20 fd       	sbrc	r18, 0
    171e:	db cf       	rjmp	.-74     	; 0x16d6 <conv_brk+0x108>
    1720:	b5 01       	movw	r22, r10
    1722:	9c d1       	rcall	.+824    	; 0x1a5c <ungetc>
    1724:	81 10       	cpse	r8, r1
    1726:	89 cf       	rjmp	.-238    	; 0x163a <conv_brk+0x6c>
    1728:	e1 14       	cp	r14, r1
    172a:	f1 04       	cpc	r15, r1
    172c:	11 f0       	breq	.+4      	; 0x1732 <conv_brk+0x164>
    172e:	d7 01       	movw	r26, r14
    1730:	1c 92       	st	X, r1
    1732:	c8 01       	movw	r24, r16
    1734:	15 c0       	rjmp	.+42     	; 0x1760 <conv_brk+0x192>
    1736:	42 2f       	mov	r20, r18
    1738:	46 95       	lsr	r20
    173a:	46 95       	lsr	r20
    173c:	46 95       	lsr	r20
    173e:	d6 01       	movw	r26, r12
    1740:	a4 0f       	add	r26, r20
    1742:	b1 1d       	adc	r27, r1
    1744:	42 2f       	mov	r20, r18
    1746:	47 70       	andi	r20, 0x07	; 7
    1748:	8b 01       	movw	r16, r22
    174a:	02 c0       	rjmp	.+4      	; 0x1750 <conv_brk+0x182>
    174c:	00 0f       	add	r16, r16
    174e:	11 1f       	adc	r17, r17
    1750:	4a 95       	dec	r20
    1752:	e2 f7       	brpl	.-8      	; 0x174c <conv_brk+0x17e>
    1754:	a8 01       	movw	r20, r16
    1756:	5c 91       	ld	r21, X
    1758:	45 2b       	or	r20, r21
    175a:	4c 93       	st	X, r20
    175c:	62 2e       	mov	r6, r18
    175e:	a4 cf       	rjmp	.-184    	; 0x16a8 <conv_brk+0xda>
    1760:	a0 96       	adiw	r28, 0x20	; 32
    1762:	0f b6       	in	r0, 0x3f	; 63
    1764:	f8 94       	cli
    1766:	de bf       	out	0x3e, r29	; 62
    1768:	0f be       	out	0x3f, r0	; 63
    176a:	cd bf       	out	0x3d, r28	; 61
    176c:	df 91       	pop	r29
    176e:	cf 91       	pop	r28
    1770:	1f 91       	pop	r17
    1772:	0f 91       	pop	r16
    1774:	ff 90       	pop	r15
    1776:	ef 90       	pop	r14
    1778:	df 90       	pop	r13
    177a:	cf 90       	pop	r12
    177c:	bf 90       	pop	r11
    177e:	af 90       	pop	r10
    1780:	9f 90       	pop	r9
    1782:	8f 90       	pop	r8
    1784:	7f 90       	pop	r7
    1786:	6f 90       	pop	r6
    1788:	5f 90       	pop	r5
    178a:	08 95       	ret

0000178c <vfscanf>:
    178c:	5f 92       	push	r5
    178e:	6f 92       	push	r6
    1790:	7f 92       	push	r7
    1792:	8f 92       	push	r8
    1794:	9f 92       	push	r9
    1796:	af 92       	push	r10
    1798:	bf 92       	push	r11
    179a:	cf 92       	push	r12
    179c:	df 92       	push	r13
    179e:	ef 92       	push	r14
    17a0:	ff 92       	push	r15
    17a2:	0f 93       	push	r16
    17a4:	1f 93       	push	r17
    17a6:	cf 93       	push	r28
    17a8:	df 93       	push	r29
    17aa:	6c 01       	movw	r12, r24
    17ac:	eb 01       	movw	r28, r22
    17ae:	5a 01       	movw	r10, r20
    17b0:	fc 01       	movw	r30, r24
    17b2:	17 82       	std	Z+7, r1	; 0x07
    17b4:	16 82       	std	Z+6, r1	; 0x06
    17b6:	51 2c       	mov	r5, r1
    17b8:	f6 01       	movw	r30, r12
    17ba:	e3 80       	ldd	r14, Z+3	; 0x03
    17bc:	fe 01       	movw	r30, r28
    17be:	e3 fc       	sbrc	r14, 3
    17c0:	85 91       	lpm	r24, Z+
    17c2:	e3 fe       	sbrs	r14, 3
    17c4:	81 91       	ld	r24, Z+
    17c6:	18 2f       	mov	r17, r24
    17c8:	ef 01       	movw	r28, r30
    17ca:	88 23       	and	r24, r24
    17cc:	09 f4       	brne	.+2      	; 0x17d0 <vfscanf+0x44>
    17ce:	e0 c0       	rjmp	.+448    	; 0x1990 <vfscanf+0x204>
    17d0:	90 e0       	ldi	r25, 0x00	; 0
    17d2:	f3 d0       	rcall	.+486    	; 0x19ba <isspace>
    17d4:	89 2b       	or	r24, r25
    17d6:	19 f0       	breq	.+6      	; 0x17de <vfscanf+0x52>
    17d8:	c6 01       	movw	r24, r12
    17da:	59 de       	rcall	.-846    	; 0x148e <skip_spaces>
    17dc:	ed cf       	rjmp	.-38     	; 0x17b8 <vfscanf+0x2c>
    17de:	15 32       	cpi	r17, 0x25	; 37
    17e0:	41 f4       	brne	.+16     	; 0x17f2 <vfscanf+0x66>
    17e2:	fe 01       	movw	r30, r28
    17e4:	e3 fc       	sbrc	r14, 3
    17e6:	15 91       	lpm	r17, Z+
    17e8:	e3 fe       	sbrs	r14, 3
    17ea:	11 91       	ld	r17, Z+
    17ec:	ef 01       	movw	r28, r30
    17ee:	15 32       	cpi	r17, 0x25	; 37
    17f0:	71 f4       	brne	.+28     	; 0x180e <vfscanf+0x82>
    17f2:	c6 01       	movw	r24, r12
    17f4:	f5 d0       	rcall	.+490    	; 0x19e0 <fgetc>
    17f6:	97 fd       	sbrc	r25, 7
    17f8:	c9 c0       	rjmp	.+402    	; 0x198c <vfscanf+0x200>
    17fa:	41 2f       	mov	r20, r17
    17fc:	50 e0       	ldi	r21, 0x00	; 0
    17fe:	9c 01       	movw	r18, r24
    1800:	33 27       	eor	r19, r19
    1802:	24 17       	cp	r18, r20
    1804:	35 07       	cpc	r19, r21
    1806:	c1 f2       	breq	.-80     	; 0x17b8 <vfscanf+0x2c>
    1808:	b6 01       	movw	r22, r12
    180a:	28 d1       	rcall	.+592    	; 0x1a5c <ungetc>
    180c:	c1 c0       	rjmp	.+386    	; 0x1990 <vfscanf+0x204>
    180e:	1a 32       	cpi	r17, 0x2A	; 42
    1810:	39 f4       	brne	.+14     	; 0x1820 <vfscanf+0x94>
    1812:	e3 fc       	sbrc	r14, 3
    1814:	15 91       	lpm	r17, Z+
    1816:	e3 fe       	sbrs	r14, 3
    1818:	11 91       	ld	r17, Z+
    181a:	ef 01       	movw	r28, r30
    181c:	01 e0       	ldi	r16, 0x01	; 1
    181e:	01 c0       	rjmp	.+2      	; 0x1822 <vfscanf+0x96>
    1820:	00 e0       	ldi	r16, 0x00	; 0
    1822:	f1 2c       	mov	r15, r1
    1824:	20 ed       	ldi	r18, 0xD0	; 208
    1826:	21 0f       	add	r18, r17
    1828:	2a 30       	cpi	r18, 0x0A	; 10
    182a:	78 f4       	brcc	.+30     	; 0x184a <vfscanf+0xbe>
    182c:	02 60       	ori	r16, 0x02	; 2
    182e:	6f 2d       	mov	r22, r15
    1830:	70 e0       	ldi	r23, 0x00	; 0
    1832:	80 e0       	ldi	r24, 0x00	; 0
    1834:	90 e0       	ldi	r25, 0x00	; 0
    1836:	40 e2       	ldi	r20, 0x20	; 32
    1838:	03 de       	rcall	.-1018   	; 0x1440 <mulacc>
    183a:	f6 2e       	mov	r15, r22
    183c:	fe 01       	movw	r30, r28
    183e:	e3 fc       	sbrc	r14, 3
    1840:	15 91       	lpm	r17, Z+
    1842:	e3 fe       	sbrs	r14, 3
    1844:	11 91       	ld	r17, Z+
    1846:	ef 01       	movw	r28, r30
    1848:	ed cf       	rjmp	.-38     	; 0x1824 <vfscanf+0x98>
    184a:	01 ff       	sbrs	r16, 1
    184c:	03 c0       	rjmp	.+6      	; 0x1854 <vfscanf+0xc8>
    184e:	f1 10       	cpse	r15, r1
    1850:	03 c0       	rjmp	.+6      	; 0x1858 <vfscanf+0xcc>
    1852:	9e c0       	rjmp	.+316    	; 0x1990 <vfscanf+0x204>
    1854:	ff 24       	eor	r15, r15
    1856:	fa 94       	dec	r15
    1858:	18 36       	cpi	r17, 0x68	; 104
    185a:	19 f0       	breq	.+6      	; 0x1862 <vfscanf+0xd6>
    185c:	1c 36       	cpi	r17, 0x6C	; 108
    185e:	51 f0       	breq	.+20     	; 0x1874 <vfscanf+0xe8>
    1860:	10 c0       	rjmp	.+32     	; 0x1882 <vfscanf+0xf6>
    1862:	fe 01       	movw	r30, r28
    1864:	e3 fc       	sbrc	r14, 3
    1866:	15 91       	lpm	r17, Z+
    1868:	e3 fe       	sbrs	r14, 3
    186a:	11 91       	ld	r17, Z+
    186c:	ef 01       	movw	r28, r30
    186e:	18 36       	cpi	r17, 0x68	; 104
    1870:	41 f4       	brne	.+16     	; 0x1882 <vfscanf+0xf6>
    1872:	08 60       	ori	r16, 0x08	; 8
    1874:	04 60       	ori	r16, 0x04	; 4
    1876:	fe 01       	movw	r30, r28
    1878:	e3 fc       	sbrc	r14, 3
    187a:	15 91       	lpm	r17, Z+
    187c:	e3 fe       	sbrs	r14, 3
    187e:	11 91       	ld	r17, Z+
    1880:	ef 01       	movw	r28, r30
    1882:	11 23       	and	r17, r17
    1884:	09 f4       	brne	.+2      	; 0x1888 <vfscanf+0xfc>
    1886:	84 c0       	rjmp	.+264    	; 0x1990 <vfscanf+0x204>
    1888:	61 2f       	mov	r22, r17
    188a:	70 e0       	ldi	r23, 0x00	; 0
    188c:	84 ee       	ldi	r24, 0xE4	; 228
    188e:	90 e0       	ldi	r25, 0x00	; 0
    1890:	9c d0       	rcall	.+312    	; 0x19ca <strchr_P>
    1892:	89 2b       	or	r24, r25
    1894:	09 f4       	brne	.+2      	; 0x1898 <vfscanf+0x10c>
    1896:	7c c0       	rjmp	.+248    	; 0x1990 <vfscanf+0x204>
    1898:	00 fd       	sbrc	r16, 0
    189a:	07 c0       	rjmp	.+14     	; 0x18aa <vfscanf+0x11e>
    189c:	f5 01       	movw	r30, r10
    189e:	80 80       	ld	r8, Z
    18a0:	91 80       	ldd	r9, Z+1	; 0x01
    18a2:	c5 01       	movw	r24, r10
    18a4:	02 96       	adiw	r24, 0x02	; 2
    18a6:	5c 01       	movw	r10, r24
    18a8:	02 c0       	rjmp	.+4      	; 0x18ae <vfscanf+0x122>
    18aa:	81 2c       	mov	r8, r1
    18ac:	91 2c       	mov	r9, r1
    18ae:	1e 36       	cpi	r17, 0x6E	; 110
    18b0:	49 f4       	brne	.+18     	; 0x18c4 <vfscanf+0x138>
    18b2:	f6 01       	movw	r30, r12
    18b4:	46 81       	ldd	r20, Z+6	; 0x06
    18b6:	57 81       	ldd	r21, Z+7	; 0x07
    18b8:	60 e0       	ldi	r22, 0x00	; 0
    18ba:	70 e0       	ldi	r23, 0x00	; 0
    18bc:	20 2f       	mov	r18, r16
    18be:	c4 01       	movw	r24, r8
    18c0:	b3 dd       	rcall	.-1178   	; 0x1428 <putval>
    18c2:	7a cf       	rjmp	.-268    	; 0x17b8 <vfscanf+0x2c>
    18c4:	13 36       	cpi	r17, 0x63	; 99
    18c6:	a1 f4       	brne	.+40     	; 0x18f0 <vfscanf+0x164>
    18c8:	01 fd       	sbrc	r16, 1
    18ca:	02 c0       	rjmp	.+4      	; 0x18d0 <vfscanf+0x144>
    18cc:	ff 24       	eor	r15, r15
    18ce:	f3 94       	inc	r15
    18d0:	c6 01       	movw	r24, r12
    18d2:	86 d0       	rcall	.+268    	; 0x19e0 <fgetc>
    18d4:	97 fd       	sbrc	r25, 7
    18d6:	5a c0       	rjmp	.+180    	; 0x198c <vfscanf+0x200>
    18d8:	81 14       	cp	r8, r1
    18da:	91 04       	cpc	r9, r1
    18dc:	29 f0       	breq	.+10     	; 0x18e8 <vfscanf+0x15c>
    18de:	f4 01       	movw	r30, r8
    18e0:	80 83       	st	Z, r24
    18e2:	c4 01       	movw	r24, r8
    18e4:	01 96       	adiw	r24, 0x01	; 1
    18e6:	4c 01       	movw	r8, r24
    18e8:	fa 94       	dec	r15
    18ea:	f1 10       	cpse	r15, r1
    18ec:	f1 cf       	rjmp	.-30     	; 0x18d0 <vfscanf+0x144>
    18ee:	4a c0       	rjmp	.+148    	; 0x1984 <vfscanf+0x1f8>
    18f0:	1b 35       	cpi	r17, 0x5B	; 91
    18f2:	51 f4       	brne	.+20     	; 0x1908 <vfscanf+0x17c>
    18f4:	9e 01       	movw	r18, r28
    18f6:	a4 01       	movw	r20, r8
    18f8:	6f 2d       	mov	r22, r15
    18fa:	c6 01       	movw	r24, r12
    18fc:	68 de       	rcall	.-816    	; 0x15ce <conv_brk>
    18fe:	ec 01       	movw	r28, r24
    1900:	89 2b       	or	r24, r25
    1902:	09 f0       	breq	.+2      	; 0x1906 <vfscanf+0x17a>
    1904:	3f c0       	rjmp	.+126    	; 0x1984 <vfscanf+0x1f8>
    1906:	39 c0       	rjmp	.+114    	; 0x197a <vfscanf+0x1ee>
    1908:	c6 01       	movw	r24, r12
    190a:	c1 dd       	rcall	.-1150   	; 0x148e <skip_spaces>
    190c:	97 fd       	sbrc	r25, 7
    190e:	3e c0       	rjmp	.+124    	; 0x198c <vfscanf+0x200>
    1910:	1f 36       	cpi	r17, 0x6F	; 111
    1912:	49 f1       	breq	.+82     	; 0x1966 <vfscanf+0x1da>
    1914:	28 f4       	brcc	.+10     	; 0x1920 <vfscanf+0x194>
    1916:	14 36       	cpi	r17, 0x64	; 100
    1918:	21 f1       	breq	.+72     	; 0x1962 <vfscanf+0x1d6>
    191a:	19 36       	cpi	r17, 0x69	; 105
    191c:	39 f1       	breq	.+78     	; 0x196c <vfscanf+0x1e0>
    191e:	25 c0       	rjmp	.+74     	; 0x196a <vfscanf+0x1de>
    1920:	13 37       	cpi	r17, 0x73	; 115
    1922:	71 f0       	breq	.+28     	; 0x1940 <vfscanf+0x1b4>
    1924:	15 37       	cpi	r17, 0x75	; 117
    1926:	e9 f0       	breq	.+58     	; 0x1962 <vfscanf+0x1d6>
    1928:	20 c0       	rjmp	.+64     	; 0x196a <vfscanf+0x1de>
    192a:	81 14       	cp	r8, r1
    192c:	91 04       	cpc	r9, r1
    192e:	29 f0       	breq	.+10     	; 0x193a <vfscanf+0x1ae>
    1930:	f4 01       	movw	r30, r8
    1932:	60 82       	st	Z, r6
    1934:	c4 01       	movw	r24, r8
    1936:	01 96       	adiw	r24, 0x01	; 1
    1938:	4c 01       	movw	r8, r24
    193a:	fa 94       	dec	r15
    193c:	ff 20       	and	r15, r15
    193e:	59 f0       	breq	.+22     	; 0x1956 <vfscanf+0x1ca>
    1940:	c6 01       	movw	r24, r12
    1942:	4e d0       	rcall	.+156    	; 0x19e0 <fgetc>
    1944:	3c 01       	movw	r6, r24
    1946:	97 fd       	sbrc	r25, 7
    1948:	06 c0       	rjmp	.+12     	; 0x1956 <vfscanf+0x1ca>
    194a:	37 d0       	rcall	.+110    	; 0x19ba <isspace>
    194c:	89 2b       	or	r24, r25
    194e:	69 f3       	breq	.-38     	; 0x192a <vfscanf+0x19e>
    1950:	b6 01       	movw	r22, r12
    1952:	c3 01       	movw	r24, r6
    1954:	83 d0       	rcall	.+262    	; 0x1a5c <ungetc>
    1956:	81 14       	cp	r8, r1
    1958:	91 04       	cpc	r9, r1
    195a:	a1 f0       	breq	.+40     	; 0x1984 <vfscanf+0x1f8>
    195c:	f4 01       	movw	r30, r8
    195e:	10 82       	st	Z, r1
    1960:	11 c0       	rjmp	.+34     	; 0x1984 <vfscanf+0x1f8>
    1962:	00 62       	ori	r16, 0x20	; 32
    1964:	03 c0       	rjmp	.+6      	; 0x196c <vfscanf+0x1e0>
    1966:	00 61       	ori	r16, 0x10	; 16
    1968:	01 c0       	rjmp	.+2      	; 0x196c <vfscanf+0x1e0>
    196a:	00 64       	ori	r16, 0x40	; 64
    196c:	20 2f       	mov	r18, r16
    196e:	a4 01       	movw	r20, r8
    1970:	6f 2d       	mov	r22, r15
    1972:	c6 01       	movw	r24, r12
    1974:	a2 dd       	rcall	.-1212   	; 0x14ba <conv_int>
    1976:	81 11       	cpse	r24, r1
    1978:	05 c0       	rjmp	.+10     	; 0x1984 <vfscanf+0x1f8>
    197a:	f6 01       	movw	r30, r12
    197c:	83 81       	ldd	r24, Z+3	; 0x03
    197e:	80 73       	andi	r24, 0x30	; 48
    1980:	29 f4       	brne	.+10     	; 0x198c <vfscanf+0x200>
    1982:	06 c0       	rjmp	.+12     	; 0x1990 <vfscanf+0x204>
    1984:	00 fd       	sbrc	r16, 0
    1986:	18 cf       	rjmp	.-464    	; 0x17b8 <vfscanf+0x2c>
    1988:	53 94       	inc	r5
    198a:	16 cf       	rjmp	.-468    	; 0x17b8 <vfscanf+0x2c>
    198c:	55 20       	and	r5, r5
    198e:	19 f0       	breq	.+6      	; 0x1996 <vfscanf+0x20a>
    1990:	85 2d       	mov	r24, r5
    1992:	90 e0       	ldi	r25, 0x00	; 0
    1994:	02 c0       	rjmp	.+4      	; 0x199a <vfscanf+0x20e>
    1996:	8f ef       	ldi	r24, 0xFF	; 255
    1998:	9f ef       	ldi	r25, 0xFF	; 255
    199a:	df 91       	pop	r29
    199c:	cf 91       	pop	r28
    199e:	1f 91       	pop	r17
    19a0:	0f 91       	pop	r16
    19a2:	ff 90       	pop	r15
    19a4:	ef 90       	pop	r14
    19a6:	df 90       	pop	r13
    19a8:	cf 90       	pop	r12
    19aa:	bf 90       	pop	r11
    19ac:	af 90       	pop	r10
    19ae:	9f 90       	pop	r9
    19b0:	8f 90       	pop	r8
    19b2:	7f 90       	pop	r7
    19b4:	6f 90       	pop	r6
    19b6:	5f 90       	pop	r5
    19b8:	08 95       	ret

000019ba <isspace>:
    19ba:	91 11       	cpse	r25, r1
    19bc:	68 c0       	rjmp	.+208    	; 0x1a8e <__ctype_isfalse>
    19be:	80 32       	cpi	r24, 0x20	; 32
    19c0:	19 f0       	breq	.+6      	; 0x19c8 <isspace+0xe>
    19c2:	89 50       	subi	r24, 0x09	; 9
    19c4:	85 50       	subi	r24, 0x05	; 5
    19c6:	d0 f7       	brcc	.-12     	; 0x19bc <isspace+0x2>
    19c8:	08 95       	ret

000019ca <strchr_P>:
    19ca:	fc 01       	movw	r30, r24
    19cc:	05 90       	lpm	r0, Z+
    19ce:	06 16       	cp	r0, r22
    19d0:	21 f0       	breq	.+8      	; 0x19da <strchr_P+0x10>
    19d2:	00 20       	and	r0, r0
    19d4:	d9 f7       	brne	.-10     	; 0x19cc <strchr_P+0x2>
    19d6:	c0 01       	movw	r24, r0
    19d8:	08 95       	ret
    19da:	31 97       	sbiw	r30, 0x01	; 1
    19dc:	cf 01       	movw	r24, r30
    19de:	08 95       	ret

000019e0 <fgetc>:
    19e0:	cf 93       	push	r28
    19e2:	df 93       	push	r29
    19e4:	ec 01       	movw	r28, r24
    19e6:	2b 81       	ldd	r18, Y+3	; 0x03
    19e8:	20 ff       	sbrs	r18, 0
    19ea:	33 c0       	rjmp	.+102    	; 0x1a52 <fgetc+0x72>
    19ec:	26 ff       	sbrs	r18, 6
    19ee:	0a c0       	rjmp	.+20     	; 0x1a04 <fgetc+0x24>
    19f0:	2f 7b       	andi	r18, 0xBF	; 191
    19f2:	2b 83       	std	Y+3, r18	; 0x03
    19f4:	8e 81       	ldd	r24, Y+6	; 0x06
    19f6:	9f 81       	ldd	r25, Y+7	; 0x07
    19f8:	01 96       	adiw	r24, 0x01	; 1
    19fa:	9f 83       	std	Y+7, r25	; 0x07
    19fc:	8e 83       	std	Y+6, r24	; 0x06
    19fe:	8a 81       	ldd	r24, Y+2	; 0x02
    1a00:	90 e0       	ldi	r25, 0x00	; 0
    1a02:	29 c0       	rjmp	.+82     	; 0x1a56 <fgetc+0x76>
    1a04:	22 ff       	sbrs	r18, 2
    1a06:	0f c0       	rjmp	.+30     	; 0x1a26 <fgetc+0x46>
    1a08:	e8 81       	ld	r30, Y
    1a0a:	f9 81       	ldd	r31, Y+1	; 0x01
    1a0c:	80 81       	ld	r24, Z
    1a0e:	08 2e       	mov	r0, r24
    1a10:	00 0c       	add	r0, r0
    1a12:	99 0b       	sbc	r25, r25
    1a14:	00 97       	sbiw	r24, 0x00	; 0
    1a16:	19 f4       	brne	.+6      	; 0x1a1e <fgetc+0x3e>
    1a18:	20 62       	ori	r18, 0x20	; 32
    1a1a:	2b 83       	std	Y+3, r18	; 0x03
    1a1c:	1a c0       	rjmp	.+52     	; 0x1a52 <fgetc+0x72>
    1a1e:	31 96       	adiw	r30, 0x01	; 1
    1a20:	f9 83       	std	Y+1, r31	; 0x01
    1a22:	e8 83       	st	Y, r30
    1a24:	0e c0       	rjmp	.+28     	; 0x1a42 <fgetc+0x62>
    1a26:	ea 85       	ldd	r30, Y+10	; 0x0a
    1a28:	fb 85       	ldd	r31, Y+11	; 0x0b
    1a2a:	19 95       	eicall
    1a2c:	97 ff       	sbrs	r25, 7
    1a2e:	09 c0       	rjmp	.+18     	; 0x1a42 <fgetc+0x62>
    1a30:	2b 81       	ldd	r18, Y+3	; 0x03
    1a32:	01 96       	adiw	r24, 0x01	; 1
    1a34:	11 f0       	breq	.+4      	; 0x1a3a <fgetc+0x5a>
    1a36:	80 e2       	ldi	r24, 0x20	; 32
    1a38:	01 c0       	rjmp	.+2      	; 0x1a3c <fgetc+0x5c>
    1a3a:	80 e1       	ldi	r24, 0x10	; 16
    1a3c:	82 2b       	or	r24, r18
    1a3e:	8b 83       	std	Y+3, r24	; 0x03
    1a40:	08 c0       	rjmp	.+16     	; 0x1a52 <fgetc+0x72>
    1a42:	2e 81       	ldd	r18, Y+6	; 0x06
    1a44:	3f 81       	ldd	r19, Y+7	; 0x07
    1a46:	2f 5f       	subi	r18, 0xFF	; 255
    1a48:	3f 4f       	sbci	r19, 0xFF	; 255
    1a4a:	3f 83       	std	Y+7, r19	; 0x07
    1a4c:	2e 83       	std	Y+6, r18	; 0x06
    1a4e:	99 27       	eor	r25, r25
    1a50:	02 c0       	rjmp	.+4      	; 0x1a56 <fgetc+0x76>
    1a52:	8f ef       	ldi	r24, 0xFF	; 255
    1a54:	9f ef       	ldi	r25, 0xFF	; 255
    1a56:	df 91       	pop	r29
    1a58:	cf 91       	pop	r28
    1a5a:	08 95       	ret

00001a5c <ungetc>:
    1a5c:	fb 01       	movw	r30, r22
    1a5e:	23 81       	ldd	r18, Z+3	; 0x03
    1a60:	20 ff       	sbrs	r18, 0
    1a62:	12 c0       	rjmp	.+36     	; 0x1a88 <ungetc+0x2c>
    1a64:	26 fd       	sbrc	r18, 6
    1a66:	10 c0       	rjmp	.+32     	; 0x1a88 <ungetc+0x2c>
    1a68:	8f 3f       	cpi	r24, 0xFF	; 255
    1a6a:	3f ef       	ldi	r19, 0xFF	; 255
    1a6c:	93 07       	cpc	r25, r19
    1a6e:	61 f0       	breq	.+24     	; 0x1a88 <ungetc+0x2c>
    1a70:	82 83       	std	Z+2, r24	; 0x02
    1a72:	2f 7d       	andi	r18, 0xDF	; 223
    1a74:	20 64       	ori	r18, 0x40	; 64
    1a76:	23 83       	std	Z+3, r18	; 0x03
    1a78:	26 81       	ldd	r18, Z+6	; 0x06
    1a7a:	37 81       	ldd	r19, Z+7	; 0x07
    1a7c:	21 50       	subi	r18, 0x01	; 1
    1a7e:	31 09       	sbc	r19, r1
    1a80:	37 83       	std	Z+7, r19	; 0x07
    1a82:	26 83       	std	Z+6, r18	; 0x06
    1a84:	99 27       	eor	r25, r25
    1a86:	08 95       	ret
    1a88:	8f ef       	ldi	r24, 0xFF	; 255
    1a8a:	9f ef       	ldi	r25, 0xFF	; 255
    1a8c:	08 95       	ret

00001a8e <__ctype_isfalse>:
    1a8e:	99 27       	eor	r25, r25
    1a90:	88 27       	eor	r24, r24

00001a92 <__ctype_istrue>:
    1a92:	08 95       	ret

00001a94 <_exit>:
    1a94:	f8 94       	cli

00001a96 <__stop_program>:
    1a96:	ff cf       	rjmp	.-2      	; 0x1a96 <__stop_program>
