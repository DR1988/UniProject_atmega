
UniProject.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000002c  00800200  00001abe  00001b52  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001abe  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000003d  0080022c  0080022c  00001b7e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001b7e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001bdc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000090  00000000  00000000  00001c1c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001364  00000000  00000000  00001cac  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000d40  00000000  00000000  00003010  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000078d  00000000  00000000  00003d50  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000388  00000000  00000000  000044e0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000007b3  00000000  00000000  00004868  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000cee  00000000  00000000  0000501b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000080  00000000  00000000  00005d09  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	77 c0       	rjmp	.+238    	; 0xf0 <__ctors_end>
       2:	00 00       	nop
       4:	95 c0       	rjmp	.+298    	; 0x130 <__bad_interrupt>
       6:	00 00       	nop
       8:	93 c0       	rjmp	.+294    	; 0x130 <__bad_interrupt>
       a:	00 00       	nop
       c:	91 c0       	rjmp	.+290    	; 0x130 <__bad_interrupt>
       e:	00 00       	nop
      10:	1e c3       	rjmp	.+1596   	; 0x64e <__vector_4>
      12:	00 00       	nop
      14:	8d c0       	rjmp	.+282    	; 0x130 <__bad_interrupt>
      16:	00 00       	nop
      18:	8b c0       	rjmp	.+278    	; 0x130 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	89 c0       	rjmp	.+274    	; 0x130 <__bad_interrupt>
      1e:	00 00       	nop
      20:	87 c0       	rjmp	.+270    	; 0x130 <__bad_interrupt>
      22:	00 00       	nop
      24:	85 c0       	rjmp	.+266    	; 0x130 <__bad_interrupt>
      26:	00 00       	nop
      28:	83 c0       	rjmp	.+262    	; 0x130 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	81 c0       	rjmp	.+258    	; 0x130 <__bad_interrupt>
      2e:	00 00       	nop
      30:	7f c0       	rjmp	.+254    	; 0x130 <__bad_interrupt>
      32:	00 00       	nop
      34:	7d c0       	rjmp	.+250    	; 0x130 <__bad_interrupt>
      36:	00 00       	nop
      38:	7b c0       	rjmp	.+246    	; 0x130 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	79 c0       	rjmp	.+242    	; 0x130 <__bad_interrupt>
      3e:	00 00       	nop
      40:	77 c0       	rjmp	.+238    	; 0x130 <__bad_interrupt>
      42:	00 00       	nop
      44:	75 c0       	rjmp	.+234    	; 0x130 <__bad_interrupt>
      46:	00 00       	nop
      48:	73 c0       	rjmp	.+230    	; 0x130 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	71 c0       	rjmp	.+226    	; 0x130 <__bad_interrupt>
      4e:	00 00       	nop
      50:	6f c0       	rjmp	.+222    	; 0x130 <__bad_interrupt>
      52:	00 00       	nop
      54:	6d c0       	rjmp	.+218    	; 0x130 <__bad_interrupt>
      56:	00 00       	nop
      58:	6b c0       	rjmp	.+214    	; 0x130 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	ba c3       	rjmp	.+1908   	; 0x7d2 <__vector_23>
      5e:	00 00       	nop
      60:	67 c0       	rjmp	.+206    	; 0x130 <__bad_interrupt>
      62:	00 00       	nop
      64:	9b c4       	rjmp	.+2358   	; 0x99c <__vector_25>
      66:	00 00       	nop
      68:	63 c0       	rjmp	.+198    	; 0x130 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	61 c0       	rjmp	.+194    	; 0x130 <__bad_interrupt>
      6e:	00 00       	nop
      70:	5f c0       	rjmp	.+190    	; 0x130 <__bad_interrupt>
      72:	00 00       	nop
      74:	5d c0       	rjmp	.+186    	; 0x130 <__bad_interrupt>
      76:	00 00       	nop
      78:	5b c0       	rjmp	.+182    	; 0x130 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	59 c0       	rjmp	.+178    	; 0x130 <__bad_interrupt>
      7e:	00 00       	nop
      80:	57 c0       	rjmp	.+174    	; 0x130 <__bad_interrupt>
      82:	00 00       	nop
      84:	55 c0       	rjmp	.+170    	; 0x130 <__bad_interrupt>
      86:	00 00       	nop
      88:	53 c0       	rjmp	.+166    	; 0x130 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	51 c0       	rjmp	.+162    	; 0x130 <__bad_interrupt>
      8e:	00 00       	nop
      90:	4f c0       	rjmp	.+158    	; 0x130 <__bad_interrupt>
      92:	00 00       	nop
      94:	4d c0       	rjmp	.+154    	; 0x130 <__bad_interrupt>
      96:	00 00       	nop
      98:	4b c0       	rjmp	.+150    	; 0x130 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	49 c0       	rjmp	.+146    	; 0x130 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	47 c0       	rjmp	.+142    	; 0x130 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	45 c0       	rjmp	.+138    	; 0x130 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	43 c0       	rjmp	.+134    	; 0x130 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	41 c0       	rjmp	.+130    	; 0x130 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	3f c0       	rjmp	.+126    	; 0x130 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	3d c0       	rjmp	.+122    	; 0x130 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	3b c0       	rjmp	.+118    	; 0x130 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	39 c0       	rjmp	.+114    	; 0x130 <__bad_interrupt>
      be:	00 00       	nop
      c0:	37 c0       	rjmp	.+110    	; 0x130 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	35 c0       	rjmp	.+106    	; 0x130 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	42 c3       	rjmp	.+1668   	; 0x74e <__vector_50>
      ca:	00 00       	nop
      cc:	31 c0       	rjmp	.+98     	; 0x130 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	2f c0       	rjmp	.+94     	; 0x130 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	2d c0       	rjmp	.+90     	; 0x130 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	2b c0       	rjmp	.+86     	; 0x130 <__bad_interrupt>
      da:	00 00       	nop
      dc:	29 c0       	rjmp	.+82     	; 0x130 <__bad_interrupt>
      de:	00 00       	nop
      e0:	27 c0       	rjmp	.+78     	; 0x130 <__bad_interrupt>
	...

000000e4 <__trampolines_end>:
      e4:	63 64       	ori	r22, 0x43	; 67
      e6:	69 6e       	ori	r22, 0xE9	; 233
      e8:	6f 70       	andi	r22, 0x0F	; 15
      ea:	73 75       	andi	r23, 0x53	; 83
      ec:	78 58       	subi	r23, 0x88	; 136
      ee:	5b 00       	.word	0x005b	; ????

000000f0 <__ctors_end>:
      f0:	11 24       	eor	r1, r1
      f2:	1f be       	out	0x3f, r1	; 63
      f4:	cf ef       	ldi	r28, 0xFF	; 255
      f6:	d1 e2       	ldi	r29, 0x21	; 33
      f8:	de bf       	out	0x3e, r29	; 62
      fa:	cd bf       	out	0x3d, r28	; 61
      fc:	00 e0       	ldi	r16, 0x00	; 0
      fe:	0c bf       	out	0x3c, r16	; 60

00000100 <__do_copy_data>:
     100:	12 e0       	ldi	r17, 0x02	; 2
     102:	a0 e0       	ldi	r26, 0x00	; 0
     104:	b2 e0       	ldi	r27, 0x02	; 2
     106:	ee eb       	ldi	r30, 0xBE	; 190
     108:	fa e1       	ldi	r31, 0x1A	; 26
     10a:	00 e0       	ldi	r16, 0x00	; 0
     10c:	0b bf       	out	0x3b, r16	; 59
     10e:	02 c0       	rjmp	.+4      	; 0x114 <__do_copy_data+0x14>
     110:	07 90       	elpm	r0, Z+
     112:	0d 92       	st	X+, r0
     114:	ac 32       	cpi	r26, 0x2C	; 44
     116:	b1 07       	cpc	r27, r17
     118:	d9 f7       	brne	.-10     	; 0x110 <__do_copy_data+0x10>

0000011a <__do_clear_bss>:
     11a:	22 e0       	ldi	r18, 0x02	; 2
     11c:	ac e2       	ldi	r26, 0x2C	; 44
     11e:	b2 e0       	ldi	r27, 0x02	; 2
     120:	01 c0       	rjmp	.+2      	; 0x124 <.do_clear_bss_start>

00000122 <.do_clear_bss_loop>:
     122:	1d 92       	st	X+, r1

00000124 <.do_clear_bss_start>:
     124:	a9 36       	cpi	r26, 0x69	; 105
     126:	b2 07       	cpc	r27, r18
     128:	e1 f7       	brne	.-8      	; 0x122 <.do_clear_bss_loop>
     12a:	53 d2       	rcall	.+1190   	; 0x5d2 <main>
     12c:	0c 94 5d 0d 	jmp	0x1aba	; 0x1aba <_exit>

00000130 <__bad_interrupt>:
     130:	67 cf       	rjmp	.-306    	; 0x0 <__vectors>

00000132 <TransmitUART0>:
	int tmpInt1 = tmpVal;
	double tmpFrac = tmpVal - tmpInt1;
	int tmpInt2 = trunc(tmpFrac * 1000);
	sprintf (buffer, "c = %s%d.%03d", tmpSign, tmpInt1, tmpInt2);
	TransmitString(buffer);
}
     132:	e0 ec       	ldi	r30, 0xC0	; 192
     134:	f0 e0       	ldi	r31, 0x00	; 0
     136:	90 81       	ld	r25, Z
     138:	95 ff       	sbrs	r25, 5
     13a:	fd cf       	rjmp	.-6      	; 0x136 <TransmitUART0+0x4>
     13c:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
     140:	08 95       	ret

00000142 <returnNewLine>:
     142:	8a e0       	ldi	r24, 0x0A	; 10
     144:	f6 cf       	rjmp	.-20     	; 0x132 <TransmitUART0>
     146:	08 95       	ret

00000148 <TransmitString>:
     148:	cf 93       	push	r28
     14a:	df 93       	push	r29
     14c:	ec 01       	movw	r28, r24
     14e:	88 81       	ld	r24, Y
     150:	88 23       	and	r24, r24
     152:	29 f0       	breq	.+10     	; 0x15e <TransmitString+0x16>
     154:	21 96       	adiw	r28, 0x01	; 1
     156:	ed df       	rcall	.-38     	; 0x132 <TransmitUART0>
     158:	89 91       	ld	r24, Y+
     15a:	81 11       	cpse	r24, r1
     15c:	fc cf       	rjmp	.-8      	; 0x156 <TransmitString+0xe>
     15e:	f1 df       	rcall	.-30     	; 0x142 <returnNewLine>
     160:	df 91       	pop	r29
     162:	cf 91       	pop	r28
     164:	08 95       	ret

00000166 <send_int_Uart>:
     166:	0f 93       	push	r16
     168:	1f 93       	push	r17
     16a:	cf 93       	push	r28
     16c:	df 93       	push	r29
     16e:	cd b7       	in	r28, 0x3d	; 61
     170:	de b7       	in	r29, 0x3e	; 62
     172:	28 97       	sbiw	r28, 0x08	; 8
     174:	0f b6       	in	r0, 0x3f	; 63
     176:	f8 94       	cli
     178:	de bf       	out	0x3e, r29	; 62
     17a:	0f be       	out	0x3f, r0	; 63
     17c:	cd bf       	out	0x3d, r28	; 61
     17e:	9f 93       	push	r25
     180:	8f 93       	push	r24
     182:	8e e0       	ldi	r24, 0x0E	; 14
     184:	92 e0       	ldi	r25, 0x02	; 2
     186:	9f 93       	push	r25
     188:	8f 93       	push	r24
     18a:	8e 01       	movw	r16, r28
     18c:	0f 5f       	subi	r16, 0xFF	; 255
     18e:	1f 4f       	sbci	r17, 0xFF	; 255
     190:	1f 93       	push	r17
     192:	0f 93       	push	r16
     194:	60 d6       	rcall	.+3264   	; 0xe56 <sprintf>
     196:	c8 01       	movw	r24, r16
     198:	d7 df       	rcall	.-82     	; 0x148 <TransmitString>
     19a:	0f 90       	pop	r0
     19c:	0f 90       	pop	r0
     19e:	0f 90       	pop	r0
     1a0:	0f 90       	pop	r0
     1a2:	0f 90       	pop	r0
     1a4:	0f 90       	pop	r0
     1a6:	28 96       	adiw	r28, 0x08	; 8
     1a8:	0f b6       	in	r0, 0x3f	; 63
     1aa:	f8 94       	cli
     1ac:	de bf       	out	0x3e, r29	; 62
     1ae:	0f be       	out	0x3f, r0	; 63
     1b0:	cd bf       	out	0x3d, r28	; 61
     1b2:	df 91       	pop	r29
     1b4:	cf 91       	pop	r28
     1b6:	1f 91       	pop	r17
     1b8:	0f 91       	pop	r16
     1ba:	08 95       	ret

000001bc <InitializeUART0>:


void InitializeUART0(unsigned long Baud, char AsyncDoubleSpeed, char DataSizeInBits, char ParityEVEorODD, char StopBits)
{
     1bc:	8f 92       	push	r8
     1be:	9f 92       	push	r9
     1c0:	af 92       	push	r10
     1c2:	bf 92       	push	r11
     1c4:	ef 92       	push	r14
     1c6:	cf 93       	push	r28
     1c8:	df 93       	push	r29
     1ca:	4b 01       	movw	r8, r22
     1cc:	5c 01       	movw	r10, r24
     1ce:	d4 2f       	mov	r29, r20
     1d0:	c2 2f       	mov	r28, r18
	uint16_t UBBRValue = lrint( F_CPU / 16L / Baud ) - 1;
     1d2:	60 e4       	ldi	r22, 0x40	; 64
     1d4:	72 e4       	ldi	r23, 0x42	; 66
     1d6:	8f e0       	ldi	r24, 0x0F	; 15
     1d8:	90 e0       	ldi	r25, 0x00	; 0
     1da:	a5 01       	movw	r20, r10
     1dc:	94 01       	movw	r18, r8
     1de:	00 d6       	rcall	.+3072   	; 0xde0 <__udivmodsi4>
     1e0:	ca 01       	movw	r24, r20
     1e2:	b9 01       	movw	r22, r18
     1e4:	aa d4       	rcall	.+2388   	; 0xb3a <__floatunsisf>
     1e6:	5f d5       	rcall	.+2750   	; 0xca6 <lrint>
     1e8:	61 50       	subi	r22, 0x01	; 1
     1ea:	71 09       	sbc	r23, r1
	
	if (AsyncDoubleSpeed == 1) UCSR0A = (1 << U2X0); // setting the U2X bit to 1 for double speed async
     1ec:	d1 30       	cpi	r29, 0x01	; 1
     1ee:	19 f4       	brne	.+6      	; 0x1f6 <InitializeUART0+0x3a>
     1f0:	82 e0       	ldi	r24, 0x02	; 2
     1f2:	80 93 c0 00 	sts	0x00C0, r24	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7000c0>
	
	//Put the upper part of the baud number here (bits 8 to 11)
	//UBRR0H = (unsigned char) (UBBRValue >> 8);
	UBRR0H=0;
     1f6:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
	UBRR0L = UBBRValue;
     1fa:	60 93 c4 00 	sts	0x00C4, r22	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
	//Enable the receiver and transmitter
	UCSR0B = ( 1 << RXCIE0 ) |(1 << RXEN0) | (1 << TXEN0);
     1fe:	88 e9       	ldi	r24, 0x98	; 152
     200:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7000c1>
	
	//set 2 stop bits
	if (StopBits == 2) UCSR0C = (1 << USBS0);
     204:	82 e0       	ldi	r24, 0x02	; 2
     206:	e8 12       	cpse	r14, r24
     208:	03 c0       	rjmp	.+6      	; 0x210 <InitializeUART0+0x54>
     20a:	88 e0       	ldi	r24, 0x08	; 8
     20c:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7000c2>
	
	//if (ParityEVEorODD == EVEN) UCSR0C |= (1 << UPM01);
	//if (ParityEVEorODD == ODD) UCSR0C |= (3 << UPM01);
	
	if (DataSizeInBits == 6) UCSR0C |= (1 << UCSZ00); // 6 bit data length
     210:	c6 30       	cpi	r28, 0x06	; 6
     212:	31 f4       	brne	.+12     	; 0x220 <InitializeUART0+0x64>
     214:	e2 ec       	ldi	r30, 0xC2	; 194
     216:	f0 e0       	ldi	r31, 0x00	; 0
     218:	80 81       	ld	r24, Z
     21a:	82 60       	ori	r24, 0x02	; 2
     21c:	80 83       	st	Z, r24
     21e:	0f c0       	rjmp	.+30     	; 0x23e <InitializeUART0+0x82>
	if (DataSizeInBits == 7) UCSR0C |= (2 << UCSZ00); // 7 bit data length
     220:	c7 30       	cpi	r28, 0x07	; 7
     222:	31 f4       	brne	.+12     	; 0x230 <InitializeUART0+0x74>
     224:	e2 ec       	ldi	r30, 0xC2	; 194
     226:	f0 e0       	ldi	r31, 0x00	; 0
     228:	80 81       	ld	r24, Z
     22a:	84 60       	ori	r24, 0x04	; 4
     22c:	80 83       	st	Z, r24
     22e:	07 c0       	rjmp	.+14     	; 0x23e <InitializeUART0+0x82>
	//if (DataSizeInBits == 8) UCSR0C |= (1 << UCSZ00)|(1 << UCSZ01); // 8 bit data length
	if (DataSizeInBits == 9) UCSR0C |= (7 << UCSZ00); // 9 bit data length
     230:	c9 30       	cpi	r28, 0x09	; 9
     232:	29 f4       	brne	.+10     	; 0x23e <InitializeUART0+0x82>
     234:	e2 ec       	ldi	r30, 0xC2	; 194
     236:	f0 e0       	ldi	r31, 0x00	; 0
     238:	80 81       	ld	r24, Z
     23a:	8e 60       	ori	r24, 0x0E	; 14
     23c:	80 83       	st	Z, r24
}
     23e:	df 91       	pop	r29
     240:	cf 91       	pop	r28
     242:	ef 90       	pop	r14
     244:	bf 90       	pop	r11
     246:	af 90       	pop	r10
     248:	9f 90       	pop	r9
     24a:	8f 90       	pop	r8
     24c:	08 95       	ret

0000024e <setPwm>:
#define PWMInit

#define F_CPU 16000000UL
#include <math.h>

void setPwm(double Pwm){
     24e:	cf 92       	push	r12
     250:	df 92       	push	r13
     252:	ef 92       	push	r14
     254:	ff 92       	push	r15
     256:	6b 01       	movw	r12, r22
     258:	7c 01       	movw	r14, r24
	if (Pwm <= 100)
     25a:	20 e0       	ldi	r18, 0x00	; 0
     25c:	30 e0       	ldi	r19, 0x00	; 0
     25e:	48 ec       	ldi	r20, 0xC8	; 200
     260:	52 e4       	ldi	r21, 0x42	; 66
     262:	3b d4       	rcall	.+2166   	; 0xada <__cmpsf2>
     264:	18 16       	cp	r1, r24
     266:	ac f0       	brlt	.+42     	; 0x292 <setPwm+0x44>
	{
		OCR4A = (uint16_t) ICR4 * 0.01 * Pwm;
     268:	60 91 a6 00 	lds	r22, 0x00A6	; 0x8000a6 <__TEXT_REGION_LENGTH__+0x7000a6>
     26c:	70 91 a7 00 	lds	r23, 0x00A7	; 0x8000a7 <__TEXT_REGION_LENGTH__+0x7000a7>
     270:	80 e0       	ldi	r24, 0x00	; 0
     272:	90 e0       	ldi	r25, 0x00	; 0
     274:	62 d4       	rcall	.+2244   	; 0xb3a <__floatunsisf>
     276:	2a e0       	ldi	r18, 0x0A	; 10
     278:	37 ed       	ldi	r19, 0xD7	; 215
     27a:	43 e2       	ldi	r20, 0x23	; 35
     27c:	5c e3       	ldi	r21, 0x3C	; 60
     27e:	4d d5       	rcall	.+2714   	; 0xd1a <__mulsf3>
     280:	a7 01       	movw	r20, r14
     282:	96 01       	movw	r18, r12
     284:	4a d5       	rcall	.+2708   	; 0xd1a <__mulsf3>
     286:	2d d4       	rcall	.+2138   	; 0xae2 <__fixunssfsi>
     288:	70 93 a9 00 	sts	0x00A9, r23	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7000a9>
     28c:	60 93 a8 00 	sts	0x00A8, r22	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7000a8>
	} else if (Pwm <= 0) {
     290:	1a c0       	rjmp	.+52     	; 0x2c6 <setPwm+0x78>
     292:	20 e0       	ldi	r18, 0x00	; 0
     294:	30 e0       	ldi	r19, 0x00	; 0
     296:	a9 01       	movw	r20, r18
     298:	c7 01       	movw	r24, r14
     29a:	b6 01       	movw	r22, r12
     29c:	1e d4       	rcall	.+2108   	; 0xada <__cmpsf2>
     29e:	18 16       	cp	r1, r24
		OCR4A = 0;
     2a0:	2c f0       	brlt	.+10     	; 0x2ac <setPwm+0x5e>
     2a2:	10 92 a9 00 	sts	0x00A9, r1	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7000a9>
     2a6:	10 92 a8 00 	sts	0x00A8, r1	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7000a8>
	} else if (Pwm > 100) {
     2aa:	0d c0       	rjmp	.+26     	; 0x2c6 <setPwm+0x78>
     2ac:	20 e0       	ldi	r18, 0x00	; 0
     2ae:	30 e0       	ldi	r19, 0x00	; 0
     2b0:	48 ec       	ldi	r20, 0xC8	; 200
     2b2:	52 e4       	ldi	r21, 0x42	; 66
     2b4:	c7 01       	movw	r24, r14
     2b6:	b6 01       	movw	r22, r12
     2b8:	f2 d4       	rcall	.+2532   	; 0xc9e <__gesf2>
		OCR4A = 0;
     2ba:	18 16       	cp	r1, r24
     2bc:	24 f4       	brge	.+8      	; 0x2c6 <setPwm+0x78>
     2be:	10 92 a9 00 	sts	0x00A9, r1	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7000a9>
	}
}
     2c2:	10 92 a8 00 	sts	0x00A8, r1	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7000a8>
     2c6:	ff 90       	pop	r15
     2c8:	ef 90       	pop	r14
     2ca:	df 90       	pop	r13
     2cc:	cf 90       	pop	r12
     2ce:	08 95       	ret

000002d0 <InitializePWM_4C>:

void InitializePWM_4C( uint32_t Frequency, double Pwm )
{
     2d0:	8f 92       	push	r8
     2d2:	9f 92       	push	r9
     2d4:	af 92       	push	r10
     2d6:	bf 92       	push	r11
     2d8:	cf 92       	push	r12
     2da:	df 92       	push	r13
     2dc:	ef 92       	push	r14
     2de:	ff 92       	push	r15
     2e0:	0f 93       	push	r16
     2e2:	1f 93       	push	r17
     2e4:	4b 01       	movw	r8, r22
     2e6:	5c 01       	movw	r10, r24
     2e8:	69 01       	movw	r12, r18
     2ea:	7a 01       	movw	r14, r20
	TCCR4B = 0x00;
     2ec:	e1 ea       	ldi	r30, 0xA1	; 161
     2ee:	f0 e0       	ldi	r31, 0x00	; 0
     2f0:	10 82       	st	Z, r1
	DDRH |= ( 1 << PH3 );
     2f2:	a1 e0       	ldi	r26, 0x01	; 1
     2f4:	b1 e0       	ldi	r27, 0x01	; 1
     2f6:	8c 91       	ld	r24, X
     2f8:	88 60       	ori	r24, 0x08	; 8
     2fa:	8c 93       	st	X, r24
	TCCR4A |= ( 1 << WGM41) | ( 0 << WGM40 ) | ( 1 << COM4A1 ) | ( 0 << COM4A0 );
     2fc:	a0 ea       	ldi	r26, 0xA0	; 160
     2fe:	b0 e0       	ldi	r27, 0x00	; 0
     300:	8c 91       	ld	r24, X
     302:	82 68       	ori	r24, 0x82	; 130
     304:	8c 93       	st	X, r24
	TCCR4B |= ( 1 << WGM43) | ( 1 << WGM42 ) ;
     306:	80 81       	ld	r24, Z
     308:	88 61       	ori	r24, 0x18	; 24
     30a:	80 83       	st	Z, r24
	uint32_t F_factor = F_CPU / Frequency;
     30c:	60 e0       	ldi	r22, 0x00	; 0
     30e:	74 e2       	ldi	r23, 0x24	; 36
     310:	84 ef       	ldi	r24, 0xF4	; 244
     312:	90 e0       	ldi	r25, 0x00	; 0
     314:	a5 01       	movw	r20, r10
     316:	94 01       	movw	r18, r8
     318:	63 d5       	rcall	.+2758   	; 0xde0 <__udivmodsi4>
     31a:	89 01       	movw	r16, r18
     31c:	9a 01       	movw	r18, r20

	int shifter = 1;
	uint32_t multiplier = F_factor;
	while ( multiplier > 65535 ){
     31e:	01 15       	cp	r16, r1
     320:	11 05       	cpc	r17, r1
     322:	61 e0       	ldi	r22, 0x01	; 1
     324:	26 07       	cpc	r18, r22
     326:	31 05       	cpc	r19, r1
     328:	38 f1       	brcs	.+78     	; 0x378 <InitializePWM_4C+0xa8>
     32a:	d9 01       	movw	r26, r18
     32c:	c8 01       	movw	r24, r16
     32e:	41 e0       	ldi	r20, 0x01	; 1
     330:	50 e0       	ldi	r21, 0x00	; 0
		multiplier /= 2;
     332:	b6 95       	lsr	r27
     334:	a7 95       	ror	r26
     336:	97 95       	ror	r25
     338:	87 95       	ror	r24
		shifter++;
     33a:	4f 5f       	subi	r20, 0xFF	; 255
     33c:	5f 4f       	sbci	r21, 0xFF	; 255
	TCCR4B |= ( 1 << WGM43) | ( 1 << WGM42 ) ;
	uint32_t F_factor = F_CPU / Frequency;

	int shifter = 1;
	uint32_t multiplier = F_factor;
	while ( multiplier > 65535 ){
     33e:	00 97       	sbiw	r24, 0x00	; 0
     340:	61 e0       	ldi	r22, 0x01	; 1
     342:	a6 07       	cpc	r26, r22
     344:	b1 05       	cpc	r27, r1
     346:	a8 f7       	brcc	.-22     	; 0x332 <InitializePWM_4C+0x62>
		shifter++;
	}
	if (shifter > 5) {
		shifter = 5;
	}
	switch ( shifter )
     348:	46 30       	cpi	r20, 0x06	; 6
     34a:	51 05       	cpc	r21, r1
     34c:	14 f0       	brlt	.+4      	; 0x352 <InitializePWM_4C+0x82>
     34e:	45 e0       	ldi	r20, 0x05	; 5
     350:	50 e0       	ldi	r21, 0x00	; 0
     352:	43 30       	cpi	r20, 0x03	; 3
     354:	51 05       	cpc	r21, r1
     356:	81 f1       	breq	.+96     	; 0x3b8 <InitializePWM_4C+0xe8>
     358:	3c f4       	brge	.+14     	; 0x368 <InitializePWM_4C+0x98>
     35a:	41 30       	cpi	r20, 0x01	; 1
     35c:	51 05       	cpc	r21, r1
     35e:	61 f0       	breq	.+24     	; 0x378 <InitializePWM_4C+0xa8>
     360:	42 30       	cpi	r20, 0x02	; 2
     362:	51 05       	cpc	r21, r1
     364:	a9 f0       	breq	.+42     	; 0x390 <InitializePWM_4C+0xc0>
     366:	60 c0       	rjmp	.+192    	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
     368:	44 30       	cpi	r20, 0x04	; 4
     36a:	51 05       	cpc	r21, r1
     36c:	c9 f1       	breq	.+114    	; 0x3e0 <InitializePWM_4C+0x110>
     36e:	45 30       	cpi	r20, 0x05	; 5
     370:	51 05       	cpc	r21, r1
     372:	09 f4       	brne	.+2      	; 0x376 <InitializePWM_4C+0xa6>
     374:	45 c0       	rjmp	.+138    	; 0x400 <__LOCK_REGION_LENGTH__>
     376:	58 c0       	rjmp	.+176    	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
		{
		case 1:
			TCCR4B |= ( 1 << CS40 ); 
     378:	e1 ea       	ldi	r30, 0xA1	; 161
     37a:	f0 e0       	ldi	r31, 0x00	; 0
     37c:	80 81       	ld	r24, Z
     37e:	81 60       	ori	r24, 0x01	; 1
     380:	80 83       	st	Z, r24
			ICR4 = (uint16_t) (F_factor  - 1);
     382:	01 50       	subi	r16, 0x01	; 1
     384:	11 09       	sbc	r17, r1
     386:	10 93 a7 00 	sts	0x00A7, r17	; 0x8000a7 <__TEXT_REGION_LENGTH__+0x7000a7>
     38a:	00 93 a6 00 	sts	0x00A6, r16	; 0x8000a6 <__TEXT_REGION_LENGTH__+0x7000a6>
		break;
     38e:	4c c0       	rjmp	.+152    	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
		case 2:
			TCCR4B |= ( 1 << CS41 ); //decrease in 8
     390:	e1 ea       	ldi	r30, 0xA1	; 161
     392:	f0 e0       	ldi	r31, 0x00	; 0
     394:	80 81       	ld	r24, Z
     396:	82 60       	ori	r24, 0x02	; 2
     398:	80 83       	st	Z, r24
			ICR4 = (uint16_t) (F_factor / 8  - 1);
     39a:	68 94       	set
     39c:	12 f8       	bld	r1, 2
     39e:	36 95       	lsr	r19
     3a0:	27 95       	ror	r18
     3a2:	17 95       	ror	r17
     3a4:	07 95       	ror	r16
     3a6:	16 94       	lsr	r1
     3a8:	d1 f7       	brne	.-12     	; 0x39e <InitializePWM_4C+0xce>
     3aa:	01 50       	subi	r16, 0x01	; 1
     3ac:	11 09       	sbc	r17, r1
     3ae:	10 93 a7 00 	sts	0x00A7, r17	; 0x8000a7 <__TEXT_REGION_LENGTH__+0x7000a7>
     3b2:	00 93 a6 00 	sts	0x00A6, r16	; 0x8000a6 <__TEXT_REGION_LENGTH__+0x7000a6>
		break;
     3b6:	38 c0       	rjmp	.+112    	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
		case 3:
			TCCR4B |= ( 1 << CS41 ) | ( 1 << CS40 ); //decrease in 64
     3b8:	e1 ea       	ldi	r30, 0xA1	; 161
     3ba:	f0 e0       	ldi	r31, 0x00	; 0
     3bc:	80 81       	ld	r24, Z
     3be:	83 60       	ori	r24, 0x03	; 3
     3c0:	80 83       	st	Z, r24
			ICR4 = (uint16_t) (F_factor / 64 - 1);
     3c2:	68 94       	set
     3c4:	15 f8       	bld	r1, 5
     3c6:	36 95       	lsr	r19
     3c8:	27 95       	ror	r18
     3ca:	17 95       	ror	r17
     3cc:	07 95       	ror	r16
     3ce:	16 94       	lsr	r1
     3d0:	d1 f7       	brne	.-12     	; 0x3c6 <InitializePWM_4C+0xf6>
     3d2:	01 50       	subi	r16, 0x01	; 1
     3d4:	11 09       	sbc	r17, r1
     3d6:	10 93 a7 00 	sts	0x00A7, r17	; 0x8000a7 <__TEXT_REGION_LENGTH__+0x7000a7>
     3da:	00 93 a6 00 	sts	0x00A6, r16	; 0x8000a6 <__TEXT_REGION_LENGTH__+0x7000a6>
		break;
     3de:	24 c0       	rjmp	.+72     	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
		case 4:
			TCCR4B |= ( 1 << CS42 ); //decrease in 256
     3e0:	e1 ea       	ldi	r30, 0xA1	; 161
     3e2:	f0 e0       	ldi	r31, 0x00	; 0
     3e4:	80 81       	ld	r24, Z
     3e6:	84 60       	ori	r24, 0x04	; 4
     3e8:	80 83       	st	Z, r24
			ICR4 = (uint16_t) (F_factor / 256  - 1);
     3ea:	01 2f       	mov	r16, r17
     3ec:	12 2f       	mov	r17, r18
     3ee:	23 2f       	mov	r18, r19
     3f0:	33 27       	eor	r19, r19
     3f2:	01 50       	subi	r16, 0x01	; 1
     3f4:	11 09       	sbc	r17, r1
     3f6:	10 93 a7 00 	sts	0x00A7, r17	; 0x8000a7 <__TEXT_REGION_LENGTH__+0x7000a7>
     3fa:	00 93 a6 00 	sts	0x00A6, r16	; 0x8000a6 <__TEXT_REGION_LENGTH__+0x7000a6>
		break;
     3fe:	14 c0       	rjmp	.+40     	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
		case 5:
			TCCR4B |= ( 1 << CS42 ) | ( 1 << CS40 ); //decrease in 1024
     400:	e1 ea       	ldi	r30, 0xA1	; 161
     402:	f0 e0       	ldi	r31, 0x00	; 0
     404:	80 81       	ld	r24, Z
     406:	85 60       	ori	r24, 0x05	; 5
     408:	80 83       	st	Z, r24
			ICR4 = (uint16_t) (F_factor / 1024 + 1);
     40a:	0f 2e       	mov	r0, r31
     40c:	fa e0       	ldi	r31, 0x0A	; 10
     40e:	36 95       	lsr	r19
     410:	27 95       	ror	r18
     412:	17 95       	ror	r17
     414:	07 95       	ror	r16
     416:	fa 95       	dec	r31
     418:	d1 f7       	brne	.-12     	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
     41a:	f0 2d       	mov	r31, r0
     41c:	0f 5f       	subi	r16, 0xFF	; 255
     41e:	1f 4f       	sbci	r17, 0xFF	; 255
     420:	10 93 a7 00 	sts	0x00A7, r17	; 0x8000a7 <__TEXT_REGION_LENGTH__+0x7000a7>
     424:	00 93 a6 00 	sts	0x00A6, r16	; 0x8000a6 <__TEXT_REGION_LENGTH__+0x7000a6>
		break;
	}
	
	if ( ICR4 == 0 )
     428:	80 91 a6 00 	lds	r24, 0x00A6	; 0x8000a6 <__TEXT_REGION_LENGTH__+0x7000a6>
     42c:	90 91 a7 00 	lds	r25, 0x00A7	; 0x8000a7 <__TEXT_REGION_LENGTH__+0x7000a7>
     430:	89 2b       	or	r24, r25
     432:	29 f4       	brne	.+10     	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
	{
		OCR4A = 0;
     434:	10 92 a9 00 	sts	0x00A9, r1	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7000a9>
     438:	10 92 a8 00 	sts	0x00A8, r1	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7000a8>
     43c:	03 c0       	rjmp	.+6      	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
     43e:	c7 01       	movw	r24, r14
	 } else {
		setPwm(Pwm); // 100 - percentage
     440:	b6 01       	movw	r22, r12
     442:	05 df       	rcall	.-502    	; 0x24e <setPwm>
	 }
}
     444:	1f 91       	pop	r17
     446:	0f 91       	pop	r16
     448:	ff 90       	pop	r15
     44a:	ef 90       	pop	r14
     44c:	df 90       	pop	r13
     44e:	cf 90       	pop	r12
     450:	bf 90       	pop	r11
     452:	af 90       	pop	r10
     454:	9f 90       	pop	r9
     456:	8f 90       	pop	r8
     458:	08 95       	ret

0000045a <decodeCommands>:
volatile struct RPM RPM_1 = {.currentRPM = 0, .setRPM = 1000, .counter = 0, .interruptionCounter = 10};

char sendinComands = 0;

void decodeCommands(unsigned char commands[])
{
     45a:	2f 92       	push	r2
     45c:	3f 92       	push	r3
     45e:	4f 92       	push	r4
     460:	5f 92       	push	r5
     462:	6f 92       	push	r6
     464:	7f 92       	push	r7
     466:	8f 92       	push	r8
     468:	9f 92       	push	r9
     46a:	af 92       	push	r10
     46c:	bf 92       	push	r11
     46e:	cf 92       	push	r12
     470:	df 92       	push	r13
     472:	ef 92       	push	r14
     474:	ff 92       	push	r15
     476:	0f 93       	push	r16
     478:	1f 93       	push	r17
     47a:	cf 93       	push	r28
     47c:	df 93       	push	r29
     47e:	cd b7       	in	r28, 0x3d	; 61
     480:	de b7       	in	r29, 0x3e	; 62
     482:	2c 97       	sbiw	r28, 0x0c	; 12
     484:	0f b6       	in	r0, 0x3f	; 63
     486:	f8 94       	cli
     488:	de bf       	out	0x3e, r29	; 62
     48a:	0f be       	out	0x3f, r0	; 63
     48c:	cd bf       	out	0x3d, r28	; 61
     48e:	fc 01       	movw	r30, r24
	unsigned int i = 0;
	unsigned int j = 0;
	unsigned char tempBuf[10];
	unsigned int extractedValue;
	while(commands[i] != '\n') {
     490:	90 81       	ld	r25, Z
     492:	9a 30       	cpi	r25, 0x0A	; 10
     494:	09 f4       	brne	.+2      	; 0x498 <decodeCommands+0x3e>
     496:	84 c0       	rjmp	.+264    	; 0x5a0 <decodeCommands+0x146>
     498:	7f 01       	movw	r14, r30
     49a:	a1 2c       	mov	r10, r1
     49c:	b1 2c       	mov	r11, r1
     49e:	00 e0       	ldi	r16, 0x00	; 0
     4a0:	10 e0       	ldi	r17, 0x00	; 0
			while(commands[i] != '|'){
				tempBuf[j] = commands[i];
				i++;
				j++;
			}
			sscanf(tempBuf, "%d", &extractedValue);
     4a2:	3e 01       	movw	r6, r28
     4a4:	2b e0       	ldi	r18, 0x0B	; 11
     4a6:	62 0e       	add	r6, r18
     4a8:	71 1c       	adc	r7, r1
     4aa:	0f 2e       	mov	r0, r31
     4ac:	f1 e2       	ldi	r31, 0x21	; 33
     4ae:	4f 2e       	mov	r4, r31
     4b0:	f2 e0       	ldi	r31, 0x02	; 2
     4b2:	5f 2e       	mov	r5, r31
     4b4:	f0 2d       	mov	r31, r0
     4b6:	fe 01       	movw	r30, r28
     4b8:	31 96       	adiw	r30, 0x01	; 1
     4ba:	6f 01       	movw	r12, r30
			send_int_Uart(extractedValue);
			RPM_1.setRPM = extractedValue;
     4bc:	0f 2e       	mov	r0, r31
     4be:	f0 e0       	ldi	r31, 0x00	; 0
     4c0:	2f 2e       	mov	r2, r31
     4c2:	f2 e0       	ldi	r31, 0x02	; 2
     4c4:	3f 2e       	mov	r3, r31
     4c6:	f0 2d       	mov	r31, r0
	unsigned int i = 0;
	unsigned int j = 0;
	unsigned char tempBuf[10];
	unsigned int extractedValue;
	while(commands[i] != '\n') {
		if(commands[i] == 'R' && commands[i + 1] == '8') {
     4c8:	92 35       	cpi	r25, 0x52	; 82
     4ca:	c1 f5       	brne	.+112    	; 0x53c <decodeCommands+0xe2>
     4cc:	f7 01       	movw	r30, r14
     4ce:	e0 0f       	add	r30, r16
     4d0:	f1 1f       	adc	r31, r17
     4d2:	81 81       	ldd	r24, Z+1	; 0x01
     4d4:	88 33       	cpi	r24, 0x38	; 56
     4d6:	91 f5       	brne	.+100    	; 0x53c <decodeCommands+0xe2>
			i = i + 2;
     4d8:	98 01       	movw	r18, r16
     4da:	2e 5f       	subi	r18, 0xFE	; 254
     4dc:	3f 4f       	sbci	r19, 0xFF	; 255
			while(commands[i] != '|'){
     4de:	f7 01       	movw	r30, r14
     4e0:	e2 0f       	add	r30, r18
     4e2:	f3 1f       	adc	r31, r19
     4e4:	80 81       	ld	r24, Z
     4e6:	8c 37       	cpi	r24, 0x7C	; 124
     4e8:	99 f0       	breq	.+38     	; 0x510 <decodeCommands+0xb6>
     4ea:	f6 01       	movw	r30, r12
     4ec:	ea 0d       	add	r30, r10
     4ee:	fb 1d       	adc	r31, r11
     4f0:	0d 5f       	subi	r16, 0xFD	; 253
     4f2:	1f 4f       	sbci	r17, 0xFF	; 255
     4f4:	d7 01       	movw	r26, r14
     4f6:	a0 0f       	add	r26, r16
     4f8:	b1 1f       	adc	r27, r17
     4fa:	89 01       	movw	r16, r18
				tempBuf[j] = commands[i];
     4fc:	81 93       	st	Z+, r24
				i++;
     4fe:	0f 5f       	subi	r16, 0xFF	; 255
     500:	1f 4f       	sbci	r17, 0xFF	; 255
     502:	5f 01       	movw	r10, r30
     504:	ac 18       	sub	r10, r12
     506:	bd 08       	sbc	r11, r13
	unsigned char tempBuf[10];
	unsigned int extractedValue;
	while(commands[i] != '\n') {
		if(commands[i] == 'R' && commands[i + 1] == '8') {
			i = i + 2;
			while(commands[i] != '|'){
     508:	8d 91       	ld	r24, X+
     50a:	8c 37       	cpi	r24, 0x7C	; 124
     50c:	b9 f7       	brne	.-18     	; 0x4fc <decodeCommands+0xa2>
     50e:	01 c0       	rjmp	.+2      	; 0x512 <decodeCommands+0xb8>
	unsigned int j = 0;
	unsigned char tempBuf[10];
	unsigned int extractedValue;
	while(commands[i] != '\n') {
		if(commands[i] == 'R' && commands[i + 1] == '8') {
			i = i + 2;
     510:	89 01       	movw	r16, r18
			while(commands[i] != '|'){
				tempBuf[j] = commands[i];
				i++;
				j++;
			}
			sscanf(tempBuf, "%d", &extractedValue);
     512:	7f 92       	push	r7
     514:	6f 92       	push	r6
     516:	5f 92       	push	r5
     518:	4f 92       	push	r4
     51a:	df 92       	push	r13
     51c:	cf 92       	push	r12
     51e:	c9 d4       	rcall	.+2450   	; 0xeb2 <sscanf>
			send_int_Uart(extractedValue);
     520:	8b 85       	ldd	r24, Y+11	; 0x0b
     522:	9c 85       	ldd	r25, Y+12	; 0x0c
     524:	20 de       	rcall	.-960    	; 0x166 <send_int_Uart>
			RPM_1.setRPM = extractedValue;
     526:	8b 85       	ldd	r24, Y+11	; 0x0b
     528:	9c 85       	ldd	r25, Y+12	; 0x0c
     52a:	f1 01       	movw	r30, r2
     52c:	93 83       	std	Z+3, r25	; 0x03
     52e:	82 83       	std	Z+2, r24	; 0x02
     530:	0f 90       	pop	r0
     532:	0f 90       	pop	r0
     534:	0f 90       	pop	r0
     536:	0f 90       	pop	r0
     538:	0f 90       	pop	r0
     53a:	0f 90       	pop	r0
			//send_int_Uart();
			//TransmitString(commands);
			//extractValue(*commands++);
		}
		if(commands[i] == 'V' && commands[i + 1] == '0') {
     53c:	f7 01       	movw	r30, r14
     53e:	e0 0f       	add	r30, r16
     540:	f1 1f       	adc	r31, r17
     542:	80 81       	ld	r24, Z
     544:	86 35       	cpi	r24, 0x56	; 86
     546:	19 f5       	brne	.+70     	; 0x58e <decodeCommands+0x134>
     548:	f7 01       	movw	r30, r14
     54a:	e0 0f       	add	r30, r16
     54c:	f1 1f       	adc	r31, r17
     54e:	81 81       	ldd	r24, Z+1	; 0x01
     550:	80 33       	cpi	r24, 0x30	; 48
     552:	e9 f4       	brne	.+58     	; 0x58e <decodeCommands+0x134>
			i = i + 2;
     554:	0e 5f       	subi	r16, 0xFE	; 254
     556:	1f 4f       	sbci	r17, 0xFF	; 255
			if(commands[i] == 'Y')
     558:	47 01       	movw	r8, r14
     55a:	80 0e       	add	r8, r16
     55c:	91 1e       	adc	r9, r17
     55e:	f4 01       	movw	r30, r8
     560:	80 81       	ld	r24, Z
     562:	89 35       	cpi	r24, 0x59	; 89
			{
				TransmitString("On");
     564:	41 f4       	brne	.+16     	; 0x576 <decodeCommands+0x11c>
     566:	84 e2       	ldi	r24, 0x24	; 36
     568:	92 e0       	ldi	r25, 0x02	; 2
				PORTH |= (1 << PH4);
     56a:	ee dd       	rcall	.-1060   	; 0x148 <TransmitString>
     56c:	e2 e0       	ldi	r30, 0x02	; 2
     56e:	f1 e0       	ldi	r31, 0x01	; 1
     570:	80 81       	ld	r24, Z
     572:	80 61       	ori	r24, 0x10	; 16
			}
			if(commands[i] == 'N'){
     574:	80 83       	st	Z, r24
     576:	f4 01       	movw	r30, r8
     578:	80 81       	ld	r24, Z
				TransmitString("Off");
     57a:	8e 34       	cpi	r24, 0x4E	; 78
     57c:	41 f4       	brne	.+16     	; 0x58e <decodeCommands+0x134>
     57e:	87 e2       	ldi	r24, 0x27	; 39
     580:	92 e0       	ldi	r25, 0x02	; 2
				PORTH &= ~(1 << PH4);
     582:	e2 dd       	rcall	.-1084   	; 0x148 <TransmitString>
     584:	e2 e0       	ldi	r30, 0x02	; 2
     586:	f1 e0       	ldi	r31, 0x01	; 1
     588:	80 81       	ld	r24, Z
     58a:	8f 7e       	andi	r24, 0xEF	; 239
			}
		}
		
		i++;
     58c:	80 83       	st	Z, r24
     58e:	0f 5f       	subi	r16, 0xFF	; 255
{
	unsigned int i = 0;
	unsigned int j = 0;
	unsigned char tempBuf[10];
	unsigned int extractedValue;
	while(commands[i] != '\n') {
     590:	1f 4f       	sbci	r17, 0xFF	; 255
     592:	f7 01       	movw	r30, r14
     594:	e0 0f       	add	r30, r16
     596:	f1 1f       	adc	r31, r17
     598:	90 81       	ld	r25, Z
     59a:	9a 30       	cpi	r25, 0x0A	; 10
     59c:	09 f0       	breq	.+2      	; 0x5a0 <decodeCommands+0x146>
			}
		}
		
		i++;
	}
}
     59e:	94 cf       	rjmp	.-216    	; 0x4c8 <decodeCommands+0x6e>
     5a0:	2c 96       	adiw	r28, 0x0c	; 12
     5a2:	0f b6       	in	r0, 0x3f	; 63
     5a4:	f8 94       	cli
     5a6:	de bf       	out	0x3e, r29	; 62
     5a8:	0f be       	out	0x3f, r0	; 63
     5aa:	cd bf       	out	0x3d, r28	; 61
     5ac:	df 91       	pop	r29
     5ae:	cf 91       	pop	r28
     5b0:	1f 91       	pop	r17
     5b2:	0f 91       	pop	r16
     5b4:	ff 90       	pop	r15
     5b6:	ef 90       	pop	r14
     5b8:	df 90       	pop	r13
     5ba:	cf 90       	pop	r12
     5bc:	bf 90       	pop	r11
     5be:	af 90       	pop	r10
     5c0:	9f 90       	pop	r9
     5c2:	8f 90       	pop	r8
     5c4:	7f 90       	pop	r7
     5c6:	6f 90       	pop	r6
     5c8:	5f 90       	pop	r5
     5ca:	4f 90       	pop	r4
     5cc:	3f 90       	pop	r3
     5ce:	2f 90       	pop	r2
     5d0:	08 95       	ret

000005d2 <main>:

int main(void)
{
	DDRH |= (1 << DDH4);
     5d2:	e1 e0       	ldi	r30, 0x01	; 1
     5d4:	f1 e0       	ldi	r31, 0x01	; 1
     5d6:	80 81       	ld	r24, Z
     5d8:	80 61       	ori	r24, 0x10	; 16
     5da:	80 83       	st	Z, r24
	PORTH |=  (1 << PH4);
     5dc:	e2 e0       	ldi	r30, 0x02	; 2
     5de:	f1 e0       	ldi	r31, 0x01	; 1
     5e0:	80 81       	ld	r24, Z
     5e2:	80 61       	ori	r24, 0x10	; 16
     5e4:	80 83       	st	Z, r24
	
	//DDRD |= (0 << DDD4);
	PORTD |= (1 << PD3);
     5e6:	5b 9a       	sbi	0x0b, 3	; 11
	
  TIMSK5 |= (1 << TOIE5);
     5e8:	e3 e7       	ldi	r30, 0x73	; 115
     5ea:	f0 e0       	ldi	r31, 0x00	; 0
     5ec:	80 81       	ld	r24, Z
     5ee:	81 60       	ori	r24, 0x01	; 1
     5f0:	80 83       	st	Z, r24
	TCCR5B = (1 << CS50);
     5f2:	81 e0       	ldi	r24, 0x01	; 1
     5f4:	80 93 21 01 	sts	0x0121, r24	; 0x800121 <__TEXT_REGION_LENGTH__+0x700121>
  TCNT5 = 1535;
     5f8:	8f ef       	ldi	r24, 0xFF	; 255
     5fa:	95 e0       	ldi	r25, 0x05	; 5
     5fc:	90 93 25 01 	sts	0x0125, r25	; 0x800125 <__TEXT_REGION_LENGTH__+0x700125>
     600:	80 93 24 01 	sts	0x0124, r24	; 0x800124 <__TEXT_REGION_LENGTH__+0x700124>
	//
	TIMSK0 |= (1 << TOIE0);
     604:	ee e6       	ldi	r30, 0x6E	; 110
     606:	f0 e0       	ldi	r31, 0x00	; 0
     608:	80 81       	ld	r24, Z
     60a:	81 60       	ori	r24, 0x01	; 1
     60c:	80 83       	st	Z, r24
	TCCR0B = (1 << CS02) | (1 << CS00);
     60e:	85 e0       	ldi	r24, 0x05	; 5
     610:	85 bd       	out	0x25, r24	; 37
	TCNT0 = 130;
     612:	82 e8       	ldi	r24, 0x82	; 130
     614:	86 bd       	out	0x26, r24	; 38
	//
	EICRA |= (0 << ISC31) | (1 << ISC30);
     616:	e9 e6       	ldi	r30, 0x69	; 105
     618:	f0 e0       	ldi	r31, 0x00	; 0
     61a:	80 81       	ld	r24, Z
     61c:	80 64       	ori	r24, 0x40	; 64
     61e:	80 83       	st	Z, r24
	EIMSK |= (1 << INT3);
     620:	eb 9a       	sbi	0x1d, 3	; 29

	sei();
     622:	78 94       	sei
	InitializeUART0(250000, 0, 8, 0, 0);
     624:	e1 2c       	mov	r14, r1
     626:	00 e0       	ldi	r16, 0x00	; 0
     628:	28 e0       	ldi	r18, 0x08	; 8
     62a:	40 e0       	ldi	r20, 0x00	; 0
     62c:	60 e9       	ldi	r22, 0x90	; 144
     62e:	70 ed       	ldi	r23, 0xD0	; 208
     630:	83 e0       	ldi	r24, 0x03	; 3
     632:	90 e0       	ldi	r25, 0x00	; 0
     634:	c3 dd       	rcall	.-1146   	; 0x1bc <InitializeUART0>
	InitializePWM_4C(PWM4C.pwmFrequency, PWM4C.pwmValue);
     636:	e8 e0       	ldi	r30, 0x08	; 8
     638:	f2 e0       	ldi	r31, 0x02	; 2
     63a:	22 81       	ldd	r18, Z+2	; 0x02
     63c:	33 81       	ldd	r19, Z+3	; 0x03
     63e:	44 81       	ldd	r20, Z+4	; 0x04
     640:	55 81       	ldd	r21, Z+5	; 0x05
     642:	60 81       	ld	r22, Z
     644:	71 81       	ldd	r23, Z+1	; 0x01
     646:	80 e0       	ldi	r24, 0x00	; 0
     648:	90 e0       	ldi	r25, 0x00	; 0
     64a:	42 de       	rcall	.-892    	; 0x2d0 <InitializePWM_4C>
     64c:	ff cf       	rjmp	.-2      	; 0x64c <main+0x7a>

0000064e <__vector_4>:

    }
}

ISR(INT3_vect)
{
     64e:	1f 92       	push	r1
     650:	0f 92       	push	r0
     652:	0f b6       	in	r0, 0x3f	; 63
     654:	0f 92       	push	r0
     656:	11 24       	eor	r1, r1
     658:	0b b6       	in	r0, 0x3b	; 59
     65a:	0f 92       	push	r0
     65c:	cf 92       	push	r12
     65e:	df 92       	push	r13
     660:	ef 92       	push	r14
     662:	ff 92       	push	r15
     664:	0f 93       	push	r16
     666:	1f 93       	push	r17
     668:	2f 93       	push	r18
     66a:	3f 93       	push	r19
     66c:	4f 93       	push	r20
     66e:	5f 93       	push	r21
     670:	6f 93       	push	r22
     672:	7f 93       	push	r23
     674:	8f 93       	push	r24
     676:	9f 93       	push	r25
     678:	af 93       	push	r26
     67a:	bf 93       	push	r27
     67c:	cf 93       	push	r28
     67e:	df 93       	push	r29
     680:	ef 93       	push	r30
     682:	ff 93       	push	r31
	RPM_1.counter++;
     684:	e0 e0       	ldi	r30, 0x00	; 0
     686:	f2 e0       	ldi	r31, 0x02	; 2
     688:	84 81       	ldd	r24, Z+4	; 0x04
     68a:	95 81       	ldd	r25, Z+5	; 0x05
     68c:	01 96       	adiw	r24, 0x01	; 1
     68e:	95 83       	std	Z+5, r25	; 0x05
     690:	84 83       	std	Z+4, r24	; 0x04
	if(RPM_1.counter >= RPM_1.interruptionCounter) {
     692:	24 81       	ldd	r18, Z+4	; 0x04
     694:	35 81       	ldd	r19, Z+5	; 0x05
     696:	86 81       	ldd	r24, Z+6	; 0x06
     698:	97 81       	ldd	r25, Z+7	; 0x07
     69a:	28 17       	cp	r18, r24
     69c:	39 07       	cpc	r19, r25
     69e:	e0 f1       	brcs	.+120    	; 0x718 <__vector_4+0xca>
		Timer5_1.totalTicks += Timer5_1.counter * 64000 + TCNT5;
     6a0:	cf e2       	ldi	r28, 0x2F	; 47
     6a2:	d2 e0       	ldi	r29, 0x02	; 2
     6a4:	28 81       	ld	r18, Y
     6a6:	39 81       	ldd	r19, Y+1	; 0x01
     6a8:	4a 81       	ldd	r20, Y+2	; 0x02
     6aa:	5b 81       	ldd	r21, Y+3	; 0x03
     6ac:	04 e2       	ldi	r16, 0x24	; 36
     6ae:	11 e0       	ldi	r17, 0x01	; 1
     6b0:	d8 01       	movw	r26, r16
     6b2:	ed 91       	ld	r30, X+
     6b4:	fc 91       	ld	r31, X
     6b6:	c8 88       	ldd	r12, Y+16	; 0x10
     6b8:	d9 88       	ldd	r13, Y+17	; 0x11
     6ba:	ea 88       	ldd	r14, Y+18	; 0x12
     6bc:	fb 88       	ldd	r15, Y+19	; 0x13
     6be:	a0 e0       	ldi	r26, 0x00	; 0
     6c0:	ba ef       	ldi	r27, 0xFA	; 250
     6c2:	b0 d3       	rcall	.+1888   	; 0xe24 <__muluhisi3>
     6c4:	dc 01       	movw	r26, r24
     6c6:	cb 01       	movw	r24, r22
     6c8:	8e 0f       	add	r24, r30
     6ca:	9f 1f       	adc	r25, r31
     6cc:	a1 1d       	adc	r26, r1
     6ce:	b1 1d       	adc	r27, r1
     6d0:	c8 0e       	add	r12, r24
     6d2:	d9 1e       	adc	r13, r25
     6d4:	ea 1e       	adc	r14, r26
     6d6:	fb 1e       	adc	r15, r27
     6d8:	c8 8a       	std	Y+16, r12	; 0x10
     6da:	d9 8a       	std	Y+17, r13	; 0x11
     6dc:	ea 8a       	std	Y+18, r14	; 0x12
     6de:	fb 8a       	std	Y+19, r15	; 0x13
		multiply by 60 - per minute
		division by 4 - number of poles on engine - 8 => real revolution = 4 magnetic field revolutions
										(so, hall sensors will be detect it 4 times per real(mechanical) revolution) 
		division by 4 - interruption works on rise and fall => 10 * 60 / 4 / 2 = 75
		\****************/
		RPM_1.currentRPM = F_CPU * 75 /* 10 */ / Timer5_1.totalTicks /* * 60 / 4 / 2 */ ;
     6e0:	28 89       	ldd	r18, Y+16	; 0x10
     6e2:	39 89       	ldd	r19, Y+17	; 0x11
     6e4:	4a 89       	ldd	r20, Y+18	; 0x12
     6e6:	5b 89       	ldd	r21, Y+19	; 0x13
     6e8:	60 e0       	ldi	r22, 0x00	; 0
     6ea:	7c e8       	ldi	r23, 0x8C	; 140
     6ec:	86 e8       	ldi	r24, 0x86	; 134
     6ee:	97 e4       	ldi	r25, 0x47	; 71
     6f0:	77 d3       	rcall	.+1774   	; 0xde0 <__udivmodsi4>
     6f2:	e0 e0       	ldi	r30, 0x00	; 0
     6f4:	f2 e0       	ldi	r31, 0x02	; 2
     6f6:	31 83       	std	Z+1, r19	; 0x01
     6f8:	20 83       	st	Z, r18
		RPM_1.counter = 0;
     6fa:	15 82       	std	Z+5, r1	; 0x05
     6fc:	14 82       	std	Z+4, r1	; 0x04
		Timer5_1.counter = 0;
     6fe:	18 82       	st	Y, r1
     700:	19 82       	std	Y+1, r1	; 0x01
     702:	1a 82       	std	Y+2, r1	; 0x02
     704:	1b 82       	std	Y+3, r1	; 0x03
		Timer5_1.totalTicks = 0;
     706:	18 8a       	std	Y+16, r1	; 0x10
     708:	19 8a       	std	Y+17, r1	; 0x11
     70a:	1a 8a       	std	Y+18, r1	; 0x12
     70c:	1b 8a       	std	Y+19, r1	; 0x13
		TCNT5 = 1535;
     70e:	8f ef       	ldi	r24, 0xFF	; 255
     710:	95 e0       	ldi	r25, 0x05	; 5
     712:	f8 01       	movw	r30, r16
     714:	91 83       	std	Z+1, r25	; 0x01
     716:	80 83       	st	Z, r24
	}
	
}
     718:	ff 91       	pop	r31
     71a:	ef 91       	pop	r30
     71c:	df 91       	pop	r29
     71e:	cf 91       	pop	r28
     720:	bf 91       	pop	r27
     722:	af 91       	pop	r26
     724:	9f 91       	pop	r25
     726:	8f 91       	pop	r24
     728:	7f 91       	pop	r23
     72a:	6f 91       	pop	r22
     72c:	5f 91       	pop	r21
     72e:	4f 91       	pop	r20
     730:	3f 91       	pop	r19
     732:	2f 91       	pop	r18
     734:	1f 91       	pop	r17
     736:	0f 91       	pop	r16
     738:	ff 90       	pop	r15
     73a:	ef 90       	pop	r14
     73c:	df 90       	pop	r13
     73e:	cf 90       	pop	r12
     740:	0f 90       	pop	r0
     742:	0b be       	out	0x3b, r0	; 59
     744:	0f 90       	pop	r0
     746:	0f be       	out	0x3f, r0	; 63
     748:	0f 90       	pop	r0
     74a:	1f 90       	pop	r1
     74c:	18 95       	reti

0000074e <__vector_50>:


ISR(TIMER5_OVF_vect)
{
     74e:	1f 92       	push	r1
     750:	0f 92       	push	r0
     752:	0f b6       	in	r0, 0x3f	; 63
     754:	0f 92       	push	r0
     756:	11 24       	eor	r1, r1
     758:	0b b6       	in	r0, 0x3b	; 59
     75a:	0f 92       	push	r0
     75c:	2f 93       	push	r18
     75e:	3f 93       	push	r19
     760:	4f 93       	push	r20
     762:	5f 93       	push	r21
     764:	6f 93       	push	r22
     766:	7f 93       	push	r23
     768:	8f 93       	push	r24
     76a:	9f 93       	push	r25
     76c:	af 93       	push	r26
     76e:	bf 93       	push	r27
     770:	ef 93       	push	r30
     772:	ff 93       	push	r31
	//PORTH ^= (1 << PH4);
	if(sendinComands == 1)
     774:	80 91 2e 02 	lds	r24, 0x022E	; 0x80022e <sendinComands>
     778:	81 30       	cpi	r24, 0x01	; 1
     77a:	29 f4       	brne	.+10     	; 0x786 <__vector_50+0x38>
		{
			decodeCommands(UART0.data_in);
     77c:	83 e4       	ldi	r24, 0x43	; 67
     77e:	92 e0       	ldi	r25, 0x02	; 2
     780:	6c de       	rcall	.-808    	; 0x45a <decodeCommands>
			sendinComands = 0;
     782:	10 92 2e 02 	sts	0x022E, r1	; 0x80022e <sendinComands>
		}
	
	TCNT5 = 1535;
     786:	8f ef       	ldi	r24, 0xFF	; 255
     788:	95 e0       	ldi	r25, 0x05	; 5
     78a:	90 93 25 01 	sts	0x0125, r25	; 0x800125 <__TEXT_REGION_LENGTH__+0x700125>
     78e:	80 93 24 01 	sts	0x0124, r24	; 0x800124 <__TEXT_REGION_LENGTH__+0x700124>
	Timer5_1.counter++;
     792:	ef e2       	ldi	r30, 0x2F	; 47
     794:	f2 e0       	ldi	r31, 0x02	; 2
     796:	80 81       	ld	r24, Z
     798:	91 81       	ldd	r25, Z+1	; 0x01
     79a:	a2 81       	ldd	r26, Z+2	; 0x02
     79c:	b3 81       	ldd	r27, Z+3	; 0x03
     79e:	01 96       	adiw	r24, 0x01	; 1
     7a0:	a1 1d       	adc	r26, r1
     7a2:	b1 1d       	adc	r27, r1
     7a4:	80 83       	st	Z, r24
     7a6:	91 83       	std	Z+1, r25	; 0x01
     7a8:	a2 83       	std	Z+2, r26	; 0x02
     7aa:	b3 83       	std	Z+3, r27	; 0x03

}
     7ac:	ff 91       	pop	r31
     7ae:	ef 91       	pop	r30
     7b0:	bf 91       	pop	r27
     7b2:	af 91       	pop	r26
     7b4:	9f 91       	pop	r25
     7b6:	8f 91       	pop	r24
     7b8:	7f 91       	pop	r23
     7ba:	6f 91       	pop	r22
     7bc:	5f 91       	pop	r21
     7be:	4f 91       	pop	r20
     7c0:	3f 91       	pop	r19
     7c2:	2f 91       	pop	r18
     7c4:	0f 90       	pop	r0
     7c6:	0b be       	out	0x3b, r0	; 59
     7c8:	0f 90       	pop	r0
     7ca:	0f be       	out	0x3f, r0	; 63
     7cc:	0f 90       	pop	r0
     7ce:	1f 90       	pop	r1
     7d0:	18 95       	reti

000007d2 <__vector_23>:
unsigned int countsec=0;
ISR(TIMER0_OVF_vect){
     7d2:	1f 92       	push	r1
     7d4:	0f 92       	push	r0
     7d6:	0f b6       	in	r0, 0x3f	; 63
     7d8:	0f 92       	push	r0
     7da:	11 24       	eor	r1, r1
     7dc:	0b b6       	in	r0, 0x3b	; 59
     7de:	0f 92       	push	r0
     7e0:	cf 92       	push	r12
     7e2:	df 92       	push	r13
     7e4:	ef 92       	push	r14
     7e6:	ff 92       	push	r15
     7e8:	0f 93       	push	r16
     7ea:	1f 93       	push	r17
     7ec:	2f 93       	push	r18
     7ee:	3f 93       	push	r19
     7f0:	4f 93       	push	r20
     7f2:	5f 93       	push	r21
     7f4:	6f 93       	push	r22
     7f6:	7f 93       	push	r23
     7f8:	8f 93       	push	r24
     7fa:	9f 93       	push	r25
     7fc:	af 93       	push	r26
     7fe:	bf 93       	push	r27
     800:	cf 93       	push	r28
     802:	df 93       	push	r29
     804:	ef 93       	push	r30
     806:	ff 93       	push	r31
	//PORTH ^= (1 << PH4);
	
	TCNT0 = 131;
     808:	83 e8       	ldi	r24, 0x83	; 131
     80a:	86 bd       	out	0x26, r24	; 38
	if(++countsec >= 125){
     80c:	80 91 2c 02 	lds	r24, 0x022C	; 0x80022c <__data_end>
     810:	90 91 2d 02 	lds	r25, 0x022D	; 0x80022d <__data_end+0x1>
     814:	01 96       	adiw	r24, 0x01	; 1
     816:	8d 37       	cpi	r24, 0x7D	; 125
     818:	91 05       	cpc	r25, r1
     81a:	28 f4       	brcc	.+10     	; 0x826 <__vector_23+0x54>
     81c:	90 93 2d 02 	sts	0x022D, r25	; 0x80022d <__data_end+0x1>
     820:	80 93 2c 02 	sts	0x022C, r24	; 0x80022c <__data_end>
     824:	04 c0       	rjmp	.+8      	; 0x82e <__vector_23+0x5c>
			//send_int_Uart(RPM_1.currentRPM);
			countsec=0;
     826:	10 92 2d 02 	sts	0x022D, r1	; 0x80022d <__data_end+0x1>
     82a:	10 92 2c 02 	sts	0x022C, r1	; 0x80022c <__data_end>
	}
	if(++Timer5_1.seconds >= 25){
     82e:	ef e2       	ldi	r30, 0x2F	; 47
     830:	f2 e0       	ldi	r31, 0x02	; 2
     832:	84 85       	ldd	r24, Z+12	; 0x0c
     834:	95 85       	ldd	r25, Z+13	; 0x0d
     836:	a6 85       	ldd	r26, Z+14	; 0x0e
     838:	b7 85       	ldd	r27, Z+15	; 0x0f
     83a:	01 96       	adiw	r24, 0x01	; 1
     83c:	a1 1d       	adc	r26, r1
     83e:	b1 1d       	adc	r27, r1
     840:	84 87       	std	Z+12, r24	; 0x0c
     842:	95 87       	std	Z+13, r25	; 0x0d
     844:	a6 87       	std	Z+14, r26	; 0x0e
     846:	b7 87       	std	Z+15, r27	; 0x0f
     848:	49 97       	sbiw	r24, 0x19	; 25
     84a:	a1 05       	cpc	r26, r1
     84c:	b1 05       	cpc	r27, r1
     84e:	08 f4       	brcc	.+2      	; 0x852 <__vector_23+0x80>
     850:	8a c0       	rjmp	.+276    	; 0x966 <__vector_23+0x194>
		Timer5_1.seconds = 0;
     852:	10 92 3b 02 	sts	0x023B, r1	; 0x80023b <Timer5_1+0xc>
     856:	10 92 3c 02 	sts	0x023C, r1	; 0x80023c <Timer5_1+0xd>
     85a:	10 92 3d 02 	sts	0x023D, r1	; 0x80023d <Timer5_1+0xe>
     85e:	10 92 3e 02 	sts	0x023E, r1	; 0x80023e <Timer5_1+0xf>
		//send_int_Uart(RPM_1.currentRPM);
		setPwm(PWM4C.pwmValue += (RPM_1.setRPM - RPM_1.currentRPM) * 0.001);
     862:	c0 e0       	ldi	r28, 0x00	; 0
     864:	d2 e0       	ldi	r29, 0x02	; 2
     866:	6a 81       	ldd	r22, Y+2	; 0x02
     868:	7b 81       	ldd	r23, Y+3	; 0x03
     86a:	88 81       	ld	r24, Y
     86c:	99 81       	ldd	r25, Y+1	; 0x01
     86e:	08 e0       	ldi	r16, 0x08	; 8
     870:	12 e0       	ldi	r17, 0x02	; 2
     872:	f8 01       	movw	r30, r16
     874:	c2 80       	ldd	r12, Z+2	; 0x02
     876:	d3 80       	ldd	r13, Z+3	; 0x03
     878:	e4 80       	ldd	r14, Z+4	; 0x04
     87a:	f5 80       	ldd	r15, Z+5	; 0x05
     87c:	68 1b       	sub	r22, r24
     87e:	79 0b       	sbc	r23, r25
     880:	07 2e       	mov	r0, r23
     882:	00 0c       	add	r0, r0
     884:	88 0b       	sbc	r24, r24
     886:	99 0b       	sbc	r25, r25
     888:	5a d1       	rcall	.+692    	; 0xb3e <__floatsisf>
     88a:	2f e6       	ldi	r18, 0x6F	; 111
     88c:	32 e1       	ldi	r19, 0x12	; 18
     88e:	43 e8       	ldi	r20, 0x83	; 131
     890:	5a e3       	ldi	r21, 0x3A	; 58
     892:	43 d2       	rcall	.+1158   	; 0xd1a <__mulsf3>
     894:	a7 01       	movw	r20, r14
     896:	96 01       	movw	r18, r12
     898:	bc d0       	rcall	.+376    	; 0xa12 <__addsf3>
     89a:	f8 01       	movw	r30, r16
     89c:	62 83       	std	Z+2, r22	; 0x02
     89e:	73 83       	std	Z+3, r23	; 0x03
     8a0:	84 83       	std	Z+4, r24	; 0x04
     8a2:	95 83       	std	Z+5, r25	; 0x05
     8a4:	d4 dc       	rcall	.-1624   	; 0x24e <setPwm>
			
		if (RPM_1.currentRPM < RPM_1.setRPM)
     8a6:	28 81       	ld	r18, Y
     8a8:	39 81       	ldd	r19, Y+1	; 0x01
     8aa:	8a 81       	ldd	r24, Y+2	; 0x02
     8ac:	9b 81       	ldd	r25, Y+3	; 0x03
     8ae:	28 17       	cp	r18, r24
     8b0:	39 07       	cpc	r19, r25
     8b2:	5c f5       	brge	.+86     	; 0x90a <__vector_23+0x138>
		{
			setPwm(PWM4C.pwmValue += (abs(RPM_1.setRPM - RPM_1.currentRPM)) * 0.0005);
     8b4:	8a 81       	ldd	r24, Y+2	; 0x02
     8b6:	9b 81       	ldd	r25, Y+3	; 0x03
     8b8:	28 81       	ld	r18, Y
     8ba:	39 81       	ldd	r19, Y+1	; 0x01
     8bc:	c0 90 0a 02 	lds	r12, 0x020A	; 0x80020a <PWM4C+0x2>
     8c0:	d0 90 0b 02 	lds	r13, 0x020B	; 0x80020b <PWM4C+0x3>
     8c4:	e0 90 0c 02 	lds	r14, 0x020C	; 0x80020c <PWM4C+0x4>
     8c8:	f0 90 0d 02 	lds	r15, 0x020D	; 0x80020d <PWM4C+0x5>
     8cc:	82 1b       	sub	r24, r18
     8ce:	93 0b       	sbc	r25, r19
     8d0:	bc 01       	movw	r22, r24
     8d2:	22 f4       	brpl	.+8      	; 0x8dc <__vector_23+0x10a>
     8d4:	66 27       	eor	r22, r22
     8d6:	77 27       	eor	r23, r23
     8d8:	68 1b       	sub	r22, r24
     8da:	79 0b       	sbc	r23, r25
     8dc:	07 2e       	mov	r0, r23
     8de:	00 0c       	add	r0, r0
     8e0:	88 0b       	sbc	r24, r24
     8e2:	99 0b       	sbc	r25, r25
     8e4:	2c d1       	rcall	.+600    	; 0xb3e <__floatsisf>
     8e6:	2f e6       	ldi	r18, 0x6F	; 111
     8e8:	32 e1       	ldi	r19, 0x12	; 18
     8ea:	43 e0       	ldi	r20, 0x03	; 3
     8ec:	5a e3       	ldi	r21, 0x3A	; 58
     8ee:	15 d2       	rcall	.+1066   	; 0xd1a <__mulsf3>
     8f0:	a7 01       	movw	r20, r14
     8f2:	96 01       	movw	r18, r12
     8f4:	8e d0       	rcall	.+284    	; 0xa12 <__addsf3>
     8f6:	60 93 0a 02 	sts	0x020A, r22	; 0x80020a <PWM4C+0x2>
     8fa:	70 93 0b 02 	sts	0x020B, r23	; 0x80020b <PWM4C+0x3>
     8fe:	80 93 0c 02 	sts	0x020C, r24	; 0x80020c <PWM4C+0x4>
     902:	90 93 0d 02 	sts	0x020D, r25	; 0x80020d <PWM4C+0x5>
     906:	a3 dc       	rcall	.-1722   	; 0x24e <setPwm>
     908:	2e c0       	rjmp	.+92     	; 0x966 <__vector_23+0x194>
		}
		else
		{
			setPwm(PWM4C.pwmValue -= (abs(RPM_1.setRPM - RPM_1.currentRPM)) * 0.0005);
     90a:	e0 e0       	ldi	r30, 0x00	; 0
     90c:	f2 e0       	ldi	r31, 0x02	; 2
     90e:	82 81       	ldd	r24, Z+2	; 0x02
     910:	93 81       	ldd	r25, Z+3	; 0x03
     912:	20 81       	ld	r18, Z
     914:	31 81       	ldd	r19, Z+1	; 0x01
     916:	c0 90 0a 02 	lds	r12, 0x020A	; 0x80020a <PWM4C+0x2>
     91a:	d0 90 0b 02 	lds	r13, 0x020B	; 0x80020b <PWM4C+0x3>
     91e:	e0 90 0c 02 	lds	r14, 0x020C	; 0x80020c <PWM4C+0x4>
     922:	f0 90 0d 02 	lds	r15, 0x020D	; 0x80020d <PWM4C+0x5>
     926:	82 1b       	sub	r24, r18
     928:	93 0b       	sbc	r25, r19
     92a:	bc 01       	movw	r22, r24
     92c:	22 f4       	brpl	.+8      	; 0x936 <__vector_23+0x164>
     92e:	66 27       	eor	r22, r22
     930:	77 27       	eor	r23, r23
     932:	68 1b       	sub	r22, r24
     934:	79 0b       	sbc	r23, r25
     936:	07 2e       	mov	r0, r23
     938:	00 0c       	add	r0, r0
     93a:	88 0b       	sbc	r24, r24
     93c:	99 0b       	sbc	r25, r25
     93e:	ff d0       	rcall	.+510    	; 0xb3e <__floatsisf>
     940:	2f e6       	ldi	r18, 0x6F	; 111
     942:	32 e1       	ldi	r19, 0x12	; 18
     944:	43 e0       	ldi	r20, 0x03	; 3
     946:	5a e3       	ldi	r21, 0x3A	; 58
     948:	e8 d1       	rcall	.+976    	; 0xd1a <__mulsf3>
     94a:	9b 01       	movw	r18, r22
     94c:	ac 01       	movw	r20, r24
     94e:	c7 01       	movw	r24, r14
     950:	b6 01       	movw	r22, r12
     952:	5e d0       	rcall	.+188    	; 0xa10 <__subsf3>
     954:	60 93 0a 02 	sts	0x020A, r22	; 0x80020a <PWM4C+0x2>
     958:	70 93 0b 02 	sts	0x020B, r23	; 0x80020b <PWM4C+0x3>
     95c:	80 93 0c 02 	sts	0x020C, r24	; 0x80020c <PWM4C+0x4>
     960:	90 93 0d 02 	sts	0x020D, r25	; 0x80020d <PWM4C+0x5>
     964:	74 dc       	rcall	.-1816   	; 0x24e <setPwm>
		}
	}
}
     966:	ff 91       	pop	r31
     968:	ef 91       	pop	r30
     96a:	df 91       	pop	r29
     96c:	cf 91       	pop	r28
     96e:	bf 91       	pop	r27
     970:	af 91       	pop	r26
     972:	9f 91       	pop	r25
     974:	8f 91       	pop	r24
     976:	7f 91       	pop	r23
     978:	6f 91       	pop	r22
     97a:	5f 91       	pop	r21
     97c:	4f 91       	pop	r20
     97e:	3f 91       	pop	r19
     980:	2f 91       	pop	r18
     982:	1f 91       	pop	r17
     984:	0f 91       	pop	r16
     986:	ff 90       	pop	r15
     988:	ef 90       	pop	r14
     98a:	df 90       	pop	r13
     98c:	cf 90       	pop	r12
     98e:	0f 90       	pop	r0
     990:	0b be       	out	0x3b, r0	; 59
     992:	0f 90       	pop	r0
     994:	0f be       	out	0x3f, r0	; 63
     996:	0f 90       	pop	r0
     998:	1f 90       	pop	r1
     99a:	18 95       	reti

0000099c <__vector_25>:


ISR (USART0_RX_vect)
{
     99c:	1f 92       	push	r1
     99e:	0f 92       	push	r0
     9a0:	0f b6       	in	r0, 0x3f	; 63
     9a2:	0f 92       	push	r0
     9a4:	11 24       	eor	r1, r1
     9a6:	0b b6       	in	r0, 0x3b	; 59
     9a8:	0f 92       	push	r0
     9aa:	8f 93       	push	r24
     9ac:	af 93       	push	r26
     9ae:	bf 93       	push	r27
     9b0:	ef 93       	push	r30
     9b2:	ff 93       	push	r31
	//cli();
	//TIMSK0 &= ~(1 << TOIE0);
	UART0.data_in[UART0.dataCount] = UDR0;
     9b4:	a3 e4       	ldi	r26, 0x43	; 67
     9b6:	b2 e0       	ldi	r27, 0x02	; 2
     9b8:	94 96       	adiw	r26, 0x24	; 36
     9ba:	ec 91       	ld	r30, X
     9bc:	94 97       	sbiw	r26, 0x24	; 36
     9be:	f0 e0       	ldi	r31, 0x00	; 0
     9c0:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
     9c4:	ed 5b       	subi	r30, 0xBD	; 189
     9c6:	fd 4f       	sbci	r31, 0xFD	; 253
     9c8:	80 83       	st	Z, r24
	if(UART0.data_in[UART0.dataCount] == '\n') {
     9ca:	94 96       	adiw	r26, 0x24	; 36
     9cc:	ec 91       	ld	r30, X
     9ce:	f0 e0       	ldi	r31, 0x00	; 0
     9d0:	ed 5b       	subi	r30, 0xBD	; 189
     9d2:	fd 4f       	sbci	r31, 0xFD	; 253
     9d4:	80 81       	ld	r24, Z
     9d6:	8a 30       	cpi	r24, 0x0A	; 10
     9d8:	31 f4       	brne	.+12     	; 0x9e6 <__vector_25+0x4a>
		UART0.dataCount = 0;
     9da:	10 92 67 02 	sts	0x0267, r1	; 0x800267 <UART0+0x24>
		sendinComands = 1;
     9de:	81 e0       	ldi	r24, 0x01	; 1
     9e0:	80 93 2e 02 	sts	0x022E, r24	; 0x80022e <sendinComands>
     9e4:	09 c0       	rjmp	.+18     	; 0x9f8 <__vector_25+0x5c>
		//sei();
		//TIMSK0 = (1 << TOIE0);
		//UART0.dataCount = 0;
		//UART0.sendingTrue=1;
	} else {
		if(++UART0.dataCount >= 28){
     9e6:	e3 e4       	ldi	r30, 0x43	; 67
     9e8:	f2 e0       	ldi	r31, 0x02	; 2
     9ea:	84 a1       	ldd	r24, Z+36	; 0x24
     9ec:	8f 5f       	subi	r24, 0xFF	; 255
     9ee:	84 a3       	std	Z+36, r24	; 0x24
     9f0:	8c 31       	cpi	r24, 0x1C	; 28
     9f2:	10 f0       	brcs	.+4      	; 0x9f8 <__vector_25+0x5c>
			 UART0.dataCount = 0;
     9f4:	10 92 67 02 	sts	0x0267, r1	; 0x800267 <UART0+0x24>
		////TransmitString(UART0.data_in);
		////UART0.dataCount = 0;
		////memset(&UART0.dataCount, 0, sizeof(UART0.dataCount));

	//TransmitString(UART0.data_in);
}
     9f8:	ff 91       	pop	r31
     9fa:	ef 91       	pop	r30
     9fc:	bf 91       	pop	r27
     9fe:	af 91       	pop	r26
     a00:	8f 91       	pop	r24
     a02:	0f 90       	pop	r0
     a04:	0b be       	out	0x3b, r0	; 59
     a06:	0f 90       	pop	r0
     a08:	0f be       	out	0x3f, r0	; 63
     a0a:	0f 90       	pop	r0
     a0c:	1f 90       	pop	r1
     a0e:	18 95       	reti

00000a10 <__subsf3>:
     a10:	50 58       	subi	r21, 0x80	; 128

00000a12 <__addsf3>:
     a12:	bb 27       	eor	r27, r27
     a14:	aa 27       	eor	r26, r26
     a16:	0e d0       	rcall	.+28     	; 0xa34 <__addsf3x>
     a18:	08 c1       	rjmp	.+528    	; 0xc2a <__fp_round>
     a1a:	f9 d0       	rcall	.+498    	; 0xc0e <__fp_pscA>
     a1c:	30 f0       	brcs	.+12     	; 0xa2a <__addsf3+0x18>
     a1e:	fe d0       	rcall	.+508    	; 0xc1c <__fp_pscB>
     a20:	20 f0       	brcs	.+8      	; 0xa2a <__addsf3+0x18>
     a22:	31 f4       	brne	.+12     	; 0xa30 <__addsf3+0x1e>
     a24:	9f 3f       	cpi	r25, 0xFF	; 255
     a26:	11 f4       	brne	.+4      	; 0xa2c <__addsf3+0x1a>
     a28:	1e f4       	brtc	.+6      	; 0xa30 <__addsf3+0x1e>
     a2a:	ee c0       	rjmp	.+476    	; 0xc08 <__fp_nan>
     a2c:	0e f4       	brtc	.+2      	; 0xa30 <__addsf3+0x1e>
     a2e:	e0 95       	com	r30
     a30:	e7 fb       	bst	r30, 7
     a32:	e4 c0       	rjmp	.+456    	; 0xbfc <__fp_inf>

00000a34 <__addsf3x>:
     a34:	e9 2f       	mov	r30, r25
     a36:	0a d1       	rcall	.+532    	; 0xc4c <__fp_split3>
     a38:	80 f3       	brcs	.-32     	; 0xa1a <__addsf3+0x8>
     a3a:	ba 17       	cp	r27, r26
     a3c:	62 07       	cpc	r22, r18
     a3e:	73 07       	cpc	r23, r19
     a40:	84 07       	cpc	r24, r20
     a42:	95 07       	cpc	r25, r21
     a44:	18 f0       	brcs	.+6      	; 0xa4c <__addsf3x+0x18>
     a46:	71 f4       	brne	.+28     	; 0xa64 <__addsf3x+0x30>
     a48:	9e f5       	brtc	.+102    	; 0xab0 <__addsf3x+0x7c>
     a4a:	22 c1       	rjmp	.+580    	; 0xc90 <__fp_zero>
     a4c:	0e f4       	brtc	.+2      	; 0xa50 <__addsf3x+0x1c>
     a4e:	e0 95       	com	r30
     a50:	0b 2e       	mov	r0, r27
     a52:	ba 2f       	mov	r27, r26
     a54:	a0 2d       	mov	r26, r0
     a56:	0b 01       	movw	r0, r22
     a58:	b9 01       	movw	r22, r18
     a5a:	90 01       	movw	r18, r0
     a5c:	0c 01       	movw	r0, r24
     a5e:	ca 01       	movw	r24, r20
     a60:	a0 01       	movw	r20, r0
     a62:	11 24       	eor	r1, r1
     a64:	ff 27       	eor	r31, r31
     a66:	59 1b       	sub	r21, r25
     a68:	99 f0       	breq	.+38     	; 0xa90 <__addsf3x+0x5c>
     a6a:	59 3f       	cpi	r21, 0xF9	; 249
     a6c:	50 f4       	brcc	.+20     	; 0xa82 <__addsf3x+0x4e>
     a6e:	50 3e       	cpi	r21, 0xE0	; 224
     a70:	68 f1       	brcs	.+90     	; 0xacc <__addsf3x+0x98>
     a72:	1a 16       	cp	r1, r26
     a74:	f0 40       	sbci	r31, 0x00	; 0
     a76:	a2 2f       	mov	r26, r18
     a78:	23 2f       	mov	r18, r19
     a7a:	34 2f       	mov	r19, r20
     a7c:	44 27       	eor	r20, r20
     a7e:	58 5f       	subi	r21, 0xF8	; 248
     a80:	f3 cf       	rjmp	.-26     	; 0xa68 <__addsf3x+0x34>
     a82:	46 95       	lsr	r20
     a84:	37 95       	ror	r19
     a86:	27 95       	ror	r18
     a88:	a7 95       	ror	r26
     a8a:	f0 40       	sbci	r31, 0x00	; 0
     a8c:	53 95       	inc	r21
     a8e:	c9 f7       	brne	.-14     	; 0xa82 <__addsf3x+0x4e>
     a90:	7e f4       	brtc	.+30     	; 0xab0 <__addsf3x+0x7c>
     a92:	1f 16       	cp	r1, r31
     a94:	ba 0b       	sbc	r27, r26
     a96:	62 0b       	sbc	r22, r18
     a98:	73 0b       	sbc	r23, r19
     a9a:	84 0b       	sbc	r24, r20
     a9c:	ba f0       	brmi	.+46     	; 0xacc <__addsf3x+0x98>
     a9e:	91 50       	subi	r25, 0x01	; 1
     aa0:	a1 f0       	breq	.+40     	; 0xaca <__addsf3x+0x96>
     aa2:	ff 0f       	add	r31, r31
     aa4:	bb 1f       	adc	r27, r27
     aa6:	66 1f       	adc	r22, r22
     aa8:	77 1f       	adc	r23, r23
     aaa:	88 1f       	adc	r24, r24
     aac:	c2 f7       	brpl	.-16     	; 0xa9e <__addsf3x+0x6a>
     aae:	0e c0       	rjmp	.+28     	; 0xacc <__addsf3x+0x98>
     ab0:	ba 0f       	add	r27, r26
     ab2:	62 1f       	adc	r22, r18
     ab4:	73 1f       	adc	r23, r19
     ab6:	84 1f       	adc	r24, r20
     ab8:	48 f4       	brcc	.+18     	; 0xacc <__addsf3x+0x98>
     aba:	87 95       	ror	r24
     abc:	77 95       	ror	r23
     abe:	67 95       	ror	r22
     ac0:	b7 95       	ror	r27
     ac2:	f7 95       	ror	r31
     ac4:	9e 3f       	cpi	r25, 0xFE	; 254
     ac6:	08 f0       	brcs	.+2      	; 0xaca <__addsf3x+0x96>
     ac8:	b3 cf       	rjmp	.-154    	; 0xa30 <__addsf3+0x1e>
     aca:	93 95       	inc	r25
     acc:	88 0f       	add	r24, r24
     ace:	08 f0       	brcs	.+2      	; 0xad2 <__addsf3x+0x9e>
     ad0:	99 27       	eor	r25, r25
     ad2:	ee 0f       	add	r30, r30
     ad4:	97 95       	ror	r25
     ad6:	87 95       	ror	r24
     ad8:	08 95       	ret

00000ada <__cmpsf2>:
     ada:	6c d0       	rcall	.+216    	; 0xbb4 <__fp_cmp>
     adc:	08 f4       	brcc	.+2      	; 0xae0 <__cmpsf2+0x6>
     ade:	81 e0       	ldi	r24, 0x01	; 1
     ae0:	08 95       	ret

00000ae2 <__fixunssfsi>:
     ae2:	bc d0       	rcall	.+376    	; 0xc5c <__fp_splitA>
     ae4:	88 f0       	brcs	.+34     	; 0xb08 <__fixunssfsi+0x26>
     ae6:	9f 57       	subi	r25, 0x7F	; 127
     ae8:	90 f0       	brcs	.+36     	; 0xb0e <__fixunssfsi+0x2c>
     aea:	b9 2f       	mov	r27, r25
     aec:	99 27       	eor	r25, r25
     aee:	b7 51       	subi	r27, 0x17	; 23
     af0:	a0 f0       	brcs	.+40     	; 0xb1a <__fixunssfsi+0x38>
     af2:	d1 f0       	breq	.+52     	; 0xb28 <__fixunssfsi+0x46>
     af4:	66 0f       	add	r22, r22
     af6:	77 1f       	adc	r23, r23
     af8:	88 1f       	adc	r24, r24
     afa:	99 1f       	adc	r25, r25
     afc:	1a f0       	brmi	.+6      	; 0xb04 <__fixunssfsi+0x22>
     afe:	ba 95       	dec	r27
     b00:	c9 f7       	brne	.-14     	; 0xaf4 <__fixunssfsi+0x12>
     b02:	12 c0       	rjmp	.+36     	; 0xb28 <__fixunssfsi+0x46>
     b04:	b1 30       	cpi	r27, 0x01	; 1
     b06:	81 f0       	breq	.+32     	; 0xb28 <__fixunssfsi+0x46>
     b08:	c3 d0       	rcall	.+390    	; 0xc90 <__fp_zero>
     b0a:	b1 e0       	ldi	r27, 0x01	; 1
     b0c:	08 95       	ret
     b0e:	c0 c0       	rjmp	.+384    	; 0xc90 <__fp_zero>
     b10:	67 2f       	mov	r22, r23
     b12:	78 2f       	mov	r23, r24
     b14:	88 27       	eor	r24, r24
     b16:	b8 5f       	subi	r27, 0xF8	; 248
     b18:	39 f0       	breq	.+14     	; 0xb28 <__fixunssfsi+0x46>
     b1a:	b9 3f       	cpi	r27, 0xF9	; 249
     b1c:	cc f3       	brlt	.-14     	; 0xb10 <__fixunssfsi+0x2e>
     b1e:	86 95       	lsr	r24
     b20:	77 95       	ror	r23
     b22:	67 95       	ror	r22
     b24:	b3 95       	inc	r27
     b26:	d9 f7       	brne	.-10     	; 0xb1e <__fixunssfsi+0x3c>
     b28:	3e f4       	brtc	.+14     	; 0xb38 <__fixunssfsi+0x56>
     b2a:	90 95       	com	r25
     b2c:	80 95       	com	r24
     b2e:	70 95       	com	r23
     b30:	61 95       	neg	r22
     b32:	7f 4f       	sbci	r23, 0xFF	; 255
     b34:	8f 4f       	sbci	r24, 0xFF	; 255
     b36:	9f 4f       	sbci	r25, 0xFF	; 255
     b38:	08 95       	ret

00000b3a <__floatunsisf>:
     b3a:	e8 94       	clt
     b3c:	09 c0       	rjmp	.+18     	; 0xb50 <__floatsisf+0x12>

00000b3e <__floatsisf>:
     b3e:	97 fb       	bst	r25, 7
     b40:	3e f4       	brtc	.+14     	; 0xb50 <__floatsisf+0x12>
     b42:	90 95       	com	r25
     b44:	80 95       	com	r24
     b46:	70 95       	com	r23
     b48:	61 95       	neg	r22
     b4a:	7f 4f       	sbci	r23, 0xFF	; 255
     b4c:	8f 4f       	sbci	r24, 0xFF	; 255
     b4e:	9f 4f       	sbci	r25, 0xFF	; 255
     b50:	99 23       	and	r25, r25
     b52:	a9 f0       	breq	.+42     	; 0xb7e <__floatsisf+0x40>
     b54:	f9 2f       	mov	r31, r25
     b56:	96 e9       	ldi	r25, 0x96	; 150
     b58:	bb 27       	eor	r27, r27
     b5a:	93 95       	inc	r25
     b5c:	f6 95       	lsr	r31
     b5e:	87 95       	ror	r24
     b60:	77 95       	ror	r23
     b62:	67 95       	ror	r22
     b64:	b7 95       	ror	r27
     b66:	f1 11       	cpse	r31, r1
     b68:	f8 cf       	rjmp	.-16     	; 0xb5a <__floatsisf+0x1c>
     b6a:	fa f4       	brpl	.+62     	; 0xbaa <__floatsisf+0x6c>
     b6c:	bb 0f       	add	r27, r27
     b6e:	11 f4       	brne	.+4      	; 0xb74 <__floatsisf+0x36>
     b70:	60 ff       	sbrs	r22, 0
     b72:	1b c0       	rjmp	.+54     	; 0xbaa <__floatsisf+0x6c>
     b74:	6f 5f       	subi	r22, 0xFF	; 255
     b76:	7f 4f       	sbci	r23, 0xFF	; 255
     b78:	8f 4f       	sbci	r24, 0xFF	; 255
     b7a:	9f 4f       	sbci	r25, 0xFF	; 255
     b7c:	16 c0       	rjmp	.+44     	; 0xbaa <__floatsisf+0x6c>
     b7e:	88 23       	and	r24, r24
     b80:	11 f0       	breq	.+4      	; 0xb86 <__floatsisf+0x48>
     b82:	96 e9       	ldi	r25, 0x96	; 150
     b84:	11 c0       	rjmp	.+34     	; 0xba8 <__floatsisf+0x6a>
     b86:	77 23       	and	r23, r23
     b88:	21 f0       	breq	.+8      	; 0xb92 <__floatsisf+0x54>
     b8a:	9e e8       	ldi	r25, 0x8E	; 142
     b8c:	87 2f       	mov	r24, r23
     b8e:	76 2f       	mov	r23, r22
     b90:	05 c0       	rjmp	.+10     	; 0xb9c <__floatsisf+0x5e>
     b92:	66 23       	and	r22, r22
     b94:	71 f0       	breq	.+28     	; 0xbb2 <__floatsisf+0x74>
     b96:	96 e8       	ldi	r25, 0x86	; 134
     b98:	86 2f       	mov	r24, r22
     b9a:	70 e0       	ldi	r23, 0x00	; 0
     b9c:	60 e0       	ldi	r22, 0x00	; 0
     b9e:	2a f0       	brmi	.+10     	; 0xbaa <__floatsisf+0x6c>
     ba0:	9a 95       	dec	r25
     ba2:	66 0f       	add	r22, r22
     ba4:	77 1f       	adc	r23, r23
     ba6:	88 1f       	adc	r24, r24
     ba8:	da f7       	brpl	.-10     	; 0xba0 <__floatsisf+0x62>
     baa:	88 0f       	add	r24, r24
     bac:	96 95       	lsr	r25
     bae:	87 95       	ror	r24
     bb0:	97 f9       	bld	r25, 7
     bb2:	08 95       	ret

00000bb4 <__fp_cmp>:
     bb4:	99 0f       	add	r25, r25
     bb6:	00 08       	sbc	r0, r0
     bb8:	55 0f       	add	r21, r21
     bba:	aa 0b       	sbc	r26, r26
     bbc:	e0 e8       	ldi	r30, 0x80	; 128
     bbe:	fe ef       	ldi	r31, 0xFE	; 254
     bc0:	16 16       	cp	r1, r22
     bc2:	17 06       	cpc	r1, r23
     bc4:	e8 07       	cpc	r30, r24
     bc6:	f9 07       	cpc	r31, r25
     bc8:	c0 f0       	brcs	.+48     	; 0xbfa <__fp_cmp+0x46>
     bca:	12 16       	cp	r1, r18
     bcc:	13 06       	cpc	r1, r19
     bce:	e4 07       	cpc	r30, r20
     bd0:	f5 07       	cpc	r31, r21
     bd2:	98 f0       	brcs	.+38     	; 0xbfa <__fp_cmp+0x46>
     bd4:	62 1b       	sub	r22, r18
     bd6:	73 0b       	sbc	r23, r19
     bd8:	84 0b       	sbc	r24, r20
     bda:	95 0b       	sbc	r25, r21
     bdc:	39 f4       	brne	.+14     	; 0xbec <__fp_cmp+0x38>
     bde:	0a 26       	eor	r0, r26
     be0:	61 f0       	breq	.+24     	; 0xbfa <__fp_cmp+0x46>
     be2:	23 2b       	or	r18, r19
     be4:	24 2b       	or	r18, r20
     be6:	25 2b       	or	r18, r21
     be8:	21 f4       	brne	.+8      	; 0xbf2 <__fp_cmp+0x3e>
     bea:	08 95       	ret
     bec:	0a 26       	eor	r0, r26
     bee:	09 f4       	brne	.+2      	; 0xbf2 <__fp_cmp+0x3e>
     bf0:	a1 40       	sbci	r26, 0x01	; 1
     bf2:	a6 95       	lsr	r26
     bf4:	8f ef       	ldi	r24, 0xFF	; 255
     bf6:	81 1d       	adc	r24, r1
     bf8:	81 1d       	adc	r24, r1
     bfa:	08 95       	ret

00000bfc <__fp_inf>:
     bfc:	97 f9       	bld	r25, 7
     bfe:	9f 67       	ori	r25, 0x7F	; 127
     c00:	80 e8       	ldi	r24, 0x80	; 128
     c02:	70 e0       	ldi	r23, 0x00	; 0
     c04:	60 e0       	ldi	r22, 0x00	; 0
     c06:	08 95       	ret

00000c08 <__fp_nan>:
     c08:	9f ef       	ldi	r25, 0xFF	; 255
     c0a:	80 ec       	ldi	r24, 0xC0	; 192
     c0c:	08 95       	ret

00000c0e <__fp_pscA>:
     c0e:	00 24       	eor	r0, r0
     c10:	0a 94       	dec	r0
     c12:	16 16       	cp	r1, r22
     c14:	17 06       	cpc	r1, r23
     c16:	18 06       	cpc	r1, r24
     c18:	09 06       	cpc	r0, r25
     c1a:	08 95       	ret

00000c1c <__fp_pscB>:
     c1c:	00 24       	eor	r0, r0
     c1e:	0a 94       	dec	r0
     c20:	12 16       	cp	r1, r18
     c22:	13 06       	cpc	r1, r19
     c24:	14 06       	cpc	r1, r20
     c26:	05 06       	cpc	r0, r21
     c28:	08 95       	ret

00000c2a <__fp_round>:
     c2a:	09 2e       	mov	r0, r25
     c2c:	03 94       	inc	r0
     c2e:	00 0c       	add	r0, r0
     c30:	11 f4       	brne	.+4      	; 0xc36 <__fp_round+0xc>
     c32:	88 23       	and	r24, r24
     c34:	52 f0       	brmi	.+20     	; 0xc4a <__fp_round+0x20>
     c36:	bb 0f       	add	r27, r27
     c38:	40 f4       	brcc	.+16     	; 0xc4a <__fp_round+0x20>
     c3a:	bf 2b       	or	r27, r31
     c3c:	11 f4       	brne	.+4      	; 0xc42 <__fp_round+0x18>
     c3e:	60 ff       	sbrs	r22, 0
     c40:	04 c0       	rjmp	.+8      	; 0xc4a <__fp_round+0x20>
     c42:	6f 5f       	subi	r22, 0xFF	; 255
     c44:	7f 4f       	sbci	r23, 0xFF	; 255
     c46:	8f 4f       	sbci	r24, 0xFF	; 255
     c48:	9f 4f       	sbci	r25, 0xFF	; 255
     c4a:	08 95       	ret

00000c4c <__fp_split3>:
     c4c:	57 fd       	sbrc	r21, 7
     c4e:	90 58       	subi	r25, 0x80	; 128
     c50:	44 0f       	add	r20, r20
     c52:	55 1f       	adc	r21, r21
     c54:	59 f0       	breq	.+22     	; 0xc6c <__fp_splitA+0x10>
     c56:	5f 3f       	cpi	r21, 0xFF	; 255
     c58:	71 f0       	breq	.+28     	; 0xc76 <__fp_splitA+0x1a>
     c5a:	47 95       	ror	r20

00000c5c <__fp_splitA>:
     c5c:	88 0f       	add	r24, r24
     c5e:	97 fb       	bst	r25, 7
     c60:	99 1f       	adc	r25, r25
     c62:	61 f0       	breq	.+24     	; 0xc7c <__fp_splitA+0x20>
     c64:	9f 3f       	cpi	r25, 0xFF	; 255
     c66:	79 f0       	breq	.+30     	; 0xc86 <__fp_splitA+0x2a>
     c68:	87 95       	ror	r24
     c6a:	08 95       	ret
     c6c:	12 16       	cp	r1, r18
     c6e:	13 06       	cpc	r1, r19
     c70:	14 06       	cpc	r1, r20
     c72:	55 1f       	adc	r21, r21
     c74:	f2 cf       	rjmp	.-28     	; 0xc5a <__fp_split3+0xe>
     c76:	46 95       	lsr	r20
     c78:	f1 df       	rcall	.-30     	; 0xc5c <__fp_splitA>
     c7a:	08 c0       	rjmp	.+16     	; 0xc8c <__fp_splitA+0x30>
     c7c:	16 16       	cp	r1, r22
     c7e:	17 06       	cpc	r1, r23
     c80:	18 06       	cpc	r1, r24
     c82:	99 1f       	adc	r25, r25
     c84:	f1 cf       	rjmp	.-30     	; 0xc68 <__fp_splitA+0xc>
     c86:	86 95       	lsr	r24
     c88:	71 05       	cpc	r23, r1
     c8a:	61 05       	cpc	r22, r1
     c8c:	08 94       	sec
     c8e:	08 95       	ret

00000c90 <__fp_zero>:
     c90:	e8 94       	clt

00000c92 <__fp_szero>:
     c92:	bb 27       	eor	r27, r27
     c94:	66 27       	eor	r22, r22
     c96:	77 27       	eor	r23, r23
     c98:	cb 01       	movw	r24, r22
     c9a:	97 f9       	bld	r25, 7
     c9c:	08 95       	ret

00000c9e <__gesf2>:
     c9e:	8a df       	rcall	.-236    	; 0xbb4 <__fp_cmp>
     ca0:	08 f4       	brcc	.+2      	; 0xca4 <__gesf2+0x6>
     ca2:	8f ef       	ldi	r24, 0xFF	; 255
     ca4:	08 95       	ret

00000ca6 <lrint>:
     ca6:	da df       	rcall	.-76     	; 0xc5c <__fp_splitA>
     ca8:	a8 f1       	brcs	.+106    	; 0xd14 <lrint+0x6e>
     caa:	9e 57       	subi	r25, 0x7E	; 126
     cac:	a8 f1       	brcs	.+106    	; 0xd18 <lrint+0x72>
     cae:	98 51       	subi	r25, 0x18	; 24
     cb0:	60 f0       	brcs	.+24     	; 0xcca <lrint+0x24>
     cb2:	39 f1       	breq	.+78     	; 0xd02 <lrint+0x5c>
     cb4:	98 30       	cpi	r25, 0x08	; 8
     cb6:	70 f5       	brcc	.+92     	; 0xd14 <lrint+0x6e>
     cb8:	09 2e       	mov	r0, r25
     cba:	99 27       	eor	r25, r25
     cbc:	66 0f       	add	r22, r22
     cbe:	77 1f       	adc	r23, r23
     cc0:	88 1f       	adc	r24, r24
     cc2:	99 1f       	adc	r25, r25
     cc4:	0a 94       	dec	r0
     cc6:	d1 f7       	brne	.-12     	; 0xcbc <lrint+0x16>
     cc8:	1c c0       	rjmp	.+56     	; 0xd02 <lrint+0x5c>
     cca:	bb 27       	eor	r27, r27
     ccc:	99 3f       	cpi	r25, 0xF9	; 249
     cce:	4c f4       	brge	.+18     	; 0xce2 <lrint+0x3c>
     cd0:	b1 11       	cpse	r27, r1
     cd2:	b1 e0       	ldi	r27, 0x01	; 1
     cd4:	b6 2b       	or	r27, r22
     cd6:	67 2f       	mov	r22, r23
     cd8:	78 2f       	mov	r23, r24
     cda:	88 27       	eor	r24, r24
     cdc:	98 5f       	subi	r25, 0xF8	; 248
     cde:	b1 f7       	brne	.-20     	; 0xccc <lrint+0x26>
     ce0:	08 c0       	rjmp	.+16     	; 0xcf2 <lrint+0x4c>
     ce2:	86 95       	lsr	r24
     ce4:	77 95       	ror	r23
     ce6:	67 95       	ror	r22
     ce8:	b7 95       	ror	r27
     cea:	08 f4       	brcc	.+2      	; 0xcee <lrint+0x48>
     cec:	b1 60       	ori	r27, 0x01	; 1
     cee:	93 95       	inc	r25
     cf0:	c1 f7       	brne	.-16     	; 0xce2 <lrint+0x3c>
     cf2:	bb 0f       	add	r27, r27
     cf4:	30 f4       	brcc	.+12     	; 0xd02 <lrint+0x5c>
     cf6:	11 f4       	brne	.+4      	; 0xcfc <lrint+0x56>
     cf8:	60 ff       	sbrs	r22, 0
     cfa:	03 c0       	rjmp	.+6      	; 0xd02 <lrint+0x5c>
     cfc:	6f 5f       	subi	r22, 0xFF	; 255
     cfe:	7f 4f       	sbci	r23, 0xFF	; 255
     d00:	8f 4f       	sbci	r24, 0xFF	; 255
     d02:	3e f4       	brtc	.+14     	; 0xd12 <lrint+0x6c>
     d04:	90 95       	com	r25
     d06:	80 95       	com	r24
     d08:	70 95       	com	r23
     d0a:	61 95       	neg	r22
     d0c:	7f 4f       	sbci	r23, 0xFF	; 255
     d0e:	8f 4f       	sbci	r24, 0xFF	; 255
     d10:	9f 4f       	sbci	r25, 0xFF	; 255
     d12:	08 95       	ret
     d14:	68 94       	set
     d16:	bd cf       	rjmp	.-134    	; 0xc92 <__fp_szero>
     d18:	bb cf       	rjmp	.-138    	; 0xc90 <__fp_zero>

00000d1a <__mulsf3>:
     d1a:	0b d0       	rcall	.+22     	; 0xd32 <__mulsf3x>
     d1c:	86 cf       	rjmp	.-244    	; 0xc2a <__fp_round>
     d1e:	77 df       	rcall	.-274    	; 0xc0e <__fp_pscA>
     d20:	28 f0       	brcs	.+10     	; 0xd2c <__mulsf3+0x12>
     d22:	7c df       	rcall	.-264    	; 0xc1c <__fp_pscB>
     d24:	18 f0       	brcs	.+6      	; 0xd2c <__mulsf3+0x12>
     d26:	95 23       	and	r25, r21
     d28:	09 f0       	breq	.+2      	; 0xd2c <__mulsf3+0x12>
     d2a:	68 cf       	rjmp	.-304    	; 0xbfc <__fp_inf>
     d2c:	6d cf       	rjmp	.-294    	; 0xc08 <__fp_nan>
     d2e:	11 24       	eor	r1, r1
     d30:	b0 cf       	rjmp	.-160    	; 0xc92 <__fp_szero>

00000d32 <__mulsf3x>:
     d32:	8c df       	rcall	.-232    	; 0xc4c <__fp_split3>
     d34:	a0 f3       	brcs	.-24     	; 0xd1e <__mulsf3+0x4>

00000d36 <__mulsf3_pse>:
     d36:	95 9f       	mul	r25, r21
     d38:	d1 f3       	breq	.-12     	; 0xd2e <__mulsf3+0x14>
     d3a:	95 0f       	add	r25, r21
     d3c:	50 e0       	ldi	r21, 0x00	; 0
     d3e:	55 1f       	adc	r21, r21
     d40:	62 9f       	mul	r22, r18
     d42:	f0 01       	movw	r30, r0
     d44:	72 9f       	mul	r23, r18
     d46:	bb 27       	eor	r27, r27
     d48:	f0 0d       	add	r31, r0
     d4a:	b1 1d       	adc	r27, r1
     d4c:	63 9f       	mul	r22, r19
     d4e:	aa 27       	eor	r26, r26
     d50:	f0 0d       	add	r31, r0
     d52:	b1 1d       	adc	r27, r1
     d54:	aa 1f       	adc	r26, r26
     d56:	64 9f       	mul	r22, r20
     d58:	66 27       	eor	r22, r22
     d5a:	b0 0d       	add	r27, r0
     d5c:	a1 1d       	adc	r26, r1
     d5e:	66 1f       	adc	r22, r22
     d60:	82 9f       	mul	r24, r18
     d62:	22 27       	eor	r18, r18
     d64:	b0 0d       	add	r27, r0
     d66:	a1 1d       	adc	r26, r1
     d68:	62 1f       	adc	r22, r18
     d6a:	73 9f       	mul	r23, r19
     d6c:	b0 0d       	add	r27, r0
     d6e:	a1 1d       	adc	r26, r1
     d70:	62 1f       	adc	r22, r18
     d72:	83 9f       	mul	r24, r19
     d74:	a0 0d       	add	r26, r0
     d76:	61 1d       	adc	r22, r1
     d78:	22 1f       	adc	r18, r18
     d7a:	74 9f       	mul	r23, r20
     d7c:	33 27       	eor	r19, r19
     d7e:	a0 0d       	add	r26, r0
     d80:	61 1d       	adc	r22, r1
     d82:	23 1f       	adc	r18, r19
     d84:	84 9f       	mul	r24, r20
     d86:	60 0d       	add	r22, r0
     d88:	21 1d       	adc	r18, r1
     d8a:	82 2f       	mov	r24, r18
     d8c:	76 2f       	mov	r23, r22
     d8e:	6a 2f       	mov	r22, r26
     d90:	11 24       	eor	r1, r1
     d92:	9f 57       	subi	r25, 0x7F	; 127
     d94:	50 40       	sbci	r21, 0x00	; 0
     d96:	8a f0       	brmi	.+34     	; 0xdba <__mulsf3_pse+0x84>
     d98:	e1 f0       	breq	.+56     	; 0xdd2 <__mulsf3_pse+0x9c>
     d9a:	88 23       	and	r24, r24
     d9c:	4a f0       	brmi	.+18     	; 0xdb0 <__mulsf3_pse+0x7a>
     d9e:	ee 0f       	add	r30, r30
     da0:	ff 1f       	adc	r31, r31
     da2:	bb 1f       	adc	r27, r27
     da4:	66 1f       	adc	r22, r22
     da6:	77 1f       	adc	r23, r23
     da8:	88 1f       	adc	r24, r24
     daa:	91 50       	subi	r25, 0x01	; 1
     dac:	50 40       	sbci	r21, 0x00	; 0
     dae:	a9 f7       	brne	.-22     	; 0xd9a <__mulsf3_pse+0x64>
     db0:	9e 3f       	cpi	r25, 0xFE	; 254
     db2:	51 05       	cpc	r21, r1
     db4:	70 f0       	brcs	.+28     	; 0xdd2 <__mulsf3_pse+0x9c>
     db6:	22 cf       	rjmp	.-444    	; 0xbfc <__fp_inf>
     db8:	6c cf       	rjmp	.-296    	; 0xc92 <__fp_szero>
     dba:	5f 3f       	cpi	r21, 0xFF	; 255
     dbc:	ec f3       	brlt	.-6      	; 0xdb8 <__mulsf3_pse+0x82>
     dbe:	98 3e       	cpi	r25, 0xE8	; 232
     dc0:	dc f3       	brlt	.-10     	; 0xdb8 <__mulsf3_pse+0x82>
     dc2:	86 95       	lsr	r24
     dc4:	77 95       	ror	r23
     dc6:	67 95       	ror	r22
     dc8:	b7 95       	ror	r27
     dca:	f7 95       	ror	r31
     dcc:	e7 95       	ror	r30
     dce:	9f 5f       	subi	r25, 0xFF	; 255
     dd0:	c1 f7       	brne	.-16     	; 0xdc2 <__mulsf3_pse+0x8c>
     dd2:	fe 2b       	or	r31, r30
     dd4:	88 0f       	add	r24, r24
     dd6:	91 1d       	adc	r25, r1
     dd8:	96 95       	lsr	r25
     dda:	87 95       	ror	r24
     ddc:	97 f9       	bld	r25, 7
     dde:	08 95       	ret

00000de0 <__udivmodsi4>:
     de0:	a1 e2       	ldi	r26, 0x21	; 33
     de2:	1a 2e       	mov	r1, r26
     de4:	aa 1b       	sub	r26, r26
     de6:	bb 1b       	sub	r27, r27
     de8:	fd 01       	movw	r30, r26
     dea:	0d c0       	rjmp	.+26     	; 0xe06 <__udivmodsi4_ep>

00000dec <__udivmodsi4_loop>:
     dec:	aa 1f       	adc	r26, r26
     dee:	bb 1f       	adc	r27, r27
     df0:	ee 1f       	adc	r30, r30
     df2:	ff 1f       	adc	r31, r31
     df4:	a2 17       	cp	r26, r18
     df6:	b3 07       	cpc	r27, r19
     df8:	e4 07       	cpc	r30, r20
     dfa:	f5 07       	cpc	r31, r21
     dfc:	20 f0       	brcs	.+8      	; 0xe06 <__udivmodsi4_ep>
     dfe:	a2 1b       	sub	r26, r18
     e00:	b3 0b       	sbc	r27, r19
     e02:	e4 0b       	sbc	r30, r20
     e04:	f5 0b       	sbc	r31, r21

00000e06 <__udivmodsi4_ep>:
     e06:	66 1f       	adc	r22, r22
     e08:	77 1f       	adc	r23, r23
     e0a:	88 1f       	adc	r24, r24
     e0c:	99 1f       	adc	r25, r25
     e0e:	1a 94       	dec	r1
     e10:	69 f7       	brne	.-38     	; 0xdec <__udivmodsi4_loop>
     e12:	60 95       	com	r22
     e14:	70 95       	com	r23
     e16:	80 95       	com	r24
     e18:	90 95       	com	r25
     e1a:	9b 01       	movw	r18, r22
     e1c:	ac 01       	movw	r20, r24
     e1e:	bd 01       	movw	r22, r26
     e20:	cf 01       	movw	r24, r30
     e22:	08 95       	ret

00000e24 <__muluhisi3>:
     e24:	09 d0       	rcall	.+18     	; 0xe38 <__umulhisi3>
     e26:	a5 9f       	mul	r26, r21
     e28:	90 0d       	add	r25, r0
     e2a:	b4 9f       	mul	r27, r20
     e2c:	90 0d       	add	r25, r0
     e2e:	a4 9f       	mul	r26, r20
     e30:	80 0d       	add	r24, r0
     e32:	91 1d       	adc	r25, r1
     e34:	11 24       	eor	r1, r1
     e36:	08 95       	ret

00000e38 <__umulhisi3>:
     e38:	a2 9f       	mul	r26, r18
     e3a:	b0 01       	movw	r22, r0
     e3c:	b3 9f       	mul	r27, r19
     e3e:	c0 01       	movw	r24, r0
     e40:	a3 9f       	mul	r26, r19
     e42:	70 0d       	add	r23, r0
     e44:	81 1d       	adc	r24, r1
     e46:	11 24       	eor	r1, r1
     e48:	91 1d       	adc	r25, r1
     e4a:	b2 9f       	mul	r27, r18
     e4c:	70 0d       	add	r23, r0
     e4e:	81 1d       	adc	r24, r1
     e50:	11 24       	eor	r1, r1
     e52:	91 1d       	adc	r25, r1
     e54:	08 95       	ret

00000e56 <sprintf>:
     e56:	0f 93       	push	r16
     e58:	1f 93       	push	r17
     e5a:	cf 93       	push	r28
     e5c:	df 93       	push	r29
     e5e:	cd b7       	in	r28, 0x3d	; 61
     e60:	de b7       	in	r29, 0x3e	; 62
     e62:	2e 97       	sbiw	r28, 0x0e	; 14
     e64:	0f b6       	in	r0, 0x3f	; 63
     e66:	f8 94       	cli
     e68:	de bf       	out	0x3e, r29	; 62
     e6a:	0f be       	out	0x3f, r0	; 63
     e6c:	cd bf       	out	0x3d, r28	; 61
     e6e:	0e 89       	ldd	r16, Y+22	; 0x16
     e70:	1f 89       	ldd	r17, Y+23	; 0x17
     e72:	86 e0       	ldi	r24, 0x06	; 6
     e74:	8c 83       	std	Y+4, r24	; 0x04
     e76:	1a 83       	std	Y+2, r17	; 0x02
     e78:	09 83       	std	Y+1, r16	; 0x01
     e7a:	8f ef       	ldi	r24, 0xFF	; 255
     e7c:	9f e7       	ldi	r25, 0x7F	; 127
     e7e:	9e 83       	std	Y+6, r25	; 0x06
     e80:	8d 83       	std	Y+5, r24	; 0x05
     e82:	ae 01       	movw	r20, r28
     e84:	46 5e       	subi	r20, 0xE6	; 230
     e86:	5f 4f       	sbci	r21, 0xFF	; 255
     e88:	68 8d       	ldd	r22, Y+24	; 0x18
     e8a:	79 8d       	ldd	r23, Y+25	; 0x19
     e8c:	ce 01       	movw	r24, r28
     e8e:	01 96       	adiw	r24, 0x01	; 1
     e90:	31 d0       	rcall	.+98     	; 0xef4 <vfprintf>
     e92:	ef 81       	ldd	r30, Y+7	; 0x07
     e94:	f8 85       	ldd	r31, Y+8	; 0x08
     e96:	e0 0f       	add	r30, r16
     e98:	f1 1f       	adc	r31, r17
     e9a:	10 82       	st	Z, r1
     e9c:	2e 96       	adiw	r28, 0x0e	; 14
     e9e:	0f b6       	in	r0, 0x3f	; 63
     ea0:	f8 94       	cli
     ea2:	de bf       	out	0x3e, r29	; 62
     ea4:	0f be       	out	0x3f, r0	; 63
     ea6:	cd bf       	out	0x3d, r28	; 61
     ea8:	df 91       	pop	r29
     eaa:	cf 91       	pop	r28
     eac:	1f 91       	pop	r17
     eae:	0f 91       	pop	r16
     eb0:	08 95       	ret

00000eb2 <sscanf>:
     eb2:	cf 93       	push	r28
     eb4:	df 93       	push	r29
     eb6:	cd b7       	in	r28, 0x3d	; 61
     eb8:	de b7       	in	r29, 0x3e	; 62
     eba:	2e 97       	sbiw	r28, 0x0e	; 14
     ebc:	0f b6       	in	r0, 0x3f	; 63
     ebe:	f8 94       	cli
     ec0:	de bf       	out	0x3e, r29	; 62
     ec2:	0f be       	out	0x3f, r0	; 63
     ec4:	cd bf       	out	0x3d, r28	; 61
     ec6:	85 e0       	ldi	r24, 0x05	; 5
     ec8:	8c 83       	std	Y+4, r24	; 0x04
     eca:	8c 89       	ldd	r24, Y+20	; 0x14
     ecc:	9d 89       	ldd	r25, Y+21	; 0x15
     ece:	9a 83       	std	Y+2, r25	; 0x02
     ed0:	89 83       	std	Y+1, r24	; 0x01
     ed2:	ae 01       	movw	r20, r28
     ed4:	48 5e       	subi	r20, 0xE8	; 232
     ed6:	5f 4f       	sbci	r21, 0xFF	; 255
     ed8:	6e 89       	ldd	r22, Y+22	; 0x16
     eda:	7f 89       	ldd	r23, Y+23	; 0x17
     edc:	ce 01       	movw	r24, r28
     ede:	01 96       	adiw	r24, 0x01	; 1
     ee0:	b8 d3       	rcall	.+1904   	; 0x1652 <vfscanf>
     ee2:	2e 96       	adiw	r28, 0x0e	; 14
     ee4:	0f b6       	in	r0, 0x3f	; 63
     ee6:	f8 94       	cli
     ee8:	de bf       	out	0x3e, r29	; 62
     eea:	0f be       	out	0x3f, r0	; 63
     eec:	cd bf       	out	0x3d, r28	; 61
     eee:	df 91       	pop	r29
     ef0:	cf 91       	pop	r28
     ef2:	08 95       	ret

00000ef4 <vfprintf>:
     ef4:	2f 92       	push	r2
     ef6:	3f 92       	push	r3
     ef8:	4f 92       	push	r4
     efa:	5f 92       	push	r5
     efc:	6f 92       	push	r6
     efe:	7f 92       	push	r7
     f00:	8f 92       	push	r8
     f02:	9f 92       	push	r9
     f04:	af 92       	push	r10
     f06:	bf 92       	push	r11
     f08:	cf 92       	push	r12
     f0a:	df 92       	push	r13
     f0c:	ef 92       	push	r14
     f0e:	ff 92       	push	r15
     f10:	0f 93       	push	r16
     f12:	1f 93       	push	r17
     f14:	cf 93       	push	r28
     f16:	df 93       	push	r29
     f18:	cd b7       	in	r28, 0x3d	; 61
     f1a:	de b7       	in	r29, 0x3e	; 62
     f1c:	2b 97       	sbiw	r28, 0x0b	; 11
     f1e:	0f b6       	in	r0, 0x3f	; 63
     f20:	f8 94       	cli
     f22:	de bf       	out	0x3e, r29	; 62
     f24:	0f be       	out	0x3f, r0	; 63
     f26:	cd bf       	out	0x3d, r28	; 61
     f28:	6c 01       	movw	r12, r24
     f2a:	7b 01       	movw	r14, r22
     f2c:	8a 01       	movw	r16, r20
     f2e:	fc 01       	movw	r30, r24
     f30:	17 82       	std	Z+7, r1	; 0x07
     f32:	16 82       	std	Z+6, r1	; 0x06
     f34:	83 81       	ldd	r24, Z+3	; 0x03
     f36:	81 ff       	sbrs	r24, 1
     f38:	bf c1       	rjmp	.+894    	; 0x12b8 <vfprintf+0x3c4>
     f3a:	ce 01       	movw	r24, r28
     f3c:	01 96       	adiw	r24, 0x01	; 1
     f3e:	3c 01       	movw	r6, r24
     f40:	f6 01       	movw	r30, r12
     f42:	93 81       	ldd	r25, Z+3	; 0x03
     f44:	f7 01       	movw	r30, r14
     f46:	93 fd       	sbrc	r25, 3
     f48:	85 91       	lpm	r24, Z+
     f4a:	93 ff       	sbrs	r25, 3
     f4c:	81 91       	ld	r24, Z+
     f4e:	7f 01       	movw	r14, r30
     f50:	88 23       	and	r24, r24
     f52:	09 f4       	brne	.+2      	; 0xf56 <vfprintf+0x62>
     f54:	ad c1       	rjmp	.+858    	; 0x12b0 <vfprintf+0x3bc>
     f56:	85 32       	cpi	r24, 0x25	; 37
     f58:	39 f4       	brne	.+14     	; 0xf68 <vfprintf+0x74>
     f5a:	93 fd       	sbrc	r25, 3
     f5c:	85 91       	lpm	r24, Z+
     f5e:	93 ff       	sbrs	r25, 3
     f60:	81 91       	ld	r24, Z+
     f62:	7f 01       	movw	r14, r30
     f64:	85 32       	cpi	r24, 0x25	; 37
     f66:	21 f4       	brne	.+8      	; 0xf70 <vfprintf+0x7c>
     f68:	b6 01       	movw	r22, r12
     f6a:	90 e0       	ldi	r25, 0x00	; 0
     f6c:	f0 d4       	rcall	.+2528   	; 0x194e <fputc>
     f6e:	e8 cf       	rjmp	.-48     	; 0xf40 <vfprintf+0x4c>
     f70:	91 2c       	mov	r9, r1
     f72:	21 2c       	mov	r2, r1
     f74:	31 2c       	mov	r3, r1
     f76:	ff e1       	ldi	r31, 0x1F	; 31
     f78:	f3 15       	cp	r31, r3
     f7a:	d8 f0       	brcs	.+54     	; 0xfb2 <vfprintf+0xbe>
     f7c:	8b 32       	cpi	r24, 0x2B	; 43
     f7e:	79 f0       	breq	.+30     	; 0xf9e <vfprintf+0xaa>
     f80:	38 f4       	brcc	.+14     	; 0xf90 <vfprintf+0x9c>
     f82:	80 32       	cpi	r24, 0x20	; 32
     f84:	79 f0       	breq	.+30     	; 0xfa4 <vfprintf+0xb0>
     f86:	83 32       	cpi	r24, 0x23	; 35
     f88:	a1 f4       	brne	.+40     	; 0xfb2 <vfprintf+0xbe>
     f8a:	23 2d       	mov	r18, r3
     f8c:	20 61       	ori	r18, 0x10	; 16
     f8e:	1d c0       	rjmp	.+58     	; 0xfca <vfprintf+0xd6>
     f90:	8d 32       	cpi	r24, 0x2D	; 45
     f92:	61 f0       	breq	.+24     	; 0xfac <vfprintf+0xb8>
     f94:	80 33       	cpi	r24, 0x30	; 48
     f96:	69 f4       	brne	.+26     	; 0xfb2 <vfprintf+0xbe>
     f98:	23 2d       	mov	r18, r3
     f9a:	21 60       	ori	r18, 0x01	; 1
     f9c:	16 c0       	rjmp	.+44     	; 0xfca <vfprintf+0xd6>
     f9e:	83 2d       	mov	r24, r3
     fa0:	82 60       	ori	r24, 0x02	; 2
     fa2:	38 2e       	mov	r3, r24
     fa4:	e3 2d       	mov	r30, r3
     fa6:	e4 60       	ori	r30, 0x04	; 4
     fa8:	3e 2e       	mov	r3, r30
     faa:	2a c0       	rjmp	.+84     	; 0x1000 <vfprintf+0x10c>
     fac:	f3 2d       	mov	r31, r3
     fae:	f8 60       	ori	r31, 0x08	; 8
     fb0:	1d c0       	rjmp	.+58     	; 0xfec <vfprintf+0xf8>
     fb2:	37 fc       	sbrc	r3, 7
     fb4:	2d c0       	rjmp	.+90     	; 0x1010 <vfprintf+0x11c>
     fb6:	20 ed       	ldi	r18, 0xD0	; 208
     fb8:	28 0f       	add	r18, r24
     fba:	2a 30       	cpi	r18, 0x0A	; 10
     fbc:	40 f0       	brcs	.+16     	; 0xfce <vfprintf+0xda>
     fbe:	8e 32       	cpi	r24, 0x2E	; 46
     fc0:	b9 f4       	brne	.+46     	; 0xff0 <vfprintf+0xfc>
     fc2:	36 fc       	sbrc	r3, 6
     fc4:	75 c1       	rjmp	.+746    	; 0x12b0 <vfprintf+0x3bc>
     fc6:	23 2d       	mov	r18, r3
     fc8:	20 64       	ori	r18, 0x40	; 64
     fca:	32 2e       	mov	r3, r18
     fcc:	19 c0       	rjmp	.+50     	; 0x1000 <vfprintf+0x10c>
     fce:	36 fe       	sbrs	r3, 6
     fd0:	06 c0       	rjmp	.+12     	; 0xfde <vfprintf+0xea>
     fd2:	8a e0       	ldi	r24, 0x0A	; 10
     fd4:	98 9e       	mul	r9, r24
     fd6:	20 0d       	add	r18, r0
     fd8:	11 24       	eor	r1, r1
     fda:	92 2e       	mov	r9, r18
     fdc:	11 c0       	rjmp	.+34     	; 0x1000 <vfprintf+0x10c>
     fde:	ea e0       	ldi	r30, 0x0A	; 10
     fe0:	2e 9e       	mul	r2, r30
     fe2:	20 0d       	add	r18, r0
     fe4:	11 24       	eor	r1, r1
     fe6:	22 2e       	mov	r2, r18
     fe8:	f3 2d       	mov	r31, r3
     fea:	f0 62       	ori	r31, 0x20	; 32
     fec:	3f 2e       	mov	r3, r31
     fee:	08 c0       	rjmp	.+16     	; 0x1000 <vfprintf+0x10c>
     ff0:	8c 36       	cpi	r24, 0x6C	; 108
     ff2:	21 f4       	brne	.+8      	; 0xffc <vfprintf+0x108>
     ff4:	83 2d       	mov	r24, r3
     ff6:	80 68       	ori	r24, 0x80	; 128
     ff8:	38 2e       	mov	r3, r24
     ffa:	02 c0       	rjmp	.+4      	; 0x1000 <vfprintf+0x10c>
     ffc:	88 36       	cpi	r24, 0x68	; 104
     ffe:	41 f4       	brne	.+16     	; 0x1010 <vfprintf+0x11c>
    1000:	f7 01       	movw	r30, r14
    1002:	93 fd       	sbrc	r25, 3
    1004:	85 91       	lpm	r24, Z+
    1006:	93 ff       	sbrs	r25, 3
    1008:	81 91       	ld	r24, Z+
    100a:	7f 01       	movw	r14, r30
    100c:	81 11       	cpse	r24, r1
    100e:	b3 cf       	rjmp	.-154    	; 0xf76 <vfprintf+0x82>
    1010:	98 2f       	mov	r25, r24
    1012:	9f 7d       	andi	r25, 0xDF	; 223
    1014:	95 54       	subi	r25, 0x45	; 69
    1016:	93 30       	cpi	r25, 0x03	; 3
    1018:	28 f4       	brcc	.+10     	; 0x1024 <vfprintf+0x130>
    101a:	0c 5f       	subi	r16, 0xFC	; 252
    101c:	1f 4f       	sbci	r17, 0xFF	; 255
    101e:	9f e3       	ldi	r25, 0x3F	; 63
    1020:	99 83       	std	Y+1, r25	; 0x01
    1022:	0d c0       	rjmp	.+26     	; 0x103e <vfprintf+0x14a>
    1024:	83 36       	cpi	r24, 0x63	; 99
    1026:	31 f0       	breq	.+12     	; 0x1034 <vfprintf+0x140>
    1028:	83 37       	cpi	r24, 0x73	; 115
    102a:	71 f0       	breq	.+28     	; 0x1048 <vfprintf+0x154>
    102c:	83 35       	cpi	r24, 0x53	; 83
    102e:	09 f0       	breq	.+2      	; 0x1032 <vfprintf+0x13e>
    1030:	55 c0       	rjmp	.+170    	; 0x10dc <vfprintf+0x1e8>
    1032:	20 c0       	rjmp	.+64     	; 0x1074 <vfprintf+0x180>
    1034:	f8 01       	movw	r30, r16
    1036:	80 81       	ld	r24, Z
    1038:	89 83       	std	Y+1, r24	; 0x01
    103a:	0e 5f       	subi	r16, 0xFE	; 254
    103c:	1f 4f       	sbci	r17, 0xFF	; 255
    103e:	88 24       	eor	r8, r8
    1040:	83 94       	inc	r8
    1042:	91 2c       	mov	r9, r1
    1044:	53 01       	movw	r10, r6
    1046:	12 c0       	rjmp	.+36     	; 0x106c <vfprintf+0x178>
    1048:	28 01       	movw	r4, r16
    104a:	f2 e0       	ldi	r31, 0x02	; 2
    104c:	4f 0e       	add	r4, r31
    104e:	51 1c       	adc	r5, r1
    1050:	f8 01       	movw	r30, r16
    1052:	a0 80       	ld	r10, Z
    1054:	b1 80       	ldd	r11, Z+1	; 0x01
    1056:	36 fe       	sbrs	r3, 6
    1058:	03 c0       	rjmp	.+6      	; 0x1060 <vfprintf+0x16c>
    105a:	69 2d       	mov	r22, r9
    105c:	70 e0       	ldi	r23, 0x00	; 0
    105e:	02 c0       	rjmp	.+4      	; 0x1064 <vfprintf+0x170>
    1060:	6f ef       	ldi	r22, 0xFF	; 255
    1062:	7f ef       	ldi	r23, 0xFF	; 255
    1064:	c5 01       	movw	r24, r10
    1066:	2a d4       	rcall	.+2132   	; 0x18bc <strnlen>
    1068:	4c 01       	movw	r8, r24
    106a:	82 01       	movw	r16, r4
    106c:	f3 2d       	mov	r31, r3
    106e:	ff 77       	andi	r31, 0x7F	; 127
    1070:	3f 2e       	mov	r3, r31
    1072:	15 c0       	rjmp	.+42     	; 0x109e <vfprintf+0x1aa>
    1074:	28 01       	movw	r4, r16
    1076:	22 e0       	ldi	r18, 0x02	; 2
    1078:	42 0e       	add	r4, r18
    107a:	51 1c       	adc	r5, r1
    107c:	f8 01       	movw	r30, r16
    107e:	a0 80       	ld	r10, Z
    1080:	b1 80       	ldd	r11, Z+1	; 0x01
    1082:	36 fe       	sbrs	r3, 6
    1084:	03 c0       	rjmp	.+6      	; 0x108c <vfprintf+0x198>
    1086:	69 2d       	mov	r22, r9
    1088:	70 e0       	ldi	r23, 0x00	; 0
    108a:	02 c0       	rjmp	.+4      	; 0x1090 <vfprintf+0x19c>
    108c:	6f ef       	ldi	r22, 0xFF	; 255
    108e:	7f ef       	ldi	r23, 0xFF	; 255
    1090:	c5 01       	movw	r24, r10
    1092:	09 d4       	rcall	.+2066   	; 0x18a6 <strnlen_P>
    1094:	4c 01       	movw	r8, r24
    1096:	f3 2d       	mov	r31, r3
    1098:	f0 68       	ori	r31, 0x80	; 128
    109a:	3f 2e       	mov	r3, r31
    109c:	82 01       	movw	r16, r4
    109e:	33 fc       	sbrc	r3, 3
    10a0:	19 c0       	rjmp	.+50     	; 0x10d4 <vfprintf+0x1e0>
    10a2:	82 2d       	mov	r24, r2
    10a4:	90 e0       	ldi	r25, 0x00	; 0
    10a6:	88 16       	cp	r8, r24
    10a8:	99 06       	cpc	r9, r25
    10aa:	a0 f4       	brcc	.+40     	; 0x10d4 <vfprintf+0x1e0>
    10ac:	b6 01       	movw	r22, r12
    10ae:	80 e2       	ldi	r24, 0x20	; 32
    10b0:	90 e0       	ldi	r25, 0x00	; 0
    10b2:	4d d4       	rcall	.+2202   	; 0x194e <fputc>
    10b4:	2a 94       	dec	r2
    10b6:	f5 cf       	rjmp	.-22     	; 0x10a2 <vfprintf+0x1ae>
    10b8:	f5 01       	movw	r30, r10
    10ba:	37 fc       	sbrc	r3, 7
    10bc:	85 91       	lpm	r24, Z+
    10be:	37 fe       	sbrs	r3, 7
    10c0:	81 91       	ld	r24, Z+
    10c2:	5f 01       	movw	r10, r30
    10c4:	b6 01       	movw	r22, r12
    10c6:	90 e0       	ldi	r25, 0x00	; 0
    10c8:	42 d4       	rcall	.+2180   	; 0x194e <fputc>
    10ca:	21 10       	cpse	r2, r1
    10cc:	2a 94       	dec	r2
    10ce:	21 e0       	ldi	r18, 0x01	; 1
    10d0:	82 1a       	sub	r8, r18
    10d2:	91 08       	sbc	r9, r1
    10d4:	81 14       	cp	r8, r1
    10d6:	91 04       	cpc	r9, r1
    10d8:	79 f7       	brne	.-34     	; 0x10b8 <vfprintf+0x1c4>
    10da:	e1 c0       	rjmp	.+450    	; 0x129e <vfprintf+0x3aa>
    10dc:	84 36       	cpi	r24, 0x64	; 100
    10de:	11 f0       	breq	.+4      	; 0x10e4 <vfprintf+0x1f0>
    10e0:	89 36       	cpi	r24, 0x69	; 105
    10e2:	39 f5       	brne	.+78     	; 0x1132 <vfprintf+0x23e>
    10e4:	f8 01       	movw	r30, r16
    10e6:	37 fe       	sbrs	r3, 7
    10e8:	07 c0       	rjmp	.+14     	; 0x10f8 <vfprintf+0x204>
    10ea:	60 81       	ld	r22, Z
    10ec:	71 81       	ldd	r23, Z+1	; 0x01
    10ee:	82 81       	ldd	r24, Z+2	; 0x02
    10f0:	93 81       	ldd	r25, Z+3	; 0x03
    10f2:	0c 5f       	subi	r16, 0xFC	; 252
    10f4:	1f 4f       	sbci	r17, 0xFF	; 255
    10f6:	08 c0       	rjmp	.+16     	; 0x1108 <vfprintf+0x214>
    10f8:	60 81       	ld	r22, Z
    10fa:	71 81       	ldd	r23, Z+1	; 0x01
    10fc:	07 2e       	mov	r0, r23
    10fe:	00 0c       	add	r0, r0
    1100:	88 0b       	sbc	r24, r24
    1102:	99 0b       	sbc	r25, r25
    1104:	0e 5f       	subi	r16, 0xFE	; 254
    1106:	1f 4f       	sbci	r17, 0xFF	; 255
    1108:	f3 2d       	mov	r31, r3
    110a:	ff 76       	andi	r31, 0x6F	; 111
    110c:	3f 2e       	mov	r3, r31
    110e:	97 ff       	sbrs	r25, 7
    1110:	09 c0       	rjmp	.+18     	; 0x1124 <vfprintf+0x230>
    1112:	90 95       	com	r25
    1114:	80 95       	com	r24
    1116:	70 95       	com	r23
    1118:	61 95       	neg	r22
    111a:	7f 4f       	sbci	r23, 0xFF	; 255
    111c:	8f 4f       	sbci	r24, 0xFF	; 255
    111e:	9f 4f       	sbci	r25, 0xFF	; 255
    1120:	f0 68       	ori	r31, 0x80	; 128
    1122:	3f 2e       	mov	r3, r31
    1124:	2a e0       	ldi	r18, 0x0A	; 10
    1126:	30 e0       	ldi	r19, 0x00	; 0
    1128:	a3 01       	movw	r20, r6
    112a:	66 d4       	rcall	.+2252   	; 0x19f8 <__ultoa_invert>
    112c:	88 2e       	mov	r8, r24
    112e:	86 18       	sub	r8, r6
    1130:	44 c0       	rjmp	.+136    	; 0x11ba <vfprintf+0x2c6>
    1132:	85 37       	cpi	r24, 0x75	; 117
    1134:	31 f4       	brne	.+12     	; 0x1142 <vfprintf+0x24e>
    1136:	23 2d       	mov	r18, r3
    1138:	2f 7e       	andi	r18, 0xEF	; 239
    113a:	b2 2e       	mov	r11, r18
    113c:	2a e0       	ldi	r18, 0x0A	; 10
    113e:	30 e0       	ldi	r19, 0x00	; 0
    1140:	25 c0       	rjmp	.+74     	; 0x118c <vfprintf+0x298>
    1142:	93 2d       	mov	r25, r3
    1144:	99 7f       	andi	r25, 0xF9	; 249
    1146:	b9 2e       	mov	r11, r25
    1148:	8f 36       	cpi	r24, 0x6F	; 111
    114a:	c1 f0       	breq	.+48     	; 0x117c <vfprintf+0x288>
    114c:	18 f4       	brcc	.+6      	; 0x1154 <vfprintf+0x260>
    114e:	88 35       	cpi	r24, 0x58	; 88
    1150:	79 f0       	breq	.+30     	; 0x1170 <vfprintf+0x27c>
    1152:	ae c0       	rjmp	.+348    	; 0x12b0 <vfprintf+0x3bc>
    1154:	80 37       	cpi	r24, 0x70	; 112
    1156:	19 f0       	breq	.+6      	; 0x115e <vfprintf+0x26a>
    1158:	88 37       	cpi	r24, 0x78	; 120
    115a:	21 f0       	breq	.+8      	; 0x1164 <vfprintf+0x270>
    115c:	a9 c0       	rjmp	.+338    	; 0x12b0 <vfprintf+0x3bc>
    115e:	e9 2f       	mov	r30, r25
    1160:	e0 61       	ori	r30, 0x10	; 16
    1162:	be 2e       	mov	r11, r30
    1164:	b4 fe       	sbrs	r11, 4
    1166:	0d c0       	rjmp	.+26     	; 0x1182 <vfprintf+0x28e>
    1168:	fb 2d       	mov	r31, r11
    116a:	f4 60       	ori	r31, 0x04	; 4
    116c:	bf 2e       	mov	r11, r31
    116e:	09 c0       	rjmp	.+18     	; 0x1182 <vfprintf+0x28e>
    1170:	34 fe       	sbrs	r3, 4
    1172:	0a c0       	rjmp	.+20     	; 0x1188 <vfprintf+0x294>
    1174:	29 2f       	mov	r18, r25
    1176:	26 60       	ori	r18, 0x06	; 6
    1178:	b2 2e       	mov	r11, r18
    117a:	06 c0       	rjmp	.+12     	; 0x1188 <vfprintf+0x294>
    117c:	28 e0       	ldi	r18, 0x08	; 8
    117e:	30 e0       	ldi	r19, 0x00	; 0
    1180:	05 c0       	rjmp	.+10     	; 0x118c <vfprintf+0x298>
    1182:	20 e1       	ldi	r18, 0x10	; 16
    1184:	30 e0       	ldi	r19, 0x00	; 0
    1186:	02 c0       	rjmp	.+4      	; 0x118c <vfprintf+0x298>
    1188:	20 e1       	ldi	r18, 0x10	; 16
    118a:	32 e0       	ldi	r19, 0x02	; 2
    118c:	f8 01       	movw	r30, r16
    118e:	b7 fe       	sbrs	r11, 7
    1190:	07 c0       	rjmp	.+14     	; 0x11a0 <vfprintf+0x2ac>
    1192:	60 81       	ld	r22, Z
    1194:	71 81       	ldd	r23, Z+1	; 0x01
    1196:	82 81       	ldd	r24, Z+2	; 0x02
    1198:	93 81       	ldd	r25, Z+3	; 0x03
    119a:	0c 5f       	subi	r16, 0xFC	; 252
    119c:	1f 4f       	sbci	r17, 0xFF	; 255
    119e:	06 c0       	rjmp	.+12     	; 0x11ac <vfprintf+0x2b8>
    11a0:	60 81       	ld	r22, Z
    11a2:	71 81       	ldd	r23, Z+1	; 0x01
    11a4:	80 e0       	ldi	r24, 0x00	; 0
    11a6:	90 e0       	ldi	r25, 0x00	; 0
    11a8:	0e 5f       	subi	r16, 0xFE	; 254
    11aa:	1f 4f       	sbci	r17, 0xFF	; 255
    11ac:	a3 01       	movw	r20, r6
    11ae:	24 d4       	rcall	.+2120   	; 0x19f8 <__ultoa_invert>
    11b0:	88 2e       	mov	r8, r24
    11b2:	86 18       	sub	r8, r6
    11b4:	fb 2d       	mov	r31, r11
    11b6:	ff 77       	andi	r31, 0x7F	; 127
    11b8:	3f 2e       	mov	r3, r31
    11ba:	36 fe       	sbrs	r3, 6
    11bc:	0d c0       	rjmp	.+26     	; 0x11d8 <vfprintf+0x2e4>
    11be:	23 2d       	mov	r18, r3
    11c0:	2e 7f       	andi	r18, 0xFE	; 254
    11c2:	a2 2e       	mov	r10, r18
    11c4:	89 14       	cp	r8, r9
    11c6:	58 f4       	brcc	.+22     	; 0x11de <vfprintf+0x2ea>
    11c8:	34 fe       	sbrs	r3, 4
    11ca:	0b c0       	rjmp	.+22     	; 0x11e2 <vfprintf+0x2ee>
    11cc:	32 fc       	sbrc	r3, 2
    11ce:	09 c0       	rjmp	.+18     	; 0x11e2 <vfprintf+0x2ee>
    11d0:	83 2d       	mov	r24, r3
    11d2:	8e 7e       	andi	r24, 0xEE	; 238
    11d4:	a8 2e       	mov	r10, r24
    11d6:	05 c0       	rjmp	.+10     	; 0x11e2 <vfprintf+0x2ee>
    11d8:	b8 2c       	mov	r11, r8
    11da:	a3 2c       	mov	r10, r3
    11dc:	03 c0       	rjmp	.+6      	; 0x11e4 <vfprintf+0x2f0>
    11de:	b8 2c       	mov	r11, r8
    11e0:	01 c0       	rjmp	.+2      	; 0x11e4 <vfprintf+0x2f0>
    11e2:	b9 2c       	mov	r11, r9
    11e4:	a4 fe       	sbrs	r10, 4
    11e6:	0f c0       	rjmp	.+30     	; 0x1206 <vfprintf+0x312>
    11e8:	fe 01       	movw	r30, r28
    11ea:	e8 0d       	add	r30, r8
    11ec:	f1 1d       	adc	r31, r1
    11ee:	80 81       	ld	r24, Z
    11f0:	80 33       	cpi	r24, 0x30	; 48
    11f2:	21 f4       	brne	.+8      	; 0x11fc <vfprintf+0x308>
    11f4:	9a 2d       	mov	r25, r10
    11f6:	99 7e       	andi	r25, 0xE9	; 233
    11f8:	a9 2e       	mov	r10, r25
    11fa:	09 c0       	rjmp	.+18     	; 0x120e <vfprintf+0x31a>
    11fc:	a2 fe       	sbrs	r10, 2
    11fe:	06 c0       	rjmp	.+12     	; 0x120c <vfprintf+0x318>
    1200:	b3 94       	inc	r11
    1202:	b3 94       	inc	r11
    1204:	04 c0       	rjmp	.+8      	; 0x120e <vfprintf+0x31a>
    1206:	8a 2d       	mov	r24, r10
    1208:	86 78       	andi	r24, 0x86	; 134
    120a:	09 f0       	breq	.+2      	; 0x120e <vfprintf+0x31a>
    120c:	b3 94       	inc	r11
    120e:	a3 fc       	sbrc	r10, 3
    1210:	10 c0       	rjmp	.+32     	; 0x1232 <vfprintf+0x33e>
    1212:	a0 fe       	sbrs	r10, 0
    1214:	06 c0       	rjmp	.+12     	; 0x1222 <vfprintf+0x32e>
    1216:	b2 14       	cp	r11, r2
    1218:	80 f4       	brcc	.+32     	; 0x123a <vfprintf+0x346>
    121a:	28 0c       	add	r2, r8
    121c:	92 2c       	mov	r9, r2
    121e:	9b 18       	sub	r9, r11
    1220:	0d c0       	rjmp	.+26     	; 0x123c <vfprintf+0x348>
    1222:	b2 14       	cp	r11, r2
    1224:	58 f4       	brcc	.+22     	; 0x123c <vfprintf+0x348>
    1226:	b6 01       	movw	r22, r12
    1228:	80 e2       	ldi	r24, 0x20	; 32
    122a:	90 e0       	ldi	r25, 0x00	; 0
    122c:	90 d3       	rcall	.+1824   	; 0x194e <fputc>
    122e:	b3 94       	inc	r11
    1230:	f8 cf       	rjmp	.-16     	; 0x1222 <vfprintf+0x32e>
    1232:	b2 14       	cp	r11, r2
    1234:	18 f4       	brcc	.+6      	; 0x123c <vfprintf+0x348>
    1236:	2b 18       	sub	r2, r11
    1238:	02 c0       	rjmp	.+4      	; 0x123e <vfprintf+0x34a>
    123a:	98 2c       	mov	r9, r8
    123c:	21 2c       	mov	r2, r1
    123e:	a4 fe       	sbrs	r10, 4
    1240:	0f c0       	rjmp	.+30     	; 0x1260 <vfprintf+0x36c>
    1242:	b6 01       	movw	r22, r12
    1244:	80 e3       	ldi	r24, 0x30	; 48
    1246:	90 e0       	ldi	r25, 0x00	; 0
    1248:	82 d3       	rcall	.+1796   	; 0x194e <fputc>
    124a:	a2 fe       	sbrs	r10, 2
    124c:	16 c0       	rjmp	.+44     	; 0x127a <vfprintf+0x386>
    124e:	a1 fc       	sbrc	r10, 1
    1250:	03 c0       	rjmp	.+6      	; 0x1258 <vfprintf+0x364>
    1252:	88 e7       	ldi	r24, 0x78	; 120
    1254:	90 e0       	ldi	r25, 0x00	; 0
    1256:	02 c0       	rjmp	.+4      	; 0x125c <vfprintf+0x368>
    1258:	88 e5       	ldi	r24, 0x58	; 88
    125a:	90 e0       	ldi	r25, 0x00	; 0
    125c:	b6 01       	movw	r22, r12
    125e:	0c c0       	rjmp	.+24     	; 0x1278 <vfprintf+0x384>
    1260:	8a 2d       	mov	r24, r10
    1262:	86 78       	andi	r24, 0x86	; 134
    1264:	51 f0       	breq	.+20     	; 0x127a <vfprintf+0x386>
    1266:	a1 fe       	sbrs	r10, 1
    1268:	02 c0       	rjmp	.+4      	; 0x126e <vfprintf+0x37a>
    126a:	8b e2       	ldi	r24, 0x2B	; 43
    126c:	01 c0       	rjmp	.+2      	; 0x1270 <vfprintf+0x37c>
    126e:	80 e2       	ldi	r24, 0x20	; 32
    1270:	a7 fc       	sbrc	r10, 7
    1272:	8d e2       	ldi	r24, 0x2D	; 45
    1274:	b6 01       	movw	r22, r12
    1276:	90 e0       	ldi	r25, 0x00	; 0
    1278:	6a d3       	rcall	.+1748   	; 0x194e <fputc>
    127a:	89 14       	cp	r8, r9
    127c:	30 f4       	brcc	.+12     	; 0x128a <vfprintf+0x396>
    127e:	b6 01       	movw	r22, r12
    1280:	80 e3       	ldi	r24, 0x30	; 48
    1282:	90 e0       	ldi	r25, 0x00	; 0
    1284:	64 d3       	rcall	.+1736   	; 0x194e <fputc>
    1286:	9a 94       	dec	r9
    1288:	f8 cf       	rjmp	.-16     	; 0x127a <vfprintf+0x386>
    128a:	8a 94       	dec	r8
    128c:	f3 01       	movw	r30, r6
    128e:	e8 0d       	add	r30, r8
    1290:	f1 1d       	adc	r31, r1
    1292:	80 81       	ld	r24, Z
    1294:	b6 01       	movw	r22, r12
    1296:	90 e0       	ldi	r25, 0x00	; 0
    1298:	5a d3       	rcall	.+1716   	; 0x194e <fputc>
    129a:	81 10       	cpse	r8, r1
    129c:	f6 cf       	rjmp	.-20     	; 0x128a <vfprintf+0x396>
    129e:	22 20       	and	r2, r2
    12a0:	09 f4       	brne	.+2      	; 0x12a4 <vfprintf+0x3b0>
    12a2:	4e ce       	rjmp	.-868    	; 0xf40 <vfprintf+0x4c>
    12a4:	b6 01       	movw	r22, r12
    12a6:	80 e2       	ldi	r24, 0x20	; 32
    12a8:	90 e0       	ldi	r25, 0x00	; 0
    12aa:	51 d3       	rcall	.+1698   	; 0x194e <fputc>
    12ac:	2a 94       	dec	r2
    12ae:	f7 cf       	rjmp	.-18     	; 0x129e <vfprintf+0x3aa>
    12b0:	f6 01       	movw	r30, r12
    12b2:	86 81       	ldd	r24, Z+6	; 0x06
    12b4:	97 81       	ldd	r25, Z+7	; 0x07
    12b6:	02 c0       	rjmp	.+4      	; 0x12bc <vfprintf+0x3c8>
    12b8:	8f ef       	ldi	r24, 0xFF	; 255
    12ba:	9f ef       	ldi	r25, 0xFF	; 255
    12bc:	2b 96       	adiw	r28, 0x0b	; 11
    12be:	0f b6       	in	r0, 0x3f	; 63
    12c0:	f8 94       	cli
    12c2:	de bf       	out	0x3e, r29	; 62
    12c4:	0f be       	out	0x3f, r0	; 63
    12c6:	cd bf       	out	0x3d, r28	; 61
    12c8:	df 91       	pop	r29
    12ca:	cf 91       	pop	r28
    12cc:	1f 91       	pop	r17
    12ce:	0f 91       	pop	r16
    12d0:	ff 90       	pop	r15
    12d2:	ef 90       	pop	r14
    12d4:	df 90       	pop	r13
    12d6:	cf 90       	pop	r12
    12d8:	bf 90       	pop	r11
    12da:	af 90       	pop	r10
    12dc:	9f 90       	pop	r9
    12de:	8f 90       	pop	r8
    12e0:	7f 90       	pop	r7
    12e2:	6f 90       	pop	r6
    12e4:	5f 90       	pop	r5
    12e6:	4f 90       	pop	r4
    12e8:	3f 90       	pop	r3
    12ea:	2f 90       	pop	r2
    12ec:	08 95       	ret

000012ee <putval>:
    12ee:	20 fd       	sbrc	r18, 0
    12f0:	09 c0       	rjmp	.+18     	; 0x1304 <putval+0x16>
    12f2:	fc 01       	movw	r30, r24
    12f4:	23 fd       	sbrc	r18, 3
    12f6:	05 c0       	rjmp	.+10     	; 0x1302 <putval+0x14>
    12f8:	22 ff       	sbrs	r18, 2
    12fa:	02 c0       	rjmp	.+4      	; 0x1300 <putval+0x12>
    12fc:	73 83       	std	Z+3, r23	; 0x03
    12fe:	62 83       	std	Z+2, r22	; 0x02
    1300:	51 83       	std	Z+1, r21	; 0x01
    1302:	40 83       	st	Z, r20
    1304:	08 95       	ret

00001306 <mulacc>:
    1306:	44 fd       	sbrc	r20, 4
    1308:	17 c0       	rjmp	.+46     	; 0x1338 <mulacc+0x32>
    130a:	46 fd       	sbrc	r20, 6
    130c:	17 c0       	rjmp	.+46     	; 0x133c <mulacc+0x36>
    130e:	ab 01       	movw	r20, r22
    1310:	bc 01       	movw	r22, r24
    1312:	da 01       	movw	r26, r20
    1314:	fb 01       	movw	r30, r22
    1316:	aa 0f       	add	r26, r26
    1318:	bb 1f       	adc	r27, r27
    131a:	ee 1f       	adc	r30, r30
    131c:	ff 1f       	adc	r31, r31
    131e:	10 94       	com	r1
    1320:	d1 f7       	brne	.-12     	; 0x1316 <mulacc+0x10>
    1322:	4a 0f       	add	r20, r26
    1324:	5b 1f       	adc	r21, r27
    1326:	6e 1f       	adc	r22, r30
    1328:	7f 1f       	adc	r23, r31
    132a:	cb 01       	movw	r24, r22
    132c:	ba 01       	movw	r22, r20
    132e:	66 0f       	add	r22, r22
    1330:	77 1f       	adc	r23, r23
    1332:	88 1f       	adc	r24, r24
    1334:	99 1f       	adc	r25, r25
    1336:	09 c0       	rjmp	.+18     	; 0x134a <mulacc+0x44>
    1338:	33 e0       	ldi	r19, 0x03	; 3
    133a:	01 c0       	rjmp	.+2      	; 0x133e <mulacc+0x38>
    133c:	34 e0       	ldi	r19, 0x04	; 4
    133e:	66 0f       	add	r22, r22
    1340:	77 1f       	adc	r23, r23
    1342:	88 1f       	adc	r24, r24
    1344:	99 1f       	adc	r25, r25
    1346:	31 50       	subi	r19, 0x01	; 1
    1348:	d1 f7       	brne	.-12     	; 0x133e <mulacc+0x38>
    134a:	62 0f       	add	r22, r18
    134c:	71 1d       	adc	r23, r1
    134e:	81 1d       	adc	r24, r1
    1350:	91 1d       	adc	r25, r1
    1352:	08 95       	ret

00001354 <skip_spaces>:
    1354:	0f 93       	push	r16
    1356:	1f 93       	push	r17
    1358:	cf 93       	push	r28
    135a:	df 93       	push	r29
    135c:	8c 01       	movw	r16, r24
    135e:	c8 01       	movw	r24, r16
    1360:	b8 d2       	rcall	.+1392   	; 0x18d2 <fgetc>
    1362:	ec 01       	movw	r28, r24
    1364:	97 fd       	sbrc	r25, 7
    1366:	06 c0       	rjmp	.+12     	; 0x1374 <skip_spaces+0x20>
    1368:	8b d2       	rcall	.+1302   	; 0x1880 <isspace>
    136a:	89 2b       	or	r24, r25
    136c:	c1 f7       	brne	.-16     	; 0x135e <skip_spaces+0xa>
    136e:	b8 01       	movw	r22, r16
    1370:	ce 01       	movw	r24, r28
    1372:	29 d3       	rcall	.+1618   	; 0x19c6 <ungetc>
    1374:	ce 01       	movw	r24, r28
    1376:	df 91       	pop	r29
    1378:	cf 91       	pop	r28
    137a:	1f 91       	pop	r17
    137c:	0f 91       	pop	r16
    137e:	08 95       	ret

00001380 <conv_int>:
    1380:	8f 92       	push	r8
    1382:	9f 92       	push	r9
    1384:	af 92       	push	r10
    1386:	bf 92       	push	r11
    1388:	ef 92       	push	r14
    138a:	ff 92       	push	r15
    138c:	0f 93       	push	r16
    138e:	1f 93       	push	r17
    1390:	cf 93       	push	r28
    1392:	df 93       	push	r29
    1394:	8c 01       	movw	r16, r24
    1396:	d6 2f       	mov	r29, r22
    1398:	7a 01       	movw	r14, r20
    139a:	b2 2e       	mov	r11, r18
    139c:	9a d2       	rcall	.+1332   	; 0x18d2 <fgetc>
    139e:	9c 01       	movw	r18, r24
    13a0:	33 27       	eor	r19, r19
    13a2:	2b 32       	cpi	r18, 0x2B	; 43
    13a4:	31 05       	cpc	r19, r1
    13a6:	31 f0       	breq	.+12     	; 0x13b4 <conv_int+0x34>
    13a8:	2d 32       	cpi	r18, 0x2D	; 45
    13aa:	31 05       	cpc	r19, r1
    13ac:	59 f4       	brne	.+22     	; 0x13c4 <conv_int+0x44>
    13ae:	8b 2d       	mov	r24, r11
    13b0:	80 68       	ori	r24, 0x80	; 128
    13b2:	b8 2e       	mov	r11, r24
    13b4:	d1 50       	subi	r29, 0x01	; 1
    13b6:	11 f4       	brne	.+4      	; 0x13bc <conv_int+0x3c>
    13b8:	80 e0       	ldi	r24, 0x00	; 0
    13ba:	61 c0       	rjmp	.+194    	; 0x147e <conv_int+0xfe>
    13bc:	c8 01       	movw	r24, r16
    13be:	89 d2       	rcall	.+1298   	; 0x18d2 <fgetc>
    13c0:	97 fd       	sbrc	r25, 7
    13c2:	fa cf       	rjmp	.-12     	; 0x13b8 <conv_int+0x38>
    13c4:	cb 2d       	mov	r28, r11
    13c6:	cd 7f       	andi	r28, 0xFD	; 253
    13c8:	2b 2d       	mov	r18, r11
    13ca:	20 73       	andi	r18, 0x30	; 48
    13cc:	f9 f4       	brne	.+62     	; 0x140c <conv_int+0x8c>
    13ce:	80 33       	cpi	r24, 0x30	; 48
    13d0:	e9 f4       	brne	.+58     	; 0x140c <conv_int+0x8c>
    13d2:	aa 24       	eor	r10, r10
    13d4:	aa 94       	dec	r10
    13d6:	ad 0e       	add	r10, r29
    13d8:	09 f4       	brne	.+2      	; 0x13dc <conv_int+0x5c>
    13da:	3e c0       	rjmp	.+124    	; 0x1458 <conv_int+0xd8>
    13dc:	c8 01       	movw	r24, r16
    13de:	79 d2       	rcall	.+1266   	; 0x18d2 <fgetc>
    13e0:	97 fd       	sbrc	r25, 7
    13e2:	3a c0       	rjmp	.+116    	; 0x1458 <conv_int+0xd8>
    13e4:	9c 01       	movw	r18, r24
    13e6:	2f 7d       	andi	r18, 0xDF	; 223
    13e8:	33 27       	eor	r19, r19
    13ea:	28 35       	cpi	r18, 0x58	; 88
    13ec:	31 05       	cpc	r19, r1
    13ee:	41 f4       	brne	.+16     	; 0x1400 <conv_int+0x80>
    13f0:	c2 64       	ori	r28, 0x42	; 66
    13f2:	d2 50       	subi	r29, 0x02	; 2
    13f4:	89 f1       	breq	.+98     	; 0x1458 <conv_int+0xd8>
    13f6:	c8 01       	movw	r24, r16
    13f8:	6c d2       	rcall	.+1240   	; 0x18d2 <fgetc>
    13fa:	97 ff       	sbrs	r25, 7
    13fc:	07 c0       	rjmp	.+14     	; 0x140c <conv_int+0x8c>
    13fe:	2c c0       	rjmp	.+88     	; 0x1458 <conv_int+0xd8>
    1400:	b6 fe       	sbrs	r11, 6
    1402:	02 c0       	rjmp	.+4      	; 0x1408 <conv_int+0x88>
    1404:	c2 60       	ori	r28, 0x02	; 2
    1406:	01 c0       	rjmp	.+2      	; 0x140a <conv_int+0x8a>
    1408:	c2 61       	ori	r28, 0x12	; 18
    140a:	da 2d       	mov	r29, r10
    140c:	81 2c       	mov	r8, r1
    140e:	91 2c       	mov	r9, r1
    1410:	54 01       	movw	r10, r8
    1412:	20 ed       	ldi	r18, 0xD0	; 208
    1414:	28 0f       	add	r18, r24
    1416:	28 30       	cpi	r18, 0x08	; 8
    1418:	78 f0       	brcs	.+30     	; 0x1438 <conv_int+0xb8>
    141a:	c4 ff       	sbrs	r28, 4
    141c:	03 c0       	rjmp	.+6      	; 0x1424 <conv_int+0xa4>
    141e:	b8 01       	movw	r22, r16
    1420:	d2 d2       	rcall	.+1444   	; 0x19c6 <ungetc>
    1422:	17 c0       	rjmp	.+46     	; 0x1452 <conv_int+0xd2>
    1424:	2a 30       	cpi	r18, 0x0A	; 10
    1426:	40 f0       	brcs	.+16     	; 0x1438 <conv_int+0xb8>
    1428:	c6 ff       	sbrs	r28, 6
    142a:	f9 cf       	rjmp	.-14     	; 0x141e <conv_int+0x9e>
    142c:	2f 7d       	andi	r18, 0xDF	; 223
    142e:	3f ee       	ldi	r19, 0xEF	; 239
    1430:	32 0f       	add	r19, r18
    1432:	36 30       	cpi	r19, 0x06	; 6
    1434:	a0 f7       	brcc	.-24     	; 0x141e <conv_int+0x9e>
    1436:	27 50       	subi	r18, 0x07	; 7
    1438:	4c 2f       	mov	r20, r28
    143a:	c5 01       	movw	r24, r10
    143c:	b4 01       	movw	r22, r8
    143e:	63 df       	rcall	.-314    	; 0x1306 <mulacc>
    1440:	4b 01       	movw	r8, r22
    1442:	5c 01       	movw	r10, r24
    1444:	c2 60       	ori	r28, 0x02	; 2
    1446:	d1 50       	subi	r29, 0x01	; 1
    1448:	51 f0       	breq	.+20     	; 0x145e <conv_int+0xde>
    144a:	c8 01       	movw	r24, r16
    144c:	42 d2       	rcall	.+1156   	; 0x18d2 <fgetc>
    144e:	97 ff       	sbrs	r25, 7
    1450:	e0 cf       	rjmp	.-64     	; 0x1412 <conv_int+0x92>
    1452:	c1 fd       	sbrc	r28, 1
    1454:	04 c0       	rjmp	.+8      	; 0x145e <conv_int+0xde>
    1456:	b0 cf       	rjmp	.-160    	; 0x13b8 <conv_int+0x38>
    1458:	81 2c       	mov	r8, r1
    145a:	91 2c       	mov	r9, r1
    145c:	54 01       	movw	r10, r8
    145e:	c7 ff       	sbrs	r28, 7
    1460:	08 c0       	rjmp	.+16     	; 0x1472 <conv_int+0xf2>
    1462:	b0 94       	com	r11
    1464:	a0 94       	com	r10
    1466:	90 94       	com	r9
    1468:	80 94       	com	r8
    146a:	81 1c       	adc	r8, r1
    146c:	91 1c       	adc	r9, r1
    146e:	a1 1c       	adc	r10, r1
    1470:	b1 1c       	adc	r11, r1
    1472:	2c 2f       	mov	r18, r28
    1474:	b5 01       	movw	r22, r10
    1476:	a4 01       	movw	r20, r8
    1478:	c7 01       	movw	r24, r14
    147a:	39 df       	rcall	.-398    	; 0x12ee <putval>
    147c:	81 e0       	ldi	r24, 0x01	; 1
    147e:	df 91       	pop	r29
    1480:	cf 91       	pop	r28
    1482:	1f 91       	pop	r17
    1484:	0f 91       	pop	r16
    1486:	ff 90       	pop	r15
    1488:	ef 90       	pop	r14
    148a:	bf 90       	pop	r11
    148c:	af 90       	pop	r10
    148e:	9f 90       	pop	r9
    1490:	8f 90       	pop	r8
    1492:	08 95       	ret

00001494 <conv_brk>:
    1494:	5f 92       	push	r5
    1496:	6f 92       	push	r6
    1498:	7f 92       	push	r7
    149a:	8f 92       	push	r8
    149c:	9f 92       	push	r9
    149e:	af 92       	push	r10
    14a0:	bf 92       	push	r11
    14a2:	cf 92       	push	r12
    14a4:	df 92       	push	r13
    14a6:	ef 92       	push	r14
    14a8:	ff 92       	push	r15
    14aa:	0f 93       	push	r16
    14ac:	1f 93       	push	r17
    14ae:	cf 93       	push	r28
    14b0:	df 93       	push	r29
    14b2:	cd b7       	in	r28, 0x3d	; 61
    14b4:	de b7       	in	r29, 0x3e	; 62
    14b6:	a0 97       	sbiw	r28, 0x20	; 32
    14b8:	0f b6       	in	r0, 0x3f	; 63
    14ba:	f8 94       	cli
    14bc:	de bf       	out	0x3e, r29	; 62
    14be:	0f be       	out	0x3f, r0	; 63
    14c0:	cd bf       	out	0x3d, r28	; 61
    14c2:	5c 01       	movw	r10, r24
    14c4:	96 2e       	mov	r9, r22
    14c6:	7a 01       	movw	r14, r20
    14c8:	f9 01       	movw	r30, r18
    14ca:	8e 01       	movw	r16, r28
    14cc:	0f 5f       	subi	r16, 0xFF	; 255
    14ce:	1f 4f       	sbci	r17, 0xFF	; 255
    14d0:	68 01       	movw	r12, r16
    14d2:	80 e2       	ldi	r24, 0x20	; 32
    14d4:	d8 01       	movw	r26, r16
    14d6:	1d 92       	st	X+, r1
    14d8:	8a 95       	dec	r24
    14da:	e9 f7       	brne	.-6      	; 0x14d6 <conv_brk+0x42>
    14dc:	d5 01       	movw	r26, r10
    14de:	13 96       	adiw	r26, 0x03	; 3
    14e0:	8c 90       	ld	r8, X
    14e2:	80 e0       	ldi	r24, 0x00	; 0
    14e4:	90 e0       	ldi	r25, 0x00	; 0
    14e6:	61 2c       	mov	r6, r1
    14e8:	71 2c       	mov	r7, r1
    14ea:	30 e0       	ldi	r19, 0x00	; 0
    14ec:	61 e0       	ldi	r22, 0x01	; 1
    14ee:	70 e0       	ldi	r23, 0x00	; 0
    14f0:	83 fc       	sbrc	r8, 3
    14f2:	25 91       	lpm	r18, Z+
    14f4:	83 fe       	sbrs	r8, 3
    14f6:	21 91       	ld	r18, Z+
    14f8:	8f 01       	movw	r16, r30
    14fa:	52 2e       	mov	r5, r18
    14fc:	21 11       	cpse	r18, r1
    14fe:	03 c0       	rjmp	.+6      	; 0x1506 <conv_brk+0x72>
    1500:	80 e0       	ldi	r24, 0x00	; 0
    1502:	90 e0       	ldi	r25, 0x00	; 0
    1504:	90 c0       	rjmp	.+288    	; 0x1626 <conv_brk+0x192>
    1506:	2e 35       	cpi	r18, 0x5E	; 94
    1508:	11 f4       	brne	.+4      	; 0x150e <conv_brk+0x7a>
    150a:	00 97       	sbiw	r24, 0x00	; 0
    150c:	51 f1       	breq	.+84     	; 0x1562 <conv_brk+0xce>
    150e:	43 2f       	mov	r20, r19
    1510:	50 e0       	ldi	r21, 0x00	; 0
    1512:	48 17       	cp	r20, r24
    1514:	59 07       	cpc	r21, r25
    1516:	3c f4       	brge	.+14     	; 0x1526 <conv_brk+0x92>
    1518:	2d 35       	cpi	r18, 0x5D	; 93
    151a:	59 f1       	breq	.+86     	; 0x1572 <conv_brk+0xde>
    151c:	2d 32       	cpi	r18, 0x2D	; 45
    151e:	19 f4       	brne	.+6      	; 0x1526 <conv_brk+0x92>
    1520:	77 20       	and	r7, r7
    1522:	09 f1       	breq	.+66     	; 0x1566 <conv_brk+0xd2>
    1524:	03 c0       	rjmp	.+6      	; 0x152c <conv_brk+0x98>
    1526:	77 20       	and	r7, r7
    1528:	09 f4       	brne	.+2      	; 0x152c <conv_brk+0x98>
    152a:	68 c0       	rjmp	.+208    	; 0x15fc <conv_brk+0x168>
    152c:	45 2d       	mov	r20, r5
    152e:	46 95       	lsr	r20
    1530:	46 95       	lsr	r20
    1532:	46 95       	lsr	r20
    1534:	d6 01       	movw	r26, r12
    1536:	a4 0f       	add	r26, r20
    1538:	b1 1d       	adc	r27, r1
    153a:	45 2d       	mov	r20, r5
    153c:	47 70       	andi	r20, 0x07	; 7
    153e:	8b 01       	movw	r16, r22
    1540:	02 c0       	rjmp	.+4      	; 0x1546 <conv_brk+0xb2>
    1542:	00 0f       	add	r16, r16
    1544:	11 1f       	adc	r17, r17
    1546:	4a 95       	dec	r20
    1548:	e2 f7       	brpl	.-8      	; 0x1542 <conv_brk+0xae>
    154a:	a8 01       	movw	r20, r16
    154c:	5c 91       	ld	r21, X
    154e:	45 2b       	or	r20, r21
    1550:	4c 93       	st	X, r20
    1552:	65 14       	cp	r6, r5
    1554:	59 f0       	breq	.+22     	; 0x156c <conv_brk+0xd8>
    1556:	56 14       	cp	r5, r6
    1558:	10 f4       	brcc	.+4      	; 0x155e <conv_brk+0xca>
    155a:	53 94       	inc	r5
    155c:	e7 cf       	rjmp	.-50     	; 0x152c <conv_brk+0x98>
    155e:	5a 94       	dec	r5
    1560:	e5 cf       	rjmp	.-54     	; 0x152c <conv_brk+0x98>
    1562:	31 e0       	ldi	r19, 0x01	; 1
    1564:	04 c0       	rjmp	.+8      	; 0x156e <conv_brk+0xda>
    1566:	77 24       	eor	r7, r7
    1568:	73 94       	inc	r7
    156a:	01 c0       	rjmp	.+2      	; 0x156e <conv_brk+0xda>
    156c:	71 2c       	mov	r7, r1
    156e:	01 96       	adiw	r24, 0x01	; 1
    1570:	bf cf       	rjmp	.-130    	; 0x14f0 <conv_brk+0x5c>
    1572:	77 20       	and	r7, r7
    1574:	19 f0       	breq	.+6      	; 0x157c <conv_brk+0xe8>
    1576:	8e 81       	ldd	r24, Y+6	; 0x06
    1578:	80 62       	ori	r24, 0x20	; 32
    157a:	8e 83       	std	Y+6, r24	; 0x06
    157c:	31 11       	cpse	r19, r1
    157e:	03 c0       	rjmp	.+6      	; 0x1586 <conv_brk+0xf2>
    1580:	88 24       	eor	r8, r8
    1582:	83 94       	inc	r8
    1584:	17 c0       	rjmp	.+46     	; 0x15b4 <conv_brk+0x120>
    1586:	f6 01       	movw	r30, r12
    1588:	9e 01       	movw	r18, r28
    158a:	2f 5d       	subi	r18, 0xDF	; 223
    158c:	3f 4f       	sbci	r19, 0xFF	; 255
    158e:	80 81       	ld	r24, Z
    1590:	80 95       	com	r24
    1592:	81 93       	st	Z+, r24
    1594:	2e 17       	cp	r18, r30
    1596:	3f 07       	cpc	r19, r31
    1598:	d1 f7       	brne	.-12     	; 0x158e <conv_brk+0xfa>
    159a:	f2 cf       	rjmp	.-28     	; 0x1580 <conv_brk+0xec>
    159c:	e1 14       	cp	r14, r1
    159e:	f1 04       	cpc	r15, r1
    15a0:	29 f0       	breq	.+10     	; 0x15ac <conv_brk+0x118>
    15a2:	d7 01       	movw	r26, r14
    15a4:	8c 93       	st	X, r24
    15a6:	f7 01       	movw	r30, r14
    15a8:	31 96       	adiw	r30, 0x01	; 1
    15aa:	7f 01       	movw	r14, r30
    15ac:	9a 94       	dec	r9
    15ae:	81 2c       	mov	r8, r1
    15b0:	99 20       	and	r9, r9
    15b2:	e9 f0       	breq	.+58     	; 0x15ee <conv_brk+0x15a>
    15b4:	c5 01       	movw	r24, r10
    15b6:	8d d1       	rcall	.+794    	; 0x18d2 <fgetc>
    15b8:	97 fd       	sbrc	r25, 7
    15ba:	17 c0       	rjmp	.+46     	; 0x15ea <conv_brk+0x156>
    15bc:	fc 01       	movw	r30, r24
    15be:	ff 27       	eor	r31, r31
    15c0:	23 e0       	ldi	r18, 0x03	; 3
    15c2:	f5 95       	asr	r31
    15c4:	e7 95       	ror	r30
    15c6:	2a 95       	dec	r18
    15c8:	e1 f7       	brne	.-8      	; 0x15c2 <conv_brk+0x12e>
    15ca:	ec 0d       	add	r30, r12
    15cc:	fd 1d       	adc	r31, r13
    15ce:	20 81       	ld	r18, Z
    15d0:	30 e0       	ldi	r19, 0x00	; 0
    15d2:	ac 01       	movw	r20, r24
    15d4:	47 70       	andi	r20, 0x07	; 7
    15d6:	55 27       	eor	r21, r21
    15d8:	02 c0       	rjmp	.+4      	; 0x15de <conv_brk+0x14a>
    15da:	35 95       	asr	r19
    15dc:	27 95       	ror	r18
    15de:	4a 95       	dec	r20
    15e0:	e2 f7       	brpl	.-8      	; 0x15da <conv_brk+0x146>
    15e2:	20 fd       	sbrc	r18, 0
    15e4:	db cf       	rjmp	.-74     	; 0x159c <conv_brk+0x108>
    15e6:	b5 01       	movw	r22, r10
    15e8:	ee d1       	rcall	.+988    	; 0x19c6 <ungetc>
    15ea:	81 10       	cpse	r8, r1
    15ec:	89 cf       	rjmp	.-238    	; 0x1500 <conv_brk+0x6c>
    15ee:	e1 14       	cp	r14, r1
    15f0:	f1 04       	cpc	r15, r1
    15f2:	11 f0       	breq	.+4      	; 0x15f8 <conv_brk+0x164>
    15f4:	d7 01       	movw	r26, r14
    15f6:	1c 92       	st	X, r1
    15f8:	c8 01       	movw	r24, r16
    15fa:	15 c0       	rjmp	.+42     	; 0x1626 <conv_brk+0x192>
    15fc:	42 2f       	mov	r20, r18
    15fe:	46 95       	lsr	r20
    1600:	46 95       	lsr	r20
    1602:	46 95       	lsr	r20
    1604:	d6 01       	movw	r26, r12
    1606:	a4 0f       	add	r26, r20
    1608:	b1 1d       	adc	r27, r1
    160a:	42 2f       	mov	r20, r18
    160c:	47 70       	andi	r20, 0x07	; 7
    160e:	8b 01       	movw	r16, r22
    1610:	02 c0       	rjmp	.+4      	; 0x1616 <conv_brk+0x182>
    1612:	00 0f       	add	r16, r16
    1614:	11 1f       	adc	r17, r17
    1616:	4a 95       	dec	r20
    1618:	e2 f7       	brpl	.-8      	; 0x1612 <conv_brk+0x17e>
    161a:	a8 01       	movw	r20, r16
    161c:	5c 91       	ld	r21, X
    161e:	45 2b       	or	r20, r21
    1620:	4c 93       	st	X, r20
    1622:	62 2e       	mov	r6, r18
    1624:	a4 cf       	rjmp	.-184    	; 0x156e <conv_brk+0xda>
    1626:	a0 96       	adiw	r28, 0x20	; 32
    1628:	0f b6       	in	r0, 0x3f	; 63
    162a:	f8 94       	cli
    162c:	de bf       	out	0x3e, r29	; 62
    162e:	0f be       	out	0x3f, r0	; 63
    1630:	cd bf       	out	0x3d, r28	; 61
    1632:	df 91       	pop	r29
    1634:	cf 91       	pop	r28
    1636:	1f 91       	pop	r17
    1638:	0f 91       	pop	r16
    163a:	ff 90       	pop	r15
    163c:	ef 90       	pop	r14
    163e:	df 90       	pop	r13
    1640:	cf 90       	pop	r12
    1642:	bf 90       	pop	r11
    1644:	af 90       	pop	r10
    1646:	9f 90       	pop	r9
    1648:	8f 90       	pop	r8
    164a:	7f 90       	pop	r7
    164c:	6f 90       	pop	r6
    164e:	5f 90       	pop	r5
    1650:	08 95       	ret

00001652 <vfscanf>:
    1652:	5f 92       	push	r5
    1654:	6f 92       	push	r6
    1656:	7f 92       	push	r7
    1658:	8f 92       	push	r8
    165a:	9f 92       	push	r9
    165c:	af 92       	push	r10
    165e:	bf 92       	push	r11
    1660:	cf 92       	push	r12
    1662:	df 92       	push	r13
    1664:	ef 92       	push	r14
    1666:	ff 92       	push	r15
    1668:	0f 93       	push	r16
    166a:	1f 93       	push	r17
    166c:	cf 93       	push	r28
    166e:	df 93       	push	r29
    1670:	6c 01       	movw	r12, r24
    1672:	eb 01       	movw	r28, r22
    1674:	5a 01       	movw	r10, r20
    1676:	fc 01       	movw	r30, r24
    1678:	17 82       	std	Z+7, r1	; 0x07
    167a:	16 82       	std	Z+6, r1	; 0x06
    167c:	51 2c       	mov	r5, r1
    167e:	f6 01       	movw	r30, r12
    1680:	e3 80       	ldd	r14, Z+3	; 0x03
    1682:	fe 01       	movw	r30, r28
    1684:	e3 fc       	sbrc	r14, 3
    1686:	85 91       	lpm	r24, Z+
    1688:	e3 fe       	sbrs	r14, 3
    168a:	81 91       	ld	r24, Z+
    168c:	18 2f       	mov	r17, r24
    168e:	ef 01       	movw	r28, r30
    1690:	88 23       	and	r24, r24
    1692:	09 f4       	brne	.+2      	; 0x1696 <vfscanf+0x44>
    1694:	e0 c0       	rjmp	.+448    	; 0x1856 <vfscanf+0x204>
    1696:	90 e0       	ldi	r25, 0x00	; 0
    1698:	f3 d0       	rcall	.+486    	; 0x1880 <isspace>
    169a:	89 2b       	or	r24, r25
    169c:	19 f0       	breq	.+6      	; 0x16a4 <vfscanf+0x52>
    169e:	c6 01       	movw	r24, r12
    16a0:	59 de       	rcall	.-846    	; 0x1354 <skip_spaces>
    16a2:	ed cf       	rjmp	.-38     	; 0x167e <vfscanf+0x2c>
    16a4:	15 32       	cpi	r17, 0x25	; 37
    16a6:	41 f4       	brne	.+16     	; 0x16b8 <vfscanf+0x66>
    16a8:	fe 01       	movw	r30, r28
    16aa:	e3 fc       	sbrc	r14, 3
    16ac:	15 91       	lpm	r17, Z+
    16ae:	e3 fe       	sbrs	r14, 3
    16b0:	11 91       	ld	r17, Z+
    16b2:	ef 01       	movw	r28, r30
    16b4:	15 32       	cpi	r17, 0x25	; 37
    16b6:	71 f4       	brne	.+28     	; 0x16d4 <vfscanf+0x82>
    16b8:	c6 01       	movw	r24, r12
    16ba:	0b d1       	rcall	.+534    	; 0x18d2 <fgetc>
    16bc:	97 fd       	sbrc	r25, 7
    16be:	c9 c0       	rjmp	.+402    	; 0x1852 <vfscanf+0x200>
    16c0:	41 2f       	mov	r20, r17
    16c2:	50 e0       	ldi	r21, 0x00	; 0
    16c4:	9c 01       	movw	r18, r24
    16c6:	33 27       	eor	r19, r19
    16c8:	24 17       	cp	r18, r20
    16ca:	35 07       	cpc	r19, r21
    16cc:	c1 f2       	breq	.-80     	; 0x167e <vfscanf+0x2c>
    16ce:	b6 01       	movw	r22, r12
    16d0:	7a d1       	rcall	.+756    	; 0x19c6 <ungetc>
    16d2:	c1 c0       	rjmp	.+386    	; 0x1856 <vfscanf+0x204>
    16d4:	1a 32       	cpi	r17, 0x2A	; 42
    16d6:	39 f4       	brne	.+14     	; 0x16e6 <vfscanf+0x94>
    16d8:	e3 fc       	sbrc	r14, 3
    16da:	15 91       	lpm	r17, Z+
    16dc:	e3 fe       	sbrs	r14, 3
    16de:	11 91       	ld	r17, Z+
    16e0:	ef 01       	movw	r28, r30
    16e2:	01 e0       	ldi	r16, 0x01	; 1
    16e4:	01 c0       	rjmp	.+2      	; 0x16e8 <vfscanf+0x96>
    16e6:	00 e0       	ldi	r16, 0x00	; 0
    16e8:	f1 2c       	mov	r15, r1
    16ea:	20 ed       	ldi	r18, 0xD0	; 208
    16ec:	21 0f       	add	r18, r17
    16ee:	2a 30       	cpi	r18, 0x0A	; 10
    16f0:	78 f4       	brcc	.+30     	; 0x1710 <vfscanf+0xbe>
    16f2:	02 60       	ori	r16, 0x02	; 2
    16f4:	6f 2d       	mov	r22, r15
    16f6:	70 e0       	ldi	r23, 0x00	; 0
    16f8:	80 e0       	ldi	r24, 0x00	; 0
    16fa:	90 e0       	ldi	r25, 0x00	; 0
    16fc:	40 e2       	ldi	r20, 0x20	; 32
    16fe:	03 de       	rcall	.-1018   	; 0x1306 <mulacc>
    1700:	f6 2e       	mov	r15, r22
    1702:	fe 01       	movw	r30, r28
    1704:	e3 fc       	sbrc	r14, 3
    1706:	15 91       	lpm	r17, Z+
    1708:	e3 fe       	sbrs	r14, 3
    170a:	11 91       	ld	r17, Z+
    170c:	ef 01       	movw	r28, r30
    170e:	ed cf       	rjmp	.-38     	; 0x16ea <vfscanf+0x98>
    1710:	01 ff       	sbrs	r16, 1
    1712:	03 c0       	rjmp	.+6      	; 0x171a <vfscanf+0xc8>
    1714:	f1 10       	cpse	r15, r1
    1716:	03 c0       	rjmp	.+6      	; 0x171e <vfscanf+0xcc>
    1718:	9e c0       	rjmp	.+316    	; 0x1856 <vfscanf+0x204>
    171a:	ff 24       	eor	r15, r15
    171c:	fa 94       	dec	r15
    171e:	18 36       	cpi	r17, 0x68	; 104
    1720:	19 f0       	breq	.+6      	; 0x1728 <vfscanf+0xd6>
    1722:	1c 36       	cpi	r17, 0x6C	; 108
    1724:	51 f0       	breq	.+20     	; 0x173a <vfscanf+0xe8>
    1726:	10 c0       	rjmp	.+32     	; 0x1748 <vfscanf+0xf6>
    1728:	fe 01       	movw	r30, r28
    172a:	e3 fc       	sbrc	r14, 3
    172c:	15 91       	lpm	r17, Z+
    172e:	e3 fe       	sbrs	r14, 3
    1730:	11 91       	ld	r17, Z+
    1732:	ef 01       	movw	r28, r30
    1734:	18 36       	cpi	r17, 0x68	; 104
    1736:	41 f4       	brne	.+16     	; 0x1748 <vfscanf+0xf6>
    1738:	08 60       	ori	r16, 0x08	; 8
    173a:	04 60       	ori	r16, 0x04	; 4
    173c:	fe 01       	movw	r30, r28
    173e:	e3 fc       	sbrc	r14, 3
    1740:	15 91       	lpm	r17, Z+
    1742:	e3 fe       	sbrs	r14, 3
    1744:	11 91       	ld	r17, Z+
    1746:	ef 01       	movw	r28, r30
    1748:	11 23       	and	r17, r17
    174a:	09 f4       	brne	.+2      	; 0x174e <vfscanf+0xfc>
    174c:	84 c0       	rjmp	.+264    	; 0x1856 <vfscanf+0x204>
    174e:	61 2f       	mov	r22, r17
    1750:	70 e0       	ldi	r23, 0x00	; 0
    1752:	84 ee       	ldi	r24, 0xE4	; 228
    1754:	90 e0       	ldi	r25, 0x00	; 0
    1756:	9c d0       	rcall	.+312    	; 0x1890 <strchr_P>
    1758:	89 2b       	or	r24, r25
    175a:	09 f4       	brne	.+2      	; 0x175e <vfscanf+0x10c>
    175c:	7c c0       	rjmp	.+248    	; 0x1856 <vfscanf+0x204>
    175e:	00 fd       	sbrc	r16, 0
    1760:	07 c0       	rjmp	.+14     	; 0x1770 <vfscanf+0x11e>
    1762:	f5 01       	movw	r30, r10
    1764:	80 80       	ld	r8, Z
    1766:	91 80       	ldd	r9, Z+1	; 0x01
    1768:	c5 01       	movw	r24, r10
    176a:	02 96       	adiw	r24, 0x02	; 2
    176c:	5c 01       	movw	r10, r24
    176e:	02 c0       	rjmp	.+4      	; 0x1774 <vfscanf+0x122>
    1770:	81 2c       	mov	r8, r1
    1772:	91 2c       	mov	r9, r1
    1774:	1e 36       	cpi	r17, 0x6E	; 110
    1776:	49 f4       	brne	.+18     	; 0x178a <vfscanf+0x138>
    1778:	f6 01       	movw	r30, r12
    177a:	46 81       	ldd	r20, Z+6	; 0x06
    177c:	57 81       	ldd	r21, Z+7	; 0x07
    177e:	60 e0       	ldi	r22, 0x00	; 0
    1780:	70 e0       	ldi	r23, 0x00	; 0
    1782:	20 2f       	mov	r18, r16
    1784:	c4 01       	movw	r24, r8
    1786:	b3 dd       	rcall	.-1178   	; 0x12ee <putval>
    1788:	7a cf       	rjmp	.-268    	; 0x167e <vfscanf+0x2c>
    178a:	13 36       	cpi	r17, 0x63	; 99
    178c:	a1 f4       	brne	.+40     	; 0x17b6 <vfscanf+0x164>
    178e:	01 fd       	sbrc	r16, 1
    1790:	02 c0       	rjmp	.+4      	; 0x1796 <vfscanf+0x144>
    1792:	ff 24       	eor	r15, r15
    1794:	f3 94       	inc	r15
    1796:	c6 01       	movw	r24, r12
    1798:	9c d0       	rcall	.+312    	; 0x18d2 <fgetc>
    179a:	97 fd       	sbrc	r25, 7
    179c:	5a c0       	rjmp	.+180    	; 0x1852 <vfscanf+0x200>
    179e:	81 14       	cp	r8, r1
    17a0:	91 04       	cpc	r9, r1
    17a2:	29 f0       	breq	.+10     	; 0x17ae <vfscanf+0x15c>
    17a4:	f4 01       	movw	r30, r8
    17a6:	80 83       	st	Z, r24
    17a8:	c4 01       	movw	r24, r8
    17aa:	01 96       	adiw	r24, 0x01	; 1
    17ac:	4c 01       	movw	r8, r24
    17ae:	fa 94       	dec	r15
    17b0:	f1 10       	cpse	r15, r1
    17b2:	f1 cf       	rjmp	.-30     	; 0x1796 <vfscanf+0x144>
    17b4:	4a c0       	rjmp	.+148    	; 0x184a <vfscanf+0x1f8>
    17b6:	1b 35       	cpi	r17, 0x5B	; 91
    17b8:	51 f4       	brne	.+20     	; 0x17ce <vfscanf+0x17c>
    17ba:	9e 01       	movw	r18, r28
    17bc:	a4 01       	movw	r20, r8
    17be:	6f 2d       	mov	r22, r15
    17c0:	c6 01       	movw	r24, r12
    17c2:	68 de       	rcall	.-816    	; 0x1494 <conv_brk>
    17c4:	ec 01       	movw	r28, r24
    17c6:	89 2b       	or	r24, r25
    17c8:	09 f0       	breq	.+2      	; 0x17cc <vfscanf+0x17a>
    17ca:	3f c0       	rjmp	.+126    	; 0x184a <vfscanf+0x1f8>
    17cc:	39 c0       	rjmp	.+114    	; 0x1840 <vfscanf+0x1ee>
    17ce:	c6 01       	movw	r24, r12
    17d0:	c1 dd       	rcall	.-1150   	; 0x1354 <skip_spaces>
    17d2:	97 fd       	sbrc	r25, 7
    17d4:	3e c0       	rjmp	.+124    	; 0x1852 <vfscanf+0x200>
    17d6:	1f 36       	cpi	r17, 0x6F	; 111
    17d8:	49 f1       	breq	.+82     	; 0x182c <vfscanf+0x1da>
    17da:	28 f4       	brcc	.+10     	; 0x17e6 <vfscanf+0x194>
    17dc:	14 36       	cpi	r17, 0x64	; 100
    17de:	21 f1       	breq	.+72     	; 0x1828 <vfscanf+0x1d6>
    17e0:	19 36       	cpi	r17, 0x69	; 105
    17e2:	39 f1       	breq	.+78     	; 0x1832 <vfscanf+0x1e0>
    17e4:	25 c0       	rjmp	.+74     	; 0x1830 <vfscanf+0x1de>
    17e6:	13 37       	cpi	r17, 0x73	; 115
    17e8:	71 f0       	breq	.+28     	; 0x1806 <vfscanf+0x1b4>
    17ea:	15 37       	cpi	r17, 0x75	; 117
    17ec:	e9 f0       	breq	.+58     	; 0x1828 <vfscanf+0x1d6>
    17ee:	20 c0       	rjmp	.+64     	; 0x1830 <vfscanf+0x1de>
    17f0:	81 14       	cp	r8, r1
    17f2:	91 04       	cpc	r9, r1
    17f4:	29 f0       	breq	.+10     	; 0x1800 <vfscanf+0x1ae>
    17f6:	f4 01       	movw	r30, r8
    17f8:	60 82       	st	Z, r6
    17fa:	c4 01       	movw	r24, r8
    17fc:	01 96       	adiw	r24, 0x01	; 1
    17fe:	4c 01       	movw	r8, r24
    1800:	fa 94       	dec	r15
    1802:	ff 20       	and	r15, r15
    1804:	59 f0       	breq	.+22     	; 0x181c <vfscanf+0x1ca>
    1806:	c6 01       	movw	r24, r12
    1808:	64 d0       	rcall	.+200    	; 0x18d2 <fgetc>
    180a:	3c 01       	movw	r6, r24
    180c:	97 fd       	sbrc	r25, 7
    180e:	06 c0       	rjmp	.+12     	; 0x181c <vfscanf+0x1ca>
    1810:	37 d0       	rcall	.+110    	; 0x1880 <isspace>
    1812:	89 2b       	or	r24, r25
    1814:	69 f3       	breq	.-38     	; 0x17f0 <vfscanf+0x19e>
    1816:	b6 01       	movw	r22, r12
    1818:	c3 01       	movw	r24, r6
    181a:	d5 d0       	rcall	.+426    	; 0x19c6 <ungetc>
    181c:	81 14       	cp	r8, r1
    181e:	91 04       	cpc	r9, r1
    1820:	a1 f0       	breq	.+40     	; 0x184a <vfscanf+0x1f8>
    1822:	f4 01       	movw	r30, r8
    1824:	10 82       	st	Z, r1
    1826:	11 c0       	rjmp	.+34     	; 0x184a <vfscanf+0x1f8>
    1828:	00 62       	ori	r16, 0x20	; 32
    182a:	03 c0       	rjmp	.+6      	; 0x1832 <vfscanf+0x1e0>
    182c:	00 61       	ori	r16, 0x10	; 16
    182e:	01 c0       	rjmp	.+2      	; 0x1832 <vfscanf+0x1e0>
    1830:	00 64       	ori	r16, 0x40	; 64
    1832:	20 2f       	mov	r18, r16
    1834:	a4 01       	movw	r20, r8
    1836:	6f 2d       	mov	r22, r15
    1838:	c6 01       	movw	r24, r12
    183a:	a2 dd       	rcall	.-1212   	; 0x1380 <conv_int>
    183c:	81 11       	cpse	r24, r1
    183e:	05 c0       	rjmp	.+10     	; 0x184a <vfscanf+0x1f8>
    1840:	f6 01       	movw	r30, r12
    1842:	83 81       	ldd	r24, Z+3	; 0x03
    1844:	80 73       	andi	r24, 0x30	; 48
    1846:	29 f4       	brne	.+10     	; 0x1852 <vfscanf+0x200>
    1848:	06 c0       	rjmp	.+12     	; 0x1856 <vfscanf+0x204>
    184a:	00 fd       	sbrc	r16, 0
    184c:	18 cf       	rjmp	.-464    	; 0x167e <vfscanf+0x2c>
    184e:	53 94       	inc	r5
    1850:	16 cf       	rjmp	.-468    	; 0x167e <vfscanf+0x2c>
    1852:	55 20       	and	r5, r5
    1854:	19 f0       	breq	.+6      	; 0x185c <vfscanf+0x20a>
    1856:	85 2d       	mov	r24, r5
    1858:	90 e0       	ldi	r25, 0x00	; 0
    185a:	02 c0       	rjmp	.+4      	; 0x1860 <vfscanf+0x20e>
    185c:	8f ef       	ldi	r24, 0xFF	; 255
    185e:	9f ef       	ldi	r25, 0xFF	; 255
    1860:	df 91       	pop	r29
    1862:	cf 91       	pop	r28
    1864:	1f 91       	pop	r17
    1866:	0f 91       	pop	r16
    1868:	ff 90       	pop	r15
    186a:	ef 90       	pop	r14
    186c:	df 90       	pop	r13
    186e:	cf 90       	pop	r12
    1870:	bf 90       	pop	r11
    1872:	af 90       	pop	r10
    1874:	9f 90       	pop	r9
    1876:	8f 90       	pop	r8
    1878:	7f 90       	pop	r7
    187a:	6f 90       	pop	r6
    187c:	5f 90       	pop	r5
    187e:	08 95       	ret

00001880 <isspace>:
    1880:	91 11       	cpse	r25, r1
    1882:	18 c1       	rjmp	.+560    	; 0x1ab4 <__ctype_isfalse>
    1884:	80 32       	cpi	r24, 0x20	; 32
    1886:	19 f0       	breq	.+6      	; 0x188e <isspace+0xe>
    1888:	89 50       	subi	r24, 0x09	; 9
    188a:	85 50       	subi	r24, 0x05	; 5
    188c:	d0 f7       	brcc	.-12     	; 0x1882 <isspace+0x2>
    188e:	08 95       	ret

00001890 <strchr_P>:
    1890:	fc 01       	movw	r30, r24
    1892:	05 90       	lpm	r0, Z+
    1894:	06 16       	cp	r0, r22
    1896:	21 f0       	breq	.+8      	; 0x18a0 <strchr_P+0x10>
    1898:	00 20       	and	r0, r0
    189a:	d9 f7       	brne	.-10     	; 0x1892 <strchr_P+0x2>
    189c:	c0 01       	movw	r24, r0
    189e:	08 95       	ret
    18a0:	31 97       	sbiw	r30, 0x01	; 1
    18a2:	cf 01       	movw	r24, r30
    18a4:	08 95       	ret

000018a6 <strnlen_P>:
    18a6:	fc 01       	movw	r30, r24
    18a8:	05 90       	lpm	r0, Z+
    18aa:	61 50       	subi	r22, 0x01	; 1
    18ac:	70 40       	sbci	r23, 0x00	; 0
    18ae:	01 10       	cpse	r0, r1
    18b0:	d8 f7       	brcc	.-10     	; 0x18a8 <strnlen_P+0x2>
    18b2:	80 95       	com	r24
    18b4:	90 95       	com	r25
    18b6:	8e 0f       	add	r24, r30
    18b8:	9f 1f       	adc	r25, r31
    18ba:	08 95       	ret

000018bc <strnlen>:
    18bc:	fc 01       	movw	r30, r24
    18be:	61 50       	subi	r22, 0x01	; 1
    18c0:	70 40       	sbci	r23, 0x00	; 0
    18c2:	01 90       	ld	r0, Z+
    18c4:	01 10       	cpse	r0, r1
    18c6:	d8 f7       	brcc	.-10     	; 0x18be <strnlen+0x2>
    18c8:	80 95       	com	r24
    18ca:	90 95       	com	r25
    18cc:	8e 0f       	add	r24, r30
    18ce:	9f 1f       	adc	r25, r31
    18d0:	08 95       	ret

000018d2 <fgetc>:
    18d2:	cf 93       	push	r28
    18d4:	df 93       	push	r29
    18d6:	ec 01       	movw	r28, r24
    18d8:	2b 81       	ldd	r18, Y+3	; 0x03
    18da:	20 ff       	sbrs	r18, 0
    18dc:	33 c0       	rjmp	.+102    	; 0x1944 <fgetc+0x72>
    18de:	26 ff       	sbrs	r18, 6
    18e0:	0a c0       	rjmp	.+20     	; 0x18f6 <fgetc+0x24>
    18e2:	2f 7b       	andi	r18, 0xBF	; 191
    18e4:	2b 83       	std	Y+3, r18	; 0x03
    18e6:	8e 81       	ldd	r24, Y+6	; 0x06
    18e8:	9f 81       	ldd	r25, Y+7	; 0x07
    18ea:	01 96       	adiw	r24, 0x01	; 1
    18ec:	9f 83       	std	Y+7, r25	; 0x07
    18ee:	8e 83       	std	Y+6, r24	; 0x06
    18f0:	8a 81       	ldd	r24, Y+2	; 0x02
    18f2:	90 e0       	ldi	r25, 0x00	; 0
    18f4:	29 c0       	rjmp	.+82     	; 0x1948 <fgetc+0x76>
    18f6:	22 ff       	sbrs	r18, 2
    18f8:	0f c0       	rjmp	.+30     	; 0x1918 <fgetc+0x46>
    18fa:	e8 81       	ld	r30, Y
    18fc:	f9 81       	ldd	r31, Y+1	; 0x01
    18fe:	80 81       	ld	r24, Z
    1900:	08 2e       	mov	r0, r24
    1902:	00 0c       	add	r0, r0
    1904:	99 0b       	sbc	r25, r25
    1906:	00 97       	sbiw	r24, 0x00	; 0
    1908:	19 f4       	brne	.+6      	; 0x1910 <fgetc+0x3e>
    190a:	20 62       	ori	r18, 0x20	; 32
    190c:	2b 83       	std	Y+3, r18	; 0x03
    190e:	1a c0       	rjmp	.+52     	; 0x1944 <fgetc+0x72>
    1910:	31 96       	adiw	r30, 0x01	; 1
    1912:	f9 83       	std	Y+1, r31	; 0x01
    1914:	e8 83       	st	Y, r30
    1916:	0e c0       	rjmp	.+28     	; 0x1934 <fgetc+0x62>
    1918:	ea 85       	ldd	r30, Y+10	; 0x0a
    191a:	fb 85       	ldd	r31, Y+11	; 0x0b
    191c:	19 95       	eicall
    191e:	97 ff       	sbrs	r25, 7
    1920:	09 c0       	rjmp	.+18     	; 0x1934 <fgetc+0x62>
    1922:	2b 81       	ldd	r18, Y+3	; 0x03
    1924:	01 96       	adiw	r24, 0x01	; 1
    1926:	11 f0       	breq	.+4      	; 0x192c <fgetc+0x5a>
    1928:	80 e2       	ldi	r24, 0x20	; 32
    192a:	01 c0       	rjmp	.+2      	; 0x192e <fgetc+0x5c>
    192c:	80 e1       	ldi	r24, 0x10	; 16
    192e:	82 2b       	or	r24, r18
    1930:	8b 83       	std	Y+3, r24	; 0x03
    1932:	08 c0       	rjmp	.+16     	; 0x1944 <fgetc+0x72>
    1934:	2e 81       	ldd	r18, Y+6	; 0x06
    1936:	3f 81       	ldd	r19, Y+7	; 0x07
    1938:	2f 5f       	subi	r18, 0xFF	; 255
    193a:	3f 4f       	sbci	r19, 0xFF	; 255
    193c:	3f 83       	std	Y+7, r19	; 0x07
    193e:	2e 83       	std	Y+6, r18	; 0x06
    1940:	99 27       	eor	r25, r25
    1942:	02 c0       	rjmp	.+4      	; 0x1948 <fgetc+0x76>
    1944:	8f ef       	ldi	r24, 0xFF	; 255
    1946:	9f ef       	ldi	r25, 0xFF	; 255
    1948:	df 91       	pop	r29
    194a:	cf 91       	pop	r28
    194c:	08 95       	ret

0000194e <fputc>:
    194e:	0f 93       	push	r16
    1950:	1f 93       	push	r17
    1952:	cf 93       	push	r28
    1954:	df 93       	push	r29
    1956:	fb 01       	movw	r30, r22
    1958:	23 81       	ldd	r18, Z+3	; 0x03
    195a:	21 fd       	sbrc	r18, 1
    195c:	03 c0       	rjmp	.+6      	; 0x1964 <fputc+0x16>
    195e:	8f ef       	ldi	r24, 0xFF	; 255
    1960:	9f ef       	ldi	r25, 0xFF	; 255
    1962:	2c c0       	rjmp	.+88     	; 0x19bc <fputc+0x6e>
    1964:	22 ff       	sbrs	r18, 2
    1966:	16 c0       	rjmp	.+44     	; 0x1994 <fputc+0x46>
    1968:	46 81       	ldd	r20, Z+6	; 0x06
    196a:	57 81       	ldd	r21, Z+7	; 0x07
    196c:	24 81       	ldd	r18, Z+4	; 0x04
    196e:	35 81       	ldd	r19, Z+5	; 0x05
    1970:	42 17       	cp	r20, r18
    1972:	53 07       	cpc	r21, r19
    1974:	44 f4       	brge	.+16     	; 0x1986 <fputc+0x38>
    1976:	a0 81       	ld	r26, Z
    1978:	b1 81       	ldd	r27, Z+1	; 0x01
    197a:	9d 01       	movw	r18, r26
    197c:	2f 5f       	subi	r18, 0xFF	; 255
    197e:	3f 4f       	sbci	r19, 0xFF	; 255
    1980:	31 83       	std	Z+1, r19	; 0x01
    1982:	20 83       	st	Z, r18
    1984:	8c 93       	st	X, r24
    1986:	26 81       	ldd	r18, Z+6	; 0x06
    1988:	37 81       	ldd	r19, Z+7	; 0x07
    198a:	2f 5f       	subi	r18, 0xFF	; 255
    198c:	3f 4f       	sbci	r19, 0xFF	; 255
    198e:	37 83       	std	Z+7, r19	; 0x07
    1990:	26 83       	std	Z+6, r18	; 0x06
    1992:	14 c0       	rjmp	.+40     	; 0x19bc <fputc+0x6e>
    1994:	8b 01       	movw	r16, r22
    1996:	ec 01       	movw	r28, r24
    1998:	fb 01       	movw	r30, r22
    199a:	00 84       	ldd	r0, Z+8	; 0x08
    199c:	f1 85       	ldd	r31, Z+9	; 0x09
    199e:	e0 2d       	mov	r30, r0
    19a0:	19 95       	eicall
    19a2:	89 2b       	or	r24, r25
    19a4:	e1 f6       	brne	.-72     	; 0x195e <fputc+0x10>
    19a6:	d8 01       	movw	r26, r16
    19a8:	16 96       	adiw	r26, 0x06	; 6
    19aa:	8d 91       	ld	r24, X+
    19ac:	9c 91       	ld	r25, X
    19ae:	17 97       	sbiw	r26, 0x07	; 7
    19b0:	01 96       	adiw	r24, 0x01	; 1
    19b2:	17 96       	adiw	r26, 0x07	; 7
    19b4:	9c 93       	st	X, r25
    19b6:	8e 93       	st	-X, r24
    19b8:	16 97       	sbiw	r26, 0x06	; 6
    19ba:	ce 01       	movw	r24, r28
    19bc:	df 91       	pop	r29
    19be:	cf 91       	pop	r28
    19c0:	1f 91       	pop	r17
    19c2:	0f 91       	pop	r16
    19c4:	08 95       	ret

000019c6 <ungetc>:
    19c6:	fb 01       	movw	r30, r22
    19c8:	23 81       	ldd	r18, Z+3	; 0x03
    19ca:	20 ff       	sbrs	r18, 0
    19cc:	12 c0       	rjmp	.+36     	; 0x19f2 <ungetc+0x2c>
    19ce:	26 fd       	sbrc	r18, 6
    19d0:	10 c0       	rjmp	.+32     	; 0x19f2 <ungetc+0x2c>
    19d2:	8f 3f       	cpi	r24, 0xFF	; 255
    19d4:	3f ef       	ldi	r19, 0xFF	; 255
    19d6:	93 07       	cpc	r25, r19
    19d8:	61 f0       	breq	.+24     	; 0x19f2 <ungetc+0x2c>
    19da:	82 83       	std	Z+2, r24	; 0x02
    19dc:	2f 7d       	andi	r18, 0xDF	; 223
    19de:	20 64       	ori	r18, 0x40	; 64
    19e0:	23 83       	std	Z+3, r18	; 0x03
    19e2:	26 81       	ldd	r18, Z+6	; 0x06
    19e4:	37 81       	ldd	r19, Z+7	; 0x07
    19e6:	21 50       	subi	r18, 0x01	; 1
    19e8:	31 09       	sbc	r19, r1
    19ea:	37 83       	std	Z+7, r19	; 0x07
    19ec:	26 83       	std	Z+6, r18	; 0x06
    19ee:	99 27       	eor	r25, r25
    19f0:	08 95       	ret
    19f2:	8f ef       	ldi	r24, 0xFF	; 255
    19f4:	9f ef       	ldi	r25, 0xFF	; 255
    19f6:	08 95       	ret

000019f8 <__ultoa_invert>:
    19f8:	fa 01       	movw	r30, r20
    19fa:	aa 27       	eor	r26, r26
    19fc:	28 30       	cpi	r18, 0x08	; 8
    19fe:	51 f1       	breq	.+84     	; 0x1a54 <__ultoa_invert+0x5c>
    1a00:	20 31       	cpi	r18, 0x10	; 16
    1a02:	81 f1       	breq	.+96     	; 0x1a64 <__ultoa_invert+0x6c>
    1a04:	e8 94       	clt
    1a06:	6f 93       	push	r22
    1a08:	6e 7f       	andi	r22, 0xFE	; 254
    1a0a:	6e 5f       	subi	r22, 0xFE	; 254
    1a0c:	7f 4f       	sbci	r23, 0xFF	; 255
    1a0e:	8f 4f       	sbci	r24, 0xFF	; 255
    1a10:	9f 4f       	sbci	r25, 0xFF	; 255
    1a12:	af 4f       	sbci	r26, 0xFF	; 255
    1a14:	b1 e0       	ldi	r27, 0x01	; 1
    1a16:	3e d0       	rcall	.+124    	; 0x1a94 <__ultoa_invert+0x9c>
    1a18:	b4 e0       	ldi	r27, 0x04	; 4
    1a1a:	3c d0       	rcall	.+120    	; 0x1a94 <__ultoa_invert+0x9c>
    1a1c:	67 0f       	add	r22, r23
    1a1e:	78 1f       	adc	r23, r24
    1a20:	89 1f       	adc	r24, r25
    1a22:	9a 1f       	adc	r25, r26
    1a24:	a1 1d       	adc	r26, r1
    1a26:	68 0f       	add	r22, r24
    1a28:	79 1f       	adc	r23, r25
    1a2a:	8a 1f       	adc	r24, r26
    1a2c:	91 1d       	adc	r25, r1
    1a2e:	a1 1d       	adc	r26, r1
    1a30:	6a 0f       	add	r22, r26
    1a32:	71 1d       	adc	r23, r1
    1a34:	81 1d       	adc	r24, r1
    1a36:	91 1d       	adc	r25, r1
    1a38:	a1 1d       	adc	r26, r1
    1a3a:	20 d0       	rcall	.+64     	; 0x1a7c <__ultoa_invert+0x84>
    1a3c:	09 f4       	brne	.+2      	; 0x1a40 <__ultoa_invert+0x48>
    1a3e:	68 94       	set
    1a40:	3f 91       	pop	r19
    1a42:	2a e0       	ldi	r18, 0x0A	; 10
    1a44:	26 9f       	mul	r18, r22
    1a46:	11 24       	eor	r1, r1
    1a48:	30 19       	sub	r19, r0
    1a4a:	30 5d       	subi	r19, 0xD0	; 208
    1a4c:	31 93       	st	Z+, r19
    1a4e:	de f6       	brtc	.-74     	; 0x1a06 <__ultoa_invert+0xe>
    1a50:	cf 01       	movw	r24, r30
    1a52:	08 95       	ret
    1a54:	46 2f       	mov	r20, r22
    1a56:	47 70       	andi	r20, 0x07	; 7
    1a58:	40 5d       	subi	r20, 0xD0	; 208
    1a5a:	41 93       	st	Z+, r20
    1a5c:	b3 e0       	ldi	r27, 0x03	; 3
    1a5e:	0f d0       	rcall	.+30     	; 0x1a7e <__ultoa_invert+0x86>
    1a60:	c9 f7       	brne	.-14     	; 0x1a54 <__ultoa_invert+0x5c>
    1a62:	f6 cf       	rjmp	.-20     	; 0x1a50 <__ultoa_invert+0x58>
    1a64:	46 2f       	mov	r20, r22
    1a66:	4f 70       	andi	r20, 0x0F	; 15
    1a68:	40 5d       	subi	r20, 0xD0	; 208
    1a6a:	4a 33       	cpi	r20, 0x3A	; 58
    1a6c:	18 f0       	brcs	.+6      	; 0x1a74 <__ultoa_invert+0x7c>
    1a6e:	49 5d       	subi	r20, 0xD9	; 217
    1a70:	31 fd       	sbrc	r19, 1
    1a72:	40 52       	subi	r20, 0x20	; 32
    1a74:	41 93       	st	Z+, r20
    1a76:	02 d0       	rcall	.+4      	; 0x1a7c <__ultoa_invert+0x84>
    1a78:	a9 f7       	brne	.-22     	; 0x1a64 <__ultoa_invert+0x6c>
    1a7a:	ea cf       	rjmp	.-44     	; 0x1a50 <__ultoa_invert+0x58>
    1a7c:	b4 e0       	ldi	r27, 0x04	; 4
    1a7e:	a6 95       	lsr	r26
    1a80:	97 95       	ror	r25
    1a82:	87 95       	ror	r24
    1a84:	77 95       	ror	r23
    1a86:	67 95       	ror	r22
    1a88:	ba 95       	dec	r27
    1a8a:	c9 f7       	brne	.-14     	; 0x1a7e <__ultoa_invert+0x86>
    1a8c:	00 97       	sbiw	r24, 0x00	; 0
    1a8e:	61 05       	cpc	r22, r1
    1a90:	71 05       	cpc	r23, r1
    1a92:	08 95       	ret
    1a94:	9b 01       	movw	r18, r22
    1a96:	ac 01       	movw	r20, r24
    1a98:	0a 2e       	mov	r0, r26
    1a9a:	06 94       	lsr	r0
    1a9c:	57 95       	ror	r21
    1a9e:	47 95       	ror	r20
    1aa0:	37 95       	ror	r19
    1aa2:	27 95       	ror	r18
    1aa4:	ba 95       	dec	r27
    1aa6:	c9 f7       	brne	.-14     	; 0x1a9a <__ultoa_invert+0xa2>
    1aa8:	62 0f       	add	r22, r18
    1aaa:	73 1f       	adc	r23, r19
    1aac:	84 1f       	adc	r24, r20
    1aae:	95 1f       	adc	r25, r21
    1ab0:	a0 1d       	adc	r26, r0
    1ab2:	08 95       	ret

00001ab4 <__ctype_isfalse>:
    1ab4:	99 27       	eor	r25, r25
    1ab6:	88 27       	eor	r24, r24

00001ab8 <__ctype_istrue>:
    1ab8:	08 95       	ret

00001aba <_exit>:
    1aba:	f8 94       	cli

00001abc <__stop_program>:
    1abc:	ff cf       	rjmp	.-2      	; 0x1abc <__stop_program>
