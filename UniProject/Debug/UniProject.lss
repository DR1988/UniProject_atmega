
UniProject.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000006  00800200  00001208  0000129c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001208  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000029  00800206  00800206  000012a2  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000012a2  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001300  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000078  00000000  00000000  00001340  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000010c6  00000000  00000000  000013b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000cde  00000000  00000000  0000247e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000631  00000000  00000000  0000315c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000224  00000000  00000000  00003790  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000006e9  00000000  00000000  000039b4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000007bd  00000000  00000000  0000409d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000068  00000000  00000000  0000485a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
       2:	00 00       	nop
       4:	8f c0       	rjmp	.+286    	; 0x124 <__bad_interrupt>
       6:	00 00       	nop
       8:	8d c0       	rjmp	.+282    	; 0x124 <__bad_interrupt>
       a:	00 00       	nop
       c:	8b c0       	rjmp	.+278    	; 0x124 <__bad_interrupt>
       e:	00 00       	nop
      10:	89 c0       	rjmp	.+274    	; 0x124 <__bad_interrupt>
      12:	00 00       	nop
      14:	87 c0       	rjmp	.+270    	; 0x124 <__bad_interrupt>
      16:	00 00       	nop
      18:	85 c0       	rjmp	.+266    	; 0x124 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	83 c0       	rjmp	.+262    	; 0x124 <__bad_interrupt>
      1e:	00 00       	nop
      20:	81 c0       	rjmp	.+258    	; 0x124 <__bad_interrupt>
      22:	00 00       	nop
      24:	7f c0       	rjmp	.+254    	; 0x124 <__bad_interrupt>
      26:	00 00       	nop
      28:	7d c0       	rjmp	.+250    	; 0x124 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	7b c0       	rjmp	.+246    	; 0x124 <__bad_interrupt>
      2e:	00 00       	nop
      30:	79 c0       	rjmp	.+242    	; 0x124 <__bad_interrupt>
      32:	00 00       	nop
      34:	77 c0       	rjmp	.+238    	; 0x124 <__bad_interrupt>
      36:	00 00       	nop
      38:	75 c0       	rjmp	.+234    	; 0x124 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	73 c0       	rjmp	.+230    	; 0x124 <__bad_interrupt>
      3e:	00 00       	nop
      40:	71 c0       	rjmp	.+226    	; 0x124 <__bad_interrupt>
      42:	00 00       	nop
      44:	6f c0       	rjmp	.+222    	; 0x124 <__bad_interrupt>
      46:	00 00       	nop
      48:	6d c0       	rjmp	.+218    	; 0x124 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	6b c0       	rjmp	.+214    	; 0x124 <__bad_interrupt>
      4e:	00 00       	nop
      50:	69 c0       	rjmp	.+210    	; 0x124 <__bad_interrupt>
      52:	00 00       	nop
      54:	67 c0       	rjmp	.+206    	; 0x124 <__bad_interrupt>
      56:	00 00       	nop
      58:	65 c0       	rjmp	.+202    	; 0x124 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	63 c0       	rjmp	.+198    	; 0x124 <__bad_interrupt>
      5e:	00 00       	nop
      60:	61 c0       	rjmp	.+194    	; 0x124 <__bad_interrupt>
      62:	00 00       	nop
      64:	82 c3       	rjmp	.+1796   	; 0x76a <__vector_25>
      66:	00 00       	nop
      68:	5d c0       	rjmp	.+186    	; 0x124 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	5b c0       	rjmp	.+182    	; 0x124 <__bad_interrupt>
      6e:	00 00       	nop
      70:	59 c0       	rjmp	.+178    	; 0x124 <__bad_interrupt>
      72:	00 00       	nop
      74:	57 c0       	rjmp	.+174    	; 0x124 <__bad_interrupt>
      76:	00 00       	nop
      78:	55 c0       	rjmp	.+170    	; 0x124 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	53 c0       	rjmp	.+166    	; 0x124 <__bad_interrupt>
      7e:	00 00       	nop
      80:	51 c0       	rjmp	.+162    	; 0x124 <__bad_interrupt>
      82:	00 00       	nop
      84:	4f c0       	rjmp	.+158    	; 0x124 <__bad_interrupt>
      86:	00 00       	nop
      88:	4d c0       	rjmp	.+154    	; 0x124 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	4b c0       	rjmp	.+150    	; 0x124 <__bad_interrupt>
      8e:	00 00       	nop
      90:	49 c0       	rjmp	.+146    	; 0x124 <__bad_interrupt>
      92:	00 00       	nop
      94:	47 c0       	rjmp	.+142    	; 0x124 <__bad_interrupt>
      96:	00 00       	nop
      98:	45 c0       	rjmp	.+138    	; 0x124 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	43 c0       	rjmp	.+134    	; 0x124 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	41 c0       	rjmp	.+130    	; 0x124 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	3f c0       	rjmp	.+126    	; 0x124 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	3d c0       	rjmp	.+122    	; 0x124 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	3b c0       	rjmp	.+118    	; 0x124 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	39 c0       	rjmp	.+114    	; 0x124 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	37 c0       	rjmp	.+110    	; 0x124 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	f0 c1       	rjmp	.+992    	; 0x49a <__vector_46>
      ba:	00 00       	nop
      bc:	33 c0       	rjmp	.+102    	; 0x124 <__bad_interrupt>
      be:	00 00       	nop
      c0:	31 c0       	rjmp	.+98     	; 0x124 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	2f c0       	rjmp	.+94     	; 0x124 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	b4 c2       	rjmp	.+1384   	; 0x632 <__vector_50>
      ca:	00 00       	nop
      cc:	2b c0       	rjmp	.+86     	; 0x124 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	29 c0       	rjmp	.+82     	; 0x124 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	27 c0       	rjmp	.+78     	; 0x124 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	25 c0       	rjmp	.+74     	; 0x124 <__bad_interrupt>
      da:	00 00       	nop
      dc:	23 c0       	rjmp	.+70     	; 0x124 <__bad_interrupt>
      de:	00 00       	nop
      e0:	21 c0       	rjmp	.+66     	; 0x124 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
      e4:	11 24       	eor	r1, r1
      e6:	1f be       	out	0x3f, r1	; 63
      e8:	cf ef       	ldi	r28, 0xFF	; 255
      ea:	d1 e2       	ldi	r29, 0x21	; 33
      ec:	de bf       	out	0x3e, r29	; 62
      ee:	cd bf       	out	0x3d, r28	; 61
      f0:	00 e0       	ldi	r16, 0x00	; 0
      f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
      f4:	12 e0       	ldi	r17, 0x02	; 2
      f6:	a0 e0       	ldi	r26, 0x00	; 0
      f8:	b2 e0       	ldi	r27, 0x02	; 2
      fa:	e8 e0       	ldi	r30, 0x08	; 8
      fc:	f2 e1       	ldi	r31, 0x12	; 18
      fe:	00 e0       	ldi	r16, 0x00	; 0
     100:	0b bf       	out	0x3b, r16	; 59
     102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
     104:	07 90       	elpm	r0, Z+
     106:	0d 92       	st	X+, r0
     108:	a6 30       	cpi	r26, 0x06	; 6
     10a:	b1 07       	cpc	r27, r17
     10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
     10e:	22 e0       	ldi	r18, 0x02	; 2
     110:	a6 e0       	ldi	r26, 0x06	; 6
     112:	b2 e0       	ldi	r27, 0x02	; 2
     114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
     116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
     118:	af 32       	cpi	r26, 0x2F	; 47
     11a:	b2 07       	cpc	r27, r18
     11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
     11e:	8b d1       	rcall	.+790    	; 0x436 <main>
     120:	0c 94 02 09 	jmp	0x1204	; 0x1204 <_exit>

00000124 <__bad_interrupt>:
     124:	6d cf       	rjmp	.-294    	; 0x0 <__vectors>

00000126 <TransmitUART0>:
}

void TransmitUART0(unsigned char data)
{
	//Wait until the Transmitter is ready
	while (! (UCSR0A & (1 << UDRE0)) );
     126:	e0 ec       	ldi	r30, 0xC0	; 192
     128:	f0 e0       	ldi	r31, 0x00	; 0
     12a:	90 81       	ld	r25, Z
     12c:	95 ff       	sbrs	r25, 5
     12e:	fd cf       	rjmp	.-6      	; 0x12a <TransmitUART0+0x4>

	//Get that data out a here!
	UDR0 = data;
     130:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
     134:	08 95       	ret

00000136 <returnNewLine>:
}

void returnNewLine()
{
	TransmitUART0(10);
     136:	8a e0       	ldi	r24, 0x0A	; 10
	TransmitUART0(13);
     138:	f6 df       	rcall	.-20     	; 0x126 <TransmitUART0>
     13a:	8d e0       	ldi	r24, 0x0D	; 13
     13c:	f4 cf       	rjmp	.-24     	; 0x126 <TransmitUART0>
     13e:	08 95       	ret

00000140 <TransmitString>:
}

void TransmitString(unsigned char *s)
{
     140:	cf 93       	push	r28
     142:	df 93       	push	r29
     144:	ec 01       	movw	r28, r24
	while (*s != 0) TransmitUART0(*s++);
     146:	88 81       	ld	r24, Y
     148:	88 23       	and	r24, r24
     14a:	29 f0       	breq	.+10     	; 0x156 <TransmitString+0x16>
     14c:	21 96       	adiw	r28, 0x01	; 1
     14e:	eb df       	rcall	.-42     	; 0x126 <TransmitUART0>
     150:	89 91       	ld	r24, Y+
	returnNewLine();
     152:	81 11       	cpse	r24, r1
     154:	fc cf       	rjmp	.-8      	; 0x14e <TransmitString+0xe>
}
     156:	ef df       	rcall	.-34     	; 0x136 <returnNewLine>
     158:	df 91       	pop	r29
     15a:	cf 91       	pop	r28
     15c:	08 95       	ret

0000015e <send_int_Uart>:

void send_int_Uart(uint32_t c)
{
     15e:	0f 93       	push	r16
     160:	1f 93       	push	r17
     162:	cf 93       	push	r28
     164:	df 93       	push	r29
     166:	cd b7       	in	r28, 0x3d	; 61
     168:	de b7       	in	r29, 0x3e	; 62
     16a:	29 97       	sbiw	r28, 0x09	; 9
     16c:	0f b6       	in	r0, 0x3f	; 63
     16e:	f8 94       	cli
     170:	de bf       	out	0x3e, r29	; 62
     172:	0f be       	out	0x3f, r0	; 63
     174:	cd bf       	out	0x3d, r28	; 61
	char buffer[9];
	sprintf(buffer, "%lu", c);
     176:	9f 93       	push	r25
     178:	8f 93       	push	r24
     17a:	7f 93       	push	r23
     17c:	6f 93       	push	r22
     17e:	82 e0       	ldi	r24, 0x02	; 2
     180:	92 e0       	ldi	r25, 0x02	; 2
     182:	9f 93       	push	r25
     184:	8f 93       	push	r24
     186:	8e 01       	movw	r16, r28
     188:	0f 5f       	subi	r16, 0xFF	; 255
     18a:	1f 4f       	sbci	r17, 0xFF	; 255
     18c:	1f 93       	push	r17
     18e:	0f 93       	push	r16
	//itoa(c, buffer, 10);
	TransmitString(buffer);
     190:	5e d5       	rcall	.+2748   	; 0xc4e <sprintf>
     192:	c8 01       	movw	r24, r16
}
     194:	d5 df       	rcall	.-86     	; 0x140 <TransmitString>
     196:	0f b6       	in	r0, 0x3f	; 63
     198:	f8 94       	cli
     19a:	de bf       	out	0x3e, r29	; 62
     19c:	0f be       	out	0x3f, r0	; 63
     19e:	cd bf       	out	0x3d, r28	; 61
     1a0:	29 96       	adiw	r28, 0x09	; 9
     1a2:	0f b6       	in	r0, 0x3f	; 63
     1a4:	f8 94       	cli
     1a6:	de bf       	out	0x3e, r29	; 62
     1a8:	0f be       	out	0x3f, r0	; 63
     1aa:	cd bf       	out	0x3d, r28	; 61
     1ac:	df 91       	pop	r29
     1ae:	cf 91       	pop	r28
     1b0:	1f 91       	pop	r17
     1b2:	0f 91       	pop	r16
     1b4:	08 95       	ret

000001b6 <InitializeUART0>:

void InitializeUART0(int Baud, char AsyncDoubleSpeed, char DataSizeInBits, char ParityEVEorODD, char StopBits)
{
     1b6:	0f 93       	push	r16
     1b8:	1f 93       	push	r17
     1ba:	cf 93       	push	r28
     1bc:	df 93       	push	r29
     1be:	16 2f       	mov	r17, r22
     1c0:	c4 2f       	mov	r28, r20
     1c2:	d2 2f       	mov	r29, r18
	uint16_t UBBRValue = lrint( F_CPU / 16L / Baud ) - 1;
     1c4:	9c 01       	movw	r18, r24
     1c6:	99 0f       	add	r25, r25
     1c8:	44 0b       	sbc	r20, r20
     1ca:	55 0b       	sbc	r21, r21
     1cc:	60 e4       	ldi	r22, 0x40	; 64
     1ce:	72 e4       	ldi	r23, 0x42	; 66
     1d0:	8f e0       	ldi	r24, 0x0F	; 15
     1d2:	90 e0       	ldi	r25, 0x00	; 0
     1d4:	01 d5       	rcall	.+2562   	; 0xbd8 <__udivmodsi4>
     1d6:	ca 01       	movw	r24, r20
     1d8:	b9 01       	movw	r22, r18
     1da:	af d3       	rcall	.+1886   	; 0x93a <__floatunsisf>
     1dc:	60 d4       	rcall	.+2240   	; 0xa9e <lrint>
     1de:	61 50       	subi	r22, 0x01	; 1
     1e0:	71 09       	sbc	r23, r1
	
	if (AsyncDoubleSpeed == 1) UCSR0A = (1 << U2X0); // setting the U2X bit to 1 for double speed async
     1e2:	11 30       	cpi	r17, 0x01	; 1
     1e4:	19 f4       	brne	.+6      	; 0x1ec <InitializeUART0+0x36>
     1e6:	82 e0       	ldi	r24, 0x02	; 2
     1e8:	80 93 c0 00 	sts	0x00C0, r24	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7000c0>
	
	//Put the upper part of the baud number here (bits 8 to 11)
	UBRR1H = (unsigned char) (UBBRValue >> 8);
     1ec:	70 93 cd 00 	sts	0x00CD, r23	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7000cd>
	
	UBRR0L = UBBRValue;
     1f0:	60 93 c4 00 	sts	0x00C4, r22	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
	//Enable the receiver and transmitter
	UCSR0B = ( 1 << RXCIE0 ) |(1 << RXEN0) | (1 << TXEN0);
     1f4:	88 e9       	ldi	r24, 0x98	; 152
     1f6:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7000c1>
	
	//set 2 stop bits
	if (StopBits == 2) UCSR0C = (1 << USBS0);
     1fa:	02 30       	cpi	r16, 0x02	; 2
     1fc:	19 f4       	brne	.+6      	; 0x204 <InitializeUART0+0x4e>
     1fe:	88 e0       	ldi	r24, 0x08	; 8
     200:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7000c2>
	
	if (ParityEVEorODD == EVEN) UCSR0C |= (1 << UPM01);
     204:	d1 11       	cpse	r29, r1
     206:	06 c0       	rjmp	.+12     	; 0x214 <InitializeUART0+0x5e>
     208:	e2 ec       	ldi	r30, 0xC2	; 194
     20a:	f0 e0       	ldi	r31, 0x00	; 0
     20c:	80 81       	ld	r24, Z
     20e:	80 62       	ori	r24, 0x20	; 32
     210:	80 83       	st	Z, r24
     212:	07 c0       	rjmp	.+14     	; 0x222 <InitializeUART0+0x6c>
	if (ParityEVEorODD == ODD) UCSR0C |= (3 << UPM01);
     214:	d1 30       	cpi	r29, 0x01	; 1
     216:	29 f4       	brne	.+10     	; 0x222 <InitializeUART0+0x6c>
     218:	e2 ec       	ldi	r30, 0xC2	; 194
     21a:	f0 e0       	ldi	r31, 0x00	; 0
     21c:	80 81       	ld	r24, Z
     21e:	80 66       	ori	r24, 0x60	; 96
     220:	80 83       	st	Z, r24
	
	if (DataSizeInBits == 6) UCSR0C |= (1 << UCSZ00); // 6 bit data length
     222:	c6 30       	cpi	r28, 0x06	; 6
     224:	31 f4       	brne	.+12     	; 0x232 <InitializeUART0+0x7c>
     226:	e2 ec       	ldi	r30, 0xC2	; 194
     228:	f0 e0       	ldi	r31, 0x00	; 0
     22a:	80 81       	ld	r24, Z
     22c:	82 60       	ori	r24, 0x02	; 2
     22e:	80 83       	st	Z, r24
     230:	10 c0       	rjmp	.+32     	; 0x252 <InitializeUART0+0x9c>
	if (DataSizeInBits == 7) UCSR0C |= (2 << UCSZ00); // 7 bit data length
     232:	c7 30       	cpi	r28, 0x07	; 7
     234:	31 f4       	brne	.+12     	; 0x242 <InitializeUART0+0x8c>
     236:	e2 ec       	ldi	r30, 0xC2	; 194
     238:	f0 e0       	ldi	r31, 0x00	; 0
     23a:	80 81       	ld	r24, Z
     23c:	84 60       	ori	r24, 0x04	; 4
     23e:	80 83       	st	Z, r24
     240:	0f c0       	rjmp	.+30     	; 0x260 <InitializeUART0+0xaa>
	if (DataSizeInBits == 8) UCSR0C |= (3 << UCSZ00); // 8 bit data length
     242:	c8 30       	cpi	r28, 0x08	; 8
     244:	31 f4       	brne	.+12     	; 0x252 <InitializeUART0+0x9c>
     246:	e2 ec       	ldi	r30, 0xC2	; 194
     248:	f0 e0       	ldi	r31, 0x00	; 0
     24a:	80 81       	ld	r24, Z
     24c:	86 60       	ori	r24, 0x06	; 6
     24e:	80 83       	st	Z, r24
     250:	07 c0       	rjmp	.+14     	; 0x260 <InitializeUART0+0xaa>
	if (DataSizeInBits == 9) UCSR0C |= (7 << UCSZ00); // 9 bit data length
     252:	c9 30       	cpi	r28, 0x09	; 9
     254:	29 f4       	brne	.+10     	; 0x260 <InitializeUART0+0xaa>
     256:	e2 ec       	ldi	r30, 0xC2	; 194
     258:	f0 e0       	ldi	r31, 0x00	; 0
     25a:	80 81       	ld	r24, Z
     25c:	8e 60       	ori	r24, 0x0E	; 14
     25e:	80 83       	st	Z, r24
}
     260:	df 91       	pop	r29
     262:	cf 91       	pop	r28
     264:	1f 91       	pop	r17
     266:	0f 91       	pop	r16
     268:	08 95       	ret

0000026a <setPwm>:
#define PWMInit

#define F_CPU 16000000UL
#include <math.h>

void setPwm(double Pwm){
     26a:	cf 92       	push	r12
     26c:	df 92       	push	r13
     26e:	ef 92       	push	r14
     270:	ff 92       	push	r15
     272:	6b 01       	movw	r12, r22
     274:	7c 01       	movw	r14, r24
	if (Pwm <= 100)
     276:	20 e0       	ldi	r18, 0x00	; 0
     278:	30 e0       	ldi	r19, 0x00	; 0
     27a:	48 ec       	ldi	r20, 0xC8	; 200
     27c:	52 e4       	ldi	r21, 0x42	; 66
     27e:	28 d3       	rcall	.+1616   	; 0x8d0 <__cmpsf2>
     280:	18 16       	cp	r1, r24
     282:	ac f0       	brlt	.+42     	; 0x2ae <setPwm+0x44>
	{
		OCR4A = (uint16_t) ICR4 * 0.01 * Pwm;
     284:	60 91 a6 00 	lds	r22, 0x00A6	; 0x8000a6 <__TEXT_REGION_LENGTH__+0x7000a6>
     288:	70 91 a7 00 	lds	r23, 0x00A7	; 0x8000a7 <__TEXT_REGION_LENGTH__+0x7000a7>
     28c:	80 e0       	ldi	r24, 0x00	; 0
     28e:	90 e0       	ldi	r25, 0x00	; 0
     290:	54 d3       	rcall	.+1704   	; 0x93a <__floatunsisf>
     292:	2a e0       	ldi	r18, 0x0A	; 10
     294:	37 ed       	ldi	r19, 0xD7	; 215
     296:	43 e2       	ldi	r20, 0x23	; 35
     298:	5c e3       	ldi	r21, 0x3C	; 60
     29a:	3b d4       	rcall	.+2166   	; 0xb12 <__mulsf3>
     29c:	a7 01       	movw	r20, r14
     29e:	96 01       	movw	r18, r12
     2a0:	38 d4       	rcall	.+2160   	; 0xb12 <__mulsf3>
     2a2:	1f d3       	rcall	.+1598   	; 0x8e2 <__fixunssfsi>
     2a4:	70 93 a9 00 	sts	0x00A9, r23	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7000a9>
     2a8:	60 93 a8 00 	sts	0x00A8, r22	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7000a8>
     2ac:	04 c0       	rjmp	.+8      	; 0x2b6 <setPwm+0x4c>
	} else {
		OCR4A = 0;
     2ae:	10 92 a9 00 	sts	0x00A9, r1	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7000a9>
     2b2:	10 92 a8 00 	sts	0x00A8, r1	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7000a8>
	}
}
     2b6:	ff 90       	pop	r15
     2b8:	ef 90       	pop	r14
     2ba:	df 90       	pop	r13
     2bc:	cf 90       	pop	r12
     2be:	08 95       	ret

000002c0 <InitializePWM_4C>:

void InitializePWM_4C( uint32_t Frequency, int Pwm )
{
     2c0:	0f 93       	push	r16
     2c2:	1f 93       	push	r17
     2c4:	cf 93       	push	r28
     2c6:	df 93       	push	r29
     2c8:	8b 01       	movw	r16, r22
     2ca:	9c 01       	movw	r18, r24
     2cc:	ea 01       	movw	r28, r20
	TCCR4B = 0x00;
     2ce:	e1 ea       	ldi	r30, 0xA1	; 161
     2d0:	f0 e0       	ldi	r31, 0x00	; 0
     2d2:	10 82       	st	Z, r1
	DDRH |= ( 1 << PH3 );
     2d4:	a1 e0       	ldi	r26, 0x01	; 1
     2d6:	b1 e0       	ldi	r27, 0x01	; 1
     2d8:	8c 91       	ld	r24, X
     2da:	88 60       	ori	r24, 0x08	; 8
     2dc:	8c 93       	st	X, r24
	TCCR4A |= ( 1 << WGM41) | ( 0 << WGM40 ) | ( 1 << COM4A1 ) | ( 0 << COM4A0 );
     2de:	a0 ea       	ldi	r26, 0xA0	; 160
     2e0:	b0 e0       	ldi	r27, 0x00	; 0
     2e2:	8c 91       	ld	r24, X
     2e4:	82 68       	ori	r24, 0x82	; 130
     2e6:	8c 93       	st	X, r24
	TCCR4B |= ( 1 << WGM43) | ( 1 << WGM42 ) ;
     2e8:	80 81       	ld	r24, Z
     2ea:	88 61       	ori	r24, 0x18	; 24
     2ec:	80 83       	st	Z, r24
	uint32_t F_factor = F_CPU / Frequency;
     2ee:	60 e0       	ldi	r22, 0x00	; 0
     2f0:	74 e2       	ldi	r23, 0x24	; 36
     2f2:	84 ef       	ldi	r24, 0xF4	; 244
     2f4:	90 e0       	ldi	r25, 0x00	; 0
     2f6:	a9 01       	movw	r20, r18
     2f8:	98 01       	movw	r18, r16
     2fa:	6e d4       	rcall	.+2268   	; 0xbd8 <__udivmodsi4>
     2fc:	89 01       	movw	r16, r18
     2fe:	9a 01       	movw	r18, r20

	int shifter = 1;
	uint32_t multiplier = F_factor;
	while ( multiplier > 65535 ){
     300:	01 15       	cp	r16, r1
     302:	11 05       	cpc	r17, r1
     304:	61 e0       	ldi	r22, 0x01	; 1
     306:	26 07       	cpc	r18, r22
     308:	31 05       	cpc	r19, r1
     30a:	38 f1       	brcs	.+78     	; 0x35a <InitializePWM_4C+0x9a>
     30c:	d9 01       	movw	r26, r18
     30e:	c8 01       	movw	r24, r16
     310:	41 e0       	ldi	r20, 0x01	; 1
     312:	50 e0       	ldi	r21, 0x00	; 0
		multiplier /= 2;
     314:	b6 95       	lsr	r27
     316:	a7 95       	ror	r26
     318:	97 95       	ror	r25
     31a:	87 95       	ror	r24
		shifter++;
     31c:	4f 5f       	subi	r20, 0xFF	; 255
     31e:	5f 4f       	sbci	r21, 0xFF	; 255
	TCCR4B |= ( 1 << WGM43) | ( 1 << WGM42 ) ;
	uint32_t F_factor = F_CPU / Frequency;

	int shifter = 1;
	uint32_t multiplier = F_factor;
	while ( multiplier > 65535 ){
     320:	00 97       	sbiw	r24, 0x00	; 0
     322:	61 e0       	ldi	r22, 0x01	; 1
     324:	a6 07       	cpc	r26, r22
     326:	b1 05       	cpc	r27, r1
     328:	a8 f7       	brcc	.-22     	; 0x314 <InitializePWM_4C+0x54>
		shifter++;
	}
	if (shifter > 5) {
		shifter = 5;
	}
	switch ( shifter )
     32a:	46 30       	cpi	r20, 0x06	; 6
     32c:	51 05       	cpc	r21, r1
     32e:	14 f0       	brlt	.+4      	; 0x334 <InitializePWM_4C+0x74>
     330:	45 e0       	ldi	r20, 0x05	; 5
     332:	50 e0       	ldi	r21, 0x00	; 0
     334:	43 30       	cpi	r20, 0x03	; 3
     336:	51 05       	cpc	r21, r1
     338:	81 f1       	breq	.+96     	; 0x39a <InitializePWM_4C+0xda>
     33a:	3c f4       	brge	.+14     	; 0x34a <InitializePWM_4C+0x8a>
     33c:	41 30       	cpi	r20, 0x01	; 1
     33e:	51 05       	cpc	r21, r1
     340:	61 f0       	breq	.+24     	; 0x35a <InitializePWM_4C+0x9a>
     342:	42 30       	cpi	r20, 0x02	; 2
     344:	51 05       	cpc	r21, r1
     346:	a9 f0       	breq	.+42     	; 0x372 <InitializePWM_4C+0xb2>
     348:	60 c0       	rjmp	.+192    	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
     34a:	44 30       	cpi	r20, 0x04	; 4
     34c:	51 05       	cpc	r21, r1
     34e:	c9 f1       	breq	.+114    	; 0x3c2 <InitializePWM_4C+0x102>
     350:	45 30       	cpi	r20, 0x05	; 5
     352:	51 05       	cpc	r21, r1
     354:	09 f4       	brne	.+2      	; 0x358 <InitializePWM_4C+0x98>
     356:	45 c0       	rjmp	.+138    	; 0x3e2 <InitializePWM_4C+0x122>
     358:	58 c0       	rjmp	.+176    	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
		{
		case 1:
			TCCR4B |= ( 1 << CS40 ); 
     35a:	e1 ea       	ldi	r30, 0xA1	; 161
     35c:	f0 e0       	ldi	r31, 0x00	; 0
     35e:	80 81       	ld	r24, Z
     360:	81 60       	ori	r24, 0x01	; 1
     362:	80 83       	st	Z, r24
			ICR4 = (uint16_t) (F_factor  - 1);
     364:	01 50       	subi	r16, 0x01	; 1
     366:	11 09       	sbc	r17, r1
     368:	10 93 a7 00 	sts	0x00A7, r17	; 0x8000a7 <__TEXT_REGION_LENGTH__+0x7000a7>
     36c:	00 93 a6 00 	sts	0x00A6, r16	; 0x8000a6 <__TEXT_REGION_LENGTH__+0x7000a6>
		break;
     370:	4c c0       	rjmp	.+152    	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
		case 2:
			TCCR4B |= ( 1 << CS41 ); //decrease in 8
     372:	e1 ea       	ldi	r30, 0xA1	; 161
     374:	f0 e0       	ldi	r31, 0x00	; 0
     376:	80 81       	ld	r24, Z
     378:	82 60       	ori	r24, 0x02	; 2
     37a:	80 83       	st	Z, r24
			ICR4 = (uint16_t) (F_factor / 8  - 1);
     37c:	68 94       	set
     37e:	12 f8       	bld	r1, 2
     380:	36 95       	lsr	r19
     382:	27 95       	ror	r18
     384:	17 95       	ror	r17
     386:	07 95       	ror	r16
     388:	16 94       	lsr	r1
     38a:	d1 f7       	brne	.-12     	; 0x380 <InitializePWM_4C+0xc0>
     38c:	01 50       	subi	r16, 0x01	; 1
     38e:	11 09       	sbc	r17, r1
     390:	10 93 a7 00 	sts	0x00A7, r17	; 0x8000a7 <__TEXT_REGION_LENGTH__+0x7000a7>
     394:	00 93 a6 00 	sts	0x00A6, r16	; 0x8000a6 <__TEXT_REGION_LENGTH__+0x7000a6>
		break;
     398:	38 c0       	rjmp	.+112    	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
		case 3:
			TCCR4B |= ( 1 << CS41 ) | ( 1 << CS40 ); //decrease in 64
     39a:	e1 ea       	ldi	r30, 0xA1	; 161
     39c:	f0 e0       	ldi	r31, 0x00	; 0
     39e:	80 81       	ld	r24, Z
     3a0:	83 60       	ori	r24, 0x03	; 3
     3a2:	80 83       	st	Z, r24
			ICR4 = (uint16_t) (F_factor / 64 - 1);
     3a4:	68 94       	set
     3a6:	15 f8       	bld	r1, 5
     3a8:	36 95       	lsr	r19
     3aa:	27 95       	ror	r18
     3ac:	17 95       	ror	r17
     3ae:	07 95       	ror	r16
     3b0:	16 94       	lsr	r1
     3b2:	d1 f7       	brne	.-12     	; 0x3a8 <InitializePWM_4C+0xe8>
     3b4:	01 50       	subi	r16, 0x01	; 1
     3b6:	11 09       	sbc	r17, r1
     3b8:	10 93 a7 00 	sts	0x00A7, r17	; 0x8000a7 <__TEXT_REGION_LENGTH__+0x7000a7>
     3bc:	00 93 a6 00 	sts	0x00A6, r16	; 0x8000a6 <__TEXT_REGION_LENGTH__+0x7000a6>
		break;
     3c0:	24 c0       	rjmp	.+72     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
		case 4:
			TCCR4B |= ( 1 << CS42 ); //decrease in 256
     3c2:	e1 ea       	ldi	r30, 0xA1	; 161
     3c4:	f0 e0       	ldi	r31, 0x00	; 0
     3c6:	80 81       	ld	r24, Z
     3c8:	84 60       	ori	r24, 0x04	; 4
     3ca:	80 83       	st	Z, r24
			ICR4 = (uint16_t) (F_factor / 256  - 1);
     3cc:	01 2f       	mov	r16, r17
     3ce:	12 2f       	mov	r17, r18
     3d0:	23 2f       	mov	r18, r19
     3d2:	33 27       	eor	r19, r19
     3d4:	01 50       	subi	r16, 0x01	; 1
     3d6:	11 09       	sbc	r17, r1
     3d8:	10 93 a7 00 	sts	0x00A7, r17	; 0x8000a7 <__TEXT_REGION_LENGTH__+0x7000a7>
     3dc:	00 93 a6 00 	sts	0x00A6, r16	; 0x8000a6 <__TEXT_REGION_LENGTH__+0x7000a6>
		break;
     3e0:	14 c0       	rjmp	.+40     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
		case 5:
			TCCR4B |= ( 1 << CS42 ) | ( 1 << CS40 ); //decrease in 1024
     3e2:	e1 ea       	ldi	r30, 0xA1	; 161
     3e4:	f0 e0       	ldi	r31, 0x00	; 0
     3e6:	80 81       	ld	r24, Z
     3e8:	85 60       	ori	r24, 0x05	; 5
     3ea:	80 83       	st	Z, r24
			ICR4 = (uint16_t) (F_factor / 1024 + 1);
     3ec:	0f 2e       	mov	r0, r31
     3ee:	fa e0       	ldi	r31, 0x0A	; 10
     3f0:	36 95       	lsr	r19
     3f2:	27 95       	ror	r18
     3f4:	17 95       	ror	r17
     3f6:	07 95       	ror	r16
     3f8:	fa 95       	dec	r31
     3fa:	d1 f7       	brne	.-12     	; 0x3f0 <InitializePWM_4C+0x130>
     3fc:	f0 2d       	mov	r31, r0
     3fe:	0f 5f       	subi	r16, 0xFF	; 255
     400:	1f 4f       	sbci	r17, 0xFF	; 255
     402:	10 93 a7 00 	sts	0x00A7, r17	; 0x8000a7 <__TEXT_REGION_LENGTH__+0x7000a7>
     406:	00 93 a6 00 	sts	0x00A6, r16	; 0x8000a6 <__TEXT_REGION_LENGTH__+0x7000a6>
		break;
	}
	
	if ( ICR4 == 0 )
     40a:	80 91 a6 00 	lds	r24, 0x00A6	; 0x8000a6 <__TEXT_REGION_LENGTH__+0x7000a6>
     40e:	90 91 a7 00 	lds	r25, 0x00A7	; 0x8000a7 <__TEXT_REGION_LENGTH__+0x7000a7>
     412:	89 2b       	or	r24, r25
     414:	29 f4       	brne	.+10     	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
	{
		OCR4A = 0;
     416:	10 92 a9 00 	sts	0x00A9, r1	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7000a9>
     41a:	10 92 a8 00 	sts	0x00A8, r1	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7000a8>
     41e:	06 c0       	rjmp	.+12     	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
	 } else {
		setPwm(Pwm); // 100 - percentage
     420:	be 01       	movw	r22, r28
     422:	dd 0f       	add	r29, r29
     424:	88 0b       	sbc	r24, r24
     426:	99 0b       	sbc	r25, r25
     428:	8a d2       	rcall	.+1300   	; 0x93e <__floatsisf>
     42a:	1f df       	rcall	.-450    	; 0x26a <setPwm>
	 }
}
     42c:	df 91       	pop	r29
     42e:	cf 91       	pop	r28
     430:	1f 91       	pop	r17
     432:	0f 91       	pop	r16
     434:	08 95       	ret

00000436 <main>:
int counter = 0;
int setRPM = 2500;

int main(void)
{
	DDRH |= (1 << PH4);
     436:	e1 e0       	ldi	r30, 0x01	; 1
     438:	f1 e0       	ldi	r31, 0x01	; 1
     43a:	80 81       	ld	r24, Z
     43c:	80 61       	ori	r24, 0x10	; 16
     43e:	80 83       	st	Z, r24
	PORTH |=  (1 << PH4);
     440:	e2 e0       	ldi	r30, 0x02	; 2
     442:	f1 e0       	ldi	r31, 0x01	; 1
     444:	80 81       	ld	r24, Z
     446:	80 61       	ori	r24, 0x10	; 16
     448:	80 83       	st	Z, r24

  TIMSK5 |= (1 << TOIE5) | (1 << ICIE5);
     44a:	e3 e7       	ldi	r30, 0x73	; 115
     44c:	f0 e0       	ldi	r31, 0x00	; 0
     44e:	80 81       	ld	r24, Z
     450:	81 62       	ori	r24, 0x21	; 33
     452:	80 83       	st	Z, r24
	TCCR5A = (0	<< COM5A1) | (0 << COM5A0) | (0 << WGM51) | ( 0 << WGM50);
     454:	10 92 20 01 	sts	0x0120, r1	; 0x800120 <__TEXT_REGION_LENGTH__+0x700120>
	TCCR5B = (1 << ICNC5 ) | (1 << ICES5) | (0 << WGM53) | (0 << WGM52) | (0 << CS52) | (0 << CS51) | (1 << CS50);
     458:	81 ec       	ldi	r24, 0xC1	; 193
     45a:	80 93 21 01 	sts	0x0121, r24	; 0x800121 <__TEXT_REGION_LENGTH__+0x700121>
  TCNT5 = 1535;
     45e:	8f ef       	ldi	r24, 0xFF	; 255
     460:	95 e0       	ldi	r25, 0x05	; 5
     462:	90 93 25 01 	sts	0x0125, r25	; 0x800125 <__TEXT_REGION_LENGTH__+0x700125>
     466:	80 93 24 01 	sts	0x0124, r24	; 0x800124 <__TEXT_REGION_LENGTH__+0x700124>

	sei();
     46a:	78 94       	sei
	InitializeUART0(9600, 0, 8, 0, 0);
     46c:	00 e0       	ldi	r16, 0x00	; 0
     46e:	20 e0       	ldi	r18, 0x00	; 0
     470:	48 e0       	ldi	r20, 0x08	; 8
     472:	60 e0       	ldi	r22, 0x00	; 0
     474:	80 e8       	ldi	r24, 0x80	; 128
     476:	95 e2       	ldi	r25, 0x25	; 37
     478:	9e de       	rcall	.-708    	; 0x1b6 <InitializeUART0>
	InitializePWM_4C(5000, PWM4C.pwmValue);
     47a:	60 91 1a 02 	lds	r22, 0x021A	; 0x80021a <PWM4C>
     47e:	70 91 1b 02 	lds	r23, 0x021B	; 0x80021b <PWM4C+0x1>
     482:	80 91 1c 02 	lds	r24, 0x021C	; 0x80021c <PWM4C+0x2>
     486:	90 91 1d 02 	lds	r25, 0x021D	; 0x80021d <PWM4C+0x3>
     48a:	26 d2       	rcall	.+1100   	; 0x8d8 <__fixsfsi>
     48c:	ab 01       	movw	r20, r22
     48e:	68 e8       	ldi	r22, 0x88	; 136
     490:	73 e1       	ldi	r23, 0x13	; 19
     492:	80 e0       	ldi	r24, 0x00	; 0
     494:	90 e0       	ldi	r25, 0x00	; 0
     496:	14 df       	rcall	.-472    	; 0x2c0 <InitializePWM_4C>
     498:	ff cf       	rjmp	.-2      	; 0x498 <main+0x62>

0000049a <__vector_46>:

    }
}

ISR(TIMER5_CAPT_vect)
{
     49a:	1f 92       	push	r1
     49c:	0f 92       	push	r0
     49e:	0f b6       	in	r0, 0x3f	; 63
     4a0:	0f 92       	push	r0
     4a2:	11 24       	eor	r1, r1
     4a4:	0b b6       	in	r0, 0x3b	; 59
     4a6:	0f 92       	push	r0
     4a8:	cf 92       	push	r12
     4aa:	df 92       	push	r13
     4ac:	ef 92       	push	r14
     4ae:	ff 92       	push	r15
     4b0:	2f 93       	push	r18
     4b2:	3f 93       	push	r19
     4b4:	4f 93       	push	r20
     4b6:	5f 93       	push	r21
     4b8:	6f 93       	push	r22
     4ba:	7f 93       	push	r23
     4bc:	8f 93       	push	r24
     4be:	9f 93       	push	r25
     4c0:	af 93       	push	r26
     4c2:	bf 93       	push	r27
     4c4:	ef 93       	push	r30
     4c6:	ff 93       	push	r31
	//counter++;
	cli();
     4c8:	f8 94       	cli
	Timer5_1.totalTicks = Timer5_1.counter * 65535 + TCNT5;
     4ca:	e6 e0       	ldi	r30, 0x06	; 6
     4cc:	f2 e0       	ldi	r31, 0x02	; 2
     4ce:	20 81       	ld	r18, Z
     4d0:	31 81       	ldd	r19, Z+1	; 0x01
     4d2:	42 81       	ldd	r20, Z+2	; 0x02
     4d4:	53 81       	ldd	r21, Z+3	; 0x03
     4d6:	e0 90 24 01 	lds	r14, 0x0124	; 0x800124 <__TEXT_REGION_LENGTH__+0x700124>
     4da:	f0 90 25 01 	lds	r15, 0x0125	; 0x800125 <__TEXT_REGION_LENGTH__+0x700125>
     4de:	af ef       	ldi	r26, 0xFF	; 255
     4e0:	bf ef       	ldi	r27, 0xFF	; 255
     4e2:	9c d3       	rcall	.+1848   	; 0xc1c <__muluhisi3>
     4e4:	dc 01       	movw	r26, r24
     4e6:	cb 01       	movw	r24, r22
     4e8:	8e 0d       	add	r24, r14
     4ea:	9f 1d       	adc	r25, r15
     4ec:	a1 1d       	adc	r26, r1
     4ee:	b1 1d       	adc	r27, r1
     4f0:	80 8b       	std	Z+16, r24	; 0x10
     4f2:	91 8b       	std	Z+17, r25	; 0x11
     4f4:	a2 8b       	std	Z+18, r26	; 0x12
     4f6:	b3 8b       	std	Z+19, r27	; 0x13
	//send_int_Uart(F_CPU / Timer5_1.totalTicks * 3 * 4);
	if (F_CPU / Timer5_1.totalTicks * 3 * 4 < setRPM) {
     4f8:	20 89       	ldd	r18, Z+16	; 0x10
     4fa:	31 89       	ldd	r19, Z+17	; 0x11
     4fc:	42 89       	ldd	r20, Z+18	; 0x12
     4fe:	53 89       	ldd	r21, Z+19	; 0x13
     500:	c0 90 00 02 	lds	r12, 0x0200	; 0x800200 <__data_start>
     504:	d0 90 01 02 	lds	r13, 0x0201	; 0x800201 <__data_start+0x1>
     508:	0d 2c       	mov	r0, r13
     50a:	00 0c       	add	r0, r0
     50c:	ee 08       	sbc	r14, r14
     50e:	ff 08       	sbc	r15, r15
     510:	60 e0       	ldi	r22, 0x00	; 0
     512:	74 e2       	ldi	r23, 0x24	; 36
     514:	84 ef       	ldi	r24, 0xF4	; 244
     516:	90 e0       	ldi	r25, 0x00	; 0
     518:	5f d3       	rcall	.+1726   	; 0xbd8 <__udivmodsi4>
     51a:	da 01       	movw	r26, r20
     51c:	c9 01       	movw	r24, r18
     51e:	88 0f       	add	r24, r24
     520:	99 1f       	adc	r25, r25
     522:	aa 1f       	adc	r26, r26
     524:	bb 1f       	adc	r27, r27
     526:	82 0f       	add	r24, r18
     528:	93 1f       	adc	r25, r19
     52a:	a4 1f       	adc	r26, r20
     52c:	b5 1f       	adc	r27, r21
     52e:	88 0f       	add	r24, r24
     530:	99 1f       	adc	r25, r25
     532:	aa 1f       	adc	r26, r26
     534:	bb 1f       	adc	r27, r27
     536:	88 0f       	add	r24, r24
     538:	99 1f       	adc	r25, r25
     53a:	aa 1f       	adc	r26, r26
     53c:	bb 1f       	adc	r27, r27
     53e:	8c 15       	cp	r24, r12
     540:	9d 05       	cpc	r25, r13
     542:	ae 05       	cpc	r26, r14
     544:	bf 05       	cpc	r27, r15
     546:	b8 f4       	brcc	.+46     	; 0x576 <__vector_46+0xdc>
		//TransmitString("+");
		setPwm(PWM4C.pwmValue += 0.05);
     548:	60 91 1a 02 	lds	r22, 0x021A	; 0x80021a <PWM4C>
     54c:	70 91 1b 02 	lds	r23, 0x021B	; 0x80021b <PWM4C+0x1>
     550:	80 91 1c 02 	lds	r24, 0x021C	; 0x80021c <PWM4C+0x2>
     554:	90 91 1d 02 	lds	r25, 0x021D	; 0x80021d <PWM4C+0x3>
     558:	2d ec       	ldi	r18, 0xCD	; 205
     55a:	3c ec       	ldi	r19, 0xCC	; 204
     55c:	4c e4       	ldi	r20, 0x4C	; 76
     55e:	5d e3       	ldi	r21, 0x3D	; 61
     560:	53 d1       	rcall	.+678    	; 0x808 <__addsf3>
     562:	60 93 1a 02 	sts	0x021A, r22	; 0x80021a <PWM4C>
     566:	70 93 1b 02 	sts	0x021B, r23	; 0x80021b <PWM4C+0x1>
     56a:	80 93 1c 02 	sts	0x021C, r24	; 0x80021c <PWM4C+0x2>
     56e:	90 93 1d 02 	sts	0x021D, r25	; 0x80021d <PWM4C+0x3>
     572:	7b de       	rcall	.-778    	; 0x26a <setPwm>
     574:	3a c0       	rjmp	.+116    	; 0x5ea <__vector_46+0x150>
		//send_int_Uart(PWM4C.pwmValue);
		} else if (F_CPU / Timer5_1.totalTicks * 3 * 4 > setRPM) {
     576:	20 91 16 02 	lds	r18, 0x0216	; 0x800216 <__data_end+0x10>
     57a:	30 91 17 02 	lds	r19, 0x0217	; 0x800217 <__data_end+0x11>
     57e:	40 91 18 02 	lds	r20, 0x0218	; 0x800218 <__data_end+0x12>
     582:	50 91 19 02 	lds	r21, 0x0219	; 0x800219 <__data_end+0x13>
     586:	60 e0       	ldi	r22, 0x00	; 0
     588:	74 e2       	ldi	r23, 0x24	; 36
     58a:	84 ef       	ldi	r24, 0xF4	; 244
     58c:	90 e0       	ldi	r25, 0x00	; 0
     58e:	24 d3       	rcall	.+1608   	; 0xbd8 <__udivmodsi4>
     590:	da 01       	movw	r26, r20
     592:	c9 01       	movw	r24, r18
     594:	88 0f       	add	r24, r24
     596:	99 1f       	adc	r25, r25
     598:	aa 1f       	adc	r26, r26
     59a:	bb 1f       	adc	r27, r27
     59c:	82 0f       	add	r24, r18
     59e:	93 1f       	adc	r25, r19
     5a0:	a4 1f       	adc	r26, r20
     5a2:	b5 1f       	adc	r27, r21
     5a4:	88 0f       	add	r24, r24
     5a6:	99 1f       	adc	r25, r25
     5a8:	aa 1f       	adc	r26, r26
     5aa:	bb 1f       	adc	r27, r27
     5ac:	88 0f       	add	r24, r24
     5ae:	99 1f       	adc	r25, r25
     5b0:	aa 1f       	adc	r26, r26
     5b2:	bb 1f       	adc	r27, r27
     5b4:	c8 16       	cp	r12, r24
     5b6:	d9 06       	cpc	r13, r25
     5b8:	ea 06       	cpc	r14, r26
     5ba:	fb 06       	cpc	r15, r27
     5bc:	b0 f4       	brcc	.+44     	; 0x5ea <__vector_46+0x150>
		//TransmitString("-");
		setPwm(PWM4C.pwmValue -= 0.05);
     5be:	60 91 1a 02 	lds	r22, 0x021A	; 0x80021a <PWM4C>
     5c2:	70 91 1b 02 	lds	r23, 0x021B	; 0x80021b <PWM4C+0x1>
     5c6:	80 91 1c 02 	lds	r24, 0x021C	; 0x80021c <PWM4C+0x2>
     5ca:	90 91 1d 02 	lds	r25, 0x021D	; 0x80021d <PWM4C+0x3>
     5ce:	2d ec       	ldi	r18, 0xCD	; 205
     5d0:	3c ec       	ldi	r19, 0xCC	; 204
     5d2:	4c e4       	ldi	r20, 0x4C	; 76
     5d4:	5d e3       	ldi	r21, 0x3D	; 61
     5d6:	17 d1       	rcall	.+558    	; 0x806 <__subsf3>
     5d8:	60 93 1a 02 	sts	0x021A, r22	; 0x80021a <PWM4C>
     5dc:	70 93 1b 02 	sts	0x021B, r23	; 0x80021b <PWM4C+0x1>
     5e0:	80 93 1c 02 	sts	0x021C, r24	; 0x80021c <PWM4C+0x2>
     5e4:	90 93 1d 02 	sts	0x021D, r25	; 0x80021d <PWM4C+0x3>
     5e8:	40 de       	rcall	.-896    	; 0x26a <setPwm>
	}
	TCNT5 = 0;
     5ea:	10 92 25 01 	sts	0x0125, r1	; 0x800125 <__TEXT_REGION_LENGTH__+0x700125>
     5ee:	10 92 24 01 	sts	0x0124, r1	; 0x800124 <__TEXT_REGION_LENGTH__+0x700124>
	Timer5_1.counter = 0;
     5f2:	10 92 06 02 	sts	0x0206, r1	; 0x800206 <__data_end>
     5f6:	10 92 07 02 	sts	0x0207, r1	; 0x800207 <__data_end+0x1>
     5fa:	10 92 08 02 	sts	0x0208, r1	; 0x800208 <__data_end+0x2>
     5fe:	10 92 09 02 	sts	0x0209, r1	; 0x800209 <__data_end+0x3>
sei();
     602:	78 94       	sei
}
     604:	ff 91       	pop	r31
     606:	ef 91       	pop	r30
     608:	bf 91       	pop	r27
     60a:	af 91       	pop	r26
     60c:	9f 91       	pop	r25
     60e:	8f 91       	pop	r24
     610:	7f 91       	pop	r23
     612:	6f 91       	pop	r22
     614:	5f 91       	pop	r21
     616:	4f 91       	pop	r20
     618:	3f 91       	pop	r19
     61a:	2f 91       	pop	r18
     61c:	ff 90       	pop	r15
     61e:	ef 90       	pop	r14
     620:	df 90       	pop	r13
     622:	cf 90       	pop	r12
     624:	0f 90       	pop	r0
     626:	0b be       	out	0x3b, r0	; 59
     628:	0f 90       	pop	r0
     62a:	0f be       	out	0x3f, r0	; 63
     62c:	0f 90       	pop	r0
     62e:	1f 90       	pop	r1
     630:	18 95       	reti

00000632 <__vector_50>:

ISR(TIMER5_OVF_vect)
{
     632:	1f 92       	push	r1
     634:	0f 92       	push	r0
     636:	0f b6       	in	r0, 0x3f	; 63
     638:	0f 92       	push	r0
     63a:	11 24       	eor	r1, r1
     63c:	0b b6       	in	r0, 0x3b	; 59
     63e:	0f 92       	push	r0
     640:	2f 93       	push	r18
     642:	3f 93       	push	r19
     644:	4f 93       	push	r20
     646:	5f 93       	push	r21
     648:	6f 93       	push	r22
     64a:	7f 93       	push	r23
     64c:	8f 93       	push	r24
     64e:	9f 93       	push	r25
     650:	af 93       	push	r26
     652:	bf 93       	push	r27
     654:	ef 93       	push	r30
     656:	ff 93       	push	r31
	if(Timer5_1.totalTicks == 0 && PWM4C.pwmValue == 0) {
     658:	80 91 16 02 	lds	r24, 0x0216	; 0x800216 <__data_end+0x10>
     65c:	90 91 17 02 	lds	r25, 0x0217	; 0x800217 <__data_end+0x11>
     660:	a0 91 18 02 	lds	r26, 0x0218	; 0x800218 <__data_end+0x12>
     664:	b0 91 19 02 	lds	r27, 0x0219	; 0x800219 <__data_end+0x13>
     668:	89 2b       	or	r24, r25
     66a:	8a 2b       	or	r24, r26
     66c:	8b 2b       	or	r24, r27
     66e:	19 f5       	brne	.+70     	; 0x6b6 <__vector_50+0x84>
     670:	60 91 1a 02 	lds	r22, 0x021A	; 0x80021a <PWM4C>
     674:	70 91 1b 02 	lds	r23, 0x021B	; 0x80021b <PWM4C+0x1>
     678:	80 91 1c 02 	lds	r24, 0x021C	; 0x80021c <PWM4C+0x2>
     67c:	90 91 1d 02 	lds	r25, 0x021D	; 0x80021d <PWM4C+0x3>
     680:	20 e0       	ldi	r18, 0x00	; 0
     682:	30 e0       	ldi	r19, 0x00	; 0
     684:	a9 01       	movw	r20, r18
     686:	24 d1       	rcall	.+584    	; 0x8d0 <__cmpsf2>
     688:	81 11       	cpse	r24, r1
     68a:	15 c0       	rjmp	.+42     	; 0x6b6 <__vector_50+0x84>
		PWM4C.pwmValue = 10;
     68c:	80 e0       	ldi	r24, 0x00	; 0
     68e:	90 e0       	ldi	r25, 0x00	; 0
     690:	a0 e2       	ldi	r26, 0x20	; 32
     692:	b1 e4       	ldi	r27, 0x41	; 65
     694:	80 93 1a 02 	sts	0x021A, r24	; 0x80021a <PWM4C>
     698:	90 93 1b 02 	sts	0x021B, r25	; 0x80021b <PWM4C+0x1>
     69c:	a0 93 1c 02 	sts	0x021C, r26	; 0x80021c <PWM4C+0x2>
     6a0:	b0 93 1d 02 	sts	0x021D, r27	; 0x80021d <PWM4C+0x3>
		setPwm(PWM4C.pwmValue);
     6a4:	60 91 1a 02 	lds	r22, 0x021A	; 0x80021a <PWM4C>
     6a8:	70 91 1b 02 	lds	r23, 0x021B	; 0x80021b <PWM4C+0x1>
     6ac:	80 91 1c 02 	lds	r24, 0x021C	; 0x80021c <PWM4C+0x2>
     6b0:	90 91 1d 02 	lds	r25, 0x021D	; 0x80021d <PWM4C+0x3>
     6b4:	da dd       	rcall	.-1100   	; 0x26a <setPwm>
	}
	Timer5_1.counter++;
     6b6:	e6 e0       	ldi	r30, 0x06	; 6
     6b8:	f2 e0       	ldi	r31, 0x02	; 2
     6ba:	80 81       	ld	r24, Z
     6bc:	91 81       	ldd	r25, Z+1	; 0x01
     6be:	a2 81       	ldd	r26, Z+2	; 0x02
     6c0:	b3 81       	ldd	r27, Z+3	; 0x03
     6c2:	01 96       	adiw	r24, 0x01	; 1
     6c4:	a1 1d       	adc	r26, r1
     6c6:	b1 1d       	adc	r27, r1
     6c8:	80 83       	st	Z, r24
     6ca:	91 83       	std	Z+1, r25	; 0x01
     6cc:	a2 83       	std	Z+2, r26	; 0x02
     6ce:	b3 83       	std	Z+3, r27	; 0x03
	//Timer5_1.secondCounts++;
	if(++Timer5_1.seconds >= 250){
     6d0:	84 85       	ldd	r24, Z+12	; 0x0c
     6d2:	95 85       	ldd	r25, Z+13	; 0x0d
     6d4:	a6 85       	ldd	r26, Z+14	; 0x0e
     6d6:	b7 85       	ldd	r27, Z+15	; 0x0f
     6d8:	01 96       	adiw	r24, 0x01	; 1
     6da:	a1 1d       	adc	r26, r1
     6dc:	b1 1d       	adc	r27, r1
     6de:	84 87       	std	Z+12, r24	; 0x0c
     6e0:	95 87       	std	Z+13, r25	; 0x0d
     6e2:	a6 87       	std	Z+14, r26	; 0x0e
     6e4:	b7 87       	std	Z+15, r27	; 0x0f
     6e6:	8a 3f       	cpi	r24, 0xFA	; 250
     6e8:	91 05       	cpc	r25, r1
     6ea:	a1 05       	cpc	r26, r1
     6ec:	b1 05       	cpc	r27, r1
     6ee:	50 f1       	brcs	.+84     	; 0x744 <__vector_50+0x112>
		//send_int_Uart(PWM4C.pwmValue);
			//} else if (F_CPU / Timer5_1.totalTicks * 3 * 4 > setRPM) {
			//TransmitString("-");
			//setPwm(PWM4C.pwmValue -= 0.5);
		//}
		PORTH ^= (1 << PH4);
     6f0:	e2 e0       	ldi	r30, 0x02	; 2
     6f2:	f1 e0       	ldi	r31, 0x01	; 1
     6f4:	90 81       	ld	r25, Z
     6f6:	80 e1       	ldi	r24, 0x10	; 16
     6f8:	89 27       	eor	r24, r25
     6fa:	80 83       	st	Z, r24
		Timer5_1.seconds = 0;
     6fc:	e6 e0       	ldi	r30, 0x06	; 6
     6fe:	f2 e0       	ldi	r31, 0x02	; 2
     700:	14 86       	std	Z+12, r1	; 0x0c
     702:	15 86       	std	Z+13, r1	; 0x0d
     704:	16 86       	std	Z+14, r1	; 0x0e
     706:	17 86       	std	Z+15, r1	; 0x0f
		send_int_Uart(F_CPU / Timer5_1.totalTicks * 3 * 4);
     708:	20 89       	ldd	r18, Z+16	; 0x10
     70a:	31 89       	ldd	r19, Z+17	; 0x11
     70c:	42 89       	ldd	r20, Z+18	; 0x12
     70e:	53 89       	ldd	r21, Z+19	; 0x13
     710:	60 e0       	ldi	r22, 0x00	; 0
     712:	74 e2       	ldi	r23, 0x24	; 36
     714:	84 ef       	ldi	r24, 0xF4	; 244
     716:	90 e0       	ldi	r25, 0x00	; 0
     718:	5f d2       	rcall	.+1214   	; 0xbd8 <__udivmodsi4>
     71a:	da 01       	movw	r26, r20
     71c:	c9 01       	movw	r24, r18
     71e:	88 0f       	add	r24, r24
     720:	99 1f       	adc	r25, r25
     722:	aa 1f       	adc	r26, r26
     724:	bb 1f       	adc	r27, r27
     726:	82 0f       	add	r24, r18
     728:	93 1f       	adc	r25, r19
     72a:	a4 1f       	adc	r26, r20
     72c:	b5 1f       	adc	r27, r21
     72e:	bc 01       	movw	r22, r24
     730:	cd 01       	movw	r24, r26
     732:	66 0f       	add	r22, r22
     734:	77 1f       	adc	r23, r23
     736:	88 1f       	adc	r24, r24
     738:	99 1f       	adc	r25, r25
     73a:	66 0f       	add	r22, r22
     73c:	77 1f       	adc	r23, r23
     73e:	88 1f       	adc	r24, r24
     740:	99 1f       	adc	r25, r25
     742:	0d dd       	rcall	.-1510   	; 0x15e <send_int_Uart>
		//send_int_Uart(counter * 4 * 3);
		//counter=0;
	}
	//PORTH ^= (1 << PH4);
}
     744:	ff 91       	pop	r31
     746:	ef 91       	pop	r30
     748:	bf 91       	pop	r27
     74a:	af 91       	pop	r26
     74c:	9f 91       	pop	r25
     74e:	8f 91       	pop	r24
     750:	7f 91       	pop	r23
     752:	6f 91       	pop	r22
     754:	5f 91       	pop	r21
     756:	4f 91       	pop	r20
     758:	3f 91       	pop	r19
     75a:	2f 91       	pop	r18
     75c:	0f 90       	pop	r0
     75e:	0b be       	out	0x3b, r0	; 59
     760:	0f 90       	pop	r0
     762:	0f be       	out	0x3f, r0	; 63
     764:	0f 90       	pop	r0
     766:	1f 90       	pop	r1
     768:	18 95       	reti

0000076a <__vector_25>:

ISR (USART0_RX_vect)
{
     76a:	1f 92       	push	r1
     76c:	0f 92       	push	r0
     76e:	0f b6       	in	r0, 0x3f	; 63
     770:	0f 92       	push	r0
     772:	11 24       	eor	r1, r1
     774:	0b b6       	in	r0, 0x3b	; 59
     776:	0f 92       	push	r0
     778:	2f 93       	push	r18
     77a:	3f 93       	push	r19
     77c:	4f 93       	push	r20
     77e:	5f 93       	push	r21
     780:	6f 93       	push	r22
     782:	7f 93       	push	r23
     784:	8f 93       	push	r24
     786:	9f 93       	push	r25
     788:	af 93       	push	r26
     78a:	bf 93       	push	r27
     78c:	ef 93       	push	r30
     78e:	ff 93       	push	r31
	UART0.data_in[UART0.dataCount] = UDR0;
     790:	e0 91 2e 02 	lds	r30, 0x022E	; 0x80022e <UART0+0x10>
     794:	f0 e0       	ldi	r31, 0x00	; 0
     796:	a6 ec       	ldi	r26, 0xC6	; 198
     798:	b0 e0       	ldi	r27, 0x00	; 0
     79a:	8c 91       	ld	r24, X
     79c:	e2 5e       	subi	r30, 0xE2	; 226
     79e:	fd 4f       	sbci	r31, 0xFD	; 253
     7a0:	80 83       	st	Z, r24
	if(UDR0 == '+' ) {
     7a2:	8c 91       	ld	r24, X
     7a4:	8b 32       	cpi	r24, 0x2B	; 43
     7a6:	b9 f4       	brne	.+46     	; 0x7d6 <__vector_25+0x6c>
		setPwm(++PWM4C.pwmValue);
     7a8:	60 91 1a 02 	lds	r22, 0x021A	; 0x80021a <PWM4C>
     7ac:	70 91 1b 02 	lds	r23, 0x021B	; 0x80021b <PWM4C+0x1>
     7b0:	80 91 1c 02 	lds	r24, 0x021C	; 0x80021c <PWM4C+0x2>
     7b4:	90 91 1d 02 	lds	r25, 0x021D	; 0x80021d <PWM4C+0x3>
     7b8:	20 e0       	ldi	r18, 0x00	; 0
     7ba:	30 e0       	ldi	r19, 0x00	; 0
     7bc:	40 e8       	ldi	r20, 0x80	; 128
     7be:	5f e3       	ldi	r21, 0x3F	; 63
     7c0:	23 d0       	rcall	.+70     	; 0x808 <__addsf3>
     7c2:	60 93 1a 02 	sts	0x021A, r22	; 0x80021a <PWM4C>
     7c6:	70 93 1b 02 	sts	0x021B, r23	; 0x80021b <PWM4C+0x1>
     7ca:	80 93 1c 02 	sts	0x021C, r24	; 0x80021c <PWM4C+0x2>
     7ce:	90 93 1d 02 	sts	0x021D, r25	; 0x80021d <PWM4C+0x3>
     7d2:	4b dd       	rcall	.-1386   	; 0x26a <setPwm>
     7d4:	05 c0       	rjmp	.+10     	; 0x7e0 <__vector_25+0x76>
		//TransmitString(UART0.data_in);
		//UART0.dataCount = 0;
		//memset(&UART0.dataCount, 0, sizeof(UART0.dataCount));
	} else {
		UART0.dataCount++;
     7d6:	ee e1       	ldi	r30, 0x1E	; 30
     7d8:	f2 e0       	ldi	r31, 0x02	; 2
     7da:	80 89       	ldd	r24, Z+16	; 0x10
     7dc:	8f 5f       	subi	r24, 0xFF	; 255
     7de:	80 8b       	std	Z+16, r24	; 0x10
	}
	//TransmitString(UART0.data_in);
}
     7e0:	ff 91       	pop	r31
     7e2:	ef 91       	pop	r30
     7e4:	bf 91       	pop	r27
     7e6:	af 91       	pop	r26
     7e8:	9f 91       	pop	r25
     7ea:	8f 91       	pop	r24
     7ec:	7f 91       	pop	r23
     7ee:	6f 91       	pop	r22
     7f0:	5f 91       	pop	r21
     7f2:	4f 91       	pop	r20
     7f4:	3f 91       	pop	r19
     7f6:	2f 91       	pop	r18
     7f8:	0f 90       	pop	r0
     7fa:	0b be       	out	0x3b, r0	; 59
     7fc:	0f 90       	pop	r0
     7fe:	0f be       	out	0x3f, r0	; 63
     800:	0f 90       	pop	r0
     802:	1f 90       	pop	r1
     804:	18 95       	reti

00000806 <__subsf3>:
     806:	50 58       	subi	r21, 0x80	; 128

00000808 <__addsf3>:
     808:	bb 27       	eor	r27, r27
     80a:	aa 27       	eor	r26, r26
     80c:	0e d0       	rcall	.+28     	; 0x82a <__addsf3x>
     80e:	0d c1       	rjmp	.+538    	; 0xa2a <__fp_round>
     810:	fe d0       	rcall	.+508    	; 0xa0e <__fp_pscA>
     812:	30 f0       	brcs	.+12     	; 0x820 <__addsf3+0x18>
     814:	03 d1       	rcall	.+518    	; 0xa1c <__fp_pscB>
     816:	20 f0       	brcs	.+8      	; 0x820 <__addsf3+0x18>
     818:	31 f4       	brne	.+12     	; 0x826 <__addsf3+0x1e>
     81a:	9f 3f       	cpi	r25, 0xFF	; 255
     81c:	11 f4       	brne	.+4      	; 0x822 <__addsf3+0x1a>
     81e:	1e f4       	brtc	.+6      	; 0x826 <__addsf3+0x1e>
     820:	f3 c0       	rjmp	.+486    	; 0xa08 <__fp_nan>
     822:	0e f4       	brtc	.+2      	; 0x826 <__addsf3+0x1e>
     824:	e0 95       	com	r30
     826:	e7 fb       	bst	r30, 7
     828:	e9 c0       	rjmp	.+466    	; 0x9fc <__fp_inf>

0000082a <__addsf3x>:
     82a:	e9 2f       	mov	r30, r25
     82c:	0f d1       	rcall	.+542    	; 0xa4c <__fp_split3>
     82e:	80 f3       	brcs	.-32     	; 0x810 <__addsf3+0x8>
     830:	ba 17       	cp	r27, r26
     832:	62 07       	cpc	r22, r18
     834:	73 07       	cpc	r23, r19
     836:	84 07       	cpc	r24, r20
     838:	95 07       	cpc	r25, r21
     83a:	18 f0       	brcs	.+6      	; 0x842 <__addsf3x+0x18>
     83c:	71 f4       	brne	.+28     	; 0x85a <__addsf3x+0x30>
     83e:	9e f5       	brtc	.+102    	; 0x8a6 <__addsf3x+0x7c>
     840:	27 c1       	rjmp	.+590    	; 0xa90 <__fp_zero>
     842:	0e f4       	brtc	.+2      	; 0x846 <__addsf3x+0x1c>
     844:	e0 95       	com	r30
     846:	0b 2e       	mov	r0, r27
     848:	ba 2f       	mov	r27, r26
     84a:	a0 2d       	mov	r26, r0
     84c:	0b 01       	movw	r0, r22
     84e:	b9 01       	movw	r22, r18
     850:	90 01       	movw	r18, r0
     852:	0c 01       	movw	r0, r24
     854:	ca 01       	movw	r24, r20
     856:	a0 01       	movw	r20, r0
     858:	11 24       	eor	r1, r1
     85a:	ff 27       	eor	r31, r31
     85c:	59 1b       	sub	r21, r25
     85e:	99 f0       	breq	.+38     	; 0x886 <__addsf3x+0x5c>
     860:	59 3f       	cpi	r21, 0xF9	; 249
     862:	50 f4       	brcc	.+20     	; 0x878 <__addsf3x+0x4e>
     864:	50 3e       	cpi	r21, 0xE0	; 224
     866:	68 f1       	brcs	.+90     	; 0x8c2 <__addsf3x+0x98>
     868:	1a 16       	cp	r1, r26
     86a:	f0 40       	sbci	r31, 0x00	; 0
     86c:	a2 2f       	mov	r26, r18
     86e:	23 2f       	mov	r18, r19
     870:	34 2f       	mov	r19, r20
     872:	44 27       	eor	r20, r20
     874:	58 5f       	subi	r21, 0xF8	; 248
     876:	f3 cf       	rjmp	.-26     	; 0x85e <__addsf3x+0x34>
     878:	46 95       	lsr	r20
     87a:	37 95       	ror	r19
     87c:	27 95       	ror	r18
     87e:	a7 95       	ror	r26
     880:	f0 40       	sbci	r31, 0x00	; 0
     882:	53 95       	inc	r21
     884:	c9 f7       	brne	.-14     	; 0x878 <__addsf3x+0x4e>
     886:	7e f4       	brtc	.+30     	; 0x8a6 <__addsf3x+0x7c>
     888:	1f 16       	cp	r1, r31
     88a:	ba 0b       	sbc	r27, r26
     88c:	62 0b       	sbc	r22, r18
     88e:	73 0b       	sbc	r23, r19
     890:	84 0b       	sbc	r24, r20
     892:	ba f0       	brmi	.+46     	; 0x8c2 <__addsf3x+0x98>
     894:	91 50       	subi	r25, 0x01	; 1
     896:	a1 f0       	breq	.+40     	; 0x8c0 <__addsf3x+0x96>
     898:	ff 0f       	add	r31, r31
     89a:	bb 1f       	adc	r27, r27
     89c:	66 1f       	adc	r22, r22
     89e:	77 1f       	adc	r23, r23
     8a0:	88 1f       	adc	r24, r24
     8a2:	c2 f7       	brpl	.-16     	; 0x894 <__addsf3x+0x6a>
     8a4:	0e c0       	rjmp	.+28     	; 0x8c2 <__addsf3x+0x98>
     8a6:	ba 0f       	add	r27, r26
     8a8:	62 1f       	adc	r22, r18
     8aa:	73 1f       	adc	r23, r19
     8ac:	84 1f       	adc	r24, r20
     8ae:	48 f4       	brcc	.+18     	; 0x8c2 <__addsf3x+0x98>
     8b0:	87 95       	ror	r24
     8b2:	77 95       	ror	r23
     8b4:	67 95       	ror	r22
     8b6:	b7 95       	ror	r27
     8b8:	f7 95       	ror	r31
     8ba:	9e 3f       	cpi	r25, 0xFE	; 254
     8bc:	08 f0       	brcs	.+2      	; 0x8c0 <__addsf3x+0x96>
     8be:	b3 cf       	rjmp	.-154    	; 0x826 <__addsf3+0x1e>
     8c0:	93 95       	inc	r25
     8c2:	88 0f       	add	r24, r24
     8c4:	08 f0       	brcs	.+2      	; 0x8c8 <__addsf3x+0x9e>
     8c6:	99 27       	eor	r25, r25
     8c8:	ee 0f       	add	r30, r30
     8ca:	97 95       	ror	r25
     8cc:	87 95       	ror	r24
     8ce:	08 95       	ret

000008d0 <__cmpsf2>:
     8d0:	71 d0       	rcall	.+226    	; 0x9b4 <__fp_cmp>
     8d2:	08 f4       	brcc	.+2      	; 0x8d6 <__cmpsf2+0x6>
     8d4:	81 e0       	ldi	r24, 0x01	; 1
     8d6:	08 95       	ret

000008d8 <__fixsfsi>:
     8d8:	04 d0       	rcall	.+8      	; 0x8e2 <__fixunssfsi>
     8da:	68 94       	set
     8dc:	b1 11       	cpse	r27, r1
     8de:	d9 c0       	rjmp	.+434    	; 0xa92 <__fp_szero>
     8e0:	08 95       	ret

000008e2 <__fixunssfsi>:
     8e2:	bc d0       	rcall	.+376    	; 0xa5c <__fp_splitA>
     8e4:	88 f0       	brcs	.+34     	; 0x908 <__fixunssfsi+0x26>
     8e6:	9f 57       	subi	r25, 0x7F	; 127
     8e8:	90 f0       	brcs	.+36     	; 0x90e <__fixunssfsi+0x2c>
     8ea:	b9 2f       	mov	r27, r25
     8ec:	99 27       	eor	r25, r25
     8ee:	b7 51       	subi	r27, 0x17	; 23
     8f0:	a0 f0       	brcs	.+40     	; 0x91a <__fixunssfsi+0x38>
     8f2:	d1 f0       	breq	.+52     	; 0x928 <__fixunssfsi+0x46>
     8f4:	66 0f       	add	r22, r22
     8f6:	77 1f       	adc	r23, r23
     8f8:	88 1f       	adc	r24, r24
     8fa:	99 1f       	adc	r25, r25
     8fc:	1a f0       	brmi	.+6      	; 0x904 <__fixunssfsi+0x22>
     8fe:	ba 95       	dec	r27
     900:	c9 f7       	brne	.-14     	; 0x8f4 <__fixunssfsi+0x12>
     902:	12 c0       	rjmp	.+36     	; 0x928 <__fixunssfsi+0x46>
     904:	b1 30       	cpi	r27, 0x01	; 1
     906:	81 f0       	breq	.+32     	; 0x928 <__fixunssfsi+0x46>
     908:	c3 d0       	rcall	.+390    	; 0xa90 <__fp_zero>
     90a:	b1 e0       	ldi	r27, 0x01	; 1
     90c:	08 95       	ret
     90e:	c0 c0       	rjmp	.+384    	; 0xa90 <__fp_zero>
     910:	67 2f       	mov	r22, r23
     912:	78 2f       	mov	r23, r24
     914:	88 27       	eor	r24, r24
     916:	b8 5f       	subi	r27, 0xF8	; 248
     918:	39 f0       	breq	.+14     	; 0x928 <__fixunssfsi+0x46>
     91a:	b9 3f       	cpi	r27, 0xF9	; 249
     91c:	cc f3       	brlt	.-14     	; 0x910 <__fixunssfsi+0x2e>
     91e:	86 95       	lsr	r24
     920:	77 95       	ror	r23
     922:	67 95       	ror	r22
     924:	b3 95       	inc	r27
     926:	d9 f7       	brne	.-10     	; 0x91e <__fixunssfsi+0x3c>
     928:	3e f4       	brtc	.+14     	; 0x938 <__fixunssfsi+0x56>
     92a:	90 95       	com	r25
     92c:	80 95       	com	r24
     92e:	70 95       	com	r23
     930:	61 95       	neg	r22
     932:	7f 4f       	sbci	r23, 0xFF	; 255
     934:	8f 4f       	sbci	r24, 0xFF	; 255
     936:	9f 4f       	sbci	r25, 0xFF	; 255
     938:	08 95       	ret

0000093a <__floatunsisf>:
     93a:	e8 94       	clt
     93c:	09 c0       	rjmp	.+18     	; 0x950 <__floatsisf+0x12>

0000093e <__floatsisf>:
     93e:	97 fb       	bst	r25, 7
     940:	3e f4       	brtc	.+14     	; 0x950 <__floatsisf+0x12>
     942:	90 95       	com	r25
     944:	80 95       	com	r24
     946:	70 95       	com	r23
     948:	61 95       	neg	r22
     94a:	7f 4f       	sbci	r23, 0xFF	; 255
     94c:	8f 4f       	sbci	r24, 0xFF	; 255
     94e:	9f 4f       	sbci	r25, 0xFF	; 255
     950:	99 23       	and	r25, r25
     952:	a9 f0       	breq	.+42     	; 0x97e <__floatsisf+0x40>
     954:	f9 2f       	mov	r31, r25
     956:	96 e9       	ldi	r25, 0x96	; 150
     958:	bb 27       	eor	r27, r27
     95a:	93 95       	inc	r25
     95c:	f6 95       	lsr	r31
     95e:	87 95       	ror	r24
     960:	77 95       	ror	r23
     962:	67 95       	ror	r22
     964:	b7 95       	ror	r27
     966:	f1 11       	cpse	r31, r1
     968:	f8 cf       	rjmp	.-16     	; 0x95a <__floatsisf+0x1c>
     96a:	fa f4       	brpl	.+62     	; 0x9aa <__floatsisf+0x6c>
     96c:	bb 0f       	add	r27, r27
     96e:	11 f4       	brne	.+4      	; 0x974 <__floatsisf+0x36>
     970:	60 ff       	sbrs	r22, 0
     972:	1b c0       	rjmp	.+54     	; 0x9aa <__floatsisf+0x6c>
     974:	6f 5f       	subi	r22, 0xFF	; 255
     976:	7f 4f       	sbci	r23, 0xFF	; 255
     978:	8f 4f       	sbci	r24, 0xFF	; 255
     97a:	9f 4f       	sbci	r25, 0xFF	; 255
     97c:	16 c0       	rjmp	.+44     	; 0x9aa <__floatsisf+0x6c>
     97e:	88 23       	and	r24, r24
     980:	11 f0       	breq	.+4      	; 0x986 <__floatsisf+0x48>
     982:	96 e9       	ldi	r25, 0x96	; 150
     984:	11 c0       	rjmp	.+34     	; 0x9a8 <__floatsisf+0x6a>
     986:	77 23       	and	r23, r23
     988:	21 f0       	breq	.+8      	; 0x992 <__floatsisf+0x54>
     98a:	9e e8       	ldi	r25, 0x8E	; 142
     98c:	87 2f       	mov	r24, r23
     98e:	76 2f       	mov	r23, r22
     990:	05 c0       	rjmp	.+10     	; 0x99c <__floatsisf+0x5e>
     992:	66 23       	and	r22, r22
     994:	71 f0       	breq	.+28     	; 0x9b2 <__floatsisf+0x74>
     996:	96 e8       	ldi	r25, 0x86	; 134
     998:	86 2f       	mov	r24, r22
     99a:	70 e0       	ldi	r23, 0x00	; 0
     99c:	60 e0       	ldi	r22, 0x00	; 0
     99e:	2a f0       	brmi	.+10     	; 0x9aa <__floatsisf+0x6c>
     9a0:	9a 95       	dec	r25
     9a2:	66 0f       	add	r22, r22
     9a4:	77 1f       	adc	r23, r23
     9a6:	88 1f       	adc	r24, r24
     9a8:	da f7       	brpl	.-10     	; 0x9a0 <__floatsisf+0x62>
     9aa:	88 0f       	add	r24, r24
     9ac:	96 95       	lsr	r25
     9ae:	87 95       	ror	r24
     9b0:	97 f9       	bld	r25, 7
     9b2:	08 95       	ret

000009b4 <__fp_cmp>:
     9b4:	99 0f       	add	r25, r25
     9b6:	00 08       	sbc	r0, r0
     9b8:	55 0f       	add	r21, r21
     9ba:	aa 0b       	sbc	r26, r26
     9bc:	e0 e8       	ldi	r30, 0x80	; 128
     9be:	fe ef       	ldi	r31, 0xFE	; 254
     9c0:	16 16       	cp	r1, r22
     9c2:	17 06       	cpc	r1, r23
     9c4:	e8 07       	cpc	r30, r24
     9c6:	f9 07       	cpc	r31, r25
     9c8:	c0 f0       	brcs	.+48     	; 0x9fa <__fp_cmp+0x46>
     9ca:	12 16       	cp	r1, r18
     9cc:	13 06       	cpc	r1, r19
     9ce:	e4 07       	cpc	r30, r20
     9d0:	f5 07       	cpc	r31, r21
     9d2:	98 f0       	brcs	.+38     	; 0x9fa <__fp_cmp+0x46>
     9d4:	62 1b       	sub	r22, r18
     9d6:	73 0b       	sbc	r23, r19
     9d8:	84 0b       	sbc	r24, r20
     9da:	95 0b       	sbc	r25, r21
     9dc:	39 f4       	brne	.+14     	; 0x9ec <__fp_cmp+0x38>
     9de:	0a 26       	eor	r0, r26
     9e0:	61 f0       	breq	.+24     	; 0x9fa <__fp_cmp+0x46>
     9e2:	23 2b       	or	r18, r19
     9e4:	24 2b       	or	r18, r20
     9e6:	25 2b       	or	r18, r21
     9e8:	21 f4       	brne	.+8      	; 0x9f2 <__fp_cmp+0x3e>
     9ea:	08 95       	ret
     9ec:	0a 26       	eor	r0, r26
     9ee:	09 f4       	brne	.+2      	; 0x9f2 <__fp_cmp+0x3e>
     9f0:	a1 40       	sbci	r26, 0x01	; 1
     9f2:	a6 95       	lsr	r26
     9f4:	8f ef       	ldi	r24, 0xFF	; 255
     9f6:	81 1d       	adc	r24, r1
     9f8:	81 1d       	adc	r24, r1
     9fa:	08 95       	ret

000009fc <__fp_inf>:
     9fc:	97 f9       	bld	r25, 7
     9fe:	9f 67       	ori	r25, 0x7F	; 127
     a00:	80 e8       	ldi	r24, 0x80	; 128
     a02:	70 e0       	ldi	r23, 0x00	; 0
     a04:	60 e0       	ldi	r22, 0x00	; 0
     a06:	08 95       	ret

00000a08 <__fp_nan>:
     a08:	9f ef       	ldi	r25, 0xFF	; 255
     a0a:	80 ec       	ldi	r24, 0xC0	; 192
     a0c:	08 95       	ret

00000a0e <__fp_pscA>:
     a0e:	00 24       	eor	r0, r0
     a10:	0a 94       	dec	r0
     a12:	16 16       	cp	r1, r22
     a14:	17 06       	cpc	r1, r23
     a16:	18 06       	cpc	r1, r24
     a18:	09 06       	cpc	r0, r25
     a1a:	08 95       	ret

00000a1c <__fp_pscB>:
     a1c:	00 24       	eor	r0, r0
     a1e:	0a 94       	dec	r0
     a20:	12 16       	cp	r1, r18
     a22:	13 06       	cpc	r1, r19
     a24:	14 06       	cpc	r1, r20
     a26:	05 06       	cpc	r0, r21
     a28:	08 95       	ret

00000a2a <__fp_round>:
     a2a:	09 2e       	mov	r0, r25
     a2c:	03 94       	inc	r0
     a2e:	00 0c       	add	r0, r0
     a30:	11 f4       	brne	.+4      	; 0xa36 <__fp_round+0xc>
     a32:	88 23       	and	r24, r24
     a34:	52 f0       	brmi	.+20     	; 0xa4a <__fp_round+0x20>
     a36:	bb 0f       	add	r27, r27
     a38:	40 f4       	brcc	.+16     	; 0xa4a <__fp_round+0x20>
     a3a:	bf 2b       	or	r27, r31
     a3c:	11 f4       	brne	.+4      	; 0xa42 <__fp_round+0x18>
     a3e:	60 ff       	sbrs	r22, 0
     a40:	04 c0       	rjmp	.+8      	; 0xa4a <__fp_round+0x20>
     a42:	6f 5f       	subi	r22, 0xFF	; 255
     a44:	7f 4f       	sbci	r23, 0xFF	; 255
     a46:	8f 4f       	sbci	r24, 0xFF	; 255
     a48:	9f 4f       	sbci	r25, 0xFF	; 255
     a4a:	08 95       	ret

00000a4c <__fp_split3>:
     a4c:	57 fd       	sbrc	r21, 7
     a4e:	90 58       	subi	r25, 0x80	; 128
     a50:	44 0f       	add	r20, r20
     a52:	55 1f       	adc	r21, r21
     a54:	59 f0       	breq	.+22     	; 0xa6c <__fp_splitA+0x10>
     a56:	5f 3f       	cpi	r21, 0xFF	; 255
     a58:	71 f0       	breq	.+28     	; 0xa76 <__fp_splitA+0x1a>
     a5a:	47 95       	ror	r20

00000a5c <__fp_splitA>:
     a5c:	88 0f       	add	r24, r24
     a5e:	97 fb       	bst	r25, 7
     a60:	99 1f       	adc	r25, r25
     a62:	61 f0       	breq	.+24     	; 0xa7c <__fp_splitA+0x20>
     a64:	9f 3f       	cpi	r25, 0xFF	; 255
     a66:	79 f0       	breq	.+30     	; 0xa86 <__fp_splitA+0x2a>
     a68:	87 95       	ror	r24
     a6a:	08 95       	ret
     a6c:	12 16       	cp	r1, r18
     a6e:	13 06       	cpc	r1, r19
     a70:	14 06       	cpc	r1, r20
     a72:	55 1f       	adc	r21, r21
     a74:	f2 cf       	rjmp	.-28     	; 0xa5a <__fp_split3+0xe>
     a76:	46 95       	lsr	r20
     a78:	f1 df       	rcall	.-30     	; 0xa5c <__fp_splitA>
     a7a:	08 c0       	rjmp	.+16     	; 0xa8c <__fp_splitA+0x30>
     a7c:	16 16       	cp	r1, r22
     a7e:	17 06       	cpc	r1, r23
     a80:	18 06       	cpc	r1, r24
     a82:	99 1f       	adc	r25, r25
     a84:	f1 cf       	rjmp	.-30     	; 0xa68 <__fp_splitA+0xc>
     a86:	86 95       	lsr	r24
     a88:	71 05       	cpc	r23, r1
     a8a:	61 05       	cpc	r22, r1
     a8c:	08 94       	sec
     a8e:	08 95       	ret

00000a90 <__fp_zero>:
     a90:	e8 94       	clt

00000a92 <__fp_szero>:
     a92:	bb 27       	eor	r27, r27
     a94:	66 27       	eor	r22, r22
     a96:	77 27       	eor	r23, r23
     a98:	cb 01       	movw	r24, r22
     a9a:	97 f9       	bld	r25, 7
     a9c:	08 95       	ret

00000a9e <lrint>:
     a9e:	de df       	rcall	.-68     	; 0xa5c <__fp_splitA>
     aa0:	a8 f1       	brcs	.+106    	; 0xb0c <lrint+0x6e>
     aa2:	9e 57       	subi	r25, 0x7E	; 126
     aa4:	a8 f1       	brcs	.+106    	; 0xb10 <lrint+0x72>
     aa6:	98 51       	subi	r25, 0x18	; 24
     aa8:	60 f0       	brcs	.+24     	; 0xac2 <lrint+0x24>
     aaa:	39 f1       	breq	.+78     	; 0xafa <lrint+0x5c>
     aac:	98 30       	cpi	r25, 0x08	; 8
     aae:	70 f5       	brcc	.+92     	; 0xb0c <lrint+0x6e>
     ab0:	09 2e       	mov	r0, r25
     ab2:	99 27       	eor	r25, r25
     ab4:	66 0f       	add	r22, r22
     ab6:	77 1f       	adc	r23, r23
     ab8:	88 1f       	adc	r24, r24
     aba:	99 1f       	adc	r25, r25
     abc:	0a 94       	dec	r0
     abe:	d1 f7       	brne	.-12     	; 0xab4 <lrint+0x16>
     ac0:	1c c0       	rjmp	.+56     	; 0xafa <lrint+0x5c>
     ac2:	bb 27       	eor	r27, r27
     ac4:	99 3f       	cpi	r25, 0xF9	; 249
     ac6:	4c f4       	brge	.+18     	; 0xada <lrint+0x3c>
     ac8:	b1 11       	cpse	r27, r1
     aca:	b1 e0       	ldi	r27, 0x01	; 1
     acc:	b6 2b       	or	r27, r22
     ace:	67 2f       	mov	r22, r23
     ad0:	78 2f       	mov	r23, r24
     ad2:	88 27       	eor	r24, r24
     ad4:	98 5f       	subi	r25, 0xF8	; 248
     ad6:	b1 f7       	brne	.-20     	; 0xac4 <lrint+0x26>
     ad8:	08 c0       	rjmp	.+16     	; 0xaea <lrint+0x4c>
     ada:	86 95       	lsr	r24
     adc:	77 95       	ror	r23
     ade:	67 95       	ror	r22
     ae0:	b7 95       	ror	r27
     ae2:	08 f4       	brcc	.+2      	; 0xae6 <lrint+0x48>
     ae4:	b1 60       	ori	r27, 0x01	; 1
     ae6:	93 95       	inc	r25
     ae8:	c1 f7       	brne	.-16     	; 0xada <lrint+0x3c>
     aea:	bb 0f       	add	r27, r27
     aec:	30 f4       	brcc	.+12     	; 0xafa <lrint+0x5c>
     aee:	11 f4       	brne	.+4      	; 0xaf4 <lrint+0x56>
     af0:	60 ff       	sbrs	r22, 0
     af2:	03 c0       	rjmp	.+6      	; 0xafa <lrint+0x5c>
     af4:	6f 5f       	subi	r22, 0xFF	; 255
     af6:	7f 4f       	sbci	r23, 0xFF	; 255
     af8:	8f 4f       	sbci	r24, 0xFF	; 255
     afa:	3e f4       	brtc	.+14     	; 0xb0a <lrint+0x6c>
     afc:	90 95       	com	r25
     afe:	80 95       	com	r24
     b00:	70 95       	com	r23
     b02:	61 95       	neg	r22
     b04:	7f 4f       	sbci	r23, 0xFF	; 255
     b06:	8f 4f       	sbci	r24, 0xFF	; 255
     b08:	9f 4f       	sbci	r25, 0xFF	; 255
     b0a:	08 95       	ret
     b0c:	68 94       	set
     b0e:	c1 cf       	rjmp	.-126    	; 0xa92 <__fp_szero>
     b10:	bf cf       	rjmp	.-130    	; 0xa90 <__fp_zero>

00000b12 <__mulsf3>:
     b12:	0b d0       	rcall	.+22     	; 0xb2a <__mulsf3x>
     b14:	8a cf       	rjmp	.-236    	; 0xa2a <__fp_round>
     b16:	7b df       	rcall	.-266    	; 0xa0e <__fp_pscA>
     b18:	28 f0       	brcs	.+10     	; 0xb24 <__mulsf3+0x12>
     b1a:	80 df       	rcall	.-256    	; 0xa1c <__fp_pscB>
     b1c:	18 f0       	brcs	.+6      	; 0xb24 <__mulsf3+0x12>
     b1e:	95 23       	and	r25, r21
     b20:	09 f0       	breq	.+2      	; 0xb24 <__mulsf3+0x12>
     b22:	6c cf       	rjmp	.-296    	; 0x9fc <__fp_inf>
     b24:	71 cf       	rjmp	.-286    	; 0xa08 <__fp_nan>
     b26:	11 24       	eor	r1, r1
     b28:	b4 cf       	rjmp	.-152    	; 0xa92 <__fp_szero>

00000b2a <__mulsf3x>:
     b2a:	90 df       	rcall	.-224    	; 0xa4c <__fp_split3>
     b2c:	a0 f3       	brcs	.-24     	; 0xb16 <__mulsf3+0x4>

00000b2e <__mulsf3_pse>:
     b2e:	95 9f       	mul	r25, r21
     b30:	d1 f3       	breq	.-12     	; 0xb26 <__mulsf3+0x14>
     b32:	95 0f       	add	r25, r21
     b34:	50 e0       	ldi	r21, 0x00	; 0
     b36:	55 1f       	adc	r21, r21
     b38:	62 9f       	mul	r22, r18
     b3a:	f0 01       	movw	r30, r0
     b3c:	72 9f       	mul	r23, r18
     b3e:	bb 27       	eor	r27, r27
     b40:	f0 0d       	add	r31, r0
     b42:	b1 1d       	adc	r27, r1
     b44:	63 9f       	mul	r22, r19
     b46:	aa 27       	eor	r26, r26
     b48:	f0 0d       	add	r31, r0
     b4a:	b1 1d       	adc	r27, r1
     b4c:	aa 1f       	adc	r26, r26
     b4e:	64 9f       	mul	r22, r20
     b50:	66 27       	eor	r22, r22
     b52:	b0 0d       	add	r27, r0
     b54:	a1 1d       	adc	r26, r1
     b56:	66 1f       	adc	r22, r22
     b58:	82 9f       	mul	r24, r18
     b5a:	22 27       	eor	r18, r18
     b5c:	b0 0d       	add	r27, r0
     b5e:	a1 1d       	adc	r26, r1
     b60:	62 1f       	adc	r22, r18
     b62:	73 9f       	mul	r23, r19
     b64:	b0 0d       	add	r27, r0
     b66:	a1 1d       	adc	r26, r1
     b68:	62 1f       	adc	r22, r18
     b6a:	83 9f       	mul	r24, r19
     b6c:	a0 0d       	add	r26, r0
     b6e:	61 1d       	adc	r22, r1
     b70:	22 1f       	adc	r18, r18
     b72:	74 9f       	mul	r23, r20
     b74:	33 27       	eor	r19, r19
     b76:	a0 0d       	add	r26, r0
     b78:	61 1d       	adc	r22, r1
     b7a:	23 1f       	adc	r18, r19
     b7c:	84 9f       	mul	r24, r20
     b7e:	60 0d       	add	r22, r0
     b80:	21 1d       	adc	r18, r1
     b82:	82 2f       	mov	r24, r18
     b84:	76 2f       	mov	r23, r22
     b86:	6a 2f       	mov	r22, r26
     b88:	11 24       	eor	r1, r1
     b8a:	9f 57       	subi	r25, 0x7F	; 127
     b8c:	50 40       	sbci	r21, 0x00	; 0
     b8e:	8a f0       	brmi	.+34     	; 0xbb2 <__mulsf3_pse+0x84>
     b90:	e1 f0       	breq	.+56     	; 0xbca <__mulsf3_pse+0x9c>
     b92:	88 23       	and	r24, r24
     b94:	4a f0       	brmi	.+18     	; 0xba8 <__mulsf3_pse+0x7a>
     b96:	ee 0f       	add	r30, r30
     b98:	ff 1f       	adc	r31, r31
     b9a:	bb 1f       	adc	r27, r27
     b9c:	66 1f       	adc	r22, r22
     b9e:	77 1f       	adc	r23, r23
     ba0:	88 1f       	adc	r24, r24
     ba2:	91 50       	subi	r25, 0x01	; 1
     ba4:	50 40       	sbci	r21, 0x00	; 0
     ba6:	a9 f7       	brne	.-22     	; 0xb92 <__mulsf3_pse+0x64>
     ba8:	9e 3f       	cpi	r25, 0xFE	; 254
     baa:	51 05       	cpc	r21, r1
     bac:	70 f0       	brcs	.+28     	; 0xbca <__mulsf3_pse+0x9c>
     bae:	26 cf       	rjmp	.-436    	; 0x9fc <__fp_inf>
     bb0:	70 cf       	rjmp	.-288    	; 0xa92 <__fp_szero>
     bb2:	5f 3f       	cpi	r21, 0xFF	; 255
     bb4:	ec f3       	brlt	.-6      	; 0xbb0 <__mulsf3_pse+0x82>
     bb6:	98 3e       	cpi	r25, 0xE8	; 232
     bb8:	dc f3       	brlt	.-10     	; 0xbb0 <__mulsf3_pse+0x82>
     bba:	86 95       	lsr	r24
     bbc:	77 95       	ror	r23
     bbe:	67 95       	ror	r22
     bc0:	b7 95       	ror	r27
     bc2:	f7 95       	ror	r31
     bc4:	e7 95       	ror	r30
     bc6:	9f 5f       	subi	r25, 0xFF	; 255
     bc8:	c1 f7       	brne	.-16     	; 0xbba <__mulsf3_pse+0x8c>
     bca:	fe 2b       	or	r31, r30
     bcc:	88 0f       	add	r24, r24
     bce:	91 1d       	adc	r25, r1
     bd0:	96 95       	lsr	r25
     bd2:	87 95       	ror	r24
     bd4:	97 f9       	bld	r25, 7
     bd6:	08 95       	ret

00000bd8 <__udivmodsi4>:
     bd8:	a1 e2       	ldi	r26, 0x21	; 33
     bda:	1a 2e       	mov	r1, r26
     bdc:	aa 1b       	sub	r26, r26
     bde:	bb 1b       	sub	r27, r27
     be0:	fd 01       	movw	r30, r26
     be2:	0d c0       	rjmp	.+26     	; 0xbfe <__udivmodsi4_ep>

00000be4 <__udivmodsi4_loop>:
     be4:	aa 1f       	adc	r26, r26
     be6:	bb 1f       	adc	r27, r27
     be8:	ee 1f       	adc	r30, r30
     bea:	ff 1f       	adc	r31, r31
     bec:	a2 17       	cp	r26, r18
     bee:	b3 07       	cpc	r27, r19
     bf0:	e4 07       	cpc	r30, r20
     bf2:	f5 07       	cpc	r31, r21
     bf4:	20 f0       	brcs	.+8      	; 0xbfe <__udivmodsi4_ep>
     bf6:	a2 1b       	sub	r26, r18
     bf8:	b3 0b       	sbc	r27, r19
     bfa:	e4 0b       	sbc	r30, r20
     bfc:	f5 0b       	sbc	r31, r21

00000bfe <__udivmodsi4_ep>:
     bfe:	66 1f       	adc	r22, r22
     c00:	77 1f       	adc	r23, r23
     c02:	88 1f       	adc	r24, r24
     c04:	99 1f       	adc	r25, r25
     c06:	1a 94       	dec	r1
     c08:	69 f7       	brne	.-38     	; 0xbe4 <__udivmodsi4_loop>
     c0a:	60 95       	com	r22
     c0c:	70 95       	com	r23
     c0e:	80 95       	com	r24
     c10:	90 95       	com	r25
     c12:	9b 01       	movw	r18, r22
     c14:	ac 01       	movw	r20, r24
     c16:	bd 01       	movw	r22, r26
     c18:	cf 01       	movw	r24, r30
     c1a:	08 95       	ret

00000c1c <__muluhisi3>:
     c1c:	09 d0       	rcall	.+18     	; 0xc30 <__umulhisi3>
     c1e:	a5 9f       	mul	r26, r21
     c20:	90 0d       	add	r25, r0
     c22:	b4 9f       	mul	r27, r20
     c24:	90 0d       	add	r25, r0
     c26:	a4 9f       	mul	r26, r20
     c28:	80 0d       	add	r24, r0
     c2a:	91 1d       	adc	r25, r1
     c2c:	11 24       	eor	r1, r1
     c2e:	08 95       	ret

00000c30 <__umulhisi3>:
     c30:	a2 9f       	mul	r26, r18
     c32:	b0 01       	movw	r22, r0
     c34:	b3 9f       	mul	r27, r19
     c36:	c0 01       	movw	r24, r0
     c38:	a3 9f       	mul	r26, r19
     c3a:	70 0d       	add	r23, r0
     c3c:	81 1d       	adc	r24, r1
     c3e:	11 24       	eor	r1, r1
     c40:	91 1d       	adc	r25, r1
     c42:	b2 9f       	mul	r27, r18
     c44:	70 0d       	add	r23, r0
     c46:	81 1d       	adc	r24, r1
     c48:	11 24       	eor	r1, r1
     c4a:	91 1d       	adc	r25, r1
     c4c:	08 95       	ret

00000c4e <sprintf>:
     c4e:	0f 93       	push	r16
     c50:	1f 93       	push	r17
     c52:	cf 93       	push	r28
     c54:	df 93       	push	r29
     c56:	cd b7       	in	r28, 0x3d	; 61
     c58:	de b7       	in	r29, 0x3e	; 62
     c5a:	2e 97       	sbiw	r28, 0x0e	; 14
     c5c:	0f b6       	in	r0, 0x3f	; 63
     c5e:	f8 94       	cli
     c60:	de bf       	out	0x3e, r29	; 62
     c62:	0f be       	out	0x3f, r0	; 63
     c64:	cd bf       	out	0x3d, r28	; 61
     c66:	0e 89       	ldd	r16, Y+22	; 0x16
     c68:	1f 89       	ldd	r17, Y+23	; 0x17
     c6a:	86 e0       	ldi	r24, 0x06	; 6
     c6c:	8c 83       	std	Y+4, r24	; 0x04
     c6e:	1a 83       	std	Y+2, r17	; 0x02
     c70:	09 83       	std	Y+1, r16	; 0x01
     c72:	8f ef       	ldi	r24, 0xFF	; 255
     c74:	9f e7       	ldi	r25, 0x7F	; 127
     c76:	9e 83       	std	Y+6, r25	; 0x06
     c78:	8d 83       	std	Y+5, r24	; 0x05
     c7a:	ae 01       	movw	r20, r28
     c7c:	46 5e       	subi	r20, 0xE6	; 230
     c7e:	5f 4f       	sbci	r21, 0xFF	; 255
     c80:	68 8d       	ldd	r22, Y+24	; 0x18
     c82:	79 8d       	ldd	r23, Y+25	; 0x19
     c84:	ce 01       	movw	r24, r28
     c86:	01 96       	adiw	r24, 0x01	; 1
     c88:	10 d0       	rcall	.+32     	; 0xcaa <vfprintf>
     c8a:	ef 81       	ldd	r30, Y+7	; 0x07
     c8c:	f8 85       	ldd	r31, Y+8	; 0x08
     c8e:	e0 0f       	add	r30, r16
     c90:	f1 1f       	adc	r31, r17
     c92:	10 82       	st	Z, r1
     c94:	2e 96       	adiw	r28, 0x0e	; 14
     c96:	0f b6       	in	r0, 0x3f	; 63
     c98:	f8 94       	cli
     c9a:	de bf       	out	0x3e, r29	; 62
     c9c:	0f be       	out	0x3f, r0	; 63
     c9e:	cd bf       	out	0x3d, r28	; 61
     ca0:	df 91       	pop	r29
     ca2:	cf 91       	pop	r28
     ca4:	1f 91       	pop	r17
     ca6:	0f 91       	pop	r16
     ca8:	08 95       	ret

00000caa <vfprintf>:
     caa:	2f 92       	push	r2
     cac:	3f 92       	push	r3
     cae:	4f 92       	push	r4
     cb0:	5f 92       	push	r5
     cb2:	6f 92       	push	r6
     cb4:	7f 92       	push	r7
     cb6:	8f 92       	push	r8
     cb8:	9f 92       	push	r9
     cba:	af 92       	push	r10
     cbc:	bf 92       	push	r11
     cbe:	cf 92       	push	r12
     cc0:	df 92       	push	r13
     cc2:	ef 92       	push	r14
     cc4:	ff 92       	push	r15
     cc6:	0f 93       	push	r16
     cc8:	1f 93       	push	r17
     cca:	cf 93       	push	r28
     ccc:	df 93       	push	r29
     cce:	cd b7       	in	r28, 0x3d	; 61
     cd0:	de b7       	in	r29, 0x3e	; 62
     cd2:	2b 97       	sbiw	r28, 0x0b	; 11
     cd4:	0f b6       	in	r0, 0x3f	; 63
     cd6:	f8 94       	cli
     cd8:	de bf       	out	0x3e, r29	; 62
     cda:	0f be       	out	0x3f, r0	; 63
     cdc:	cd bf       	out	0x3d, r28	; 61
     cde:	6c 01       	movw	r12, r24
     ce0:	7b 01       	movw	r14, r22
     ce2:	8a 01       	movw	r16, r20
     ce4:	fc 01       	movw	r30, r24
     ce6:	17 82       	std	Z+7, r1	; 0x07
     ce8:	16 82       	std	Z+6, r1	; 0x06
     cea:	83 81       	ldd	r24, Z+3	; 0x03
     cec:	81 ff       	sbrs	r24, 1
     cee:	bf c1       	rjmp	.+894    	; 0x106e <vfprintf+0x3c4>
     cf0:	ce 01       	movw	r24, r28
     cf2:	01 96       	adiw	r24, 0x01	; 1
     cf4:	3c 01       	movw	r6, r24
     cf6:	f6 01       	movw	r30, r12
     cf8:	93 81       	ldd	r25, Z+3	; 0x03
     cfa:	f7 01       	movw	r30, r14
     cfc:	93 fd       	sbrc	r25, 3
     cfe:	85 91       	lpm	r24, Z+
     d00:	93 ff       	sbrs	r25, 3
     d02:	81 91       	ld	r24, Z+
     d04:	7f 01       	movw	r14, r30
     d06:	88 23       	and	r24, r24
     d08:	09 f4       	brne	.+2      	; 0xd0c <vfprintf+0x62>
     d0a:	ad c1       	rjmp	.+858    	; 0x1066 <vfprintf+0x3bc>
     d0c:	85 32       	cpi	r24, 0x25	; 37
     d0e:	39 f4       	brne	.+14     	; 0xd1e <vfprintf+0x74>
     d10:	93 fd       	sbrc	r25, 3
     d12:	85 91       	lpm	r24, Z+
     d14:	93 ff       	sbrs	r25, 3
     d16:	81 91       	ld	r24, Z+
     d18:	7f 01       	movw	r14, r30
     d1a:	85 32       	cpi	r24, 0x25	; 37
     d1c:	21 f4       	brne	.+8      	; 0xd26 <vfprintf+0x7c>
     d1e:	b6 01       	movw	r22, r12
     d20:	90 e0       	ldi	r25, 0x00	; 0
     d22:	d6 d1       	rcall	.+940    	; 0x10d0 <fputc>
     d24:	e8 cf       	rjmp	.-48     	; 0xcf6 <vfprintf+0x4c>
     d26:	91 2c       	mov	r9, r1
     d28:	21 2c       	mov	r2, r1
     d2a:	31 2c       	mov	r3, r1
     d2c:	ff e1       	ldi	r31, 0x1F	; 31
     d2e:	f3 15       	cp	r31, r3
     d30:	d8 f0       	brcs	.+54     	; 0xd68 <vfprintf+0xbe>
     d32:	8b 32       	cpi	r24, 0x2B	; 43
     d34:	79 f0       	breq	.+30     	; 0xd54 <vfprintf+0xaa>
     d36:	38 f4       	brcc	.+14     	; 0xd46 <vfprintf+0x9c>
     d38:	80 32       	cpi	r24, 0x20	; 32
     d3a:	79 f0       	breq	.+30     	; 0xd5a <vfprintf+0xb0>
     d3c:	83 32       	cpi	r24, 0x23	; 35
     d3e:	a1 f4       	brne	.+40     	; 0xd68 <vfprintf+0xbe>
     d40:	23 2d       	mov	r18, r3
     d42:	20 61       	ori	r18, 0x10	; 16
     d44:	1d c0       	rjmp	.+58     	; 0xd80 <vfprintf+0xd6>
     d46:	8d 32       	cpi	r24, 0x2D	; 45
     d48:	61 f0       	breq	.+24     	; 0xd62 <vfprintf+0xb8>
     d4a:	80 33       	cpi	r24, 0x30	; 48
     d4c:	69 f4       	brne	.+26     	; 0xd68 <vfprintf+0xbe>
     d4e:	23 2d       	mov	r18, r3
     d50:	21 60       	ori	r18, 0x01	; 1
     d52:	16 c0       	rjmp	.+44     	; 0xd80 <vfprintf+0xd6>
     d54:	83 2d       	mov	r24, r3
     d56:	82 60       	ori	r24, 0x02	; 2
     d58:	38 2e       	mov	r3, r24
     d5a:	e3 2d       	mov	r30, r3
     d5c:	e4 60       	ori	r30, 0x04	; 4
     d5e:	3e 2e       	mov	r3, r30
     d60:	2a c0       	rjmp	.+84     	; 0xdb6 <vfprintf+0x10c>
     d62:	f3 2d       	mov	r31, r3
     d64:	f8 60       	ori	r31, 0x08	; 8
     d66:	1d c0       	rjmp	.+58     	; 0xda2 <vfprintf+0xf8>
     d68:	37 fc       	sbrc	r3, 7
     d6a:	2d c0       	rjmp	.+90     	; 0xdc6 <vfprintf+0x11c>
     d6c:	20 ed       	ldi	r18, 0xD0	; 208
     d6e:	28 0f       	add	r18, r24
     d70:	2a 30       	cpi	r18, 0x0A	; 10
     d72:	40 f0       	brcs	.+16     	; 0xd84 <vfprintf+0xda>
     d74:	8e 32       	cpi	r24, 0x2E	; 46
     d76:	b9 f4       	brne	.+46     	; 0xda6 <vfprintf+0xfc>
     d78:	36 fc       	sbrc	r3, 6
     d7a:	75 c1       	rjmp	.+746    	; 0x1066 <vfprintf+0x3bc>
     d7c:	23 2d       	mov	r18, r3
     d7e:	20 64       	ori	r18, 0x40	; 64
     d80:	32 2e       	mov	r3, r18
     d82:	19 c0       	rjmp	.+50     	; 0xdb6 <vfprintf+0x10c>
     d84:	36 fe       	sbrs	r3, 6
     d86:	06 c0       	rjmp	.+12     	; 0xd94 <vfprintf+0xea>
     d88:	8a e0       	ldi	r24, 0x0A	; 10
     d8a:	98 9e       	mul	r9, r24
     d8c:	20 0d       	add	r18, r0
     d8e:	11 24       	eor	r1, r1
     d90:	92 2e       	mov	r9, r18
     d92:	11 c0       	rjmp	.+34     	; 0xdb6 <vfprintf+0x10c>
     d94:	ea e0       	ldi	r30, 0x0A	; 10
     d96:	2e 9e       	mul	r2, r30
     d98:	20 0d       	add	r18, r0
     d9a:	11 24       	eor	r1, r1
     d9c:	22 2e       	mov	r2, r18
     d9e:	f3 2d       	mov	r31, r3
     da0:	f0 62       	ori	r31, 0x20	; 32
     da2:	3f 2e       	mov	r3, r31
     da4:	08 c0       	rjmp	.+16     	; 0xdb6 <vfprintf+0x10c>
     da6:	8c 36       	cpi	r24, 0x6C	; 108
     da8:	21 f4       	brne	.+8      	; 0xdb2 <vfprintf+0x108>
     daa:	83 2d       	mov	r24, r3
     dac:	80 68       	ori	r24, 0x80	; 128
     dae:	38 2e       	mov	r3, r24
     db0:	02 c0       	rjmp	.+4      	; 0xdb6 <vfprintf+0x10c>
     db2:	88 36       	cpi	r24, 0x68	; 104
     db4:	41 f4       	brne	.+16     	; 0xdc6 <vfprintf+0x11c>
     db6:	f7 01       	movw	r30, r14
     db8:	93 fd       	sbrc	r25, 3
     dba:	85 91       	lpm	r24, Z+
     dbc:	93 ff       	sbrs	r25, 3
     dbe:	81 91       	ld	r24, Z+
     dc0:	7f 01       	movw	r14, r30
     dc2:	81 11       	cpse	r24, r1
     dc4:	b3 cf       	rjmp	.-154    	; 0xd2c <vfprintf+0x82>
     dc6:	98 2f       	mov	r25, r24
     dc8:	9f 7d       	andi	r25, 0xDF	; 223
     dca:	95 54       	subi	r25, 0x45	; 69
     dcc:	93 30       	cpi	r25, 0x03	; 3
     dce:	28 f4       	brcc	.+10     	; 0xdda <vfprintf+0x130>
     dd0:	0c 5f       	subi	r16, 0xFC	; 252
     dd2:	1f 4f       	sbci	r17, 0xFF	; 255
     dd4:	9f e3       	ldi	r25, 0x3F	; 63
     dd6:	99 83       	std	Y+1, r25	; 0x01
     dd8:	0d c0       	rjmp	.+26     	; 0xdf4 <vfprintf+0x14a>
     dda:	83 36       	cpi	r24, 0x63	; 99
     ddc:	31 f0       	breq	.+12     	; 0xdea <vfprintf+0x140>
     dde:	83 37       	cpi	r24, 0x73	; 115
     de0:	71 f0       	breq	.+28     	; 0xdfe <vfprintf+0x154>
     de2:	83 35       	cpi	r24, 0x53	; 83
     de4:	09 f0       	breq	.+2      	; 0xde8 <vfprintf+0x13e>
     de6:	55 c0       	rjmp	.+170    	; 0xe92 <vfprintf+0x1e8>
     de8:	20 c0       	rjmp	.+64     	; 0xe2a <vfprintf+0x180>
     dea:	f8 01       	movw	r30, r16
     dec:	80 81       	ld	r24, Z
     dee:	89 83       	std	Y+1, r24	; 0x01
     df0:	0e 5f       	subi	r16, 0xFE	; 254
     df2:	1f 4f       	sbci	r17, 0xFF	; 255
     df4:	88 24       	eor	r8, r8
     df6:	83 94       	inc	r8
     df8:	91 2c       	mov	r9, r1
     dfa:	53 01       	movw	r10, r6
     dfc:	12 c0       	rjmp	.+36     	; 0xe22 <vfprintf+0x178>
     dfe:	28 01       	movw	r4, r16
     e00:	f2 e0       	ldi	r31, 0x02	; 2
     e02:	4f 0e       	add	r4, r31
     e04:	51 1c       	adc	r5, r1
     e06:	f8 01       	movw	r30, r16
     e08:	a0 80       	ld	r10, Z
     e0a:	b1 80       	ldd	r11, Z+1	; 0x01
     e0c:	36 fe       	sbrs	r3, 6
     e0e:	03 c0       	rjmp	.+6      	; 0xe16 <vfprintf+0x16c>
     e10:	69 2d       	mov	r22, r9
     e12:	70 e0       	ldi	r23, 0x00	; 0
     e14:	02 c0       	rjmp	.+4      	; 0xe1a <vfprintf+0x170>
     e16:	6f ef       	ldi	r22, 0xFF	; 255
     e18:	7f ef       	ldi	r23, 0xFF	; 255
     e1a:	c5 01       	movw	r24, r10
     e1c:	4e d1       	rcall	.+668    	; 0x10ba <strnlen>
     e1e:	4c 01       	movw	r8, r24
     e20:	82 01       	movw	r16, r4
     e22:	f3 2d       	mov	r31, r3
     e24:	ff 77       	andi	r31, 0x7F	; 127
     e26:	3f 2e       	mov	r3, r31
     e28:	15 c0       	rjmp	.+42     	; 0xe54 <vfprintf+0x1aa>
     e2a:	28 01       	movw	r4, r16
     e2c:	22 e0       	ldi	r18, 0x02	; 2
     e2e:	42 0e       	add	r4, r18
     e30:	51 1c       	adc	r5, r1
     e32:	f8 01       	movw	r30, r16
     e34:	a0 80       	ld	r10, Z
     e36:	b1 80       	ldd	r11, Z+1	; 0x01
     e38:	36 fe       	sbrs	r3, 6
     e3a:	03 c0       	rjmp	.+6      	; 0xe42 <vfprintf+0x198>
     e3c:	69 2d       	mov	r22, r9
     e3e:	70 e0       	ldi	r23, 0x00	; 0
     e40:	02 c0       	rjmp	.+4      	; 0xe46 <vfprintf+0x19c>
     e42:	6f ef       	ldi	r22, 0xFF	; 255
     e44:	7f ef       	ldi	r23, 0xFF	; 255
     e46:	c5 01       	movw	r24, r10
     e48:	2d d1       	rcall	.+602    	; 0x10a4 <strnlen_P>
     e4a:	4c 01       	movw	r8, r24
     e4c:	f3 2d       	mov	r31, r3
     e4e:	f0 68       	ori	r31, 0x80	; 128
     e50:	3f 2e       	mov	r3, r31
     e52:	82 01       	movw	r16, r4
     e54:	33 fc       	sbrc	r3, 3
     e56:	19 c0       	rjmp	.+50     	; 0xe8a <vfprintf+0x1e0>
     e58:	82 2d       	mov	r24, r2
     e5a:	90 e0       	ldi	r25, 0x00	; 0
     e5c:	88 16       	cp	r8, r24
     e5e:	99 06       	cpc	r9, r25
     e60:	a0 f4       	brcc	.+40     	; 0xe8a <vfprintf+0x1e0>
     e62:	b6 01       	movw	r22, r12
     e64:	80 e2       	ldi	r24, 0x20	; 32
     e66:	90 e0       	ldi	r25, 0x00	; 0
     e68:	33 d1       	rcall	.+614    	; 0x10d0 <fputc>
     e6a:	2a 94       	dec	r2
     e6c:	f5 cf       	rjmp	.-22     	; 0xe58 <vfprintf+0x1ae>
     e6e:	f5 01       	movw	r30, r10
     e70:	37 fc       	sbrc	r3, 7
     e72:	85 91       	lpm	r24, Z+
     e74:	37 fe       	sbrs	r3, 7
     e76:	81 91       	ld	r24, Z+
     e78:	5f 01       	movw	r10, r30
     e7a:	b6 01       	movw	r22, r12
     e7c:	90 e0       	ldi	r25, 0x00	; 0
     e7e:	28 d1       	rcall	.+592    	; 0x10d0 <fputc>
     e80:	21 10       	cpse	r2, r1
     e82:	2a 94       	dec	r2
     e84:	21 e0       	ldi	r18, 0x01	; 1
     e86:	82 1a       	sub	r8, r18
     e88:	91 08       	sbc	r9, r1
     e8a:	81 14       	cp	r8, r1
     e8c:	91 04       	cpc	r9, r1
     e8e:	79 f7       	brne	.-34     	; 0xe6e <vfprintf+0x1c4>
     e90:	e1 c0       	rjmp	.+450    	; 0x1054 <vfprintf+0x3aa>
     e92:	84 36       	cpi	r24, 0x64	; 100
     e94:	11 f0       	breq	.+4      	; 0xe9a <vfprintf+0x1f0>
     e96:	89 36       	cpi	r24, 0x69	; 105
     e98:	39 f5       	brne	.+78     	; 0xee8 <vfprintf+0x23e>
     e9a:	f8 01       	movw	r30, r16
     e9c:	37 fe       	sbrs	r3, 7
     e9e:	07 c0       	rjmp	.+14     	; 0xeae <vfprintf+0x204>
     ea0:	60 81       	ld	r22, Z
     ea2:	71 81       	ldd	r23, Z+1	; 0x01
     ea4:	82 81       	ldd	r24, Z+2	; 0x02
     ea6:	93 81       	ldd	r25, Z+3	; 0x03
     ea8:	0c 5f       	subi	r16, 0xFC	; 252
     eaa:	1f 4f       	sbci	r17, 0xFF	; 255
     eac:	08 c0       	rjmp	.+16     	; 0xebe <vfprintf+0x214>
     eae:	60 81       	ld	r22, Z
     eb0:	71 81       	ldd	r23, Z+1	; 0x01
     eb2:	07 2e       	mov	r0, r23
     eb4:	00 0c       	add	r0, r0
     eb6:	88 0b       	sbc	r24, r24
     eb8:	99 0b       	sbc	r25, r25
     eba:	0e 5f       	subi	r16, 0xFE	; 254
     ebc:	1f 4f       	sbci	r17, 0xFF	; 255
     ebe:	f3 2d       	mov	r31, r3
     ec0:	ff 76       	andi	r31, 0x6F	; 111
     ec2:	3f 2e       	mov	r3, r31
     ec4:	97 ff       	sbrs	r25, 7
     ec6:	09 c0       	rjmp	.+18     	; 0xeda <vfprintf+0x230>
     ec8:	90 95       	com	r25
     eca:	80 95       	com	r24
     ecc:	70 95       	com	r23
     ece:	61 95       	neg	r22
     ed0:	7f 4f       	sbci	r23, 0xFF	; 255
     ed2:	8f 4f       	sbci	r24, 0xFF	; 255
     ed4:	9f 4f       	sbci	r25, 0xFF	; 255
     ed6:	f0 68       	ori	r31, 0x80	; 128
     ed8:	3f 2e       	mov	r3, r31
     eda:	2a e0       	ldi	r18, 0x0A	; 10
     edc:	30 e0       	ldi	r19, 0x00	; 0
     ede:	a3 01       	movw	r20, r6
     ee0:	33 d1       	rcall	.+614    	; 0x1148 <__ultoa_invert>
     ee2:	88 2e       	mov	r8, r24
     ee4:	86 18       	sub	r8, r6
     ee6:	44 c0       	rjmp	.+136    	; 0xf70 <vfprintf+0x2c6>
     ee8:	85 37       	cpi	r24, 0x75	; 117
     eea:	31 f4       	brne	.+12     	; 0xef8 <vfprintf+0x24e>
     eec:	23 2d       	mov	r18, r3
     eee:	2f 7e       	andi	r18, 0xEF	; 239
     ef0:	b2 2e       	mov	r11, r18
     ef2:	2a e0       	ldi	r18, 0x0A	; 10
     ef4:	30 e0       	ldi	r19, 0x00	; 0
     ef6:	25 c0       	rjmp	.+74     	; 0xf42 <vfprintf+0x298>
     ef8:	93 2d       	mov	r25, r3
     efa:	99 7f       	andi	r25, 0xF9	; 249
     efc:	b9 2e       	mov	r11, r25
     efe:	8f 36       	cpi	r24, 0x6F	; 111
     f00:	c1 f0       	breq	.+48     	; 0xf32 <vfprintf+0x288>
     f02:	18 f4       	brcc	.+6      	; 0xf0a <vfprintf+0x260>
     f04:	88 35       	cpi	r24, 0x58	; 88
     f06:	79 f0       	breq	.+30     	; 0xf26 <vfprintf+0x27c>
     f08:	ae c0       	rjmp	.+348    	; 0x1066 <vfprintf+0x3bc>
     f0a:	80 37       	cpi	r24, 0x70	; 112
     f0c:	19 f0       	breq	.+6      	; 0xf14 <vfprintf+0x26a>
     f0e:	88 37       	cpi	r24, 0x78	; 120
     f10:	21 f0       	breq	.+8      	; 0xf1a <vfprintf+0x270>
     f12:	a9 c0       	rjmp	.+338    	; 0x1066 <vfprintf+0x3bc>
     f14:	e9 2f       	mov	r30, r25
     f16:	e0 61       	ori	r30, 0x10	; 16
     f18:	be 2e       	mov	r11, r30
     f1a:	b4 fe       	sbrs	r11, 4
     f1c:	0d c0       	rjmp	.+26     	; 0xf38 <vfprintf+0x28e>
     f1e:	fb 2d       	mov	r31, r11
     f20:	f4 60       	ori	r31, 0x04	; 4
     f22:	bf 2e       	mov	r11, r31
     f24:	09 c0       	rjmp	.+18     	; 0xf38 <vfprintf+0x28e>
     f26:	34 fe       	sbrs	r3, 4
     f28:	0a c0       	rjmp	.+20     	; 0xf3e <vfprintf+0x294>
     f2a:	29 2f       	mov	r18, r25
     f2c:	26 60       	ori	r18, 0x06	; 6
     f2e:	b2 2e       	mov	r11, r18
     f30:	06 c0       	rjmp	.+12     	; 0xf3e <vfprintf+0x294>
     f32:	28 e0       	ldi	r18, 0x08	; 8
     f34:	30 e0       	ldi	r19, 0x00	; 0
     f36:	05 c0       	rjmp	.+10     	; 0xf42 <vfprintf+0x298>
     f38:	20 e1       	ldi	r18, 0x10	; 16
     f3a:	30 e0       	ldi	r19, 0x00	; 0
     f3c:	02 c0       	rjmp	.+4      	; 0xf42 <vfprintf+0x298>
     f3e:	20 e1       	ldi	r18, 0x10	; 16
     f40:	32 e0       	ldi	r19, 0x02	; 2
     f42:	f8 01       	movw	r30, r16
     f44:	b7 fe       	sbrs	r11, 7
     f46:	07 c0       	rjmp	.+14     	; 0xf56 <vfprintf+0x2ac>
     f48:	60 81       	ld	r22, Z
     f4a:	71 81       	ldd	r23, Z+1	; 0x01
     f4c:	82 81       	ldd	r24, Z+2	; 0x02
     f4e:	93 81       	ldd	r25, Z+3	; 0x03
     f50:	0c 5f       	subi	r16, 0xFC	; 252
     f52:	1f 4f       	sbci	r17, 0xFF	; 255
     f54:	06 c0       	rjmp	.+12     	; 0xf62 <vfprintf+0x2b8>
     f56:	60 81       	ld	r22, Z
     f58:	71 81       	ldd	r23, Z+1	; 0x01
     f5a:	80 e0       	ldi	r24, 0x00	; 0
     f5c:	90 e0       	ldi	r25, 0x00	; 0
     f5e:	0e 5f       	subi	r16, 0xFE	; 254
     f60:	1f 4f       	sbci	r17, 0xFF	; 255
     f62:	a3 01       	movw	r20, r6
     f64:	f1 d0       	rcall	.+482    	; 0x1148 <__ultoa_invert>
     f66:	88 2e       	mov	r8, r24
     f68:	86 18       	sub	r8, r6
     f6a:	fb 2d       	mov	r31, r11
     f6c:	ff 77       	andi	r31, 0x7F	; 127
     f6e:	3f 2e       	mov	r3, r31
     f70:	36 fe       	sbrs	r3, 6
     f72:	0d c0       	rjmp	.+26     	; 0xf8e <vfprintf+0x2e4>
     f74:	23 2d       	mov	r18, r3
     f76:	2e 7f       	andi	r18, 0xFE	; 254
     f78:	a2 2e       	mov	r10, r18
     f7a:	89 14       	cp	r8, r9
     f7c:	58 f4       	brcc	.+22     	; 0xf94 <vfprintf+0x2ea>
     f7e:	34 fe       	sbrs	r3, 4
     f80:	0b c0       	rjmp	.+22     	; 0xf98 <vfprintf+0x2ee>
     f82:	32 fc       	sbrc	r3, 2
     f84:	09 c0       	rjmp	.+18     	; 0xf98 <vfprintf+0x2ee>
     f86:	83 2d       	mov	r24, r3
     f88:	8e 7e       	andi	r24, 0xEE	; 238
     f8a:	a8 2e       	mov	r10, r24
     f8c:	05 c0       	rjmp	.+10     	; 0xf98 <vfprintf+0x2ee>
     f8e:	b8 2c       	mov	r11, r8
     f90:	a3 2c       	mov	r10, r3
     f92:	03 c0       	rjmp	.+6      	; 0xf9a <vfprintf+0x2f0>
     f94:	b8 2c       	mov	r11, r8
     f96:	01 c0       	rjmp	.+2      	; 0xf9a <vfprintf+0x2f0>
     f98:	b9 2c       	mov	r11, r9
     f9a:	a4 fe       	sbrs	r10, 4
     f9c:	0f c0       	rjmp	.+30     	; 0xfbc <vfprintf+0x312>
     f9e:	fe 01       	movw	r30, r28
     fa0:	e8 0d       	add	r30, r8
     fa2:	f1 1d       	adc	r31, r1
     fa4:	80 81       	ld	r24, Z
     fa6:	80 33       	cpi	r24, 0x30	; 48
     fa8:	21 f4       	brne	.+8      	; 0xfb2 <vfprintf+0x308>
     faa:	9a 2d       	mov	r25, r10
     fac:	99 7e       	andi	r25, 0xE9	; 233
     fae:	a9 2e       	mov	r10, r25
     fb0:	09 c0       	rjmp	.+18     	; 0xfc4 <vfprintf+0x31a>
     fb2:	a2 fe       	sbrs	r10, 2
     fb4:	06 c0       	rjmp	.+12     	; 0xfc2 <vfprintf+0x318>
     fb6:	b3 94       	inc	r11
     fb8:	b3 94       	inc	r11
     fba:	04 c0       	rjmp	.+8      	; 0xfc4 <vfprintf+0x31a>
     fbc:	8a 2d       	mov	r24, r10
     fbe:	86 78       	andi	r24, 0x86	; 134
     fc0:	09 f0       	breq	.+2      	; 0xfc4 <vfprintf+0x31a>
     fc2:	b3 94       	inc	r11
     fc4:	a3 fc       	sbrc	r10, 3
     fc6:	10 c0       	rjmp	.+32     	; 0xfe8 <vfprintf+0x33e>
     fc8:	a0 fe       	sbrs	r10, 0
     fca:	06 c0       	rjmp	.+12     	; 0xfd8 <vfprintf+0x32e>
     fcc:	b2 14       	cp	r11, r2
     fce:	80 f4       	brcc	.+32     	; 0xff0 <vfprintf+0x346>
     fd0:	28 0c       	add	r2, r8
     fd2:	92 2c       	mov	r9, r2
     fd4:	9b 18       	sub	r9, r11
     fd6:	0d c0       	rjmp	.+26     	; 0xff2 <vfprintf+0x348>
     fd8:	b2 14       	cp	r11, r2
     fda:	58 f4       	brcc	.+22     	; 0xff2 <vfprintf+0x348>
     fdc:	b6 01       	movw	r22, r12
     fde:	80 e2       	ldi	r24, 0x20	; 32
     fe0:	90 e0       	ldi	r25, 0x00	; 0
     fe2:	76 d0       	rcall	.+236    	; 0x10d0 <fputc>
     fe4:	b3 94       	inc	r11
     fe6:	f8 cf       	rjmp	.-16     	; 0xfd8 <vfprintf+0x32e>
     fe8:	b2 14       	cp	r11, r2
     fea:	18 f4       	brcc	.+6      	; 0xff2 <vfprintf+0x348>
     fec:	2b 18       	sub	r2, r11
     fee:	02 c0       	rjmp	.+4      	; 0xff4 <vfprintf+0x34a>
     ff0:	98 2c       	mov	r9, r8
     ff2:	21 2c       	mov	r2, r1
     ff4:	a4 fe       	sbrs	r10, 4
     ff6:	0f c0       	rjmp	.+30     	; 0x1016 <vfprintf+0x36c>
     ff8:	b6 01       	movw	r22, r12
     ffa:	80 e3       	ldi	r24, 0x30	; 48
     ffc:	90 e0       	ldi	r25, 0x00	; 0
     ffe:	68 d0       	rcall	.+208    	; 0x10d0 <fputc>
    1000:	a2 fe       	sbrs	r10, 2
    1002:	16 c0       	rjmp	.+44     	; 0x1030 <vfprintf+0x386>
    1004:	a1 fc       	sbrc	r10, 1
    1006:	03 c0       	rjmp	.+6      	; 0x100e <vfprintf+0x364>
    1008:	88 e7       	ldi	r24, 0x78	; 120
    100a:	90 e0       	ldi	r25, 0x00	; 0
    100c:	02 c0       	rjmp	.+4      	; 0x1012 <vfprintf+0x368>
    100e:	88 e5       	ldi	r24, 0x58	; 88
    1010:	90 e0       	ldi	r25, 0x00	; 0
    1012:	b6 01       	movw	r22, r12
    1014:	0c c0       	rjmp	.+24     	; 0x102e <vfprintf+0x384>
    1016:	8a 2d       	mov	r24, r10
    1018:	86 78       	andi	r24, 0x86	; 134
    101a:	51 f0       	breq	.+20     	; 0x1030 <vfprintf+0x386>
    101c:	a1 fe       	sbrs	r10, 1
    101e:	02 c0       	rjmp	.+4      	; 0x1024 <vfprintf+0x37a>
    1020:	8b e2       	ldi	r24, 0x2B	; 43
    1022:	01 c0       	rjmp	.+2      	; 0x1026 <vfprintf+0x37c>
    1024:	80 e2       	ldi	r24, 0x20	; 32
    1026:	a7 fc       	sbrc	r10, 7
    1028:	8d e2       	ldi	r24, 0x2D	; 45
    102a:	b6 01       	movw	r22, r12
    102c:	90 e0       	ldi	r25, 0x00	; 0
    102e:	50 d0       	rcall	.+160    	; 0x10d0 <fputc>
    1030:	89 14       	cp	r8, r9
    1032:	30 f4       	brcc	.+12     	; 0x1040 <vfprintf+0x396>
    1034:	b6 01       	movw	r22, r12
    1036:	80 e3       	ldi	r24, 0x30	; 48
    1038:	90 e0       	ldi	r25, 0x00	; 0
    103a:	4a d0       	rcall	.+148    	; 0x10d0 <fputc>
    103c:	9a 94       	dec	r9
    103e:	f8 cf       	rjmp	.-16     	; 0x1030 <vfprintf+0x386>
    1040:	8a 94       	dec	r8
    1042:	f3 01       	movw	r30, r6
    1044:	e8 0d       	add	r30, r8
    1046:	f1 1d       	adc	r31, r1
    1048:	80 81       	ld	r24, Z
    104a:	b6 01       	movw	r22, r12
    104c:	90 e0       	ldi	r25, 0x00	; 0
    104e:	40 d0       	rcall	.+128    	; 0x10d0 <fputc>
    1050:	81 10       	cpse	r8, r1
    1052:	f6 cf       	rjmp	.-20     	; 0x1040 <vfprintf+0x396>
    1054:	22 20       	and	r2, r2
    1056:	09 f4       	brne	.+2      	; 0x105a <vfprintf+0x3b0>
    1058:	4e ce       	rjmp	.-868    	; 0xcf6 <vfprintf+0x4c>
    105a:	b6 01       	movw	r22, r12
    105c:	80 e2       	ldi	r24, 0x20	; 32
    105e:	90 e0       	ldi	r25, 0x00	; 0
    1060:	37 d0       	rcall	.+110    	; 0x10d0 <fputc>
    1062:	2a 94       	dec	r2
    1064:	f7 cf       	rjmp	.-18     	; 0x1054 <vfprintf+0x3aa>
    1066:	f6 01       	movw	r30, r12
    1068:	86 81       	ldd	r24, Z+6	; 0x06
    106a:	97 81       	ldd	r25, Z+7	; 0x07
    106c:	02 c0       	rjmp	.+4      	; 0x1072 <vfprintf+0x3c8>
    106e:	8f ef       	ldi	r24, 0xFF	; 255
    1070:	9f ef       	ldi	r25, 0xFF	; 255
    1072:	2b 96       	adiw	r28, 0x0b	; 11
    1074:	0f b6       	in	r0, 0x3f	; 63
    1076:	f8 94       	cli
    1078:	de bf       	out	0x3e, r29	; 62
    107a:	0f be       	out	0x3f, r0	; 63
    107c:	cd bf       	out	0x3d, r28	; 61
    107e:	df 91       	pop	r29
    1080:	cf 91       	pop	r28
    1082:	1f 91       	pop	r17
    1084:	0f 91       	pop	r16
    1086:	ff 90       	pop	r15
    1088:	ef 90       	pop	r14
    108a:	df 90       	pop	r13
    108c:	cf 90       	pop	r12
    108e:	bf 90       	pop	r11
    1090:	af 90       	pop	r10
    1092:	9f 90       	pop	r9
    1094:	8f 90       	pop	r8
    1096:	7f 90       	pop	r7
    1098:	6f 90       	pop	r6
    109a:	5f 90       	pop	r5
    109c:	4f 90       	pop	r4
    109e:	3f 90       	pop	r3
    10a0:	2f 90       	pop	r2
    10a2:	08 95       	ret

000010a4 <strnlen_P>:
    10a4:	fc 01       	movw	r30, r24
    10a6:	05 90       	lpm	r0, Z+
    10a8:	61 50       	subi	r22, 0x01	; 1
    10aa:	70 40       	sbci	r23, 0x00	; 0
    10ac:	01 10       	cpse	r0, r1
    10ae:	d8 f7       	brcc	.-10     	; 0x10a6 <strnlen_P+0x2>
    10b0:	80 95       	com	r24
    10b2:	90 95       	com	r25
    10b4:	8e 0f       	add	r24, r30
    10b6:	9f 1f       	adc	r25, r31
    10b8:	08 95       	ret

000010ba <strnlen>:
    10ba:	fc 01       	movw	r30, r24
    10bc:	61 50       	subi	r22, 0x01	; 1
    10be:	70 40       	sbci	r23, 0x00	; 0
    10c0:	01 90       	ld	r0, Z+
    10c2:	01 10       	cpse	r0, r1
    10c4:	d8 f7       	brcc	.-10     	; 0x10bc <strnlen+0x2>
    10c6:	80 95       	com	r24
    10c8:	90 95       	com	r25
    10ca:	8e 0f       	add	r24, r30
    10cc:	9f 1f       	adc	r25, r31
    10ce:	08 95       	ret

000010d0 <fputc>:
    10d0:	0f 93       	push	r16
    10d2:	1f 93       	push	r17
    10d4:	cf 93       	push	r28
    10d6:	df 93       	push	r29
    10d8:	fb 01       	movw	r30, r22
    10da:	23 81       	ldd	r18, Z+3	; 0x03
    10dc:	21 fd       	sbrc	r18, 1
    10de:	03 c0       	rjmp	.+6      	; 0x10e6 <fputc+0x16>
    10e0:	8f ef       	ldi	r24, 0xFF	; 255
    10e2:	9f ef       	ldi	r25, 0xFF	; 255
    10e4:	2c c0       	rjmp	.+88     	; 0x113e <fputc+0x6e>
    10e6:	22 ff       	sbrs	r18, 2
    10e8:	16 c0       	rjmp	.+44     	; 0x1116 <fputc+0x46>
    10ea:	46 81       	ldd	r20, Z+6	; 0x06
    10ec:	57 81       	ldd	r21, Z+7	; 0x07
    10ee:	24 81       	ldd	r18, Z+4	; 0x04
    10f0:	35 81       	ldd	r19, Z+5	; 0x05
    10f2:	42 17       	cp	r20, r18
    10f4:	53 07       	cpc	r21, r19
    10f6:	44 f4       	brge	.+16     	; 0x1108 <fputc+0x38>
    10f8:	a0 81       	ld	r26, Z
    10fa:	b1 81       	ldd	r27, Z+1	; 0x01
    10fc:	9d 01       	movw	r18, r26
    10fe:	2f 5f       	subi	r18, 0xFF	; 255
    1100:	3f 4f       	sbci	r19, 0xFF	; 255
    1102:	31 83       	std	Z+1, r19	; 0x01
    1104:	20 83       	st	Z, r18
    1106:	8c 93       	st	X, r24
    1108:	26 81       	ldd	r18, Z+6	; 0x06
    110a:	37 81       	ldd	r19, Z+7	; 0x07
    110c:	2f 5f       	subi	r18, 0xFF	; 255
    110e:	3f 4f       	sbci	r19, 0xFF	; 255
    1110:	37 83       	std	Z+7, r19	; 0x07
    1112:	26 83       	std	Z+6, r18	; 0x06
    1114:	14 c0       	rjmp	.+40     	; 0x113e <fputc+0x6e>
    1116:	8b 01       	movw	r16, r22
    1118:	ec 01       	movw	r28, r24
    111a:	fb 01       	movw	r30, r22
    111c:	00 84       	ldd	r0, Z+8	; 0x08
    111e:	f1 85       	ldd	r31, Z+9	; 0x09
    1120:	e0 2d       	mov	r30, r0
    1122:	19 95       	eicall
    1124:	89 2b       	or	r24, r25
    1126:	e1 f6       	brne	.-72     	; 0x10e0 <fputc+0x10>
    1128:	d8 01       	movw	r26, r16
    112a:	16 96       	adiw	r26, 0x06	; 6
    112c:	8d 91       	ld	r24, X+
    112e:	9c 91       	ld	r25, X
    1130:	17 97       	sbiw	r26, 0x07	; 7
    1132:	01 96       	adiw	r24, 0x01	; 1
    1134:	17 96       	adiw	r26, 0x07	; 7
    1136:	9c 93       	st	X, r25
    1138:	8e 93       	st	-X, r24
    113a:	16 97       	sbiw	r26, 0x06	; 6
    113c:	ce 01       	movw	r24, r28
    113e:	df 91       	pop	r29
    1140:	cf 91       	pop	r28
    1142:	1f 91       	pop	r17
    1144:	0f 91       	pop	r16
    1146:	08 95       	ret

00001148 <__ultoa_invert>:
    1148:	fa 01       	movw	r30, r20
    114a:	aa 27       	eor	r26, r26
    114c:	28 30       	cpi	r18, 0x08	; 8
    114e:	51 f1       	breq	.+84     	; 0x11a4 <__ultoa_invert+0x5c>
    1150:	20 31       	cpi	r18, 0x10	; 16
    1152:	81 f1       	breq	.+96     	; 0x11b4 <__ultoa_invert+0x6c>
    1154:	e8 94       	clt
    1156:	6f 93       	push	r22
    1158:	6e 7f       	andi	r22, 0xFE	; 254
    115a:	6e 5f       	subi	r22, 0xFE	; 254
    115c:	7f 4f       	sbci	r23, 0xFF	; 255
    115e:	8f 4f       	sbci	r24, 0xFF	; 255
    1160:	9f 4f       	sbci	r25, 0xFF	; 255
    1162:	af 4f       	sbci	r26, 0xFF	; 255
    1164:	b1 e0       	ldi	r27, 0x01	; 1
    1166:	3e d0       	rcall	.+124    	; 0x11e4 <__ultoa_invert+0x9c>
    1168:	b4 e0       	ldi	r27, 0x04	; 4
    116a:	3c d0       	rcall	.+120    	; 0x11e4 <__ultoa_invert+0x9c>
    116c:	67 0f       	add	r22, r23
    116e:	78 1f       	adc	r23, r24
    1170:	89 1f       	adc	r24, r25
    1172:	9a 1f       	adc	r25, r26
    1174:	a1 1d       	adc	r26, r1
    1176:	68 0f       	add	r22, r24
    1178:	79 1f       	adc	r23, r25
    117a:	8a 1f       	adc	r24, r26
    117c:	91 1d       	adc	r25, r1
    117e:	a1 1d       	adc	r26, r1
    1180:	6a 0f       	add	r22, r26
    1182:	71 1d       	adc	r23, r1
    1184:	81 1d       	adc	r24, r1
    1186:	91 1d       	adc	r25, r1
    1188:	a1 1d       	adc	r26, r1
    118a:	20 d0       	rcall	.+64     	; 0x11cc <__ultoa_invert+0x84>
    118c:	09 f4       	brne	.+2      	; 0x1190 <__ultoa_invert+0x48>
    118e:	68 94       	set
    1190:	3f 91       	pop	r19
    1192:	2a e0       	ldi	r18, 0x0A	; 10
    1194:	26 9f       	mul	r18, r22
    1196:	11 24       	eor	r1, r1
    1198:	30 19       	sub	r19, r0
    119a:	30 5d       	subi	r19, 0xD0	; 208
    119c:	31 93       	st	Z+, r19
    119e:	de f6       	brtc	.-74     	; 0x1156 <__ultoa_invert+0xe>
    11a0:	cf 01       	movw	r24, r30
    11a2:	08 95       	ret
    11a4:	46 2f       	mov	r20, r22
    11a6:	47 70       	andi	r20, 0x07	; 7
    11a8:	40 5d       	subi	r20, 0xD0	; 208
    11aa:	41 93       	st	Z+, r20
    11ac:	b3 e0       	ldi	r27, 0x03	; 3
    11ae:	0f d0       	rcall	.+30     	; 0x11ce <__ultoa_invert+0x86>
    11b0:	c9 f7       	brne	.-14     	; 0x11a4 <__ultoa_invert+0x5c>
    11b2:	f6 cf       	rjmp	.-20     	; 0x11a0 <__ultoa_invert+0x58>
    11b4:	46 2f       	mov	r20, r22
    11b6:	4f 70       	andi	r20, 0x0F	; 15
    11b8:	40 5d       	subi	r20, 0xD0	; 208
    11ba:	4a 33       	cpi	r20, 0x3A	; 58
    11bc:	18 f0       	brcs	.+6      	; 0x11c4 <__ultoa_invert+0x7c>
    11be:	49 5d       	subi	r20, 0xD9	; 217
    11c0:	31 fd       	sbrc	r19, 1
    11c2:	40 52       	subi	r20, 0x20	; 32
    11c4:	41 93       	st	Z+, r20
    11c6:	02 d0       	rcall	.+4      	; 0x11cc <__ultoa_invert+0x84>
    11c8:	a9 f7       	brne	.-22     	; 0x11b4 <__ultoa_invert+0x6c>
    11ca:	ea cf       	rjmp	.-44     	; 0x11a0 <__ultoa_invert+0x58>
    11cc:	b4 e0       	ldi	r27, 0x04	; 4
    11ce:	a6 95       	lsr	r26
    11d0:	97 95       	ror	r25
    11d2:	87 95       	ror	r24
    11d4:	77 95       	ror	r23
    11d6:	67 95       	ror	r22
    11d8:	ba 95       	dec	r27
    11da:	c9 f7       	brne	.-14     	; 0x11ce <__ultoa_invert+0x86>
    11dc:	00 97       	sbiw	r24, 0x00	; 0
    11de:	61 05       	cpc	r22, r1
    11e0:	71 05       	cpc	r23, r1
    11e2:	08 95       	ret
    11e4:	9b 01       	movw	r18, r22
    11e6:	ac 01       	movw	r20, r24
    11e8:	0a 2e       	mov	r0, r26
    11ea:	06 94       	lsr	r0
    11ec:	57 95       	ror	r21
    11ee:	47 95       	ror	r20
    11f0:	37 95       	ror	r19
    11f2:	27 95       	ror	r18
    11f4:	ba 95       	dec	r27
    11f6:	c9 f7       	brne	.-14     	; 0x11ea <__ultoa_invert+0xa2>
    11f8:	62 0f       	add	r22, r18
    11fa:	73 1f       	adc	r23, r19
    11fc:	84 1f       	adc	r24, r20
    11fe:	95 1f       	adc	r25, r21
    1200:	a0 1d       	adc	r26, r0
    1202:	08 95       	ret

00001204 <_exit>:
    1204:	f8 94       	cli

00001206 <__stop_program>:
    1206:	ff cf       	rjmp	.-2      	; 0x1206 <__stop_program>
