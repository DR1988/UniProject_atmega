
UniProject.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800200  00800200  00000554  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000500  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000554  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000584  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000d0  00000000  00000000  000005c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000014b6  00000000  00000000  00000694  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000da3  00000000  00000000  00001b4a  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000849  00000000  00000000  000028ed  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000036c  00000000  00000000  00003138  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000850  00000000  00000000  000034a4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000b90  00000000  00000000  00003cf4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000c0  00000000  00000000  00004884  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	1c c1       	rjmp	.+568    	; 0x266 <__vector_11>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	62 c0       	rjmp	.+196    	; 0x122 <__bad_interrupt>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	2f c1       	rjmp	.+606    	; 0x2c4 <__vector_25>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	35 c1       	rjmp	.+618    	; 0x334 <__vector_50>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	e0 e0       	ldi	r30, 0x00	; 0
  fc:	f5 e0       	ldi	r31, 0x05	; 5
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a0 30       	cpi	r26, 0x00	; 0
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	22 e0       	ldi	r18, 0x02	; 2
 110:	a0 e0       	ldi	r26, 0x00	; 0
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	a0 30       	cpi	r26, 0x00	; 0
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	95 d0       	rcall	.+298    	; 0x24a <main>
 120:	ed c1       	rjmp	.+986    	; 0x4fc <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <ReceiveUART0>:
			}
		}
		
		i++;
	}
}
 124:	e0 ec       	ldi	r30, 0xC0	; 192
 126:	f0 e0       	ldi	r31, 0x00	; 0
 128:	80 81       	ld	r24, Z
 12a:	88 23       	and	r24, r24
 12c:	ec f7       	brge	.-6      	; 0x128 <ReceiveUART0+0x4>
 12e:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
 132:	08 95       	ret

00000134 <TransmitUART0>:
 134:	e0 ec       	ldi	r30, 0xC0	; 192
 136:	f0 e0       	ldi	r31, 0x00	; 0
 138:	90 81       	ld	r25, Z
 13a:	95 ff       	sbrs	r25, 5
 13c:	fd cf       	rjmp	.-6      	; 0x138 <TransmitUART0+0x4>
 13e:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
 142:	08 95       	ret

00000144 <returnNewLine>:
 144:	8a e0       	ldi	r24, 0x0A	; 10
 146:	f6 df       	rcall	.-20     	; 0x134 <TransmitUART0>
 148:	8d e0       	ldi	r24, 0x0D	; 13
 14a:	f4 cf       	rjmp	.-24     	; 0x134 <TransmitUART0>
 14c:	08 95       	ret

0000014e <InitializeUART0>:
 14e:	8f 92       	push	r8
 150:	9f 92       	push	r9
 152:	af 92       	push	r10
 154:	bf 92       	push	r11
 156:	ef 92       	push	r14
 158:	cf 93       	push	r28
 15a:	df 93       	push	r29
 15c:	4b 01       	movw	r8, r22
 15e:	5c 01       	movw	r10, r24
 160:	d4 2f       	mov	r29, r20
 162:	c2 2f       	mov	r28, r18
 164:	60 e4       	ldi	r22, 0x40	; 64
 166:	72 e4       	ldi	r23, 0x42	; 66
 168:	8f e0       	ldi	r24, 0x0F	; 15
 16a:	90 e0       	ldi	r25, 0x00	; 0
 16c:	a5 01       	movw	r20, r10
 16e:	94 01       	movw	r18, r8
 170:	a3 d1       	rcall	.+838    	; 0x4b8 <__udivmodsi4>
 172:	ca 01       	movw	r24, r20
 174:	b9 01       	movw	r22, r18
 176:	00 d1       	rcall	.+512    	; 0x378 <__floatunsisf>
 178:	65 d1       	rcall	.+714    	; 0x444 <lrint>
 17a:	61 50       	subi	r22, 0x01	; 1
 17c:	71 09       	sbc	r23, r1
 17e:	d1 30       	cpi	r29, 0x01	; 1
 180:	19 f4       	brne	.+6      	; 0x188 <InitializeUART0+0x3a>
 182:	82 e0       	ldi	r24, 0x02	; 2
 184:	80 93 c0 00 	sts	0x00C0, r24	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7000c0>
 188:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
 18c:	60 93 c4 00 	sts	0x00C4, r22	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
 190:	88 e9       	ldi	r24, 0x98	; 152
 192:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7000c1>
 196:	82 e0       	ldi	r24, 0x02	; 2
 198:	e8 12       	cpse	r14, r24
 19a:	03 c0       	rjmp	.+6      	; 0x1a2 <InitializeUART0+0x54>
 19c:	88 e0       	ldi	r24, 0x08	; 8
 19e:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7000c2>
 1a2:	c6 30       	cpi	r28, 0x06	; 6
 1a4:	31 f4       	brne	.+12     	; 0x1b2 <InitializeUART0+0x64>
 1a6:	e2 ec       	ldi	r30, 0xC2	; 194
 1a8:	f0 e0       	ldi	r31, 0x00	; 0
 1aa:	80 81       	ld	r24, Z
 1ac:	82 60       	ori	r24, 0x02	; 2
 1ae:	80 83       	st	Z, r24
 1b0:	0f c0       	rjmp	.+30     	; 0x1d0 <InitializeUART0+0x82>
 1b2:	c7 30       	cpi	r28, 0x07	; 7
 1b4:	31 f4       	brne	.+12     	; 0x1c2 <InitializeUART0+0x74>
 1b6:	e2 ec       	ldi	r30, 0xC2	; 194
 1b8:	f0 e0       	ldi	r31, 0x00	; 0
 1ba:	80 81       	ld	r24, Z
 1bc:	84 60       	ori	r24, 0x04	; 4
 1be:	80 83       	st	Z, r24
 1c0:	07 c0       	rjmp	.+14     	; 0x1d0 <InitializeUART0+0x82>
 1c2:	c9 30       	cpi	r28, 0x09	; 9
 1c4:	29 f4       	brne	.+10     	; 0x1d0 <InitializeUART0+0x82>
 1c6:	e2 ec       	ldi	r30, 0xC2	; 194
 1c8:	f0 e0       	ldi	r31, 0x00	; 0
 1ca:	80 81       	ld	r24, Z
 1cc:	8e 60       	ori	r24, 0x0E	; 14
 1ce:	80 83       	st	Z, r24
 1d0:	df 91       	pop	r29
 1d2:	cf 91       	pop	r28
 1d4:	ef 90       	pop	r14
 1d6:	bf 90       	pop	r11
 1d8:	af 90       	pop	r10
 1da:	9f 90       	pop	r9
 1dc:	8f 90       	pop	r8
 1de:	08 95       	ret

000001e0 <StopServo_1>:
 1e0:	9d 98       	cbi	0x13, 5	; 19
 1e2:	08 95       	ret

000001e4 <LaunchServo_1>:
 1e4:	9d 9a       	sbi	0x13, 5	; 19
 1e6:	08 95       	ret

000001e8 <_setToOpenPosition>:
 1e8:	81 e2       	ldi	r24, 0x21	; 33
 1ea:	88 bd       	out	0x28, r24	; 40
 1ec:	fb cf       	rjmp	.-10     	; 0x1e4 <LaunchServo_1>
 1ee:	08 95       	ret

000001f0 <checkServo_1_ForMoving>:
 1f0:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <__TEXT_REGION_LENGTH__+0x700106>
 1f4:	88 1f       	adc	r24, r24
 1f6:	88 27       	eor	r24, r24
 1f8:	88 1f       	adc	r24, r24
 1fa:	08 95       	ret

000001fc <InitializeServo_1>:
 1fc:	9d 98       	cbi	0x13, 5	; 19
 1fe:	84 b5       	in	r24, 0x24	; 36
 200:	83 62       	ori	r24, 0x23	; 35
 202:	84 bd       	out	0x24, r24	; 36
 204:	85 b5       	in	r24, 0x25	; 37
 206:	85 60       	ori	r24, 0x05	; 5
 208:	85 bd       	out	0x25, r24	; 37
 20a:	e7 e0       	ldi	r30, 0x07	; 7
 20c:	f1 e0       	ldi	r31, 0x01	; 1
 20e:	80 81       	ld	r24, Z
 210:	8f 77       	andi	r24, 0x7F	; 127
 212:	80 83       	st	Z, r24
 214:	e8 e6       	ldi	r30, 0x68	; 104
 216:	f0 e0       	ldi	r31, 0x00	; 0
 218:	80 81       	ld	r24, Z
 21a:	84 60       	ori	r24, 0x04	; 4
 21c:	80 83       	st	Z, r24
 21e:	ed e6       	ldi	r30, 0x6D	; 109
 220:	f0 e0       	ldi	r31, 0x00	; 0
 222:	80 81       	ld	r24, Z
 224:	80 68       	ori	r24, 0x80	; 128
 226:	80 83       	st	Z, r24
 228:	df cf       	rjmp	.-66     	; 0x1e8 <_setToOpenPosition>
 22a:	08 95       	ret

0000022c <initializeTimerCounter_5>:
 22c:	e3 e7       	ldi	r30, 0x73	; 115
 22e:	f0 e0       	ldi	r31, 0x00	; 0
 230:	80 81       	ld	r24, Z
 232:	81 60       	ori	r24, 0x01	; 1
 234:	80 83       	st	Z, r24
 236:	81 e0       	ldi	r24, 0x01	; 1
 238:	80 93 21 01 	sts	0x0121, r24	; 0x800121 <__TEXT_REGION_LENGTH__+0x700121>
 23c:	8f ef       	ldi	r24, 0xFF	; 255
 23e:	95 e0       	ldi	r25, 0x05	; 5
 240:	90 93 25 01 	sts	0x0125, r25	; 0x800125 <__TEXT_REGION_LENGTH__+0x700125>
 244:	80 93 24 01 	sts	0x0124, r24	; 0x800124 <__TEXT_REGION_LENGTH__+0x700124>
 248:	08 95       	ret

0000024a <main>:

int main(void)
{
		
	DDRA |= (1 << PA1);
 24a:	09 9a       	sbi	0x01, 1	; 1
	//EICRA |= (0 << ISC31) | (1 << ISC30);
	//EIMSK |= (1 << INT3);

	sei();
	initializeTimerCounter_5();
	InitializeServo_1();
 24c:	78 94       	sei
 24e:	ee df       	rcall	.-36     	; 0x22c <initializeTimerCounter_5>
	InitializeUART0(250000, 0, 8, 0, 0);
 250:	d5 df       	rcall	.-86     	; 0x1fc <InitializeServo_1>
 252:	e1 2c       	mov	r14, r1
 254:	00 e0       	ldi	r16, 0x00	; 0
 256:	28 e0       	ldi	r18, 0x08	; 8
 258:	40 e0       	ldi	r20, 0x00	; 0
 25a:	60 e9       	ldi	r22, 0x90	; 144
 25c:	70 ed       	ldi	r23, 0xD0	; 208
 25e:	83 e0       	ldi	r24, 0x03	; 3
 260:	90 e0       	ldi	r25, 0x00	; 0
 262:	75 df       	rcall	.-278    	; 0x14e <InitializeUART0>
 264:	ff cf       	rjmp	.-2      	; 0x264 <main+0x1a>

00000266 <__vector_11>:
    {

    }
}

ISR(PCINT2_vect){
 266:	1f 92       	push	r1
 268:	0f 92       	push	r0
 26a:	0f b6       	in	r0, 0x3f	; 63
 26c:	0f 92       	push	r0
 26e:	11 24       	eor	r1, r1
 270:	0b b6       	in	r0, 0x3b	; 59
 272:	0f 92       	push	r0
 274:	2f 93       	push	r18
 276:	3f 93       	push	r19
 278:	4f 93       	push	r20
 27a:	5f 93       	push	r21
 27c:	6f 93       	push	r22
 27e:	7f 93       	push	r23
 280:	8f 93       	push	r24
 282:	9f 93       	push	r25
 284:	af 93       	push	r26
 286:	bf 93       	push	r27
 288:	ef 93       	push	r30
	if (checkServo_1_ForMoving()){
 28a:	ff 93       	push	r31
 28c:	b1 df       	rcall	.-158    	; 0x1f0 <checkServo_1_ForMoving>
 28e:	88 23       	and	r24, r24
		PORTA ^= (1<<PA1);
 290:	29 f0       	breq	.+10     	; 0x29c <__vector_11+0x36>
 292:	92 b1       	in	r25, 0x02	; 2
 294:	82 e0       	ldi	r24, 0x02	; 2
 296:	89 27       	eor	r24, r25
	} else {
		StopServo_1();
 298:	82 b9       	out	0x02, r24	; 2
 29a:	01 c0       	rjmp	.+2      	; 0x29e <__vector_11+0x38>
	}
//OCR0B = OCR0B+10;
}
 29c:	a1 df       	rcall	.-190    	; 0x1e0 <StopServo_1>
 29e:	ff 91       	pop	r31
 2a0:	ef 91       	pop	r30
 2a2:	bf 91       	pop	r27
 2a4:	af 91       	pop	r26
 2a6:	9f 91       	pop	r25
 2a8:	8f 91       	pop	r24
 2aa:	7f 91       	pop	r23
 2ac:	6f 91       	pop	r22
 2ae:	5f 91       	pop	r21
 2b0:	4f 91       	pop	r20
 2b2:	3f 91       	pop	r19
 2b4:	2f 91       	pop	r18
 2b6:	0f 90       	pop	r0
 2b8:	0b be       	out	0x3b, r0	; 59
 2ba:	0f 90       	pop	r0
 2bc:	0f be       	out	0x3f, r0	; 63
 2be:	0f 90       	pop	r0
 2c0:	1f 90       	pop	r1
 2c2:	18 95       	reti

000002c4 <__vector_25>:


ISR (USART0_RX_vect) {
 2c4:	1f 92       	push	r1
 2c6:	0f 92       	push	r0
 2c8:	0f b6       	in	r0, 0x3f	; 63
 2ca:	0f 92       	push	r0
 2cc:	11 24       	eor	r1, r1
 2ce:	0b b6       	in	r0, 0x3b	; 59
 2d0:	0f 92       	push	r0
 2d2:	2f 93       	push	r18
 2d4:	3f 93       	push	r19
 2d6:	4f 93       	push	r20
 2d8:	5f 93       	push	r21
 2da:	6f 93       	push	r22
 2dc:	7f 93       	push	r23
 2de:	8f 93       	push	r24
 2e0:	9f 93       	push	r25
 2e2:	af 93       	push	r26
 2e4:	bf 93       	push	r27
 2e6:	ef 93       	push	r30
	char received = ReceiveUART0();
 2e8:	ff 93       	push	r31
	if(received == '='){
 2ea:	1c df       	rcall	.-456    	; 0x124 <ReceiveUART0>
		LaunchServo_1();
		TransmitUART0(received);
 2ec:	8d 33       	cpi	r24, 0x3D	; 61
 2ee:	39 f4       	brne	.+14     	; 0x2fe <__vector_25+0x3a>
		returnNewLine();
 2f0:	79 df       	rcall	.-270    	; 0x1e4 <LaunchServo_1>
 2f2:	8d e3       	ldi	r24, 0x3D	; 61
bool checkServo_1_ForMoving() {
	return PINK & (1<<PK7);
}

void closeValve_1() {
	OCR0B = 20;
 2f4:	1f df       	rcall	.-450    	; 0x134 <TransmitUART0>
 2f6:	26 df       	rcall	.-436    	; 0x144 <returnNewLine>
		closeValve_1();
	}
	if(received == '-') {
 2f8:	84 e1       	ldi	r24, 0x14	; 20
}

void openValve_1() {
	OCR0B = 34;
 2fa:	88 bd       	out	0x28, r24	; 40
 2fc:	08 c0       	rjmp	.+16     	; 0x30e <__vector_25+0x4a>
		LaunchServo_1();
		openValve_1();
		TransmitUART0(received);
 2fe:	8d 32       	cpi	r24, 0x2D	; 45
 300:	31 f4       	brne	.+12     	; 0x30e <__vector_25+0x4a>
 302:	70 df       	rcall	.-288    	; 0x1e4 <LaunchServo_1>
		returnNewLine();
 304:	82 e2       	ldi	r24, 0x22	; 34
 306:	88 bd       	out	0x28, r24	; 40
	}
}
 308:	8d e2       	ldi	r24, 0x2D	; 45
 30a:	14 df       	rcall	.-472    	; 0x134 <TransmitUART0>
 30c:	1b df       	rcall	.-458    	; 0x144 <returnNewLine>
 30e:	ff 91       	pop	r31
 310:	ef 91       	pop	r30
 312:	bf 91       	pop	r27
 314:	af 91       	pop	r26
 316:	9f 91       	pop	r25
 318:	8f 91       	pop	r24
 31a:	7f 91       	pop	r23
 31c:	6f 91       	pop	r22
 31e:	5f 91       	pop	r21
 320:	4f 91       	pop	r20
 322:	3f 91       	pop	r19
 324:	2f 91       	pop	r18
 326:	0f 90       	pop	r0
 328:	0b be       	out	0x3b, r0	; 59
 32a:	0f 90       	pop	r0
 32c:	0f be       	out	0x3f, r0	; 63
 32e:	0f 90       	pop	r0
 330:	1f 90       	pop	r1
 332:	18 95       	reti

00000334 <__vector_50>:
//}



ISR(TIMER5_OVF_vect)
{
 334:	1f 92       	push	r1
 336:	0f 92       	push	r0
 338:	0f b6       	in	r0, 0x3f	; 63
 33a:	0f 92       	push	r0
 33c:	11 24       	eor	r1, r1
 33e:	0b b6       	in	r0, 0x3b	; 59
 340:	0f 92       	push	r0
 342:	8f 93       	push	r24
 344:	9f 93       	push	r25
 346:	ef 93       	push	r30
 348:	ff 93       	push	r31
	PORTH ^= (1 << PH4);
 34a:	e2 e0       	ldi	r30, 0x02	; 2
 34c:	f1 e0       	ldi	r31, 0x01	; 1
 34e:	90 81       	ld	r25, Z
 350:	80 e1       	ldi	r24, 0x10	; 16
 352:	89 27       	eor	r24, r25
 354:	80 83       	st	Z, r24

#ifndef TIMER5_H_
#define TIMER5_H_

void TCNT5_startingValue(unsigned int value) {
	TCNT5 = value;
 356:	8f ef       	ldi	r24, 0xFF	; 255
 358:	95 e0       	ldi	r25, 0x05	; 5
 35a:	90 93 25 01 	sts	0x0125, r25	; 0x800125 <__TEXT_REGION_LENGTH__+0x700125>
 35e:	80 93 24 01 	sts	0x0124, r24	; 0x800124 <__TEXT_REGION_LENGTH__+0x700124>
		//}
	TCNT5_startingValue(1535);
	//TCNT5 = 1535;
	//Timer5_1.counter++;

}
 362:	ff 91       	pop	r31
 364:	ef 91       	pop	r30
 366:	9f 91       	pop	r25
 368:	8f 91       	pop	r24
 36a:	0f 90       	pop	r0
 36c:	0b be       	out	0x3b, r0	; 59
 36e:	0f 90       	pop	r0
 370:	0f be       	out	0x3f, r0	; 63
 372:	0f 90       	pop	r0
 374:	1f 90       	pop	r1
 376:	18 95       	reti

00000378 <__floatunsisf>:
 378:	e8 94       	clt
 37a:	09 c0       	rjmp	.+18     	; 0x38e <__floatsisf+0x12>

0000037c <__floatsisf>:
 37c:	97 fb       	bst	r25, 7
 37e:	3e f4       	brtc	.+14     	; 0x38e <__floatsisf+0x12>
 380:	90 95       	com	r25
 382:	80 95       	com	r24
 384:	70 95       	com	r23
 386:	61 95       	neg	r22
 388:	7f 4f       	sbci	r23, 0xFF	; 255
 38a:	8f 4f       	sbci	r24, 0xFF	; 255
 38c:	9f 4f       	sbci	r25, 0xFF	; 255
 38e:	99 23       	and	r25, r25
 390:	a9 f0       	breq	.+42     	; 0x3bc <__floatsisf+0x40>
 392:	f9 2f       	mov	r31, r25
 394:	96 e9       	ldi	r25, 0x96	; 150
 396:	bb 27       	eor	r27, r27
 398:	93 95       	inc	r25
 39a:	f6 95       	lsr	r31
 39c:	87 95       	ror	r24
 39e:	77 95       	ror	r23
 3a0:	67 95       	ror	r22
 3a2:	b7 95       	ror	r27
 3a4:	f1 11       	cpse	r31, r1
 3a6:	f8 cf       	rjmp	.-16     	; 0x398 <__floatsisf+0x1c>
 3a8:	fa f4       	brpl	.+62     	; 0x3e8 <__floatsisf+0x6c>
 3aa:	bb 0f       	add	r27, r27
 3ac:	11 f4       	brne	.+4      	; 0x3b2 <__floatsisf+0x36>
 3ae:	60 ff       	sbrs	r22, 0
 3b0:	1b c0       	rjmp	.+54     	; 0x3e8 <__floatsisf+0x6c>
 3b2:	6f 5f       	subi	r22, 0xFF	; 255
 3b4:	7f 4f       	sbci	r23, 0xFF	; 255
 3b6:	8f 4f       	sbci	r24, 0xFF	; 255
 3b8:	9f 4f       	sbci	r25, 0xFF	; 255
 3ba:	16 c0       	rjmp	.+44     	; 0x3e8 <__floatsisf+0x6c>
 3bc:	88 23       	and	r24, r24
 3be:	11 f0       	breq	.+4      	; 0x3c4 <__floatsisf+0x48>
 3c0:	96 e9       	ldi	r25, 0x96	; 150
 3c2:	11 c0       	rjmp	.+34     	; 0x3e6 <__floatsisf+0x6a>
 3c4:	77 23       	and	r23, r23
 3c6:	21 f0       	breq	.+8      	; 0x3d0 <__floatsisf+0x54>
 3c8:	9e e8       	ldi	r25, 0x8E	; 142
 3ca:	87 2f       	mov	r24, r23
 3cc:	76 2f       	mov	r23, r22
 3ce:	05 c0       	rjmp	.+10     	; 0x3da <__floatsisf+0x5e>
 3d0:	66 23       	and	r22, r22
 3d2:	71 f0       	breq	.+28     	; 0x3f0 <__floatsisf+0x74>
 3d4:	96 e8       	ldi	r25, 0x86	; 134
 3d6:	86 2f       	mov	r24, r22
 3d8:	70 e0       	ldi	r23, 0x00	; 0
 3da:	60 e0       	ldi	r22, 0x00	; 0
 3dc:	2a f0       	brmi	.+10     	; 0x3e8 <__floatsisf+0x6c>
 3de:	9a 95       	dec	r25
 3e0:	66 0f       	add	r22, r22
 3e2:	77 1f       	adc	r23, r23
 3e4:	88 1f       	adc	r24, r24
 3e6:	da f7       	brpl	.-10     	; 0x3de <__floatsisf+0x62>
 3e8:	88 0f       	add	r24, r24
 3ea:	96 95       	lsr	r25
 3ec:	87 95       	ror	r24
 3ee:	97 f9       	bld	r25, 7
 3f0:	08 95       	ret

000003f2 <__fp_split3>:
 3f2:	57 fd       	sbrc	r21, 7
 3f4:	90 58       	subi	r25, 0x80	; 128
 3f6:	44 0f       	add	r20, r20
 3f8:	55 1f       	adc	r21, r21
 3fa:	59 f0       	breq	.+22     	; 0x412 <__fp_splitA+0x10>
 3fc:	5f 3f       	cpi	r21, 0xFF	; 255
 3fe:	71 f0       	breq	.+28     	; 0x41c <__fp_splitA+0x1a>
 400:	47 95       	ror	r20

00000402 <__fp_splitA>:
 402:	88 0f       	add	r24, r24
 404:	97 fb       	bst	r25, 7
 406:	99 1f       	adc	r25, r25
 408:	61 f0       	breq	.+24     	; 0x422 <__fp_splitA+0x20>
 40a:	9f 3f       	cpi	r25, 0xFF	; 255
 40c:	79 f0       	breq	.+30     	; 0x42c <__fp_splitA+0x2a>
 40e:	87 95       	ror	r24
 410:	08 95       	ret
 412:	12 16       	cp	r1, r18
 414:	13 06       	cpc	r1, r19
 416:	14 06       	cpc	r1, r20
 418:	55 1f       	adc	r21, r21
 41a:	f2 cf       	rjmp	.-28     	; 0x400 <__LOCK_REGION_LENGTH__>
 41c:	46 95       	lsr	r20
 41e:	f1 df       	rcall	.-30     	; 0x402 <__fp_splitA>
 420:	08 c0       	rjmp	.+16     	; 0x432 <__fp_splitA+0x30>
 422:	16 16       	cp	r1, r22
 424:	17 06       	cpc	r1, r23
 426:	18 06       	cpc	r1, r24
 428:	99 1f       	adc	r25, r25
 42a:	f1 cf       	rjmp	.-30     	; 0x40e <__fp_splitA+0xc>
 42c:	86 95       	lsr	r24
 42e:	71 05       	cpc	r23, r1
 430:	61 05       	cpc	r22, r1
 432:	08 94       	sec
 434:	08 95       	ret

00000436 <__fp_zero>:
 436:	e8 94       	clt

00000438 <__fp_szero>:
 438:	bb 27       	eor	r27, r27
 43a:	66 27       	eor	r22, r22
 43c:	77 27       	eor	r23, r23
 43e:	cb 01       	movw	r24, r22
 440:	97 f9       	bld	r25, 7
 442:	08 95       	ret

00000444 <lrint>:
 444:	de df       	rcall	.-68     	; 0x402 <__fp_splitA>
 446:	a8 f1       	brcs	.+106    	; 0x4b2 <lrint+0x6e>
 448:	9e 57       	subi	r25, 0x7E	; 126
 44a:	a8 f1       	brcs	.+106    	; 0x4b6 <lrint+0x72>
 44c:	98 51       	subi	r25, 0x18	; 24
 44e:	60 f0       	brcs	.+24     	; 0x468 <lrint+0x24>
 450:	39 f1       	breq	.+78     	; 0x4a0 <lrint+0x5c>
 452:	98 30       	cpi	r25, 0x08	; 8
 454:	70 f5       	brcc	.+92     	; 0x4b2 <lrint+0x6e>
 456:	09 2e       	mov	r0, r25
 458:	99 27       	eor	r25, r25
 45a:	66 0f       	add	r22, r22
 45c:	77 1f       	adc	r23, r23
 45e:	88 1f       	adc	r24, r24
 460:	99 1f       	adc	r25, r25
 462:	0a 94       	dec	r0
 464:	d1 f7       	brne	.-12     	; 0x45a <lrint+0x16>
 466:	1c c0       	rjmp	.+56     	; 0x4a0 <lrint+0x5c>
 468:	bb 27       	eor	r27, r27
 46a:	99 3f       	cpi	r25, 0xF9	; 249
 46c:	4c f4       	brge	.+18     	; 0x480 <lrint+0x3c>
 46e:	b1 11       	cpse	r27, r1
 470:	b1 e0       	ldi	r27, 0x01	; 1
 472:	b6 2b       	or	r27, r22
 474:	67 2f       	mov	r22, r23
 476:	78 2f       	mov	r23, r24
 478:	88 27       	eor	r24, r24
 47a:	98 5f       	subi	r25, 0xF8	; 248
 47c:	b1 f7       	brne	.-20     	; 0x46a <lrint+0x26>
 47e:	08 c0       	rjmp	.+16     	; 0x490 <lrint+0x4c>
 480:	86 95       	lsr	r24
 482:	77 95       	ror	r23
 484:	67 95       	ror	r22
 486:	b7 95       	ror	r27
 488:	08 f4       	brcc	.+2      	; 0x48c <lrint+0x48>
 48a:	b1 60       	ori	r27, 0x01	; 1
 48c:	93 95       	inc	r25
 48e:	c1 f7       	brne	.-16     	; 0x480 <lrint+0x3c>
 490:	bb 0f       	add	r27, r27
 492:	30 f4       	brcc	.+12     	; 0x4a0 <lrint+0x5c>
 494:	11 f4       	brne	.+4      	; 0x49a <lrint+0x56>
 496:	60 ff       	sbrs	r22, 0
 498:	03 c0       	rjmp	.+6      	; 0x4a0 <lrint+0x5c>
 49a:	6f 5f       	subi	r22, 0xFF	; 255
 49c:	7f 4f       	sbci	r23, 0xFF	; 255
 49e:	8f 4f       	sbci	r24, 0xFF	; 255
 4a0:	3e f4       	brtc	.+14     	; 0x4b0 <lrint+0x6c>
 4a2:	90 95       	com	r25
 4a4:	80 95       	com	r24
 4a6:	70 95       	com	r23
 4a8:	61 95       	neg	r22
 4aa:	7f 4f       	sbci	r23, 0xFF	; 255
 4ac:	8f 4f       	sbci	r24, 0xFF	; 255
 4ae:	9f 4f       	sbci	r25, 0xFF	; 255
 4b0:	08 95       	ret
 4b2:	68 94       	set
 4b4:	c1 cf       	rjmp	.-126    	; 0x438 <__fp_szero>
 4b6:	bf cf       	rjmp	.-130    	; 0x436 <__fp_zero>

000004b8 <__udivmodsi4>:
 4b8:	a1 e2       	ldi	r26, 0x21	; 33
 4ba:	1a 2e       	mov	r1, r26
 4bc:	aa 1b       	sub	r26, r26
 4be:	bb 1b       	sub	r27, r27
 4c0:	fd 01       	movw	r30, r26
 4c2:	0d c0       	rjmp	.+26     	; 0x4de <__udivmodsi4_ep>

000004c4 <__udivmodsi4_loop>:
 4c4:	aa 1f       	adc	r26, r26
 4c6:	bb 1f       	adc	r27, r27
 4c8:	ee 1f       	adc	r30, r30
 4ca:	ff 1f       	adc	r31, r31
 4cc:	a2 17       	cp	r26, r18
 4ce:	b3 07       	cpc	r27, r19
 4d0:	e4 07       	cpc	r30, r20
 4d2:	f5 07       	cpc	r31, r21
 4d4:	20 f0       	brcs	.+8      	; 0x4de <__udivmodsi4_ep>
 4d6:	a2 1b       	sub	r26, r18
 4d8:	b3 0b       	sbc	r27, r19
 4da:	e4 0b       	sbc	r30, r20
 4dc:	f5 0b       	sbc	r31, r21

000004de <__udivmodsi4_ep>:
 4de:	66 1f       	adc	r22, r22
 4e0:	77 1f       	adc	r23, r23
 4e2:	88 1f       	adc	r24, r24
 4e4:	99 1f       	adc	r25, r25
 4e6:	1a 94       	dec	r1
 4e8:	69 f7       	brne	.-38     	; 0x4c4 <__udivmodsi4_loop>
 4ea:	60 95       	com	r22
 4ec:	70 95       	com	r23
 4ee:	80 95       	com	r24
 4f0:	90 95       	com	r25
 4f2:	9b 01       	movw	r18, r22
 4f4:	ac 01       	movw	r20, r24
 4f6:	bd 01       	movw	r22, r26
 4f8:	cf 01       	movw	r24, r30
 4fa:	08 95       	ret

000004fc <_exit>:
 4fc:	f8 94       	cli

000004fe <__stop_program>:
 4fe:	ff cf       	rjmp	.-2      	; 0x4fe <__stop_program>
